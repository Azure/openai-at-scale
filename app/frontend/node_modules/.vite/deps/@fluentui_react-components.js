import {
  ArrowDownRegular,
  ArrowUpRegular,
  Checkmark12Filled,
  Checkmark16Filled,
  CheckmarkCircle12Filled,
  CheckmarkFilled,
  ChevronDown16Regular,
  ChevronDownRegular,
  ChevronLeftFilled,
  ChevronLeftRegular,
  ChevronRightFilled,
  ChevronRightRegular,
  ChevronUp16Regular,
  CircleFilled,
  Dismiss24Regular,
  ErrorCircle12Filled,
  MoreHorizontalRegular,
  PersonRegular,
  PresenceAvailable10Filled,
  PresenceAvailable10Regular,
  PresenceAvailable12Filled,
  PresenceAvailable12Regular,
  PresenceAvailable16Filled,
  PresenceAvailable16Regular,
  PresenceAvailable20Filled,
  PresenceAvailable20Regular,
  PresenceAway10Filled,
  PresenceAway10Regular,
  PresenceAway12Filled,
  PresenceAway12Regular,
  PresenceAway16Filled,
  PresenceAway16Regular,
  PresenceAway20Filled,
  PresenceAway20Regular,
  PresenceBlocked10Regular,
  PresenceBlocked12Regular,
  PresenceBlocked16Regular,
  PresenceBlocked20Regular,
  PresenceBusy10Filled,
  PresenceBusy12Filled,
  PresenceBusy16Filled,
  PresenceBusy20Filled,
  PresenceDnd10Filled,
  PresenceDnd10Regular,
  PresenceDnd12Filled,
  PresenceDnd12Regular,
  PresenceDnd16Filled,
  PresenceDnd16Regular,
  PresenceDnd20Filled,
  PresenceDnd20Regular,
  PresenceOffline10Regular,
  PresenceOffline12Regular,
  PresenceOffline16Regular,
  PresenceOffline20Regular,
  PresenceOof10Regular,
  PresenceOof12Regular,
  PresenceOof16Regular,
  PresenceOof20Regular,
  PresenceUnknown10Regular,
  PresenceUnknown12Regular,
  PresenceUnknown16Regular,
  PresenceUnknown20Regular,
  RendererProvider,
  Square12Filled,
  Square16Filled,
  TextDirectionProvider,
  Warning12Filled,
  __css,
  __resetCSS,
  __resetStyles,
  __styles,
  __styles2,
  bundleIcon_default,
  createDOMRenderer,
  makeResetStyles,
  makeStaticStyles,
  makeStyles,
  mergeClasses,
  renderToStyleElements,
  shorthands,
  useRenderer
} from "./chunk-XL5X2EUW.js";
import "./chunk-YSMJTNBI.js";
import {
  require_react_dom
} from "./chunk-4VE7W7SZ.js";
import {
  require_react
} from "./chunk-Y2Z4LR3N.js";
import {
  __commonJS,
  __toESM
} from "./chunk-GKWPUQBP.js";

// node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development = __commonJS({
  "node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var requestHostCallback;
        var requestHostTimeout;
        var cancelHostTimeout;
        var requestPaint;
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        if (
          // If Scheduler runs in a non-DOM environment, it falls back to a naive
          // implementation using setTimeout.
          typeof window === "undefined" || // Check if MessageChannel is supported, too.
          typeof MessageChannel !== "function"
        ) {
          var _callback = null;
          var _timeoutID = null;
          var _flushCallback = function() {
            if (_callback !== null) {
              try {
                var currentTime = exports.unstable_now();
                var hasRemainingTime = true;
                _callback(hasRemainingTime, currentTime);
                _callback = null;
              } catch (e) {
                setTimeout(_flushCallback, 0);
                throw e;
              }
            }
          };
          requestHostCallback = function(cb) {
            if (_callback !== null) {
              setTimeout(requestHostCallback, 0, cb);
            } else {
              _callback = cb;
              setTimeout(_flushCallback, 0);
            }
          };
          requestHostTimeout = function(cb, ms) {
            _timeoutID = setTimeout(cb, ms);
          };
          cancelHostTimeout = function() {
            clearTimeout(_timeoutID);
          };
          exports.unstable_shouldYield = function() {
            return false;
          };
          requestPaint = exports.unstable_forceFrameRate = function() {
          };
        } else {
          var _setTimeout = window.setTimeout;
          var _clearTimeout = window.clearTimeout;
          if (typeof console !== "undefined") {
            var requestAnimationFrame2 = window.requestAnimationFrame;
            var cancelAnimationFrame2 = window.cancelAnimationFrame;
            if (typeof requestAnimationFrame2 !== "function") {
              console["error"]("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            }
            if (typeof cancelAnimationFrame2 !== "function") {
              console["error"]("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            }
          }
          var isMessageLoopRunning = false;
          var scheduledHostCallback = null;
          var taskTimeoutID = -1;
          var yieldInterval = 5;
          var deadline = 0;
          {
            exports.unstable_shouldYield = function() {
              return exports.unstable_now() >= deadline;
            };
            requestPaint = function() {
            };
          }
          exports.unstable_forceFrameRate = function(fps) {
            if (fps < 0 || fps > 125) {
              console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
              return;
            }
            if (fps > 0) {
              yieldInterval = Math.floor(1e3 / fps);
            } else {
              yieldInterval = 5;
            }
          };
          var performWorkUntilDeadline = function() {
            if (scheduledHostCallback !== null) {
              var currentTime = exports.unstable_now();
              deadline = currentTime + yieldInterval;
              var hasTimeRemaining = true;
              try {
                var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
                if (!hasMoreWork) {
                  isMessageLoopRunning = false;
                  scheduledHostCallback = null;
                } else {
                  port.postMessage(null);
                }
              } catch (error) {
                port.postMessage(null);
                throw error;
              }
            } else {
              isMessageLoopRunning = false;
            }
          };
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          requestHostCallback = function(callback) {
            scheduledHostCallback = callback;
            if (!isMessageLoopRunning) {
              isMessageLoopRunning = true;
              port.postMessage(null);
            }
          };
          requestHostTimeout = function(callback, ms) {
            taskTimeoutID = _setTimeout(function() {
              callback(exports.unstable_now());
            }, ms);
          };
          cancelHostTimeout = function() {
            _clearTimeout(taskTimeoutID);
            taskTimeoutID = -1;
          };
        }
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          var first = heap[0];
          return first === void 0 ? null : first;
        }
        function pop(heap) {
          var first = heap[0];
          if (first !== void 0) {
            var last = heap.pop();
            if (last !== first) {
              heap[0] = last;
              siftDown(heap, last, 0);
            }
            return first;
          } else {
            return null;
          }
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (true) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (parent !== void 0 && compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          while (index < length) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (left !== void 0 && compare(left, node) < 0) {
              if (right !== void 0 && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (right !== void 0 && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority2 = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority2;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority2:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority2;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority2:
              priorityLevel = NormalPriority2;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime = currentTime + delay;
            } else {
              startTime = currentTime;
            }
          } else {
            startTime = currentTime;
          }
          var timeout;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority2:
            default:
              timeout = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime + timeout;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime,
            expirationTime,
            sortIndex: -1
          };
          if (startTime > currentTime) {
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority2;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_wrapCallback = unstable_wrapCallback;
      })();
    }
  }
});

// node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development();
    }
  }
});

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/FluentProvider.js
var React35 = __toESM(require_react());

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/renderFluentProvider.js
var React27 = __toESM(require_react());

// node_modules/@fluentui/react-shared-contexts/lib/ThemeContext/ThemeContext.js
var React = __toESM(require_react());
var ThemeContext = React.createContext(void 0);
var ThemeProvider = ThemeContext.Provider;

// node_modules/@fluentui/react-shared-contexts/lib/ThemeClassNameContext/ThemeClassNameContext.js
var React2 = __toESM(require_react());
var ThemeClassNameContext = React2.createContext(void 0);
var themeClassNameContextDefaultVaue = "";
var ThemeClassNameProvider = ThemeClassNameContext.Provider;
function useThemeClassName() {
  var _React_useContext10;
  return (_React_useContext10 = React2.useContext(ThemeClassNameContext)) !== null && _React_useContext10 !== void 0 ? _React_useContext10 : themeClassNameContextDefaultVaue;
}

// node_modules/@fluentui/react-shared-contexts/lib/TooltipVisibilityContext/TooltipContext.js
var React3 = __toESM(require_react());
var TooltipVisibilityContext = React3.createContext(void 0);
var tooltipVisibilityContextDefaultValue = {};
var TooltipVisibilityProvider = TooltipVisibilityContext.Provider;
function useTooltipVisibility() {
  var _React_useContext10;
  return (_React_useContext10 = React3.useContext(TooltipVisibilityContext)) !== null && _React_useContext10 !== void 0 ? _React_useContext10 : tooltipVisibilityContextDefaultValue;
}

// node_modules/@fluentui/react-shared-contexts/lib/ProviderContext/ProviderContext.js
var React4 = __toESM(require_react());
var ProviderContext = React4.createContext(void 0);
var providerContextDefaultValue = {
  targetDocument: typeof document === "object" ? document : void 0,
  dir: "ltr"
};
var Provider = ProviderContext.Provider;
function useFluent() {
  var _React_useContext10;
  return (_React_useContext10 = React4.useContext(ProviderContext)) !== null && _React_useContext10 !== void 0 ? _React_useContext10 : providerContextDefaultValue;
}

// node_modules/@fluentui/react-shared-contexts/lib/OverridesContext/OverridesContext.js
var React5 = __toESM(require_react());
var OverridesContext = React5.createContext(void 0);
var OverridesProvider = OverridesContext.Provider;
function useOverrides() {
  var _React_useContext10;
  return (_React_useContext10 = React5.useContext(OverridesContext)) !== null && _React_useContext10 !== void 0 ? _React_useContext10 : {};
}

// node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js
var React6 = __toESM(require_react());
var CustomStyleHooksContext = React6.createContext(void 0);
var noop = () => {
};
var customStyleHooksContextDefaultValue = {
  useAccordionHeaderStyles_unstable: noop,
  useAccordionItemStyles_unstable: noop,
  useAccordionPanelStyles_unstable: noop,
  useAccordionStyles_unstable: noop,
  useAvatarStyles_unstable: noop,
  useAvatarGroupStyles_unstable: noop,
  useAvatarGroupItemStyles_unstable: noop,
  useAvatarGroupPopoverStyles_unstable: noop,
  useBadgeStyles_unstable: noop,
  useCounterBadgeStyles_unstable: noop,
  useCardHeaderStyles_unstable: noop,
  useCardStyles_unstable: noop,
  useCardFooterStyles_unstable: noop,
  useCardPreviewStyles_unstable: noop,
  usePresenceBadgeStyles_unstable: noop,
  useButtonStyles_unstable: noop,
  useCompoundButtonStyles_unstable: noop,
  useMenuButtonStyles_unstable: noop,
  useSplitButtonStyles_unstable: noop,
  useToggleButtonStyles_unstable: noop,
  useCheckboxStyles_unstable: noop,
  useComboboxStyles_unstable: noop,
  useDropdownStyles_unstable: noop,
  useListboxStyles_unstable: noop,
  useOptionStyles_unstable: noop,
  useOptionGroupStyles_unstable: noop,
  useDividerStyles_unstable: noop,
  useInputStyles_unstable: noop,
  useImageStyles_unstable: noop,
  useLabelStyles_unstable: noop,
  useLinkStyles_unstable: noop,
  useMenuDividerStyles_unstable: noop,
  useMenuGroupHeaderStyles_unstable: noop,
  useMenuGroupStyles_unstable: noop,
  useMenuItemCheckboxStyles_unstable: noop,
  useMenuItemRadioStyles_unstable: noop,
  useMenuItemStyles_unstable: noop,
  useMenuListStyles_unstable: noop,
  useMenuPopoverStyles_unstable: noop,
  useMenuSplitGroupStyles_unstable: noop,
  usePersonaStyles_unstable: noop,
  usePopoverSurfaceStyles_unstable: noop,
  useRadioGroupStyles_unstable: noop,
  useRadioStyles_unstable: noop,
  useSelectStyles_unstable: noop,
  useSliderStyles_unstable: noop,
  useSpinButtonStyles_unstable: noop,
  useSpinnerStyles_unstable: noop,
  useSwitchStyles_unstable: noop,
  useTabStyles_unstable: noop,
  useTabListStyles_unstable: noop,
  useTextStyles_unstable: noop,
  useTextareaStyles_unstable: noop,
  useTooltipStyles_unstable: noop,
  useDialogTitleStyles_unstable: noop,
  useDialogBodyStyles_unstable: noop,
  useDialogActionsStyles_unstable: noop,
  useDialogSurfaceStyles_unstable: noop,
  useDialogContentStyles_unstable: noop,
  useProgressBarStyles_unstable: noop,
  useToolbarButtonStyles_unstable: noop,
  useToolbarRadioButtonStyles_unstable: noop,
  useToolbarGroupStyles_unstable: noop,
  useToolbarToggleButtonStyles_unstable: noop,
  useToolbarDividerStyles_unstable: noop,
  useToolbarStyles_unstable: noop,
  useTableCellStyles_unstable: noop,
  useTableRowStyles_unstable: noop,
  useTableBodyStyles_unstable: noop,
  useTableStyles_unstable: noop,
  useTableHeaderStyles_unstable: noop,
  useTableHeaderCellStyles_unstable: noop,
  useTableResizeHandleStyles_unstable: noop,
  useTableSelectionCellStyles_unstable: noop,
  useTableCellActionsStyles_unstable: noop,
  useTableCellLayoutStyles_unstable: noop,
  useDataGridCellStyles_unstable: noop,
  useDataGridRowStyles_unstable: noop,
  useDataGridBodyStyles_unstable: noop,
  useDataGridStyles_unstable: noop,
  useDataGridHeaderStyles_unstable: noop,
  useDataGridHeaderCellStyles_unstable: noop,
  useDataGridSelectionCellStyles_unstable: noop
};
var CustomStyleHooksProvider = CustomStyleHooksContext.Provider;
function useCustomStyleHooks() {
  var _React_useContext10;
  return (_React_useContext10 = React6.useContext(CustomStyleHooksContext)) !== null && _React_useContext10 !== void 0 ? _React_useContext10 : customStyleHooksContextDefaultValue;
}

// node_modules/@fluentui/react-utilities/lib/compose/getSlots.js
var React7 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/utils/omit.js
function omit(obj, exclusions) {
  const result = {};
  for (const key in obj) {
    if (exclusions.indexOf(key) === -1 && obj.hasOwnProperty(key)) {
      result[key] = obj[key];
    }
  }
  return result;
}

// node_modules/@fluentui/react-utilities/lib/compose/getSlots.js
function getSlots(state) {
  const slots = {};
  const slotProps = {};
  const slotNames = Object.keys(state.components);
  for (const slotName of slotNames) {
    const [slot, props] = getSlot(state, slotName);
    slots[slotName] = slot;
    slotProps[slotName] = props;
  }
  return {
    slots,
    slotProps
  };
}
function getSlot(state, slotName) {
  var _state_components, _state_components1, _state_slotName;
  if (state[slotName] === void 0) {
    return [null, void 0];
  }
  const {
    children,
    as: asProp,
    ...rest
  } = state[slotName];
  const slot = ((_state_components = state.components) === null || _state_components === void 0 ? void 0 : _state_components[slotName]) === void 0 || typeof state.components[slotName] === "string" ? asProp || ((_state_components1 = state.components) === null || _state_components1 === void 0 ? void 0 : _state_components1[slotName]) || "div" : state.components[slotName];
  if (typeof children === "function") {
    const render = children;
    return [React7.Fragment, {
      children: render(slot, rest)
    }];
  }
  const shouldOmitAsProp = typeof slot === "string" && ((_state_slotName = state[slotName]) === null || _state_slotName === void 0 ? void 0 : _state_slotName.as);
  const slotProps = shouldOmitAsProp ? omit(state[slotName], ["as"]) : state[slotName];
  return [slot, slotProps];
}

// node_modules/@fluentui/react-utilities/lib/compose/resolveShorthand.js
var import_react = __toESM(require_react());
var resolveShorthand = (value, options) => {
  const {
    required = false,
    defaultProps
  } = options || {};
  if (value === null || value === void 0 && !required) {
    return void 0;
  }
  let resolvedShorthand = {};
  if (typeof value === "string" || typeof value === "number" || Array.isArray(value) || (0, import_react.isValidElement)(value)) {
    resolvedShorthand.children = value;
  } else if (typeof value === "object") {
    resolvedShorthand = {
      ...value
    };
  }
  return defaultProps ? {
    ...defaultProps,
    ...resolvedShorthand
  } : resolvedShorthand;
};

// node_modules/@fluentui/react-utilities/lib/compose/types.js
var React8 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/compose/isResolvedShorthand.js
var import_react2 = __toESM(require_react());
function isResolvedShorthand(shorthand) {
  return shorthand !== null && typeof shorthand === "object" && !Array.isArray(shorthand) && !(0, import_react2.isValidElement)(shorthand);
}

// node_modules/@fluentui/react-utilities/lib/hooks/useControllableState.js
var React9 = __toESM(require_react());
function isFactoryDispatch(newState) {
  return typeof newState === "function";
}
var useControllableState = (options) => {
  const isControlled = useIsControlled(options.state);
  const initialState = typeof options.defaultState === "undefined" ? options.initialState : options.defaultState;
  const [internalState, setInternalState] = React9.useState(initialState);
  const state = isControlled ? options.state : internalState;
  const stateRef = React9.useRef(state);
  React9.useEffect(() => {
    stateRef.current = state;
  }, [state]);
  const setState = React9.useCallback((newState) => {
    if (isFactoryDispatch(newState)) {
      stateRef.current = newState(stateRef.current);
    } else {
      stateRef.current = newState;
    }
    setInternalState(stateRef.current);
  }, []);
  return [state, setState];
};
var useIsControlled = (controlledValue) => {
  const [isControlled] = React9.useState(() => controlledValue !== void 0);
  if (true) {
    React9.useEffect(() => {
      if (isControlled !== (controlledValue !== void 0)) {
        const error = new Error();
        const controlWarning = isControlled ? "a controlled value to be uncontrolled" : "an uncontrolled value to be controlled";
        const undefinedWarning = isControlled ? "defined to an undefined" : "undefined to a defined";
        console.error([
          // Default react error
          "A component is changing " + controlWarning + ". This is likely caused by the value",
          "changing from " + undefinedWarning + " value, which should not happen.",
          "Decide between using a controlled or uncontrolled input element for the lifetime of the component.",
          "More info: https://reactjs.org/link/controlled-components",
          error.stack
        ].join(" "));
      }
    }, [isControlled, controlledValue]);
  }
  return isControlled;
};

// node_modules/@fluentui/react-utilities/lib/hooks/useEventCallback.js
var React12 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/hooks/useIsomorphicLayoutEffect.js
var React11 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/ssr/canUseDOM.js
function canUseDOM() {
  return typeof window !== "undefined" && !!(window.document && // eslint-disable-next-line deprecation/deprecation
  window.document.createElement);
}

// node_modules/@fluentui/react-utilities/lib/ssr/SSRContext.js
var React10 = __toESM(require_react());
var defaultSSRContextValue = {
  current: 0
};
var SSRContext = React10.createContext(void 0);
function useSSRContext() {
  var _React_useContext10;
  return (_React_useContext10 = React10.useContext(SSRContext)) !== null && _React_useContext10 !== void 0 ? _React_useContext10 : defaultSSRContextValue;
}
var SSRProvider = (props) => {
  const [value] = React10.useState(() => ({
    current: 0
  }));
  return React10.createElement(SSRContext.Provider, {
    value
  }, props.children);
};
function useIsSSR() {
  const isInSSRContext = useSSRContext() !== defaultSSRContextValue;
  const [isSSR, setIsSSR] = React10.useState(isInSSRContext);
  if (true) {
    if (!isInSSRContext && !canUseDOM()) {
      console.error(["@fluentui/react-components: ", "When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.", "\n", "\n", "Check documentation at https://aka.ms/fluentui-ssr"].join(""));
    }
  }
  if (canUseDOM() && isInSSRContext) {
    React10.useLayoutEffect(() => {
      setIsSSR(false);
    }, []);
  }
  return isSSR;
}

// node_modules/@fluentui/react-utilities/lib/hooks/useIsomorphicLayoutEffect.js
var useIsomorphicLayoutEffect = canUseDOM() ? React11.useLayoutEffect : React11.useEffect;

// node_modules/@fluentui/react-utilities/lib/hooks/useEventCallback.js
var useEventCallback = (fn) => {
  const callbackRef = React12.useRef(() => {
    throw new Error("Cannot call an event handler while rendering");
  });
  useIsomorphicLayoutEffect(() => {
    callbackRef.current = fn;
  }, [fn]);
  return React12.useCallback((...args) => {
    const callback = callbackRef.current;
    return callback(...args);
  }, [callbackRef]);
};

// node_modules/@fluentui/react-utilities/lib/hooks/useFirstMount.js
var React13 = __toESM(require_react());
function useFirstMount() {
  const isFirst = React13.useRef(true);
  if (isFirst.current) {
    isFirst.current = false;
    return true;
  }
  return isFirst.current;
}

// node_modules/@fluentui/react-utilities/lib/hooks/useForceUpdate.js
var import_react3 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/hooks/useId.js
var React14 = __toESM(require_react());
var IdPrefixContext = React14.createContext(void 0);
var IdPrefixProvider = IdPrefixContext.Provider;
function useIdPrefix() {
  return React14.useContext(IdPrefixContext) || "";
}
function resetIdsForTests() {
  defaultSSRContextValue.current = 0;
}
function useId2(prefix = "fui-", providedId) {
  const contextValue = useSSRContext();
  const idPrefix = useIdPrefix();
  const _useId = React14["useId"];
  if (_useId) {
    const generatedId = _useId();
    const escapedId = React14.useMemo(() => generatedId.replace(/:/g, ""), [generatedId]);
    return providedId || `${idPrefix}${prefix}${escapedId}`;
  }
  return React14.useMemo(() => {
    if (providedId) {
      return providedId;
    }
    return `${idPrefix}${prefix}${++contextValue.current}`;
  }, [idPrefix, prefix, providedId, contextValue]);
}

// node_modules/@fluentui/react-utilities/lib/hooks/useMergedRefs.js
var React15 = __toESM(require_react());
function useMergedRefs(...refs) {
  const mergedCallback = React15.useCallback(
    (value) => {
      mergedCallback.current = value;
      for (const ref of refs) {
        if (typeof ref === "function") {
          ref(value);
        } else if (ref) {
          ref.current = value;
        }
      }
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps -- already exhaustive
    [...refs]
  );
  return mergedCallback;
}

// node_modules/@fluentui/react-utilities/lib/hooks/useOnClickOutside.js
var React16 = __toESM(require_react());
var useOnClickOutside = (options) => {
  const {
    refs,
    callback,
    element,
    disabled,
    contains: containsProp
  } = options;
  const timeoutId = React16.useRef(void 0);
  useIFrameFocus(options);
  const listener = useEventCallback((ev) => {
    const contains = containsProp || ((parent, child) => {
      return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));
    });
    const isOutside = refs.every((ref) => !contains(ref.current || null, ev.target));
    if (isOutside && !disabled) {
      callback(ev);
    }
  });
  React16.useEffect(() => {
    let currentEvent = getWindowEvent(window);
    const conditionalHandler = (event) => {
      if (event === currentEvent) {
        currentEvent = void 0;
        return;
      }
      listener(event);
    };
    if (!disabled) {
      element === null || element === void 0 ? void 0 : element.addEventListener("click", conditionalHandler, true);
      element === null || element === void 0 ? void 0 : element.addEventListener("touchstart", conditionalHandler, true);
      element === null || element === void 0 ? void 0 : element.addEventListener("contextmenu", conditionalHandler, true);
    }
    timeoutId.current = window.setTimeout(() => {
      currentEvent = void 0;
    }, 1);
    return () => {
      element === null || element === void 0 ? void 0 : element.removeEventListener("click", conditionalHandler, true);
      element === null || element === void 0 ? void 0 : element.removeEventListener("touchstart", conditionalHandler, true);
      element === null || element === void 0 ? void 0 : element.removeEventListener("contextmenu", conditionalHandler, true);
      clearTimeout(timeoutId.current);
      currentEvent = void 0;
    };
  }, [listener, element, disabled]);
};
var getWindowEvent = (target) => {
  if (target) {
    var _target_ownerDocument, _target_ownerDocument_defaultView;
    if (typeof target.window === "object" && target.window === target) {
      return target.event;
    }
    var _target_ownerDocument_defaultView_event;
    return (_target_ownerDocument_defaultView_event = (_target_ownerDocument = target.ownerDocument) === null || _target_ownerDocument === void 0 ? void 0 : (_target_ownerDocument_defaultView = _target_ownerDocument.defaultView) === null || _target_ownerDocument_defaultView === void 0 ? void 0 : _target_ownerDocument_defaultView.event) !== null && _target_ownerDocument_defaultView_event !== void 0 ? _target_ownerDocument_defaultView_event : void 0;
  }
  return void 0;
};
var FUI_FRAME_EVENT = "fuiframefocus";
var useIFrameFocus = (options) => {
  const {
    disabled,
    element: targetDocument,
    callback,
    contains: containsProp = (parent, child) => {
      return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));
    },
    pollDuration = 1e3,
    refs
  } = options;
  const timeoutRef = React16.useRef();
  const listener = useEventCallback((e) => {
    const contains = containsProp || ((parent, child) => {
      return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));
    });
    const isOutside = refs.every((ref) => !contains(ref.current || null, e.target));
    if (isOutside && !disabled) {
      callback(e);
    }
  });
  React16.useEffect(() => {
    if (!disabled) {
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener(FUI_FRAME_EVENT, listener, true);
      return () => {
        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener(FUI_FRAME_EVENT, listener, true);
      };
    }
  }, [targetDocument, disabled, listener]);
  React16.useEffect(() => {
    if (!disabled) {
      var _targetDocument_defaultView;
      timeoutRef.current = targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.setInterval(() => {
        const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
        if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === "IFRAME" || (activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === "WEBVIEW") {
          const event = new CustomEvent(FUI_FRAME_EVENT, {
            bubbles: true
          });
          activeElement.dispatchEvent(event);
        }
      }, pollDuration);
    }
    return () => {
      var _targetDocument_defaultView2;
      targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView2 = targetDocument.defaultView) === null || _targetDocument_defaultView2 === void 0 ? void 0 : _targetDocument_defaultView2.clearTimeout(timeoutRef.current);
    };
  }, [targetDocument, disabled, pollDuration]);
};

// node_modules/@fluentui/react-utilities/lib/hooks/useOnScrollOutside.js
var React17 = __toESM(require_react());
var useOnScrollOutside = (options) => {
  const {
    refs,
    callback,
    element,
    disabled,
    contains: containsProp
  } = options;
  const listener = useEventCallback((ev) => {
    const contains = containsProp || ((parent, child) => {
      return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));
    });
    const isOutside = refs.every((ref) => !contains(ref.current || null, ev.target));
    if (isOutside && !disabled) {
      callback(ev);
    }
  });
  React17.useEffect(() => {
    if (!disabled) {
      element === null || element === void 0 ? void 0 : element.addEventListener("wheel", listener);
      element === null || element === void 0 ? void 0 : element.addEventListener("touchmove", listener);
    }
    return () => {
      element === null || element === void 0 ? void 0 : element.removeEventListener("wheel", listener);
      element === null || element === void 0 ? void 0 : element.removeEventListener("touchmove", listener);
    };
  }, [listener, element, disabled]);
};

// node_modules/@fluentui/react-utilities/lib/hooks/usePrevious.js
var React18 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/hooks/useScrollbarWidth.js
var React19 = __toESM(require_react());
var cache = /* @__PURE__ */ new WeakMap();
function useScrollbarWidth(options) {
  const {
    targetDocument,
    force
  } = options;
  return React19.useMemo(() => {
    if (!targetDocument) {
      return 0;
    }
    if (!force && cache.has(targetDocument)) {
      return cache.get(targetDocument);
    }
    const outer = targetDocument.createElement("div");
    outer.style.visibility = "hidden";
    outer.style.overflow = "scroll";
    const inner = targetDocument.createElement("div");
    outer.appendChild(inner);
    targetDocument.body.appendChild(outer);
    const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;
    outer.remove();
    cache.set(targetDocument, scrollbarWidth);
    return scrollbarWidth;
  }, [targetDocument, force]);
}

// node_modules/@fluentui/react-utilities/lib/hooks/useTimeout.js
var React20 = __toESM(require_react());
function useTimeout() {
  const [timeout] = React20.useState(() => ({
    id: void 0,
    set: (fn, delay) => {
      timeout.clear();
      timeout.id = setTimeout(fn, delay);
    },
    clear: () => {
      if (timeout.id !== void 0) {
        clearTimeout(timeout.id);
        timeout.id = void 0;
      }
    }
  }));
  React20.useEffect(() => timeout.clear, [timeout]);
  return [timeout.set, timeout.clear];
}

// node_modules/@fluentui/react-utilities/lib/utils/clamp.js
var clamp = (value, min3, max3) => Math.max(min3, Math.min(max3, value || 0));

// node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js
var React21 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/utils/properties.js
var toObjectMap = (...items) => {
  const result = {};
  for (const item of items) {
    const keys = Array.isArray(item) ? item : Object.keys(item);
    for (const key of keys) {
      result[key] = 1;
    }
  }
  return result;
};
var baseElementEvents = toObjectMap(["onAuxClick", "onCopy", "onCut", "onPaste", "onCompositionEnd", "onCompositionStart", "onCompositionUpdate", "onFocus", "onFocusCapture", "onBlur", "onBlurCapture", "onChange", "onInput", "onSubmit", "onLoad", "onError", "onKeyDown", "onKeyDownCapture", "onKeyPress", "onKeyUp", "onAbort", "onCanPlay", "onCanPlayThrough", "onDurationChange", "onEmptied", "onEncrypted", "onEnded", "onLoadedData", "onLoadedMetadata", "onLoadStart", "onPause", "onPlay", "onPlaying", "onProgress", "onRateChange", "onSeeked", "onSeeking", "onStalled", "onSuspend", "onTimeUpdate", "onVolumeChange", "onWaiting", "onClick", "onClickCapture", "onContextMenu", "onDoubleClick", "onDrag", "onDragEnd", "onDragEnter", "onDragExit", "onDragLeave", "onDragOver", "onDragStart", "onDrop", "onMouseDown", "onMouseDownCapture", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseOut", "onMouseOver", "onMouseUp", "onMouseUpCapture", "onSelect", "onTouchCancel", "onTouchEnd", "onTouchMove", "onTouchStart", "onScroll", "onWheel", "onPointerCancel", "onPointerDown", "onPointerEnter", "onPointerLeave", "onPointerMove", "onPointerOut", "onPointerOver", "onPointerUp", "onGotPointerCapture", "onLostPointerCapture"]);
var baseElementProperties = toObjectMap(["accessKey", "children", "className", "contentEditable", "dir", "draggable", "hidden", "htmlFor", "id", "lang", "ref", "role", "style", "tabIndex", "title", "translate", "spellCheck", "name"]);
var microdataProperties = toObjectMap(["itemID", "itemProp", "itemRef", "itemScope", "itemType"]);
var htmlElementProperties = toObjectMap(baseElementProperties, baseElementEvents, microdataProperties);
var labelProperties = toObjectMap(htmlElementProperties, ["form"]);
var audioProperties = toObjectMap(htmlElementProperties, ["height", "loop", "muted", "preload", "src", "width"]);
var videoProperties = toObjectMap(audioProperties, ["poster"]);
var olProperties = toObjectMap(htmlElementProperties, ["start"]);
var liProperties = toObjectMap(htmlElementProperties, ["value"]);
var anchorProperties = toObjectMap(htmlElementProperties, ["download", "href", "hrefLang", "media", "rel", "target", "type"]);
var timeProperties = toObjectMap(htmlElementProperties, ["dateTime"]);
var buttonProperties = toObjectMap(htmlElementProperties, ["autoFocus", "disabled", "form", "formAction", "formEncType", "formMethod", "formNoValidate", "formTarget", "type", "value"]);
var inputProperties = toObjectMap(buttonProperties, ["accept", "alt", "autoCapitalize", "autoComplete", "checked", "dirname", "form", "height", "inputMode", "list", "max", "maxLength", "min", "multiple", "pattern", "placeholder", "readOnly", "required", "src", "step", "size", "type", "value", "width"]);
var textAreaProperties = toObjectMap(buttonProperties, ["autoCapitalize", "cols", "dirname", "form", "maxLength", "placeholder", "readOnly", "required", "rows", "wrap"]);
var selectProperties = toObjectMap(buttonProperties, ["form", "multiple", "required"]);
var optionProperties = toObjectMap(htmlElementProperties, ["selected", "value"]);
var tableProperties = toObjectMap(htmlElementProperties, ["cellPadding", "cellSpacing"]);
var trProperties = htmlElementProperties;
var thProperties = toObjectMap(htmlElementProperties, ["colSpan", "rowSpan", "scope"]);
var tdProperties = toObjectMap(htmlElementProperties, ["colSpan", "headers", "rowSpan", "scope"]);
var colGroupProperties = toObjectMap(htmlElementProperties, ["span"]);
var colProperties = toObjectMap(htmlElementProperties, ["span"]);
var fieldsetProperties = toObjectMap(htmlElementProperties, ["disabled", "form"]);
var formProperties = toObjectMap(htmlElementProperties, ["acceptCharset", "action", "encType", "encType", "method", "noValidate", "target"]);
var iframeProperties = toObjectMap(htmlElementProperties, ["allow", "allowFullScreen", "allowPaymentRequest", "allowTransparency", "csp", "height", "importance", "referrerPolicy", "sandbox", "src", "srcDoc", "width"]);
var imgProperties = toObjectMap(htmlElementProperties, ["alt", "crossOrigin", "height", "src", "srcSet", "useMap", "width"]);
var dialogProperties = toObjectMap(htmlElementProperties, ["open", "onCancel", "onClose"]);
function getNativeProps(props, allowedPropNames, excludedPropNames) {
  const isArray = Array.isArray(allowedPropNames);
  const result = {};
  const keys = Object.keys(props);
  for (const key of keys) {
    const isNativeProp = !isArray && allowedPropNames[key] || isArray && allowedPropNames.indexOf(key) >= 0 || key.indexOf("data-") === 0 || key.indexOf("aria-") === 0;
    if (isNativeProp && (!excludedPropNames || (excludedPropNames === null || excludedPropNames === void 0 ? void 0 : excludedPropNames.indexOf(key)) === -1)) {
      result[key] = props[key];
    }
  }
  return result;
}

// node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js
var nativeElementMap = {
  label: labelProperties,
  audio: audioProperties,
  video: videoProperties,
  ol: olProperties,
  li: liProperties,
  a: anchorProperties,
  button: buttonProperties,
  input: inputProperties,
  textarea: textAreaProperties,
  select: selectProperties,
  option: optionProperties,
  table: tableProperties,
  tr: trProperties,
  th: thProperties,
  td: tdProperties,
  colGroup: colGroupProperties,
  col: colProperties,
  fieldset: fieldsetProperties,
  form: formProperties,
  iframe: iframeProperties,
  img: imgProperties,
  time: timeProperties,
  dialog: dialogProperties
};
function getNativeElementProps(tagName, props, excludedPropNames) {
  const allowedPropNames = tagName && nativeElementMap[tagName] || htmlElementProperties;
  allowedPropNames.as = 1;
  return getNativeProps(props, allowedPropNames, excludedPropNames);
}
var getPartitionedNativeProps = ({
  primarySlotTagName,
  props,
  excludedPropNames
}) => {
  return {
    root: {
      style: props.style,
      className: props.className
    },
    primary: getNativeElementProps(primarySlotTagName, props, [...excludedPropNames || [], "style", "className"])
  };
};

// node_modules/@fluentui/react-utilities/lib/utils/getRTLSafeKey.js
var getRTLSafeKey = (key, dir) => {
  if (dir === "rtl") {
    switch (key) {
      case "ArrowLeft": {
        return "ArrowRight";
      }
      case "ArrowRight": {
        return "ArrowLeft";
      }
    }
  }
  return key;
};

// node_modules/@fluentui/react-utilities/lib/utils/mergeCallbacks.js
function mergeCallbacks(callback1, callback2) {
  return (...args) => {
    callback1 === null || callback1 === void 0 ? void 0 : callback1(...args);
    callback2 === null || callback2 === void 0 ? void 0 : callback2(...args);
  };
}

// node_modules/@fluentui/react-utilities/lib/utils/isHTMLElement.js
function isHTMLElement(element, options) {
  var _typedElement_ownerDocument;
  const typedElement = element;
  var _options_constructorName;
  return Boolean((typedElement === null || typedElement === void 0 ? void 0 : (_typedElement_ownerDocument = typedElement.ownerDocument) === null || _typedElement_ownerDocument === void 0 ? void 0 : _typedElement_ownerDocument.defaultView) && typedElement instanceof typedElement.ownerDocument.defaultView[(_options_constructorName = options === null || options === void 0 ? void 0 : options.constructorName) !== null && _options_constructorName !== void 0 ? _options_constructorName : "HTMLElement"]);
}

// node_modules/@fluentui/react-utilities/lib/utils/isInteractiveHTMLElement.js
function isInteractiveHTMLElement(element) {
  if (!isHTMLElement(element)) {
    return false;
  }
  const {
    tagName
  } = element;
  switch (tagName) {
    case "BUTTON":
    case "A":
    case "INPUT":
    case "TEXTAREA":
      return true;
  }
  return element.isContentEditable;
}

// node_modules/@fluentui/react-utilities/lib/trigger/applyTriggerPropsToChildren.js
var React23 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/trigger/isFluentTrigger.js
var React22 = __toESM(require_react());
function isFluentTrigger(element) {
  return Boolean(element.type.isFluentTriggerComponent);
}

// node_modules/@fluentui/react-utilities/lib/trigger/applyTriggerPropsToChildren.js
function applyTriggerPropsToChildren(children, triggerChildProps) {
  if (typeof children === "function") {
    return children(triggerChildProps);
  } else if (children) {
    return cloneTriggerTree(children, triggerChildProps);
  }
  return children || null;
}
function cloneTriggerTree(child, triggerProps) {
  if (!React23.isValidElement(child) || child.type === React23.Fragment) {
    throw new Error("A trigger element must be a single element for this component. Please ensure that you're not using React Fragments.");
  }
  if (isFluentTrigger(child)) {
    const grandchild = cloneTriggerTree(child.props.children, triggerProps);
    return React23.cloneElement(child, void 0, grandchild);
  } else {
    return React23.cloneElement(child, triggerProps);
  }
}

// node_modules/@fluentui/react-utilities/lib/trigger/getTriggerChild.js
var React24 = __toESM(require_react());
function getTriggerChild(children) {
  if (!React24.isValidElement(children)) {
    return null;
  }
  return isFluentTrigger(children) ? getTriggerChild(
    // FIXME: This casting should be unnecessary as isFluentTrigger is a guard type method,
    // but for some reason it's failing on build
    children.props.children
  ) : children;
}

// node_modules/@fluentui/react-utilities/lib/trigger/types.js
var React25 = __toESM(require_react());

// node_modules/@fluentui/react-utilities/lib/events/mouseTouchHelpers.js
var React26 = __toESM(require_react());
function isTouchEvent(event) {
  return event.type.startsWith("touch");
}
function isMouseEvent(event) {
  return event.type.startsWith("mouse") || ["click", "contextmenu", "dblclick"].indexOf(event.type) > -1;
}
function getEventClientCoords(event) {
  if (isMouseEvent(event)) {
    return {
      clientX: event.clientX,
      clientY: event.clientY
    };
  } else if (isTouchEvent(event)) {
    return {
      clientX: event.touches[0].clientX,
      clientY: event.touches[0].clientY
    };
  } else {
    if (true) {
      throw new Error("@fluentui/react-utilities]: Unable to get clientX. Unknown event type.");
    }
    return {
      clientX: 0,
      clientY: 0
    };
  }
}

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/renderFluentProvider.js
var renderFluentProvider_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React27.createElement(Provider, {
    value: contextValues.provider
  }, React27.createElement(ThemeProvider, {
    value: contextValues.theme
  }, React27.createElement(ThemeClassNameProvider, {
    value: contextValues.themeClassName
  }, React27.createElement(CustomStyleHooksProvider, {
    value: contextValues.customStyleHooks_unstable
  }, React27.createElement(TooltipVisibilityProvider, {
    value: contextValues.tooltip
  }, React27.createElement(TextDirectionProvider, {
    dir: contextValues.textDirection
  }, React27.createElement(OverridesProvider, {
    value: contextValues.overrides_unstable
  }, React27.createElement(slots.root, slotProps.root, canUseDOM() ? null : React27.createElement("style", {
    // Using dangerous HTML because react can escape characters
    // which can lead to invalid CSS.
    // eslint-disable-next-line react/no-danger
    dangerouslySetInnerHTML: {
      __html: state.serverStyleProps.cssRule
    },
    ...state.serverStyleProps.attributes
  }), slotProps.root.children))))))));
};

// node_modules/keyborg/dist/keyborg.esm.js
var _canUseWeakRef = typeof WeakRef !== "undefined";
var WeakRefInstance = class {
  constructor(instance) {
    if (_canUseWeakRef && typeof instance === "object") {
      this._weakRef = new WeakRef(instance);
    } else {
      this._instance = instance;
    }
  }
  /**
   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef/deref}
   */
  deref() {
    var _a, _b, _c;
    let instance;
    if (this._weakRef) {
      instance = (_a = this._weakRef) === null || _a === void 0 ? void 0 : _a.deref();
      if (!instance) {
        delete this._weakRef;
      }
    } else {
      instance = this._instance;
      if ((_c = (_b = instance) === null || _b === void 0 ? void 0 : _b.isDisposed) === null || _c === void 0 ? void 0 : _c.call(_b)) {
        delete this._instance;
      }
    }
    return instance;
  }
};
var KEYBORG_FOCUSIN = "keyborg:focusin";
function canOverrideNativeFocus(win) {
  const HTMLElement = win.HTMLElement;
  const origFocus = HTMLElement.prototype.focus;
  let isCustomFocusCalled = false;
  HTMLElement.prototype.focus = function focus() {
    isCustomFocusCalled = true;
  };
  const btn = win.document.createElement("button");
  btn.focus();
  HTMLElement.prototype.focus = origFocus;
  return isCustomFocusCalled;
}
var _canOverrideNativeFocus = false;
function nativeFocus(element) {
  const focus = element.focus;
  if (focus.__keyborgNativeFocus) {
    focus.__keyborgNativeFocus.call(element);
  } else {
    element.focus();
  }
}
function setupFocusEvent(win) {
  const kwin = win;
  if (!_canOverrideNativeFocus) {
    _canOverrideNativeFocus = canOverrideNativeFocus(kwin);
  }
  const origFocus = kwin.HTMLElement.prototype.focus;
  if (origFocus.__keyborgNativeFocus) {
    return;
  }
  kwin.HTMLElement.prototype.focus = focus;
  const data = kwin.__keyborgData = {
    focusInHandler: (e) => {
      var _a;
      const target = e.target;
      if (!target) {
        return;
      }
      const event = document.createEvent("HTMLEvents");
      event.initEvent(KEYBORG_FOCUSIN, true, true);
      const details = {
        relatedTarget: e.relatedTarget || void 0
      };
      if (_canOverrideNativeFocus || data.lastFocusedProgrammatically) {
        details.isFocusedProgrammatically = target === ((_a = data.lastFocusedProgrammatically) === null || _a === void 0 ? void 0 : _a.deref());
        data.lastFocusedProgrammatically = void 0;
      }
      event.details = details;
      target.dispatchEvent(event);
    }
  };
  kwin.document.addEventListener("focusin", kwin.__keyborgData.focusInHandler, true);
  function focus() {
    const keyborgNativeFocusEvent = kwin.__keyborgData;
    if (keyborgNativeFocusEvent) {
      keyborgNativeFocusEvent.lastFocusedProgrammatically = new WeakRefInstance(this);
    }
    return origFocus.apply(this, arguments);
  }
  focus.__keyborgNativeFocus = origFocus;
}
function disposeFocusEvent(win) {
  const kwin = win;
  const proto = kwin.HTMLElement.prototype;
  const origFocus = proto.focus.__keyborgNativeFocus;
  const keyborgNativeFocusEvent = kwin.__keyborgData;
  if (keyborgNativeFocusEvent) {
    kwin.document.removeEventListener("focusin", keyborgNativeFocusEvent.focusInHandler, true);
    delete kwin.__keyborgData;
  }
  if (origFocus) {
    proto.focus = origFocus;
  }
}
var _dismissTimeout = 500;
var _lastId = 0;
var KeyborgState = class {
  constructor() {
    this.__keyborgCoreRefs = {};
    this._isNavigatingWithKeyboard = false;
  }
  add(keyborg) {
    const id = keyborg.id;
    if (!(id in this.__keyborgCoreRefs)) {
      this.__keyborgCoreRefs[id] = new WeakRefInstance(keyborg);
    }
  }
  remove(id) {
    delete this.__keyborgCoreRefs[id];
    if (Object.keys(this.__keyborgCoreRefs).length === 0) {
      this._isNavigatingWithKeyboard = false;
    }
  }
  setVal(isNavigatingWithKeyboard) {
    if (this._isNavigatingWithKeyboard === isNavigatingWithKeyboard) {
      return;
    }
    this._isNavigatingWithKeyboard = isNavigatingWithKeyboard;
    for (const id of Object.keys(this.__keyborgCoreRefs)) {
      const ref = this.__keyborgCoreRefs[id];
      const keyborg = ref.deref();
      if (keyborg) {
        keyborg.update(isNavigatingWithKeyboard);
      } else {
        this.remove(id);
      }
    }
  }
  getVal() {
    return this._isNavigatingWithKeyboard;
  }
};
var _state = new KeyborgState();
var KeyborgCore = class {
  constructor(win, props) {
    this._isMouseUsed = false;
    this._onFocusIn = (e) => {
      if (this._isMouseUsed) {
        this._isMouseUsed = false;
        return;
      }
      if (_state.getVal()) {
        return;
      }
      const details = e.details;
      if (!details.relatedTarget) {
        return;
      }
      if (details.isFocusedProgrammatically || details.isFocusedProgrammatically === void 0) {
        return;
      }
      _state.setVal(true);
    };
    this._onMouseDown = (e) => {
      if (e.buttons === 0 || e.clientX === 0 && e.clientY === 0 && e.screenX === 0 && e.screenY === 0) {
        return;
      }
      this._isMouseUsed = true;
      _state.setVal(false);
    };
    this._onKeyDown = (e) => {
      var _a;
      const isNavigatingWithKeyboard = _state.getVal();
      const keyCode = e.keyCode;
      const triggerKeys = this._triggerKeys;
      if (!isNavigatingWithKeyboard && (!triggerKeys || triggerKeys.has(keyCode))) {
        _state.setVal(true);
      } else if (isNavigatingWithKeyboard && ((_a = this._dismissKeys) === null || _a === void 0 ? void 0 : _a.has(keyCode))) {
        this._scheduleDismiss();
      }
    };
    this.id = "c" + ++_lastId;
    this._win = win;
    const doc = win.document;
    if (props) {
      const triggerKeys = props.triggerKeys;
      const dismissKeys = props.dismissKeys;
      if (triggerKeys === null || triggerKeys === void 0 ? void 0 : triggerKeys.length) {
        this._triggerKeys = new Set(triggerKeys);
      }
      if (dismissKeys === null || dismissKeys === void 0 ? void 0 : dismissKeys.length) {
        this._dismissKeys = new Set(dismissKeys);
      }
    }
    doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);
    doc.addEventListener("mousedown", this._onMouseDown, true);
    win.addEventListener("keydown", this._onKeyDown, true);
    setupFocusEvent(win);
    _state.add(this);
  }
  dispose() {
    const win = this._win;
    if (win) {
      if (this._dismissTimer) {
        win.clearTimeout(this._dismissTimer);
        this._dismissTimer = void 0;
      }
      disposeFocusEvent(win);
      const doc = win.document;
      doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);
      doc.removeEventListener("mousedown", this._onMouseDown, true);
      win.removeEventListener("keydown", this._onKeyDown, true);
      delete this._win;
      _state.remove(this.id);
    }
  }
  isDisposed() {
    return !!this._win;
  }
  /**
   * Updates all keyborg instances with the keyboard navigation state
   */
  update(isNavigatingWithKeyboard) {
    var _a, _b;
    const keyborgs = (_b = (_a = this._win) === null || _a === void 0 ? void 0 : _a.__keyborg) === null || _b === void 0 ? void 0 : _b.refs;
    if (keyborgs) {
      for (const id of Object.keys(keyborgs)) {
        Keyborg.update(keyborgs[id], isNavigatingWithKeyboard);
      }
    }
  }
  _scheduleDismiss() {
    const win = this._win;
    if (win) {
      if (this._dismissTimer) {
        win.clearTimeout(this._dismissTimer);
        this._dismissTimer = void 0;
      }
      const was = win.document.activeElement;
      this._dismissTimer = win.setTimeout(() => {
        this._dismissTimer = void 0;
        const cur = win.document.activeElement;
        if (was && cur && was === cur) {
          _state.setVal(false);
        }
      }, _dismissTimeout);
    }
  }
};
var Keyborg = class {
  constructor(win, props) {
    this._cb = [];
    this._id = "k" + ++_lastId;
    this._win = win;
    const current = win.__keyborg;
    if (current) {
      this._core = current.core;
      current.refs[this._id] = this;
    } else {
      this._core = new KeyborgCore(win, props);
      win.__keyborg = {
        core: this._core,
        refs: {
          [this._id]: this
        }
      };
    }
  }
  static create(win, props) {
    return new Keyborg(win, props);
  }
  static dispose(instance) {
    instance.dispose();
  }
  /**
   * Updates all subscribed callbacks with the keyboard navigation state
   */
  static update(instance, isNavigatingWithKeyboard) {
    instance._cb.forEach((callback) => callback(isNavigatingWithKeyboard));
  }
  dispose() {
    var _a;
    const current = (_a = this._win) === null || _a === void 0 ? void 0 : _a.__keyborg;
    if (current === null || current === void 0 ? void 0 : current.refs[this._id]) {
      delete current.refs[this._id];
      if (Object.keys(current.refs).length === 0) {
        current.core.dispose();
        delete this._win.__keyborg;
      }
    } else if (true) {
      console.error("Keyborg instance " + this._id + " is being disposed incorrectly.");
    }
    this._cb = [];
    delete this._core;
    delete this._win;
  }
  /**
   * @returns Whether the user is navigating with keyboard
   */
  isNavigatingWithKeyboard() {
    return _state.getVal();
  }
  /**
   * @param callback - Called when the keyboard navigation state changes
   */
  subscribe(callback) {
    this._cb.push(callback);
  }
  /**
   * @param callback - Registered with subscribe
   */
  unsubscribe(callback) {
    const index = this._cb.indexOf(callback);
    if (index >= 0) {
      this._cb.splice(index, 1);
    }
  }
  /**
   * Manually set the keyboard navigtion state
   */
  setVal(isNavigatingWithKeyboard) {
    _state.setVal(isNavigatingWithKeyboard);
  }
};
function createKeyborg(win, props) {
  return Keyborg.create(win, props);
}
function disposeKeyborg(instance) {
  Keyborg.dispose(instance);
}

// node_modules/tabster/dist/tabster.esm.js
var TabsterAttributeName = "data-tabster";
var TabsterDummyInputAttributeName = "data-tabster-dummy";
var DeloserEventName = "tabster:deloser";
var ModalizerActiveEventName = "tabster:modalizer:active";
var ModalizerInactiveEventName = "tabster:modalizer:inactive";
var ModalizerFocusInEventName = "tabster:modalizer:focusin";
var ModalizerFocusOutEventName = "tabster:modalizer:focusout";
var ModalizerBeforeFocusOutEventName = "tabster:modalizer:beforefocusout";
var MoverEventName = "tabster:mover";
var FocusInEventName = "tabster:focusin";
var FocusOutEventName = "tabster:focusout";
var ObservedElementAccesibilities = {
  Any: 0,
  Accessible: 1,
  Focusable: 2
};
var RestoreFocusOrders = {
  History: 0,
  DeloserDefault: 1,
  RootDefault: 2,
  DeloserFirst: 3,
  RootFirst: 4
};
var Visibilities = {
  Invisible: 0,
  PartiallyVisible: 1,
  Visible: 2
};
var MoverDirections = {
  Both: 0,
  Vertical: 1,
  Horizontal: 2,
  Grid: 3
};
var GroupperTabbabilities = {
  Unlimited: 0,
  Limited: 1,
  LimitedTrapFocus: 2
};
var SysDummyInputsPositions = {
  Auto: 0,
  Inside: 1,
  Outside: 2
};
var Types = Object.freeze({
  __proto__: null,
  TabsterAttributeName,
  TabsterDummyInputAttributeName,
  DeloserEventName,
  ModalizerActiveEventName,
  ModalizerInactiveEventName,
  ModalizerFocusInEventName,
  ModalizerFocusOutEventName,
  ModalizerBeforeFocusOutEventName,
  MoverEventName,
  FocusInEventName,
  FocusOutEventName,
  ObservedElementAccesibilities,
  RestoreFocusOrders,
  Visibilities,
  MoverDirections,
  GroupperTabbabilities,
  SysDummyInputsPositions
});
function getTabsterOnElement(tabster, element) {
  var _a;
  return (_a = tabster.storageEntry(element)) === null || _a === void 0 ? void 0 : _a.tabster;
}
function updateTabsterByAttribute(tabster, element, dispose) {
  var _a, _b;
  const newAttrValue = dispose || tabster._noop ? void 0 : element.getAttribute(TabsterAttributeName);
  let entry = tabster.storageEntry(element);
  let newAttr;
  if (newAttrValue) {
    if (newAttrValue !== ((_a = entry === null || entry === void 0 ? void 0 : entry.attr) === null || _a === void 0 ? void 0 : _a.string)) {
      try {
        const newValue = JSON.parse(newAttrValue);
        if (typeof newValue !== "object") {
          throw new Error(`Value is not a JSON object, got '${newAttrValue}'.`);
        }
        newAttr = {
          string: newAttrValue,
          object: newValue
        };
      } catch (e) {
        if (true) {
          console.error(`data-tabster attribute error: ${e}`, element);
        }
      }
    } else {
      return;
    }
  } else if (!entry) {
    return;
  }
  if (!entry) {
    entry = tabster.storageEntry(element, true);
  }
  if (!entry.tabster) {
    entry.tabster = {};
  }
  const tabsterOnElement = entry.tabster || {};
  const oldTabsterProps = ((_b = entry.attr) === null || _b === void 0 ? void 0 : _b.object) || {};
  const newTabsterProps = (newAttr === null || newAttr === void 0 ? void 0 : newAttr.object) || {};
  for (const key of Object.keys(oldTabsterProps)) {
    if (!newTabsterProps[key]) {
      if (key === "root") {
        const root = tabsterOnElement[key];
        if (root) {
          tabster.root.onRoot(root, true);
        }
      }
      switch (key) {
        case "deloser":
        case "root":
        case "groupper":
        case "modalizer":
        case "mover":
          const part = tabsterOnElement[key];
          if (part) {
            part.dispose();
            delete tabsterOnElement[key];
          }
          break;
        case "observed":
          delete tabsterOnElement[key];
          if (tabster.observedElement) {
            tabster.observedElement.onObservedElementUpdate(element);
          }
          break;
        case "focusable":
        case "outline":
        case "uncontrolled":
        case "sys":
          delete tabsterOnElement[key];
          break;
      }
    }
  }
  for (const key of Object.keys(newTabsterProps)) {
    const sys = newTabsterProps.sys;
    switch (key) {
      case "deloser":
        if (tabsterOnElement.deloser) {
          tabsterOnElement.deloser.setProps(newTabsterProps.deloser);
        } else {
          if (tabster.deloser) {
            tabsterOnElement.deloser = tabster.deloser.createDeloser(element, newTabsterProps.deloser);
          } else if (true) {
            console.error("Deloser API used before initialization, please call `getDeloser()`");
          }
        }
        break;
      case "root":
        if (tabsterOnElement.root) {
          tabsterOnElement.root.setProps(newTabsterProps.root);
        } else {
          tabsterOnElement.root = tabster.root.createRoot(element, newTabsterProps.root, sys);
        }
        tabster.root.onRoot(tabsterOnElement.root);
        break;
      case "modalizer":
        if (tabsterOnElement.modalizer) {
          tabsterOnElement.modalizer.setProps(newTabsterProps.modalizer);
        } else {
          if (tabster.modalizer) {
            tabsterOnElement.modalizer = tabster.modalizer.createModalizer(element, newTabsterProps.modalizer, sys);
          } else if (true) {
            console.error("Modalizer API used before initialization, please call `getModalizer()`");
          }
        }
        break;
      case "focusable":
        tabsterOnElement.focusable = newTabsterProps.focusable;
        break;
      case "groupper":
        if (tabsterOnElement.groupper) {
          tabsterOnElement.groupper.setProps(newTabsterProps.groupper);
        } else {
          if (tabster.groupper) {
            tabsterOnElement.groupper = tabster.groupper.createGroupper(element, newTabsterProps.groupper, sys);
          } else if (true) {
            console.error("Groupper API used before initialization, please call `getGroupper()`");
          }
        }
        break;
      case "mover":
        if (tabsterOnElement.mover) {
          tabsterOnElement.mover.setProps(newTabsterProps.mover);
        } else {
          if (tabster.mover) {
            tabsterOnElement.mover = tabster.mover.createMover(element, newTabsterProps.mover, sys);
          } else if (true) {
            console.error("Mover API used before initialization, please call `getMover()`");
          }
        }
        break;
      case "observed":
        if (tabster.observedElement) {
          tabsterOnElement.observed = newTabsterProps.observed;
          tabster.observedElement.onObservedElementUpdate(element);
        } else if (true) {
          console.error("ObservedElement API used before initialization, please call `getObservedElement()`");
        }
        break;
      case "uncontrolled":
        tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;
        break;
      case "outline":
        if (tabster.outline) {
          tabsterOnElement.outline = newTabsterProps.outline;
        } else if (true) {
          console.error("Outline API used before initialization, please call `getOutline()`");
        }
        break;
      case "sys":
        tabsterOnElement.sys = newTabsterProps.sys;
        break;
      default:
        console.error(`Unknown key '${key}' in data-tabster attribute value.`);
    }
  }
  if (newAttr) {
    entry.attr = newAttr;
  } else {
    if (Object.keys(tabsterOnElement).length === 0) {
      delete entry.tabster;
      delete entry.attr;
    }
    tabster.storageEntry(element, false);
  }
}
function createEventTarget(getWindow2) {
  const global = getWindow2();
  if (global.EventTarget) {
    return new global.EventTarget();
  }
  return global.document.createElement("div");
}
var _isBrokenIE11;
var _DOMRect = typeof DOMRect !== "undefined" ? DOMRect : class {
  constructor(x, y, width, height) {
    this.left = x || 0;
    this.top = y || 0;
    this.right = (x || 0) + (width || 0);
    this.bottom = (y || 0) + (height || 0);
  }
};
var _uidCounter = 0;
try {
  document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);
  _isBrokenIE11 = false;
} catch (e) {
  _isBrokenIE11 = true;
}
function getInstanceContext(getWindow2) {
  const win = getWindow2();
  let ctx = win.__tabsterInstanceContext;
  if (!ctx) {
    ctx = {
      elementByUId: {},
      basics: {
        Promise: win.Promise || void 0,
        WeakRef: win.WeakRef || void 0
      },
      containerBoundingRectCache: {},
      lastContainerBoundingRectCacheId: 0,
      fakeWeakRefs: [],
      fakeWeakRefsStarted: false
    };
    win.__tabsterInstanceContext = ctx;
  }
  return ctx;
}
function disposeInstanceContext(win) {
  const ctx = win.__tabsterInstanceContext;
  if (ctx) {
    ctx.elementByUId = {};
    delete ctx.WeakRef;
    ctx.containerBoundingRectCache = {};
    if (ctx.containerBoundingRectCacheTimer) {
      win.clearTimeout(ctx.containerBoundingRectCacheTimer);
    }
    if (ctx.fakeWeakRefsTimer) {
      win.clearTimeout(ctx.fakeWeakRefsTimer);
    }
    ctx.fakeWeakRefs = [];
    delete win.__tabsterInstanceContext;
  }
}
function createWeakMap(win) {
  const ctx = win.__tabsterInstanceContext;
  return new ((ctx === null || ctx === void 0 ? void 0 : ctx.basics.WeakMap) || WeakMap)();
}
var FakeWeakRef = class {
  constructor(target) {
    this._target = target;
  }
  deref() {
    return this._target;
  }
  static cleanup(fwr, forceRemove) {
    if (!fwr._target) {
      return true;
    }
    if (forceRemove || !documentContains(fwr._target.ownerDocument, fwr._target)) {
      delete fwr._target;
      return true;
    }
    return false;
  }
};
var WeakHTMLElement = class {
  constructor(getWindow2, element, data) {
    const context = getInstanceContext(getWindow2);
    let ref;
    if (context.WeakRef) {
      ref = new context.WeakRef(element);
    } else {
      ref = new FakeWeakRef(element);
      context.fakeWeakRefs.push(ref);
    }
    this._ref = ref;
    this._data = data;
  }
  get() {
    const ref = this._ref;
    let element;
    if (ref) {
      element = ref.deref();
      if (!element) {
        delete this._ref;
      }
    }
    return element;
  }
  getData() {
    return this._data;
  }
};
function cleanupFakeWeakRefs(getWindow2, forceRemove) {
  const context = getInstanceContext(getWindow2);
  context.fakeWeakRefs = context.fakeWeakRefs.filter((e) => !FakeWeakRef.cleanup(e, forceRemove));
}
function startFakeWeakRefsCleanup(getWindow2) {
  const context = getInstanceContext(getWindow2);
  if (!context.fakeWeakRefsStarted) {
    context.fakeWeakRefsStarted = true;
    context.WeakRef = getWeakRef(context);
  }
  if (!context.fakeWeakRefsTimer) {
    context.fakeWeakRefsTimer = getWindow2().setTimeout(() => {
      context.fakeWeakRefsTimer = void 0;
      cleanupFakeWeakRefs(getWindow2);
      startFakeWeakRefsCleanup(getWindow2);
    }, 2 * 60 * 1e3);
  }
}
function stopFakeWeakRefsCleanupAndClearStorage(getWindow2) {
  const context = getInstanceContext(getWindow2);
  context.fakeWeakRefsStarted = false;
  if (context.fakeWeakRefsTimer) {
    getWindow2().clearTimeout(context.fakeWeakRefsTimer);
    context.fakeWeakRefsTimer = void 0;
    context.fakeWeakRefs = [];
  }
}
function createElementTreeWalker(doc, root, acceptNode) {
  if (root.nodeType !== Node.ELEMENT_NODE) {
    return void 0;
  }
  const filter = _isBrokenIE11 ? acceptNode : {
    acceptNode
  };
  return doc.createTreeWalker(
    root,
    NodeFilter.SHOW_ELEMENT,
    filter,
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.
    false
    /* Last argument is not optional for IE11! */
  );
}
function getBoundingRect(getWindow2, element) {
  let cacheId = element.__tabsterCacheId;
  const context = getInstanceContext(getWindow2);
  const cached = cacheId ? context.containerBoundingRectCache[cacheId] : void 0;
  if (cached) {
    return cached.rect;
  }
  const scrollingElement = element.ownerDocument && element.ownerDocument.documentElement;
  if (!scrollingElement) {
    return new _DOMRect();
  }
  let left = 0;
  let top = 0;
  let right = scrollingElement.clientWidth;
  let bottom = scrollingElement.clientHeight;
  if (element !== scrollingElement) {
    const r = element.getBoundingClientRect();
    left = Math.max(left, r.left);
    top = Math.max(top, r.top);
    right = Math.min(right, r.right);
    bottom = Math.min(bottom, r.bottom);
  }
  const rect = new _DOMRect(left < right ? left : -1, top < bottom ? top : -1, left < right ? right - left : 0, top < bottom ? bottom - top : 0);
  if (!cacheId) {
    cacheId = "r-" + ++context.lastContainerBoundingRectCacheId;
    element.__tabsterCacheId = cacheId;
  }
  context.containerBoundingRectCache[cacheId] = {
    rect,
    element
  };
  if (!context.containerBoundingRectCacheTimer) {
    context.containerBoundingRectCacheTimer = window.setTimeout(() => {
      context.containerBoundingRectCacheTimer = void 0;
      for (const cId of Object.keys(context.containerBoundingRectCache)) {
        delete context.containerBoundingRectCache[cId].element.__tabsterCacheId;
      }
      context.containerBoundingRectCache = {};
    }, 50);
  }
  return rect;
}
function isElementVerticallyVisibleInContainer(getWindow2, element, tolerance) {
  const container = getScrollableContainer(element);
  if (!container) {
    return false;
  }
  const containerRect = getBoundingRect(getWindow2, container);
  const elementRect = element.getBoundingClientRect();
  const intersectionTolerance = elementRect.height * (1 - tolerance);
  const topIntersection = Math.max(0, containerRect.top - elementRect.top);
  const bottomIntersection = Math.max(0, elementRect.bottom - containerRect.bottom);
  const totalIntersection = topIntersection + bottomIntersection;
  return totalIntersection === 0 || totalIntersection <= intersectionTolerance;
}
function scrollIntoView(getWindow2, element, alignToTop) {
  const container = getScrollableContainer(element);
  if (container) {
    const containerRect = getBoundingRect(getWindow2, container);
    const elementRect = element.getBoundingClientRect();
    if (alignToTop) {
      container.scrollTop += elementRect.top - containerRect.top;
    } else {
      container.scrollTop += elementRect.bottom - containerRect.bottom;
    }
  }
}
function getScrollableContainer(element) {
  const doc = element.ownerDocument;
  if (doc) {
    for (let el = element.parentElement; el; el = el.parentElement) {
      if (el.scrollWidth > el.clientWidth || el.scrollHeight > el.clientHeight) {
        return el;
      }
    }
    return doc.documentElement;
  }
  return null;
}
function makeFocusIgnored(element) {
  element.__shouldIgnoreFocus = true;
}
function shouldIgnoreFocus(element) {
  return !!element.__shouldIgnoreFocus;
}
function getUId(wnd) {
  const rnd = new Uint32Array(4);
  if (wnd.crypto && wnd.crypto.getRandomValues) {
    wnd.crypto.getRandomValues(rnd);
  } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {
    wnd.msCrypto.getRandomValues(rnd);
  } else {
    for (let i = 0; i < rnd.length; i++) {
      rnd[i] = 4294967295 * Math.random();
    }
  }
  const srnd = [];
  for (let i = 0; i < rnd.length; i++) {
    srnd.push(rnd[i].toString(36));
  }
  srnd.push("|");
  srnd.push((++_uidCounter).toString(36));
  srnd.push("|");
  srnd.push(Date.now().toString(36));
  return srnd.join("");
}
function getElementUId(getWindow2, element) {
  const context = getInstanceContext(getWindow2);
  let uid = element.__tabsterElementUID;
  if (!uid) {
    uid = element.__tabsterElementUID = getUId(getWindow2());
  }
  if (!context.elementByUId[uid] && documentContains(element.ownerDocument, element)) {
    context.elementByUId[uid] = new WeakHTMLElement(getWindow2, element);
  }
  return uid;
}
function clearElementCache(getWindow2, parent) {
  const context = getInstanceContext(getWindow2);
  for (const key of Object.keys(context.elementByUId)) {
    const wel = context.elementByUId[key];
    const el = wel && wel.get();
    if (el && parent) {
      if (!parent.contains(el)) {
        continue;
      }
    }
    delete context.elementByUId[key];
  }
}
function documentContains(doc, element) {
  var _a;
  return !!((_a = doc === null || doc === void 0 ? void 0 : doc.body) === null || _a === void 0 ? void 0 : _a.contains(element));
}
function matchesSelector(element, selector) {
  const matches = element.matches || element.matchesSelector || element.msMatchesSelector || element.webkitMatchesSelector;
  return matches && matches.call(element, selector);
}
function getPromise(getWindow2) {
  const context = getInstanceContext(getWindow2);
  if (context.basics.Promise) {
    return context.basics.Promise;
  }
  throw new Error("No Promise defined.");
}
function getWeakRef(context) {
  return context.basics.WeakRef;
}
var _lastTabsterPartId = 0;
var TabsterPart = class {
  constructor(tabster, element, props) {
    const getWindow2 = tabster.getWindow;
    this._tabster = tabster;
    this._element = new WeakHTMLElement(getWindow2, element);
    this._props = {
      ...props
    };
    this.id = "i" + ++_lastTabsterPartId;
  }
  getElement() {
    return this._element.get();
  }
  getProps() {
    return this._props;
  }
  setProps(props) {
    this._props = {
      ...props
    };
  }
};
var DummyInput = class {
  constructor(getWindow2, isOutside, props, element) {
    var _a;
    this._focusIn = (e) => {
      const input2 = this.input;
      if (this.onFocusIn && input2) {
        const relatedTarget = DummyInputManager.getLastPhantomFrom() || e.relatedTarget;
        this.onFocusIn(this, this._isBackward(true, input2, relatedTarget), relatedTarget);
      }
    };
    this._focusOut = (e) => {
      this.useDefaultAction = false;
      const input2 = this.input;
      if (this.onFocusOut && input2) {
        const relatedTarget = e.relatedTarget;
        this.onFocusOut(this, this._isBackward(false, input2, relatedTarget), relatedTarget);
      }
    };
    const win = getWindow2();
    const input = win.document.createElement("i");
    input.tabIndex = 0;
    input.setAttribute("role", "none");
    input.setAttribute(TabsterDummyInputAttributeName, "");
    input.setAttribute("aria-hidden", "true");
    const style = input.style;
    style.position = "fixed";
    style.width = style.height = "1px";
    style.opacity = "0.001";
    style.zIndex = "-1";
    style.setProperty("content-visibility", "hidden");
    makeFocusIgnored(input);
    this.input = input;
    this.isFirst = props.isFirst;
    this.isOutside = isOutside;
    this._isPhantom = (_a = props.isPhantom) !== null && _a !== void 0 ? _a : false;
    input.addEventListener("focusin", this._focusIn);
    input.addEventListener("focusout", this._focusOut);
    input.__tabsterDummyContainer = element;
    if (this._isPhantom) {
      this._disposeTimer = win.setTimeout(() => {
        delete this._disposeTimer;
        this.dispose();
      }, 0);
      this._clearDisposeTimeout = () => {
        if (this._disposeTimer) {
          win.clearTimeout(this._disposeTimer);
          delete this._disposeTimer;
        }
        delete this._clearDisposeTimeout;
      };
    }
  }
  dispose() {
    var _a;
    if (this._clearDisposeTimeout) {
      this._clearDisposeTimeout();
    }
    const input = this.input;
    if (!input) {
      return;
    }
    delete this.onFocusIn;
    delete this.onFocusOut;
    delete this.input;
    input.removeEventListener("focusin", this._focusIn);
    input.removeEventListener("focusout", this._focusOut);
    delete input.__tabsterDummyContainer;
    (_a = input.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(input);
  }
  setTopLeft(top, left) {
    var _a;
    const style = (_a = this.input) === null || _a === void 0 ? void 0 : _a.style;
    if (style) {
      style.top = `${top}px`;
      style.left = `${left}px`;
    }
  }
  _isBackward(isIn, current, previous) {
    return isIn && !previous ? !this.isFirst : !!(previous && current.compareDocumentPosition(previous) & Node.DOCUMENT_POSITION_FOLLOWING);
  }
};
var DummyInputManagerPriorities = {
  Root: 1,
  Modalizer: 2,
  Mover: 3,
  Groupper: 4
};
var DummyInputManager = class {
  constructor(tabster, element, priority, sys, outsideByDefault, callForDefaultAction) {
    this._element = element;
    this._instance = new DummyInputManagerCore(tabster, element, this, priority, sys, outsideByDefault, callForDefaultAction);
    this.moveOut = (backwards) => {
      var _a;
      (_a = this._instance) === null || _a === void 0 ? void 0 : _a.moveOut(backwards);
    };
    this.moveOutWithDefaultAction = (backwards) => {
      var _a;
      (_a = this._instance) === null || _a === void 0 ? void 0 : _a.moveOutWithDefaultAction(backwards);
    };
  }
  _setHandlers(onFocusIn, onFocusOut) {
    this._onFocusIn = onFocusIn;
    this._onFocusOut = onFocusOut;
  }
  getHandler(isIn) {
    return isIn ? this._onFocusIn : this._onFocusOut;
  }
  setTabbable(tabbable) {
    var _a;
    (_a = this._instance) === null || _a === void 0 ? void 0 : _a.setTabbable(this, tabbable);
  }
  dispose() {
    if (this._instance) {
      this._instance.dispose(this);
      delete this._instance;
    }
    delete this._onFocusIn;
    delete this._onFocusOut;
  }
  static getLastPhantomFrom() {
    const ret = DummyInputManager._lastPhantomFrom;
    delete DummyInputManager._lastPhantomFrom;
    return ret;
  }
  static moveWithPhantomDummy(tabster, element, moveOutside, isBackward) {
    const dummy = new DummyInput(tabster.getWindow, true, {
      isPhantom: true,
      isFirst: true
    });
    const input = dummy.input;
    if (input) {
      const parent = element.parentElement;
      if (parent) {
        let insertBefore = moveOutside && !isBackward || !moveOutside && isBackward ? element.nextElementSibling : element;
        if (insertBefore) {
          if (isBackward) {
            const beforeBefore = insertBefore.previousElementSibling;
            if (beforeBefore && beforeBefore.__tabsterDummyContainer) {
              insertBefore = beforeBefore;
            }
          } else if (insertBefore.__tabsterDummyContainer) {
            insertBefore = insertBefore.nextElementSibling;
          }
        }
        parent.insertBefore(input, insertBefore);
        DummyInputManager._lastPhantomFrom = element;
        tabster.getWindow().setTimeout(() => {
          delete DummyInputManager._lastPhantomFrom;
        }, 0);
        nativeFocus(input);
      }
    }
  }
};
function setDummyInputDebugValue(dummy, wrappers) {
  var _a;
  const what = {
    1: "Root",
    2: "Modalizer",
    3: "Mover",
    4: "Groupper"
  };
  (_a = dummy.input) === null || _a === void 0 ? void 0 : _a.setAttribute(TabsterDummyInputAttributeName, [`isFirst=${dummy.isFirst}`, `isOutside=${dummy.isOutside}`, ...wrappers.map((w) => `(${what[w.priority]}, tabbable=${w.tabbable})`)].join(", "));
}
var DummyInputObserver = class {
  constructor(win) {
    this._offsetsQueue = [];
    this._changedParents = /* @__PURE__ */ new WeakSet();
    this._dummies = /* @__PURE__ */ new Map();
    this._domChanged = (parent) => {
      var _a;
      if (this._changedParents.has(parent)) {
        return;
      }
      this._changedParents.add(parent);
      if (this._updateDummyInputsTimer) {
        return;
      }
      this._updateDummyInputsTimer = (_a = this._win) === null || _a === void 0 ? void 0 : _a.call(this).setTimeout(() => {
        delete this._updateDummyInputsTimer;
        for (const [dummy, callback] of this._dummies) {
          const dummyParent = dummy.parentElement;
          if (!dummyParent || this._changedParents.has(dummyParent)) {
            callback();
          }
        }
        this._changedParents = /* @__PURE__ */ new WeakSet();
      }, 100);
    };
    this._win = win;
  }
  add(dummy, callback) {
    this._dummies.set(dummy, callback);
    this.domChanged = this._domChanged;
  }
  remove(dummy) {
    const dummyInputElements = this._dummies;
    dummyInputElements.delete(dummy);
    if (dummyInputElements.size === 0) {
      delete this.domChanged;
    }
  }
  dispose() {
    var _a;
    const win = (_a = this._win) === null || _a === void 0 ? void 0 : _a.call(this);
    if (this._offsetsTimer) {
      win === null || win === void 0 ? void 0 : win.clearTimeout(this._offsetsTimer);
      delete this._offsetsTimer;
    }
    if (this._updateDummyInputsTimer) {
      win === null || win === void 0 ? void 0 : win.clearTimeout(this._updateDummyInputsTimer);
      delete this._updateDummyInputsTimer;
    }
    this._changedParents = /* @__PURE__ */ new WeakSet();
    this._dummies.clear();
    delete this._win;
  }
  updateOffsets(callback) {
    var _a;
    this._offsetsQueue.push(callback);
    if (this._offsetsTimer) {
      return;
    }
    this._offsetsTimer = (_a = this._win) === null || _a === void 0 ? void 0 : _a.call(this).setTimeout(() => {
      delete this._offsetsTimer;
      this._offsetsQueue.forEach((callback2) => callback2());
      this._offsetsQueue = [];
    }, 100);
  }
};
var DummyInputManagerCore = class {
  constructor(tabster, element, manager, priority, sys, outsideByDefault, callForDefaultAction) {
    this._wrappers = [];
    this._isOutside = false;
    this._transformElements = [];
    this._onFocusIn = (dummyInput, isBackward, relatedTarget) => {
      this._onFocus(true, dummyInput, isBackward, relatedTarget);
    };
    this._onFocusOut = (dummyInput, isBackward, relatedTarget) => {
      this._onFocus(false, dummyInput, isBackward, relatedTarget);
    };
    this.moveOut = (backwards) => {
      var _a;
      const first = this._firstDummy;
      const last = this._lastDummy;
      if (first && last) {
        const firstInput = first.input;
        const lastInput = last.input;
        const element2 = (_a = this._element) === null || _a === void 0 ? void 0 : _a.get();
        if (firstInput && lastInput && element2) {
          let toFocus;
          if (backwards) {
            firstInput.tabIndex = 0;
            toFocus = firstInput;
          } else {
            lastInput.tabIndex = 0;
            toFocus = lastInput;
          }
          if (toFocus) {
            nativeFocus(toFocus);
          }
        }
      }
    };
    this.moveOutWithDefaultAction = (backwards) => {
      var _a;
      const first = this._firstDummy;
      const last = this._lastDummy;
      if (first && last) {
        const firstInput = first.input;
        const lastInput = last.input;
        const element2 = (_a = this._element) === null || _a === void 0 ? void 0 : _a.get();
        if (firstInput && lastInput && element2) {
          let toFocus;
          if (backwards) {
            if (!first.isOutside && this._tabster.focusable.isFocusable(element2, true, true, true)) {
              toFocus = element2;
            } else {
              first.useDefaultAction = true;
              firstInput.tabIndex = 0;
              toFocus = firstInput;
            }
          } else {
            last.useDefaultAction = true;
            lastInput.tabIndex = 0;
            toFocus = lastInput;
          }
          if (toFocus) {
            nativeFocus(toFocus);
          }
        }
      }
    };
    this.setTabbable = (manager2, tabbable) => {
      var _a, _b;
      for (const w of this._wrappers) {
        if (w.manager === manager2) {
          w.tabbable = tabbable;
          break;
        }
      }
      const wrapper = this._getCurrent();
      if (wrapper) {
        const tabIndex = wrapper.tabbable ? 0 : -1;
        let input = (_a = this._firstDummy) === null || _a === void 0 ? void 0 : _a.input;
        if (input) {
          input.tabIndex = tabIndex;
        }
        input = (_b = this._lastDummy) === null || _b === void 0 ? void 0 : _b.input;
        if (input) {
          input.tabIndex = tabIndex;
        }
      }
      if (true) {
        this._firstDummy && setDummyInputDebugValue(this._firstDummy, this._wrappers);
        this._lastDummy && setDummyInputDebugValue(this._lastDummy, this._wrappers);
      }
    };
    this._addDummyInputs = () => {
      if (this._addTimer) {
        return;
      }
      this._addTimer = this._getWindow().setTimeout(() => {
        var _a, _b, _c;
        delete this._addTimer;
        const element2 = (_a = this._element) === null || _a === void 0 ? void 0 : _a.get();
        const dif = (_b = this._firstDummy) === null || _b === void 0 ? void 0 : _b.input;
        const dil = (_c = this._lastDummy) === null || _c === void 0 ? void 0 : _c.input;
        if (!element2 || !dif || !dil) {
          return;
        }
        if (this._isOutside) {
          const elementParent = element2.parentElement;
          if (elementParent) {
            const nextSibling = element2.nextElementSibling;
            if (nextSibling !== dil) {
              elementParent.insertBefore(dil, nextSibling);
            }
            if (element2.previousElementSibling !== dif) {
              elementParent.insertBefore(dif, element2);
            }
          }
        } else {
          if (element2.lastElementChild !== dil) {
            element2.appendChild(dil);
          }
          const firstElementChild = element2.firstElementChild;
          if (firstElementChild && firstElementChild !== dif) {
            element2.insertBefore(dif, firstElementChild);
          }
        }
        if (true) {
          this._firstDummy && setDummyInputDebugValue(this._firstDummy, this._wrappers);
          this._lastDummy && setDummyInputDebugValue(this._lastDummy, this._wrappers);
        }
        this._addTransformOffsets();
      }, 0);
    };
    this._addTransformOffsets = () => {
      const win = this._getWindow();
      if (this._scrollTimer) {
        win.clearTimeout(this._scrollTimer);
      }
      this._scrollTimer = win.setTimeout(() => {
        delete this._scrollTimer;
        this._tabster._dummyObserver.updateOffsets(this._reallyAddTransformOffsets);
      }, 100);
    };
    this._reallyAddTransformOffsets = () => {
      var _a, _b, _c, _d;
      const from = ((_a = this._firstDummy) === null || _a === void 0 ? void 0 : _a.input) || ((_b = this._lastDummy) === null || _b === void 0 ? void 0 : _b.input);
      const transformElements = this._transformElements;
      const newTransformElements = [];
      const transformElementsMap = /* @__PURE__ */ new WeakMap();
      const newTransformElementsMap = /* @__PURE__ */ new WeakMap();
      let scrollTop = 0;
      let scrollLeft = 0;
      for (const el2 of transformElements) {
        transformElementsMap.set(el2, el2);
      }
      const win = this._getWindow();
      for (let element2 = from; element2; element2 = element2.parentElement) {
        const transform = win.getComputedStyle(element2).transform;
        if (transform && transform !== "none") {
          let el2 = transformElementsMap.get(element2);
          if (!el2) {
            el2 = element2;
            el2.addEventListener("scroll", this._addTransformOffsets);
          }
          newTransformElements.push(el2);
          newTransformElementsMap.set(el2, el2);
          scrollTop += el2.scrollTop;
          scrollLeft += el2.scrollLeft;
        }
      }
      for (const el2 of transformElements) {
        if (!newTransformElementsMap.get(el2)) {
          el2.removeEventListener("scroll", this._addTransformOffsets);
        }
      }
      this._transformElements = newTransformElements;
      (_c = this._firstDummy) === null || _c === void 0 ? void 0 : _c.setTopLeft(scrollTop, scrollLeft);
      (_d = this._lastDummy) === null || _d === void 0 ? void 0 : _d.setTopLeft(scrollTop, scrollLeft);
    };
    const el = element.get();
    if (!el) {
      throw new Error("No element");
    }
    this._tabster = tabster;
    this._getWindow = tabster.getWindow;
    this._callForDefaultAction = callForDefaultAction;
    const instance = el.__tabsterDummy;
    (instance || this)._wrappers.push({
      manager,
      priority,
      tabbable: true
    });
    if (instance) {
      if (true) {
        this._firstDummy && setDummyInputDebugValue(this._firstDummy, instance._wrappers);
        this._lastDummy && setDummyInputDebugValue(this._lastDummy, instance._wrappers);
      }
      return instance;
    }
    el.__tabsterDummy = this;
    const forcedDummyPosition = sys === null || sys === void 0 ? void 0 : sys.dummyInputsPosition;
    const tagName = el.tagName;
    this._isOutside = !forcedDummyPosition ? (outsideByDefault || tagName === "UL" || tagName === "OL" || tagName === "TABLE") && !(tagName === "LI" || tagName === "TD" || tagName === "TH") : forcedDummyPosition === SysDummyInputsPositions.Outside;
    this._firstDummy = new DummyInput(this._getWindow, this._isOutside, {
      isFirst: true
    }, element);
    this._lastDummy = new DummyInput(this._getWindow, this._isOutside, {
      isFirst: false
    }, element);
    const dummyElement = this._firstDummy.input;
    dummyElement && tabster._dummyObserver.add(dummyElement, this._addDummyInputs);
    this._firstDummy.onFocusIn = this._onFocusIn;
    this._firstDummy.onFocusOut = this._onFocusOut;
    this._lastDummy.onFocusIn = this._onFocusIn;
    this._lastDummy.onFocusOut = this._onFocusOut;
    this._element = element;
    this._addDummyInputs();
  }
  dispose(manager, force) {
    var _a, _b, _c, _d;
    const wrappers = this._wrappers = this._wrappers.filter((w) => w.manager !== manager && !force);
    if (true) {
      this._firstDummy && setDummyInputDebugValue(this._firstDummy, wrappers);
      this._lastDummy && setDummyInputDebugValue(this._lastDummy, wrappers);
    }
    if (wrappers.length === 0) {
      delete ((_a = this._element) === null || _a === void 0 ? void 0 : _a.get()).__tabsterDummy;
      for (const el of this._transformElements) {
        el.removeEventListener("scroll", this._addTransformOffsets);
      }
      this._transformElements = [];
      const win = this._getWindow();
      if (this._scrollTimer) {
        win.clearTimeout(this._scrollTimer);
        delete this._scrollTimer;
      }
      if (this._addTimer) {
        win.clearTimeout(this._addTimer);
        delete this._addTimer;
      }
      const dummyElement = (_b = this._firstDummy) === null || _b === void 0 ? void 0 : _b.input;
      dummyElement && this._tabster._dummyObserver.remove(dummyElement);
      (_c = this._firstDummy) === null || _c === void 0 ? void 0 : _c.dispose();
      (_d = this._lastDummy) === null || _d === void 0 ? void 0 : _d.dispose();
    }
  }
  _onFocus(isIn, dummyInput, isBackward, relatedTarget) {
    var _a;
    const wrapper = this._getCurrent();
    if (wrapper && (!dummyInput.useDefaultAction || this._callForDefaultAction)) {
      (_a = wrapper.manager.getHandler(isIn)) === null || _a === void 0 ? void 0 : _a(dummyInput, isBackward, relatedTarget);
    }
  }
  _getCurrent() {
    this._wrappers.sort((a, b) => {
      if (a.tabbable !== b.tabbable) {
        return a.tabbable ? -1 : 1;
      }
      return a.priority - b.priority;
    });
    return this._wrappers[0];
  }
};
function getLastChild(container) {
  let lastChild = null;
  for (let i = container.lastElementChild; i; i = i.lastElementChild) {
    lastChild = i;
  }
  return lastChild || void 0;
}
function getAdjacentElement(from, prev) {
  let cur = from;
  let adjacent = null;
  while (cur && !adjacent) {
    adjacent = prev ? cur.previousElementSibling : cur.nextElementSibling;
    cur = cur.parentElement;
  }
  return adjacent || void 0;
}
function triggerEvent(target, name, details) {
  const event = document.createEvent("HTMLEvents");
  event.initEvent(name, true, true);
  event.details = details;
  target.dispatchEvent(event);
  return !event.defaultPrevented;
}
function augmentAttribute(tabster, element, name, value) {
  const entry = tabster.storageEntry(element, true);
  let ret = false;
  if (!entry.aug) {
    if (value === void 0) {
      return ret;
    }
    entry.aug = {};
  }
  if (value === void 0) {
    if (name in entry.aug) {
      const origVal = entry.aug[name];
      delete entry.aug[name];
      if (origVal === null) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, origVal);
      }
      ret = true;
    }
  } else {
    let origValue;
    if (!(name in entry.aug)) {
      origValue = element.getAttribute(name);
    }
    if (origValue !== void 0 && origValue !== value) {
      entry.aug[name] = origValue;
      if (value === null) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value);
      }
      ret = true;
    }
  }
  if (value === void 0 && Object.keys(entry.aug).length === 0) {
    delete entry.aug;
    tabster.storageEntry(element, false);
  }
  return ret;
}
function getTabsterAttribute(props, plain) {
  const attr = JSON.stringify(props);
  if (plain === true) {
    return attr;
  }
  return {
    [TabsterAttributeName]: attr
  };
}
function mergeTabsterProps(props, newProps) {
  for (const key of Object.keys(newProps)) {
    const value = newProps[key];
    if (value) {
      props[key] = value;
    } else {
      delete props[key];
    }
  }
}
function setTabsterAttribute(element, newProps, update) {
  let props;
  if (update) {
    const attr = element.getAttribute(TabsterAttributeName);
    if (attr) {
      try {
        props = JSON.parse(attr);
      } catch (e) {
        if (true) {
          console.error(`data-tabster attribute error: ${e}`, element);
        }
      }
    }
  }
  if (!props) {
    props = {};
  }
  mergeTabsterProps(props, newProps);
  if (Object.keys(props).length > 0) {
    element.setAttribute(TabsterAttributeName, getTabsterAttribute(props, true));
  } else {
    element.removeAttribute(TabsterAttributeName);
  }
}
function _setInformativeStyle$3(weakElement, remove, id) {
  if (true) {
    const element = weakElement.get();
    if (element) {
      if (remove) {
        element.style.removeProperty("--tabster-root");
      } else {
        element.style.setProperty("--tabster-root", id + ",");
      }
    }
  }
}
var RootDummyManager = class extends DummyInputManager {
  constructor(tabster, element, setFocused, sys) {
    super(tabster, element, DummyInputManagerPriorities.Root, sys, void 0, true);
    this._onDummyInputFocus = (dummyInput) => {
      var _a;
      if (dummyInput.useDefaultAction) {
        this._setFocused(false, true);
      } else {
        this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);
        const element2 = this._element.get();
        if (element2) {
          this._setFocused(true, true);
          const toFocus = this._tabster.focusedElement.getFirstOrLastTabbable(dummyInput.isFirst, {
            container: element2,
            ignoreAccessibility: true
          });
          if (toFocus) {
            nativeFocus(toFocus);
            return;
          }
        }
        (_a = dummyInput.input) === null || _a === void 0 ? void 0 : _a.blur();
      }
    };
    this._setHandlers(this._onDummyInputFocus);
    this._tabster = tabster;
    this._setFocused = setFocused;
  }
};
var Root = class extends TabsterPart {
  constructor(tabster, element, onDispose, props, sys) {
    super(tabster, element, props);
    this._isFocused = false;
    this._setFocused = (hasFocused, fromAdjacent) => {
      if (this._setFocusedTimer) {
        this._tabster.getWindow().clearTimeout(this._setFocusedTimer);
        delete this._setFocusedTimer;
      }
      if (this._isFocused === hasFocused) {
        return;
      }
      const element2 = this._element.get();
      if (element2) {
        if (hasFocused) {
          this._isFocused = true;
          triggerEvent(this._tabster.root.eventTarget, "focus", {
            element: element2,
            fromAdjacent
          });
        } else {
          this._setFocusedTimer = this._tabster.getWindow().setTimeout(() => {
            delete this._setFocusedTimer;
            this._isFocused = false;
            triggerEvent(this._tabster.root.eventTarget, "blur", {
              element: element2,
              fromAdjacent
            });
          }, 0);
        }
      }
    };
    this._onFocus = (e) => {
      var _a;
      const win2 = this._tabster.getWindow();
      if (this._setTabbableTimer) {
        win2.clearTimeout(this._setTabbableTimer);
        delete this._setTabbableTimer;
      }
      if (e) {
        const ctx = RootAPI.getTabsterContext(this._tabster, e);
        if (ctx) {
          this._setFocused(ctx.root.getElement() === this._element.get());
        }
        if (!ctx || ctx.uncontrolled || this._tabster.rootDummyInputs) {
          (_a = this._dummyManager) === null || _a === void 0 ? void 0 : _a.setTabbable(false);
          return;
        }
      } else {
        this._setFocused(false);
      }
      this._setTabbableTimer = win2.setTimeout(() => {
        var _a2;
        delete this._setTabbableTimer;
        (_a2 = this._dummyManager) === null || _a2 === void 0 ? void 0 : _a2.setTabbable(true);
      }, 0);
    };
    this._onDispose = onDispose;
    const win = tabster.getWindow;
    this.uid = getElementUId(win, element);
    this._sys = sys;
    if (tabster.controlTab || tabster.rootDummyInputs) {
      this.addDummyInputs();
    }
    tabster.focusedElement.subscribe(this._onFocus);
    this._add();
  }
  addDummyInputs() {
    if (!this._dummyManager) {
      this._dummyManager = new RootDummyManager(this._tabster, this._element, this._setFocused, this._sys);
    }
  }
  dispose() {
    var _a;
    this._onDispose(this);
    const win = this._tabster.getWindow();
    if (this._setFocusedTimer) {
      win.clearTimeout(this._setFocusedTimer);
      delete this._setFocusedTimer;
    }
    if (this._setTabbableTimer) {
      win.clearTimeout(this._setTabbableTimer);
      delete this._setTabbableTimer;
    }
    (_a = this._dummyManager) === null || _a === void 0 ? void 0 : _a.dispose();
    this._remove();
  }
  moveOutWithDefaultAction(isBackward) {
    const dummyManager = this._dummyManager;
    if (dummyManager) {
      dummyManager.moveOutWithDefaultAction(isBackward);
    } else {
      const el = this.getElement();
      if (el) {
        RootDummyManager.moveWithPhantomDummy(this._tabster, el, true, isBackward);
      }
    }
  }
  _add() {
    if (true) {
      _setInformativeStyle$3(this._element, false, this.uid);
    }
  }
  _remove() {
    if (true) {
      _setInformativeStyle$3(this._element, true);
    }
  }
};
var RootAPI = class {
  constructor(tabster, autoRoot) {
    this._autoRootWaiting = false;
    this._roots = {};
    this._forceDummy = false;
    this.rootById = {};
    this._init = () => {
      this._initTimer = void 0;
      if (this._autoRoot) {
        this._autoRootCreate();
      }
    };
    this._autoRootCreate = () => {
      var _a;
      if (this._initTimer) {
        return;
      }
      const doc = this._win().document;
      const body = doc.body;
      if (body) {
        this._autoRootUnwait(doc);
        const props = this._autoRoot;
        if (props) {
          setTabsterAttribute(body, {
            root: props
          }, true);
          updateTabsterByAttribute(this._tabster, body);
          return (_a = getTabsterOnElement(this._tabster, body)) === null || _a === void 0 ? void 0 : _a.root;
        }
      } else if (!this._autoRootWaiting) {
        this._autoRootWaiting = true;
        doc.addEventListener("readystatechange", this._autoRootCreate);
      }
      return void 0;
    };
    this._onRootDispose = (root) => {
      delete this._roots[root.id];
    };
    this._tabster = tabster;
    this._win = tabster.getWindow;
    this._initTimer = this._win().setTimeout(this._init, 0);
    this._autoRoot = autoRoot;
    this.eventTarget = createEventTarget(this._win);
  }
  _autoRootUnwait(doc) {
    doc.removeEventListener("readystatechange", this._autoRootCreate);
    this._autoRootWaiting = false;
  }
  dispose() {
    const win = this._win();
    this._autoRootUnwait(win.document);
    delete this._autoRoot;
    win.clearTimeout(this._initTimer);
    this._initTimer = void 0;
    Object.keys(this._roots).forEach((rootId) => {
      if (this._roots[rootId]) {
        this._roots[rootId].dispose();
        delete this._roots[rootId];
      }
    });
    this.rootById = {};
  }
  createRoot(element, props, sys) {
    if (true)
      ;
    const newRoot = new Root(this._tabster, element, this._onRootDispose, props, sys);
    this._roots[newRoot.id] = newRoot;
    if (this._forceDummy) {
      newRoot.addDummyInputs();
    }
    return newRoot;
  }
  addDummyInputs() {
    this._forceDummy = true;
    const roots = this._roots;
    for (const id of Object.keys(roots)) {
      roots[id].addDummyInputs();
    }
  }
  static getRootByUId(getWindow2, id) {
    const tabster = getWindow2().__tabsterInstance;
    return tabster && tabster.root.rootById[id];
  }
  /**
   * Fetches the tabster context for an element walking up its ancestors
   *
   * @param tabster Tabster instance
   * @param element The element the tabster context should represent
   * @param options Additional options
   * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations
   */
  static getTabsterContext(tabster, element, options) {
    if (options === void 0) {
      options = {};
    }
    var _a, _b, _c, _d;
    if (!element.ownerDocument) {
      return void 0;
    }
    const checkRtl = options.checkRtl;
    let root;
    let modalizer;
    let groupper;
    let mover;
    let isExcludedFromMover = false;
    let isGroupperFirst;
    let modalizerInGroupper;
    let isRtl;
    let uncontrolled;
    let curElement = element;
    const ignoreKeydown = {};
    while (curElement && (!root || checkRtl)) {
      const tabsterOnElement = getTabsterOnElement(tabster, curElement);
      if (checkRtl && isRtl === void 0) {
        const dir = curElement.dir;
        if (dir) {
          isRtl = dir.toLowerCase() === "rtl";
        }
      }
      if (!tabsterOnElement) {
        curElement = curElement.parentElement;
        continue;
      }
      const tagName = curElement.tagName;
      if (tabsterOnElement.uncontrolled || tagName === "IFRAME" || tagName === "WEBVIEW") {
        uncontrolled = curElement;
      }
      if (!mover && ((_a = tabsterOnElement.focusable) === null || _a === void 0 ? void 0 : _a.excludeFromMover) && !groupper) {
        isExcludedFromMover = true;
      }
      const curModalizer = tabsterOnElement.modalizer;
      const curGroupper = tabsterOnElement.groupper;
      const curMover = tabsterOnElement.mover;
      if (!modalizer && curModalizer) {
        modalizer = curModalizer;
      }
      if (!groupper && curGroupper && (!modalizer || curModalizer)) {
        if (modalizer) {
          if (!curGroupper.isActive() && curGroupper.getProps().tabbability && modalizer.userId !== ((_b = tabster.modalizer) === null || _b === void 0 ? void 0 : _b.activeId)) {
            modalizer = void 0;
            groupper = curGroupper;
          }
          modalizerInGroupper = curGroupper;
        } else {
          groupper = curGroupper;
        }
      }
      if (!mover && curMover && (!modalizer || curModalizer) && (!curGroupper || curElement !== element)) {
        mover = curMover;
        isGroupperFirst = !!groupper && groupper !== curGroupper;
      }
      if (tabsterOnElement.root) {
        root = tabsterOnElement.root;
      }
      if ((_c = tabsterOnElement.focusable) === null || _c === void 0 ? void 0 : _c.ignoreKeydown) {
        Object.assign(ignoreKeydown, tabsterOnElement.focusable.ignoreKeydown);
      }
      curElement = curElement.parentElement;
    }
    if (!root) {
      const rootAPI = tabster.root;
      const autoRoot = rootAPI._autoRoot;
      if (autoRoot) {
        if ((_d = element.ownerDocument) === null || _d === void 0 ? void 0 : _d.body) {
          root = rootAPI._autoRootCreate();
        }
      }
    }
    if (groupper && !mover) {
      isGroupperFirst = true;
    }
    if (!root) {
      if (modalizer || groupper || mover) {
        console.error("Tabster Root is required for Mover, Groupper and Modalizer to work.");
      }
    }
    const shouldIgnoreKeydown = (event) => !!ignoreKeydown[event.key];
    return root ? {
      root,
      modalizer,
      groupper,
      mover,
      isGroupperFirst,
      modalizerInGroupper,
      isRtl: checkRtl ? !!isRtl : void 0,
      uncontrolled,
      isExcludedFromMover,
      ignoreKeydown: shouldIgnoreKeydown
    } : void 0;
  }
  static getRoot(tabster, element) {
    var _a;
    for (let el = element; el; el = el.parentElement) {
      const root = (_a = getTabsterOnElement(tabster, el)) === null || _a === void 0 ? void 0 : _a.root;
      if (root) {
        return root;
      }
    }
    return void 0;
  }
  onRoot(root, removed) {
    if (removed) {
      delete this.rootById[root.uid];
    } else {
      this.rootById[root.uid] = root;
    }
  }
};
var _containerHistoryLength = 10;
var DeloserItemBase = class {
};
var DeloserItem = class extends DeloserItemBase {
  constructor(tabster, deloser) {
    super();
    this.uid = deloser.uid;
    this._tabster = tabster;
    this._deloser = deloser;
  }
  belongsTo(deloser) {
    return deloser === this._deloser;
  }
  unshift(element) {
    this._deloser.unshift(element);
  }
  async focusAvailable() {
    const available = this._deloser.findAvailable();
    return available ? this._tabster.focusedElement.focus(available) : false;
  }
  async resetFocus() {
    const getWindow2 = this._tabster.getWindow;
    return getPromise(getWindow2).resolve(this._deloser.resetFocus());
  }
};
var DeloserHistoryByRootBase = class {
  constructor(tabster, rootUId) {
    this._history = [];
    this._tabster = tabster;
    this.rootUId = rootUId;
  }
  getLength() {
    return this._history.length;
  }
  removeDeloser(deloser) {
    this._history = this._history.filter((c) => !c.belongsTo(deloser));
  }
  hasDeloser(deloser) {
    return this._history.some((d) => d.belongsTo(deloser));
  }
};
var DeloserHistoryByRoot = class extends DeloserHistoryByRootBase {
  unshiftToDeloser(deloser, element) {
    let item;
    for (let i = 0; i < this._history.length; i++) {
      if (this._history[i].belongsTo(deloser)) {
        item = this._history[i];
        this._history.splice(i, 1);
        break;
      }
    }
    if (!item) {
      item = new DeloserItem(this._tabster, deloser);
    }
    item.unshift(element);
    this._history.unshift(item);
    this._history.splice(_containerHistoryLength, this._history.length - _containerHistoryLength);
  }
  async focusAvailable(from) {
    let skip = !!from;
    for (const i of this._history) {
      if (from && i.belongsTo(from)) {
        skip = false;
      }
      if (!skip && await i.focusAvailable()) {
        return true;
      }
    }
    return false;
  }
  async resetFocus(from) {
    let skip = !!from;
    const resetQueue = {};
    for (const i of this._history) {
      if (from && i.belongsTo(from)) {
        skip = false;
      }
      if (!skip && !resetQueue[i.uid]) {
        resetQueue[i.uid] = i;
      }
    }
    for (const id of Object.keys(resetQueue)) {
      if (await resetQueue[id].resetFocus()) {
        return true;
      }
    }
    return false;
  }
};
var DeloserHistory = class {
  constructor(tabster) {
    this._history = [];
    this._tabster = tabster;
  }
  dispose() {
    this._history = [];
  }
  process(element) {
    var _a;
    const ctx = RootAPI.getTabsterContext(this._tabster, element);
    const rootUId = ctx && ctx.root.uid;
    const deloser = DeloserAPI.getDeloser(this._tabster, element);
    if (!rootUId || !deloser) {
      return void 0;
    }
    const historyByRoot = this.make(rootUId, () => new DeloserHistoryByRoot(this._tabster, rootUId));
    if (!ctx || !ctx.modalizer || ((_a = ctx.modalizer) === null || _a === void 0 ? void 0 : _a.isActive())) {
      historyByRoot.unshiftToDeloser(deloser, element);
    }
    return deloser;
  }
  make(rootUId, createInstance) {
    let historyByRoot;
    for (let i = 0; i < this._history.length; i++) {
      const hbr = this._history[i];
      if (hbr.rootUId === rootUId) {
        historyByRoot = hbr;
        this._history.splice(i, 1);
        break;
      }
    }
    if (!historyByRoot) {
      historyByRoot = createInstance();
    }
    this._history.unshift(historyByRoot);
    this._history.splice(_containerHistoryLength, this._history.length - _containerHistoryLength);
    return historyByRoot;
  }
  removeDeloser(deloser) {
    this._history.forEach((i) => {
      i.removeDeloser(deloser);
    });
    this._history = this._history.filter((i) => i.getLength() > 0);
  }
  async focusAvailable(from) {
    let skip = !!from;
    for (const h of this._history) {
      if (from && h.hasDeloser(from)) {
        skip = false;
      }
      if (!skip && await h.focusAvailable(from)) {
        return true;
      }
    }
    return false;
  }
  async resetFocus(from) {
    let skip = !!from;
    for (const h of this._history) {
      if (from && h.hasDeloser(from)) {
        skip = false;
      }
      if (!skip && await h.resetFocus(from)) {
        return true;
      }
    }
    return false;
  }
};
function _setInformativeStyle$2(weakElement, remove, isActive, snapshotIndex) {
  if (true) {
    const element = weakElement.get();
    if (element) {
      if (remove) {
        element.style.removeProperty("--tabster-deloser");
      } else {
        element.style.setProperty("--tabster-deloser", (isActive ? "active" : "inactive") + "," + ("snapshot-" + snapshotIndex));
      }
    }
  }
}
function buildElementSelector(element, withClass, withIndex) {
  const selector = [];
  const escapeRegExp = /(:|\.|\[|\]|,|=|@)/g;
  const escapeReplaceValue = "\\$1";
  if (element.id) {
    selector.push("#" + element.id.replace(escapeRegExp, escapeReplaceValue));
  }
  if (withClass !== false && element.className) {
    element.className.split(" ").forEach((cls) => {
      cls = cls.trim();
      if (cls) {
        selector.push("." + cls.replace(escapeRegExp, escapeReplaceValue));
      }
    });
  }
  let index = 0;
  let el;
  if (withIndex !== false && selector.length === 0) {
    el = element;
    while (el) {
      index++;
      el = el.previousElementSibling;
    }
    selector.unshift(":nth-child(" + index + ")");
  }
  selector.unshift(element.tagName.toLowerCase());
  return selector.join("");
}
function buildSelector(element) {
  if (!documentContains(element.ownerDocument, element)) {
    return void 0;
  }
  const selector = [buildElementSelector(element)];
  let el = element.parentElement;
  while (el) {
    const isBody = el.tagName === "BODY";
    selector.unshift(buildElementSelector(el, false, !isBody));
    if (isBody) {
      break;
    }
    el = el.parentElement;
  }
  return selector.join(" ");
}
var Deloser = class extends TabsterPart {
  constructor(tabster, element, onDispose, props) {
    super(tabster, element, props);
    this._isActive = false;
    this._history = [[]];
    this._snapshotIndex = 0;
    this.isActive = () => {
      return this._isActive;
    };
    this.setSnapshot = (index) => {
      this._snapshotIndex = index;
      if (this._history.length > index + 1) {
        this._history.splice(index + 1, this._history.length - index - 1);
      }
      if (!this._history[index]) {
        this._history[index] = [];
      }
      if (true) {
        _setInformativeStyle$2(this._element, false, this._isActive, this._snapshotIndex);
      }
    };
    this.focusFirst = () => {
      const e = this._element.get();
      return !!e && this._tabster.focusedElement.focusFirst({
        container: e
      });
    };
    this.focusDefault = () => {
      const e = this._element.get();
      return !!e && this._tabster.focusedElement.focusDefault(e);
    };
    this.resetFocus = () => {
      const e = this._element.get();
      return !!e && this._tabster.focusedElement.resetFocus(e);
    };
    this.clearHistory = (preserveExisting) => {
      const element2 = this._element.get();
      if (!element2) {
        this._history[this._snapshotIndex] = [];
        return;
      }
      this._history[this._snapshotIndex] = this._history[this._snapshotIndex].filter((we) => {
        const e = we.get();
        return e && preserveExisting ? element2.contains(e) : false;
      });
    };
    this.uid = getElementUId(tabster.getWindow, element);
    this._onDispose = onDispose;
    if (true) {
      _setInformativeStyle$2(this._element, false, this._isActive, this._snapshotIndex);
    }
  }
  dispose() {
    this._remove();
    this._onDispose(this);
    this._isActive = false;
    this._snapshotIndex = 0;
    this._props = {};
    this._history = [];
  }
  setActive(active) {
    this._isActive = active;
    if (true) {
      _setInformativeStyle$2(this._element, false, this._isActive, this._snapshotIndex);
    }
  }
  getActions() {
    return {
      focusDefault: this.focusDefault,
      focusFirst: this.focusFirst,
      resetFocus: this.resetFocus,
      clearHistory: this.clearHistory,
      setSnapshot: this.setSnapshot,
      isActive: this.isActive
    };
  }
  unshift(element) {
    let cur = this._history[this._snapshotIndex];
    cur = this._history[this._snapshotIndex] = cur.filter((we) => {
      const e = we.get();
      return e && e !== element;
    });
    cur.unshift(new WeakHTMLElement(this._tabster.getWindow, element, buildSelector(element)));
    while (cur.length > _containerHistoryLength) {
      cur.pop();
    }
  }
  findAvailable() {
    const element = this._element.get();
    if (!element || !this._tabster.focusable.isVisible(element)) {
      return null;
    }
    let restoreFocusOrder = this._props.restoreFocusOrder;
    let available = null;
    const ctx = RootAPI.getTabsterContext(this._tabster, element);
    if (!ctx) {
      return null;
    }
    const root = ctx.root;
    const rootElement = root.getElement();
    if (!rootElement) {
      return null;
    }
    if (restoreFocusOrder === void 0) {
      restoreFocusOrder = root.getProps().restoreFocusOrder;
    }
    if (restoreFocusOrder === RestoreFocusOrders.RootDefault) {
      available = this._tabster.focusable.findDefault({
        container: rootElement
      });
    }
    if (!available && restoreFocusOrder === RestoreFocusOrders.RootFirst) {
      available = this._findFirst(rootElement);
    }
    if (available) {
      return available;
    }
    const availableInHistory = this._findInHistory();
    const availableDefault = this._tabster.focusable.findDefault({
      container: element
    });
    const availableFirst = this._findFirst(element);
    if (availableInHistory && restoreFocusOrder === RestoreFocusOrders.History) {
      return availableInHistory;
    }
    if (availableDefault && restoreFocusOrder === RestoreFocusOrders.DeloserDefault) {
      return availableDefault;
    }
    if (availableFirst && restoreFocusOrder === RestoreFocusOrders.DeloserFirst) {
      return availableFirst;
    }
    return availableDefault || availableInHistory || availableFirst || null;
  }
  customFocusLostHandler(element) {
    return triggerEvent(element, DeloserEventName, this.getActions());
  }
  _findInHistory() {
    const cur = this._history[this._snapshotIndex].slice(0);
    this.clearHistory(true);
    for (let i = 0; i < cur.length; i++) {
      const we = cur[i];
      const e = we.get();
      const element = this._element.get();
      if (e && element && element.contains(e)) {
        if (this._tabster.focusable.isFocusable(e)) {
          return e;
        }
      } else if (!this._props.noSelectorCheck) {
        const selector = we.getData();
        if (selector && element) {
          let els;
          try {
            els = element.ownerDocument.querySelectorAll(selector);
          } catch (e2) {
            if (true) {
              console.error(`Failed to querySelectorAll('${selector}')`);
            }
            continue;
          }
          for (let i2 = 0; i2 < els.length; i2++) {
            const el = els[i2];
            if (el && this._tabster.focusable.isFocusable(el)) {
              return el;
            }
          }
        }
      }
    }
    return null;
  }
  _findFirst(element) {
    if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {
      const first = this._tabster.focusable.findFirst({
        container: element,
        ignoreUncontrolled: true,
        useActiveModalizer: true
      });
      if (first) {
        return first;
      }
    }
    return null;
  }
  _remove() {
    if (true) {
      _setInformativeStyle$2(this._element, true);
    }
  }
};
var DeloserAPI = class {
  constructor(tabster, props) {
    this._inDeloser = false;
    this._isRestoringFocus = false;
    this._isPaused = false;
    this._init = () => {
      this._initTimer = void 0;
      this._tabster.focusedElement.subscribe(this._onFocus);
    };
    this._onFocus = (e) => {
      if (this._restoreFocusTimer) {
        this._win().clearTimeout(this._restoreFocusTimer);
        this._restoreFocusTimer = void 0;
      }
      if (!e) {
        this._scheduleRestoreFocus();
        return;
      }
      const deloser = this._history.process(e);
      if (deloser) {
        this._activate(deloser);
      } else {
        this._deactivate();
      }
    };
    this._onDeloserDispose = (deloser) => {
      this._history.removeDeloser(deloser);
      if (deloser.isActive()) {
        this._scheduleRestoreFocus();
      }
    };
    this._tabster = tabster;
    this._win = tabster.getWindow;
    this._history = new DeloserHistory(tabster);
    this._initTimer = this._win().setTimeout(this._init, 0);
    const autoDeloser = props === null || props === void 0 ? void 0 : props.autoDeloser;
    if (autoDeloser) {
      this._autoDeloser = autoDeloser;
    }
  }
  dispose() {
    const win = this._win();
    if (this._initTimer) {
      win.clearTimeout(this._initTimer);
      this._initTimer = void 0;
    }
    if (this._restoreFocusTimer) {
      win.clearTimeout(this._restoreFocusTimer);
      this._restoreFocusTimer = void 0;
    }
    if (this._autoDeloserInstance) {
      this._autoDeloserInstance.dispose();
      delete this._autoDeloserInstance;
      delete this._autoDeloser;
    }
    this._tabster.focusedElement.unsubscribe(this._onFocus);
    this._history.dispose();
    delete this._curDeloser;
  }
  createDeloser(element, props) {
    var _a;
    if (true)
      ;
    const deloser = new Deloser(this._tabster, element, this._onDeloserDispose, props);
    if (element.contains((_a = this._tabster.focusedElement.getFocusedElement()) !== null && _a !== void 0 ? _a : null)) {
      this._activate(deloser);
    }
    return deloser;
  }
  getActions(element) {
    for (let e = element; e; e = e.parentElement) {
      const tabsterOnElement = getTabsterOnElement(this._tabster, e);
      if (tabsterOnElement && tabsterOnElement.deloser) {
        return tabsterOnElement.deloser.getActions();
      }
    }
    return void 0;
  }
  pause() {
    this._isPaused = true;
    if (this._restoreFocusTimer) {
      this._win().clearTimeout(this._restoreFocusTimer);
      this._restoreFocusTimer = void 0;
    }
  }
  resume(restore) {
    this._isPaused = false;
    if (restore) {
      this._scheduleRestoreFocus();
    }
  }
  /**
   * Activates and sets the current deloser
   */
  _activate(deloser) {
    const curDeloser = this._curDeloser;
    if (curDeloser !== deloser) {
      this._inDeloser = true;
      curDeloser === null || curDeloser === void 0 ? void 0 : curDeloser.setActive(false);
      deloser.setActive(true);
      this._curDeloser = deloser;
    }
  }
  /**
   * Called when focus should no longer be in a deloser
   */
  _deactivate() {
    var _a;
    this._inDeloser = false;
    (_a = this._curDeloser) === null || _a === void 0 ? void 0 : _a.setActive(false);
    this._curDeloser = void 0;
  }
  _scheduleRestoreFocus(force) {
    if (this._isPaused || this._isRestoringFocus) {
      return;
    }
    const restoreFocus = async () => {
      this._restoreFocusTimer = void 0;
      const lastFocused = this._tabster.focusedElement.getLastFocusedElement();
      if (!force && (this._isRestoringFocus || !this._inDeloser || !!(lastFocused === null || lastFocused === void 0 ? void 0 : lastFocused.offsetParent))) {
        return;
      }
      const curDeloser = this._curDeloser;
      if (curDeloser) {
        if (lastFocused && curDeloser.customFocusLostHandler(lastFocused)) {
          return;
        }
        const el = curDeloser.findAvailable();
        if (el && this._tabster.focusedElement.focus(el)) {
          return;
        }
      }
      this._deactivate();
      this._isRestoringFocus = true;
      if (!await this._history.focusAvailable(null)) {
        await this._history.resetFocus(null);
      }
      this._isRestoringFocus = false;
    };
    if (force) {
      restoreFocus();
    } else {
      this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);
    }
  }
  static getDeloser(tabster, element) {
    var _a;
    let root;
    for (let e = element; e; e = e.parentElement) {
      const tabsterOnElement = getTabsterOnElement(tabster, e);
      if (tabsterOnElement) {
        if (!root) {
          root = tabsterOnElement.root;
        }
        const deloser = tabsterOnElement.deloser;
        if (deloser) {
          return deloser;
        }
      }
    }
    const deloserAPI = tabster.deloser && tabster.deloser;
    if (deloserAPI) {
      if (deloserAPI._autoDeloserInstance) {
        return deloserAPI._autoDeloserInstance;
      }
      const autoDeloserProps = deloserAPI._autoDeloser;
      if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {
        const body = (_a = element.ownerDocument) === null || _a === void 0 ? void 0 : _a.body;
        if (body) {
          deloserAPI._autoDeloserInstance = new Deloser(tabster, body, tabster.deloser._onDeloserDispose, autoDeloserProps);
        }
      }
      return deloserAPI._autoDeloserInstance;
    }
    return void 0;
  }
  static getHistory(instance) {
    return instance._history;
  }
  static forceRestoreFocus(instance) {
    instance._scheduleRestoreFocus(true);
  }
};
var Subscribable = class {
  constructor() {
    this._callbacks = [];
  }
  dispose() {
    this._callbacks = [];
    delete this._val;
  }
  subscribe(callback) {
    const callbacks = this._callbacks;
    const index = callbacks.indexOf(callback);
    if (index < 0) {
      callbacks.push(callback);
    }
  }
  subscribeFirst(callback) {
    const callbacks = this._callbacks;
    const index = callbacks.indexOf(callback);
    if (index >= 0) {
      callbacks.splice(index, 1);
    }
    callbacks.unshift(callback);
  }
  unsubscribe(callback) {
    const index = this._callbacks.indexOf(callback);
    if (index >= 0) {
      this._callbacks.splice(index, 1);
    }
  }
  setVal(val, details) {
    if (this._val === val) {
      return;
    }
    this._val = val;
    this._callCallbacks(val, details);
  }
  getVal() {
    return this._val;
  }
  trigger(val, details) {
    this._callCallbacks(val, details);
  }
  _callCallbacks(val, details) {
    this._callbacks.forEach((callback) => callback(val, details));
  }
};
var _focusableSelector = ["a[href]", "button:not([disabled])", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])", "*[tabindex]", "*[contenteditable]"].join(", ");
var FocusableAPI = class {
  constructor(tabster) {
    this._tabster = tabster;
  }
  dispose() {
  }
  getProps(element) {
    const tabsterOnElement = getTabsterOnElement(this._tabster, element);
    return tabsterOnElement && tabsterOnElement.focusable || {};
  }
  isFocusable(el, includeProgrammaticallyFocusable, noVisibleCheck, noAccessibleCheck) {
    if (matchesSelector(el, _focusableSelector) && (includeProgrammaticallyFocusable || el.tabIndex !== -1)) {
      return (noVisibleCheck || this.isVisible(el)) && (noAccessibleCheck || this.isAccessible(el));
    }
    return false;
  }
  isVisible(el) {
    if (!el.ownerDocument) {
      return false;
    }
    if (el.offsetParent === null && el.ownerDocument.body !== el) {
      return false;
    }
    const win = el.ownerDocument.defaultView;
    if (!win) {
      return false;
    }
    const rect = el.ownerDocument.body.getBoundingClientRect();
    if (rect.width === 0 && rect.height === 0) {
      return false;
    }
    const computedStyle = win.getComputedStyle(el);
    if (computedStyle.visibility === "hidden") {
      return false;
    }
    return true;
  }
  isAccessible(el) {
    var _a;
    for (let e = el; e; e = e.parentElement) {
      const tabsterOnElement = getTabsterOnElement(this._tabster, e);
      if (this._isHidden(e)) {
        return false;
      }
      const ignoreDisabled = (_a = tabsterOnElement === null || tabsterOnElement === void 0 ? void 0 : tabsterOnElement.focusable) === null || _a === void 0 ? void 0 : _a.ignoreAriaDisabled;
      if (!ignoreDisabled && this._isDisabled(e)) {
        return false;
      }
    }
    return true;
  }
  _isDisabled(el) {
    return el.hasAttribute("disabled");
  }
  _isHidden(el) {
    var _a;
    const attrVal = el.getAttribute("aria-hidden");
    if (attrVal && attrVal.toLowerCase() === "true") {
      if (!((_a = this._tabster.modalizer) === null || _a === void 0 ? void 0 : _a.isAugmented(el))) {
        return true;
      }
    }
    return false;
  }
  findFirst(options) {
    return this.findElement({
      ...options
    });
  }
  findLast(options) {
    return this.findElement({
      isBackward: true,
      ...options
    });
  }
  findNext(options) {
    return this.findElement({
      ...options
    });
  }
  findPrev(options) {
    return this.findElement({
      isBackward: true,
      ...options
    });
  }
  findDefault(options) {
    return this.findElement({
      ...options,
      acceptCondition: (el) => this._tabster.focusable.isFocusable(el, options.includeProgrammaticallyFocusable) && !!this.getProps(el).isDefault
    }) || null;
  }
  findAll(options) {
    return this._findElements(true, options) || [];
  }
  findElement(options) {
    const found = this._findElements(false, options);
    return found ? found[0] : found;
  }
  _findElements(findAll, options) {
    var _a, _b, _c;
    const {
      container,
      currentElement = null,
      includeProgrammaticallyFocusable,
      useActiveModalizer,
      ignoreUncontrolled,
      ignoreAccessibility,
      modalizerId,
      isBackward,
      onUncontrolled,
      onElement
    } = options;
    const elements = [];
    let {
      acceptCondition
    } = options;
    if (!container) {
      return null;
    }
    if (!acceptCondition) {
      acceptCondition = (el) => this._tabster.focusable.isFocusable(el, includeProgrammaticallyFocusable, false, ignoreAccessibility);
    }
    const acceptElementState = {
      container,
      modalizerUserId: modalizerId === void 0 && useActiveModalizer ? (_a = this._tabster.modalizer) === null || _a === void 0 ? void 0 : _a.activeId : modalizerId || ((_c = (_b = RootAPI.getTabsterContext(this._tabster, container)) === null || _b === void 0 ? void 0 : _b.modalizer) === null || _c === void 0 ? void 0 : _c.userId),
      from: currentElement || container,
      isBackward,
      acceptCondition,
      includeProgrammaticallyFocusable,
      ignoreUncontrolled,
      ignoreAccessibility,
      cachedGrouppers: {}
    };
    const walker = createElementTreeWalker(container.ownerDocument, container, (node) => this._acceptElement(node, acceptElementState));
    if (!walker) {
      return null;
    }
    const prepareForNextElement = (shouldContinueIfNotFound) => {
      const foundElement2 = acceptElementState.foundElement;
      if (foundElement2) {
        elements.push(foundElement2);
      }
      if (findAll) {
        if (foundElement2) {
          acceptElementState.found = false;
          delete acceptElementState.foundElement;
          delete acceptElementState.fromCtx;
          acceptElementState.from = foundElement2;
          if (onElement && !onElement(foundElement2)) {
            return false;
          }
        }
        return !!(foundElement2 || shouldContinueIfNotFound);
      } else {
        return !!(shouldContinueIfNotFound && !foundElement2);
      }
    };
    if (currentElement) {
      walker.currentNode = currentElement;
    } else if (isBackward) {
      const lastChild = getLastChild(container);
      if (!lastChild) {
        return null;
      }
      if (this._acceptElement(lastChild, acceptElementState) === NodeFilter.FILTER_ACCEPT && !prepareForNextElement(true)) {
        return elements;
      }
      walker.currentNode = lastChild;
    }
    let foundElement;
    do {
      foundElement = (isBackward ? walker.previousNode() : walker.nextNode()) || void 0;
    } while (prepareForNextElement());
    if (!findAll) {
      const nextUncontrolled = acceptElementState.nextUncontrolled;
      if (nextUncontrolled) {
        if (onUncontrolled) {
          onUncontrolled(nextUncontrolled);
        }
        if (foundElement) {
          return void 0;
        } else {
          return null;
        }
      }
    }
    return elements.length ? elements : null;
  }
  _acceptElement(element, state) {
    var _a, _b, _c, _d, _e;
    if (state.found) {
      return NodeFilter.FILTER_ACCEPT;
    }
    const container = state.container;
    if (element === container) {
      return NodeFilter.FILTER_SKIP;
    }
    if (!container.contains(element)) {
      return NodeFilter.FILTER_REJECT;
    }
    if (element.__tabsterDummyContainer) {
      return NodeFilter.FILTER_REJECT;
    }
    let lastToIgnore = state.lastToIgnore;
    if (lastToIgnore) {
      if (lastToIgnore.contains(element)) {
        return NodeFilter.FILTER_REJECT;
      } else {
        lastToIgnore = state.lastToIgnore = void 0;
      }
    }
    const ctx = state.currentCtx = RootAPI.getTabsterContext(this._tabster, element);
    if (!ctx) {
      return NodeFilter.FILTER_SKIP;
    }
    if (state.ignoreUncontrolled) {
      if (shouldIgnoreFocus(element)) {
        return NodeFilter.FILTER_SKIP;
      }
    } else if (ctx.uncontrolled && !state.nextUncontrolled && this._tabster.focusable.isFocusable(element, void 0, true, true)) {
      if (!ctx.groupper && !ctx.mover) {
        if (((_a = ctx.modalizer) === null || _a === void 0 ? void 0 : _a.userId) === ((_b = this._tabster.modalizer) === null || _b === void 0 ? void 0 : _b.activeId)) {
          if (this.isVisible(ctx.uncontrolled)) {
            state.nextUncontrolled = ctx.uncontrolled;
          }
          return NodeFilter.FILTER_REJECT;
        }
      }
    }
    if (element.tagName === "IFRAME" || element.tagName === "WEBVIEW") {
      if (((_c = ctx.modalizer) === null || _c === void 0 ? void 0 : _c.userId) === ((_d = this._tabster.modalizer) === null || _d === void 0 ? void 0 : _d.activeId)) {
        state.found = true;
        state.lastToIgnore = state.foundElement = element;
        return NodeFilter.FILTER_ACCEPT;
      } else {
        return NodeFilter.FILTER_REJECT;
      }
    }
    if (!state.ignoreAccessibility && !this.isAccessible(element)) {
      return NodeFilter.FILTER_REJECT;
    }
    let result;
    let fromCtx = state.fromCtx;
    if (!fromCtx) {
      fromCtx = state.fromCtx = RootAPI.getTabsterContext(this._tabster, state.from);
    }
    const fromMover = fromCtx === null || fromCtx === void 0 ? void 0 : fromCtx.mover;
    let groupper = ctx.groupper;
    let mover = ctx.mover;
    result = (_e = this._tabster.modalizer) === null || _e === void 0 ? void 0 : _e.acceptElement(element, state);
    if (result === void 0 && (groupper || mover || fromMover)) {
      const groupperElement = groupper === null || groupper === void 0 ? void 0 : groupper.getElement();
      const fromMoverElement = fromMover === null || fromMover === void 0 ? void 0 : fromMover.getElement();
      let moverElement = mover === null || mover === void 0 ? void 0 : mover.getElement();
      if (moverElement && fromMoverElement && container.contains(fromMoverElement) && (!groupperElement || !mover || fromMoverElement.contains(groupperElement))) {
        mover = fromMover;
        moverElement = fromMoverElement;
      }
      if (groupperElement && (groupperElement === container || !container.contains(groupperElement))) {
        groupper = void 0;
      }
      if (moverElement && !container.contains(moverElement)) {
        mover = void 0;
      }
      if (groupper && mover) {
        if (moverElement && groupperElement && !groupperElement.contains(moverElement)) {
          mover = void 0;
        } else {
          groupper = void 0;
        }
      }
      if (groupper) {
        result = groupper.acceptElement(element, state);
      }
      if (mover) {
        result = mover.acceptElement(element, state);
      }
    }
    if (result === void 0) {
      result = state.acceptCondition(element) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
    if (result === NodeFilter.FILTER_ACCEPT && !state.found) {
      state.found = true;
      state.foundElement = element;
    }
    return result;
  }
};
var Keys = {
  Tab: 9,
  Enter: 13,
  Esc: 27,
  Space: 32,
  PageUp: 33,
  PageDown: 34,
  End: 35,
  Home: 36,
  Left: 37,
  Up: 38,
  Right: 39,
  Down: 40
};
var FocusedElementState = class extends Subscribable {
  // private _modalAction: ((current: HTMLElement) => boolean) | undefined;
  constructor(tabster, getWindow2) {
    super();
    this._init = () => {
      this._initTimer = void 0;
      const win = this._win();
      const doc = win.document;
      doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);
      doc.addEventListener("focusout", this._onFocusOut, true);
      win.addEventListener("keydown", this._onKeyDown, true);
      const activeElement = doc.activeElement;
      if (activeElement && activeElement !== doc.body) {
        this._setFocusedElement(activeElement);
      }
      this.subscribe(this._onChanged);
    };
    this._onFocusIn = (e) => {
      this._setFocusedElement(e.target, e.details.relatedTarget, e.details.isFocusedProgrammatically);
    };
    this._onFocusOut = (e) => {
      this._setFocusedElement(void 0, e.relatedTarget);
    };
    this._validateFocusedElement = (element) => {
    };
    this._onKeyDown = (e) => {
      var _a, _b, _c, _d, _e, _f;
      if (e.keyCode !== Keys.Tab || e.ctrlKey) {
        return;
      }
      const currentElement = this.getVal();
      if (!currentElement || !currentElement.ownerDocument || currentElement.contentEditable === "true") {
        return;
      }
      const tabster2 = this._tabster;
      const controlTab = tabster2.controlTab;
      const ctx = RootAPI.getTabsterContext(tabster2, currentElement);
      if (!ctx || ctx.ignoreKeydown(e)) {
        return;
      }
      const isBackward = e.shiftKey;
      const next = FocusedElementState.findNextTabbable(tabster2, ctx, void 0, currentElement, isBackward, void 0, true);
      let nextElement;
      if (next) {
        let uncontrolled = next.uncontrolled;
        if (uncontrolled) {
          const isGroupperFirst = ctx.isGroupperFirst;
          let moveOutside = false;
          if (isGroupperFirst !== void 0) {
            const groupper = (_a = ctx.groupper) === null || _a === void 0 ? void 0 : _a.getElement();
            const mover = (_b = ctx.mover) === null || _b === void 0 ? void 0 : _b.getElement();
            let moveFrom;
            if (isGroupperFirst && groupper && uncontrolled.contains(groupper)) {
              moveFrom = groupper;
            } else if (!isGroupperFirst && mover && uncontrolled.contains(mover)) {
              moveFrom = mover;
            }
            if (moveFrom) {
              uncontrolled = moveFrom;
              moveOutside = true;
            }
          }
          if (uncontrolled && ctx.uncontrolled !== uncontrolled) {
            DummyInputManager.moveWithPhantomDummy(this._tabster, uncontrolled, moveOutside, isBackward);
          }
          return;
        }
        nextElement = next.element;
      }
      if (nextElement) {
        const preventDefault = () => {
          e.preventDefault();
          e.stopImmediatePropagation();
        };
        if (!controlTab) {
          const lastMoverOrGroupper = next === null || next === void 0 ? void 0 : next.lastMoverOrGroupper;
          let outOfDOMOrder = next === null || next === void 0 ? void 0 : next.outOfDOMOrder;
          if (!outOfDOMOrder && currentElement.compareDocumentPosition(nextElement) & (isBackward ? document.DOCUMENT_POSITION_FOLLOWING : document.DOCUMENT_POSITION_PRECEDING)) {
            outOfDOMOrder = true;
          }
          if (outOfDOMOrder) {
            preventDefault();
            nativeFocus(nextElement);
          } else if (lastMoverOrGroupper) {
            (_c = lastMoverOrGroupper.dummyManager) === null || _c === void 0 ? void 0 : _c.moveOutWithDefaultAction(isBackward);
          } else if (ctx.modalizer) {
            const nextElementCtx = RootAPI.getTabsterContext(tabster2, nextElement);
            if ((!nextElementCtx || ctx.root.uid !== nextElementCtx.root.uid || !((_d = nextElementCtx.modalizer) === null || _d === void 0 ? void 0 : _d.isActive())) && ctx.modalizer.triggerFocusEvent(ModalizerBeforeFocusOutEventName, true)) {
              preventDefault();
            } else if (!((_e = ctx.modalizer.getElement()) === null || _e === void 0 ? void 0 : _e.contains(nextElement))) {
              preventDefault();
              (_f = ctx.modalizer.dummyManager) === null || _f === void 0 ? void 0 : _f.moveOut(isBackward);
            }
          }
        } else if (nextElement.tagName !== "IFRAME") {
          preventDefault();
          nativeFocus(nextElement);
        }
      } else {
        ctx.root.moveOutWithDefaultAction(isBackward);
      }
    };
    this._onChanged = (element, details) => {
      var _a, _b;
      if (element) {
        triggerEvent(element, FocusInEventName, details);
      } else {
        const last = (_a = this._lastVal) === null || _a === void 0 ? void 0 : _a.get();
        if (last) {
          const d = {
            ...details
          };
          const lastCtx = RootAPI.getTabsterContext(this._tabster, last);
          const modalizerId = (_b = lastCtx === null || lastCtx === void 0 ? void 0 : lastCtx.modalizer) === null || _b === void 0 ? void 0 : _b.userId;
          if (modalizerId) {
            d.modalizerId = modalizerId;
          }
          triggerEvent(last, FocusOutEventName, d);
        }
      }
    };
    this._tabster = tabster;
    this._win = getWindow2;
    this._initTimer = getWindow2().setTimeout(this._init, 0);
  }
  dispose() {
    super.dispose();
    const win = this._win();
    if (this._initTimer) {
      win.clearTimeout(this._initTimer);
      this._initTimer = void 0;
    }
    win.document.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);
    win.document.removeEventListener("focusout", this._onFocusOut, true);
    win.removeEventListener("keydown", this._onKeyDown, true);
    this.unsubscribe(this._onChanged);
    delete FocusedElementState._lastResetElement;
    delete this._nextVal;
    delete this._lastVal;
  }
  static forgetMemorized(instance, parent) {
    var _a, _b;
    let wel = FocusedElementState._lastResetElement;
    let el = wel && wel.get();
    if (el && parent.contains(el)) {
      delete FocusedElementState._lastResetElement;
    }
    el = (_b = (_a = instance._nextVal) === null || _a === void 0 ? void 0 : _a.element) === null || _b === void 0 ? void 0 : _b.get();
    if (el && parent.contains(el)) {
      delete instance._nextVal;
    }
    wel = instance._lastVal;
    el = wel && wel.get();
    if (el && parent.contains(el)) {
      delete instance._lastVal;
    }
  }
  getFocusedElement() {
    return this.getVal();
  }
  getLastFocusedElement() {
    var _a;
    let el = (_a = this._lastVal) === null || _a === void 0 ? void 0 : _a.get();
    if (!el || el && !documentContains(el.ownerDocument, el)) {
      this._lastVal = el = void 0;
    }
    return el;
  }
  focus(element, noFocusedProgrammaticallyFlag, noAccessibleCheck) {
    if (!this._tabster.focusable.isFocusable(element, noFocusedProgrammaticallyFlag, false, noAccessibleCheck)) {
      return false;
    }
    element.focus();
    return true;
  }
  focusDefault(container) {
    const el = this._tabster.focusable.findDefault({
      container
    });
    if (el) {
      this._tabster.focusedElement.focus(el);
      return true;
    }
    return false;
  }
  getFirstOrLastTabbable(isFirst, props) {
    const tabsterFocusable = this._tabster.focusable;
    const {
      container,
      ignoreAccessibility
    } = props;
    let uncontrolled;
    let toFocus;
    if (container) {
      const ctx = RootAPI.getTabsterContext(this._tabster, container);
      if (ctx) {
        let next = FocusedElementState.findNextTabbable(this._tabster, ctx, container, void 0, !isFirst, void 0, ignoreAccessibility);
        if (next) {
          toFocus = next.element;
          uncontrolled = next.uncontrolled;
          while (!toFocus && uncontrolled) {
            if (tabsterFocusable.isFocusable(uncontrolled, false, true, true)) {
              toFocus = uncontrolled;
            } else {
              toFocus = tabsterFocusable[isFirst ? "findFirst" : "findLast"]({
                container: uncontrolled,
                ignoreUncontrolled: true,
                ignoreAccessibility,
                useActiveModalizer: true
              });
            }
            if (!toFocus) {
              next = FocusedElementState.findNextTabbable(this._tabster, ctx, uncontrolled, void 0, !isFirst, void 0, ignoreAccessibility);
              if (next) {
                toFocus = next.element;
                uncontrolled = next.uncontrolled;
              }
            }
          }
        }
      }
    }
    if (toFocus && !(container === null || container === void 0 ? void 0 : container.contains(toFocus))) {
      toFocus = void 0;
    }
    return toFocus || void 0;
  }
  _focusFirstOrLast(isFirst, props) {
    const toFocus = this.getFirstOrLastTabbable(isFirst, props);
    if (toFocus) {
      this.focus(toFocus, false, true);
      return true;
    }
    return false;
  }
  focusFirst(props) {
    return this._focusFirstOrLast(true, props);
  }
  focusLast(props) {
    return this._focusFirstOrLast(false, props);
  }
  resetFocus(container) {
    if (!this._tabster.focusable.isVisible(container)) {
      return false;
    }
    if (!this._tabster.focusable.isFocusable(container, true, true, true)) {
      const prevTabIndex = container.getAttribute("tabindex");
      const prevAriaHidden = container.getAttribute("aria-hidden");
      container.tabIndex = -1;
      container.setAttribute("aria-hidden", "true");
      FocusedElementState._lastResetElement = new WeakHTMLElement(this._win, container);
      this.focus(container, true, true);
      this._setOrRemoveAttribute(container, "tabindex", prevTabIndex);
      this._setOrRemoveAttribute(container, "aria-hidden", prevAriaHidden);
    } else {
      this.focus(container);
    }
    return true;
  }
  _setOrRemoveAttribute(element, name, value) {
    if (value === null) {
      element.removeAttribute(name);
    } else {
      element.setAttribute(name, value);
    }
  }
  _setFocusedElement(element, relatedTarget, isFocusedProgrammatically) {
    var _a, _b;
    if (this._tabster._noop) {
      return;
    }
    const details = {
      relatedTarget
    };
    if (element) {
      const lastResetElement = (_a = FocusedElementState._lastResetElement) === null || _a === void 0 ? void 0 : _a.get();
      FocusedElementState._lastResetElement = void 0;
      if (lastResetElement === element || shouldIgnoreFocus(element)) {
        return;
      }
      details.isFocusedProgrammatically = isFocusedProgrammatically;
      const ctx = RootAPI.getTabsterContext(this._tabster, element);
      const modalizerId = (_b = ctx === null || ctx === void 0 ? void 0 : ctx.modalizer) === null || _b === void 0 ? void 0 : _b.userId;
      if (modalizerId) {
        details.modalizerId = modalizerId;
      }
    }
    const nextVal = this._nextVal = {
      element: element ? new WeakHTMLElement(this._win, element) : void 0,
      details
    };
    if (element && element !== this._val) {
      this._validateFocusedElement(element);
    }
    if (this._nextVal === nextVal) {
      this.setVal(element, details);
    }
    this._nextVal = void 0;
  }
  setVal(val, details) {
    super.setVal(val, details);
    if (val) {
      this._lastVal = new WeakHTMLElement(this._win, val);
    }
  }
  static findNextTabbable(tabster, ctx, container, currentElement, isBackward, ignoreUncontrolled, ignoreAccessibility) {
    const actualContainer = container || ctx.root.getElement();
    if (!actualContainer) {
      return null;
    }
    let next = null;
    const isTabbingTimer = FocusedElementState._isTabbingTimer;
    const win = tabster.getWindow();
    if (isTabbingTimer) {
      win.clearTimeout(isTabbingTimer);
    }
    FocusedElementState.isTabbing = true;
    FocusedElementState._isTabbingTimer = win.setTimeout(() => {
      delete FocusedElementState._isTabbingTimer;
      FocusedElementState.isTabbing = false;
    }, 0);
    const callFindNext = (what, cur) => {
      next = what.findNextTabbable(cur || currentElement, isBackward, ignoreUncontrolled, ignoreAccessibility);
      const lastMoverOrGroupper2 = next === null || next === void 0 ? void 0 : next.lastMoverOrGroupper;
      if (lastMoverOrGroupper2 && !(next === null || next === void 0 ? void 0 : next.element) && !(next === null || next === void 0 ? void 0 : next.uncontrolled)) {
        const lastMoverOrGroupperElement2 = lastMoverOrGroupper2.getElement();
        const parentElement = lastMoverOrGroupperElement2 === null || lastMoverOrGroupperElement2 === void 0 ? void 0 : lastMoverOrGroupperElement2.parentElement;
        const parentCtx = parentElement && RootAPI.getTabsterContext(tabster, parentElement);
        if (parentCtx) {
          const isGroupperFirst = parentCtx.isGroupperFirst;
          const parentMoverOrGroupper = isGroupperFirst ? parentCtx.groupper : parentCtx.mover;
          if (parentMoverOrGroupper) {
            const newCurrent = isBackward ? lastMoverOrGroupperElement2 : getLastChild(lastMoverOrGroupperElement2);
            callFindNext(parentMoverOrGroupper, newCurrent);
            if (next) {
              next.outOfDOMOrder = true;
            }
          }
        }
      }
    };
    const modalizer = ctx.modalizer;
    const groupper = ctx.groupper;
    const mover = ctx.mover;
    if (groupper && mover) {
      callFindNext(ctx.isGroupperFirst ? groupper : mover);
    } else if (groupper) {
      callFindNext(groupper);
    } else if (mover) {
      callFindNext(mover);
    } else if (modalizer) {
      callFindNext(modalizer);
    } else {
      let uncontrolled;
      const onUncontrolled = (el) => {
        uncontrolled = el;
      };
      const nextElement = isBackward ? tabster.focusable.findPrev({
        container: actualContainer,
        currentElement,
        onUncontrolled,
        ignoreUncontrolled,
        ignoreAccessibility,
        useActiveModalizer: true
      }) : tabster.focusable.findNext({
        container: actualContainer,
        currentElement,
        onUncontrolled,
        ignoreUncontrolled,
        ignoreAccessibility,
        useActiveModalizer: true
      });
      next = {
        element: uncontrolled ? void 0 : nextElement,
        uncontrolled
      };
    }
    const lastMoverOrGroupper = next === null || next === void 0 ? void 0 : next.lastMoverOrGroupper;
    const lastMoverOrGroupperElement = lastMoverOrGroupper === null || lastMoverOrGroupper === void 0 ? void 0 : lastMoverOrGroupper.getElement();
    if (lastMoverOrGroupperElement) {
      next = null;
      const adjacentElement = getAdjacentElement(lastMoverOrGroupperElement, isBackward);
      if (adjacentElement) {
        const adjacentCtx = RootAPI.getTabsterContext(tabster, adjacentElement, {
          checkRtl: true
        });
        if (adjacentCtx) {
          let adjacentFrom = getAdjacentElement(adjacentElement, !isBackward);
          if (adjacentFrom) {
            if (!isBackward) {
              adjacentFrom = getLastChild(adjacentFrom) || adjacentFrom;
            }
            next = FocusedElementState.findNextTabbable(tabster, adjacentCtx, actualContainer, adjacentFrom, isBackward, ignoreUncontrolled, ignoreAccessibility);
            if (next && !next.lastMoverOrGroupper) {
              next.lastMoverOrGroupper = lastMoverOrGroupper;
            }
          }
        }
      }
    }
    return next;
  }
};
FocusedElementState.isTabbing = false;
var GroupperDummyManager = class extends DummyInputManager {
  constructor(element, groupper, tabster, sys) {
    super(tabster, element, DummyInputManagerPriorities.Groupper, sys, true);
    this._setHandlers((dummyInput, isBackward, relatedTarget) => {
      var _a, _b;
      const container = element.get();
      const input = dummyInput.input;
      if (container && input) {
        const ctx = RootAPI.getTabsterContext(tabster, input);
        if (ctx) {
          let next;
          next = (_a = groupper.findNextTabbable(relatedTarget || void 0, isBackward, true, true)) === null || _a === void 0 ? void 0 : _a.element;
          if (!next) {
            next = (_b = FocusedElementState.findNextTabbable(tabster, ctx, void 0, dummyInput.isOutside ? input : getAdjacentElement(container, !isBackward), isBackward, true, true)) === null || _b === void 0 ? void 0 : _b.element;
          }
          if (next) {
            nativeFocus(next);
          }
        }
      }
    });
  }
};
var Groupper = class extends TabsterPart {
  constructor(tabster, element, onDispose, props, sys) {
    super(tabster, element, props);
    this._shouldTabInside = false;
    this.makeTabbable(false);
    this._onDispose = onDispose;
    if (!tabster.controlTab) {
      this.dummyManager = new GroupperDummyManager(this._element, this, tabster, sys);
    }
  }
  dispose() {
    var _a;
    this._onDispose(this);
    const element = this._element.get();
    (_a = this.dummyManager) === null || _a === void 0 ? void 0 : _a.dispose();
    if (element) {
      if (true) {
        _setInformativeStyle$1(this._element, true);
      }
    }
    delete this._first;
  }
  findNextTabbable(currentElement, isBackward, ignoreUncontrolled, ignoreAccessibility) {
    var _a;
    const groupperElement = this.getElement();
    if (!groupperElement) {
      return null;
    }
    const currentIsDummy = ((_a = currentElement === null || currentElement === void 0 ? void 0 : currentElement.__tabsterDummyContainer) === null || _a === void 0 ? void 0 : _a.get()) === groupperElement;
    if (!this._shouldTabInside && currentElement && groupperElement.contains(currentElement) && !currentIsDummy) {
      return {
        element: void 0,
        lastMoverOrGroupper: this
      };
    }
    const groupperFirstFocusable = this.getFirst(true);
    if (!currentElement || !groupperElement.contains(currentElement) || currentIsDummy) {
      return {
        element: groupperFirstFocusable,
        lastMoverOrGroupper: groupperFirstFocusable ? void 0 : this
      };
    }
    const tabster = this._tabster;
    let next = null;
    let uncontrolled;
    const onUncontrolled = (el) => {
      uncontrolled = el;
    };
    if (this._shouldTabInside && groupperFirstFocusable) {
      next = isBackward ? tabster.focusable.findPrev({
        container: groupperElement,
        currentElement,
        onUncontrolled,
        ignoreUncontrolled,
        ignoreAccessibility,
        useActiveModalizer: true
      }) : tabster.focusable.findNext({
        container: groupperElement,
        currentElement,
        onUncontrolled,
        ignoreUncontrolled,
        ignoreAccessibility,
        useActiveModalizer: true
      });
      if (!uncontrolled && !next && this._props.tabbability === GroupperTabbabilities.LimitedTrapFocus) {
        next = isBackward ? tabster.focusable.findLast({
          container: groupperElement,
          ignoreUncontrolled: true,
          ignoreAccessibility,
          useActiveModalizer: true
        }) : tabster.focusable.findFirst({
          container: groupperElement,
          ignoreUncontrolled: true,
          ignoreAccessibility,
          useActiveModalizer: true
        });
      }
    }
    return {
      element: next,
      uncontrolled,
      lastMoverOrGroupper: next || uncontrolled ? void 0 : this
    };
  }
  makeTabbable(isTabbable) {
    this._shouldTabInside = isTabbable || !this._props.tabbability;
    if (true) {
      _setInformativeStyle$1(this._element, !this._shouldTabInside);
    }
  }
  isActive(noIfFirstIsFocused) {
    var _a;
    const element = this.getElement() || null;
    let isParentActive = true;
    for (let e = element === null || element === void 0 ? void 0 : element.parentElement; e; e = e.parentElement) {
      const g = (_a = getTabsterOnElement(this._tabster, e)) === null || _a === void 0 ? void 0 : _a.groupper;
      if (g) {
        if (!g._shouldTabInside) {
          isParentActive = false;
        }
      }
    }
    let ret = isParentActive ? this._props.tabbability ? this._shouldTabInside : false : void 0;
    if (ret && noIfFirstIsFocused) {
      const focused = this._tabster.focusedElement.getFocusedElement();
      if (focused) {
        ret = focused !== this.getFirst(true);
      }
    }
    return ret;
  }
  getFirst(orContainer) {
    var _a;
    const groupperElement = this.getElement();
    let first;
    if (groupperElement) {
      if (orContainer && this._tabster.focusable.isFocusable(groupperElement)) {
        return groupperElement;
      }
      first = (_a = this._first) === null || _a === void 0 ? void 0 : _a.get();
      if (!first) {
        first = this._tabster.focusable.findFirst({
          container: groupperElement,
          ignoreUncontrolled: true,
          useActiveModalizer: true
        }) || void 0;
        if (first) {
          this.setFirst(first);
        }
      }
    }
    return first;
  }
  setFirst(element) {
    if (element) {
      this._first = new WeakHTMLElement(this._tabster.getWindow, element);
    } else {
      delete this._first;
    }
  }
  acceptElement(element, state) {
    var _a;
    const cachedGrouppers = state.cachedGrouppers;
    const parentElement = (_a = this.getElement()) === null || _a === void 0 ? void 0 : _a.parentElement;
    const parentCtx = parentElement && RootAPI.getTabsterContext(this._tabster, parentElement);
    const parentCtxGroupper = parentCtx === null || parentCtx === void 0 ? void 0 : parentCtx.groupper;
    const parentGroupper = (parentCtx === null || parentCtx === void 0 ? void 0 : parentCtx.isGroupperFirst) ? parentCtxGroupper : void 0;
    let parentGroupperElement;
    const getIsActive = (groupper) => {
      let cached = cachedGrouppers[groupper.id];
      let isActive2;
      if (cached) {
        isActive2 = cached.isActive;
      } else {
        isActive2 = this.isActive(true);
        cached = cachedGrouppers[groupper.id] = {
          isActive: isActive2
        };
      }
      return isActive2;
    };
    if (parentGroupper) {
      parentGroupperElement = parentGroupper.getElement();
      if (!getIsActive(parentGroupper) && parentGroupperElement && state.container !== parentGroupperElement && state.container.contains(parentGroupperElement)) {
        return NodeFilter.FILTER_REJECT;
      }
    }
    const isActive = getIsActive(this);
    const groupperElement = this.getElement();
    if (groupperElement) {
      if (isActive !== true) {
        if (groupperElement === element && parentCtxGroupper) {
          if (!parentGroupperElement) {
            parentGroupperElement = parentCtxGroupper.getElement();
          }
          if (parentGroupperElement && !getIsActive(parentCtxGroupper) && state.container.contains(parentGroupperElement) && parentGroupperElement !== state.container) {
            return NodeFilter.FILTER_REJECT;
          }
        }
        if (groupperElement !== element && groupperElement.contains(element)) {
          return NodeFilter.FILTER_REJECT;
        }
        const cached = cachedGrouppers[this.id];
        let first;
        if ("first" in cached) {
          first = cached.first;
        } else {
          first = cached.first = this.getFirst(true);
        }
        if (first && state.acceptCondition(first)) {
          state.lastToIgnore = groupperElement;
          if (first !== state.from) {
            state.found = true;
            state.foundElement = first;
            return NodeFilter.FILTER_ACCEPT;
          } else {
            return NodeFilter.FILTER_REJECT;
          }
        }
      }
    }
    return void 0;
  }
};
var GroupperAPI = class {
  constructor(tabster, getWindow2) {
    this._current = {};
    this._grouppers = {};
    this._init = () => {
      this._initTimer = void 0;
      const win = this._win();
      this._tabster.focusedElement.subscribeFirst(this._onFocus);
      win.document.addEventListener("mousedown", this._onMouseDown, true);
      win.addEventListener("keydown", this._onKeyDown, true);
    };
    this._onGroupperDispose = (groupper) => {
      delete this._grouppers[groupper.id];
    };
    this._onFocus = (element) => {
      if (element) {
        this._updateCurrent(element, true, true);
      }
    };
    this._onMouseDown = (e) => {
      if (e.target) {
        this._updateCurrent(e.target, true);
      }
    };
    this._onKeyDown = (event) => {
      if (event.keyCode !== Keys.Enter && event.keyCode !== Keys.Esc) {
        return;
      }
      const element = this._tabster.focusedElement.getFocusedElement();
      if (element) {
        this.handleKeyPress(element, event);
      }
    };
    this._tabster = tabster;
    this._win = getWindow2;
    this._initTimer = getWindow2().setTimeout(this._init, 0);
  }
  dispose() {
    const win = this._win();
    this._current = {};
    if (this._initTimer) {
      win.clearTimeout(this._initTimer);
      delete this._initTimer;
    }
    if (this._updateTimer) {
      win.clearTimeout(this._updateTimer);
      delete this._updateTimer;
    }
    this._tabster.focusedElement.unsubscribe(this._onFocus);
    win.document.removeEventListener("mousedown", this._onMouseDown, true);
    win.removeEventListener("keydown", this._onKeyDown, true);
    Object.keys(this._grouppers).forEach((groupperId) => {
      if (this._grouppers[groupperId]) {
        this._grouppers[groupperId].dispose();
        delete this._grouppers[groupperId];
      }
    });
  }
  createGroupper(element, props, sys) {
    if (true)
      ;
    const newGroupper = new Groupper(this._tabster, element, this._onGroupperDispose, props, sys);
    this._grouppers[newGroupper.id] = newGroupper;
    const focusedElement = this._tabster.focusedElement.getFocusedElement();
    if (focusedElement && element.contains(focusedElement) && !this._updateTimer) {
      this._updateTimer = this._win().setTimeout(() => {
        delete this._updateTimer;
        if (focusedElement === this._tabster.focusedElement.getFocusedElement()) {
          this._updateCurrent(focusedElement, true, true);
        }
      }, 0);
    }
    return newGroupper;
  }
  forgetCurrentGrouppers() {
    this._current = {};
  }
  _updateCurrent(element, includeTarget, checkTarget) {
    var _a;
    if (this._updateTimer) {
      this._win().clearTimeout(this._updateTimer);
      delete this._updateTimer;
    }
    const newIds = {};
    let isTarget = true;
    for (let el = element; el; el = el.parentElement) {
      const groupper = (_a = getTabsterOnElement(this._tabster, el)) === null || _a === void 0 ? void 0 : _a.groupper;
      if (groupper) {
        newIds[groupper.id] = true;
        if (isTarget && checkTarget && el !== element) {
          isTarget = false;
        }
        if (includeTarget || !isTarget) {
          this._current[groupper.id] = groupper;
          const isTabbable = groupper.isActive() || element !== el && (!groupper.getProps().delegated || groupper.getFirst(false) !== element);
          groupper.makeTabbable(isTabbable);
        }
        isTarget = false;
      }
    }
    for (const id of Object.keys(this._current)) {
      const groupper = this._current[id];
      if (!(groupper.id in newIds)) {
        groupper.makeTabbable(false);
        groupper.setFirst(void 0);
        delete this._current[id];
      }
    }
  }
  handleKeyPress(element, event, noGoUp) {
    var _a;
    const tabster = this._tabster;
    const ctx = RootAPI.getTabsterContext(tabster, element);
    const modalizerInGroupper = ctx === null || ctx === void 0 ? void 0 : ctx.modalizerInGroupper;
    let groupper = (ctx === null || ctx === void 0 ? void 0 : ctx.groupper) || modalizerInGroupper;
    if (ctx && groupper) {
      if (ctx.ignoreKeydown(event)) {
        return;
      }
      let next;
      const groupperElement = groupper.getElement();
      if (event.keyCode === Keys.Enter) {
        if (groupperElement && (element === groupperElement || groupper.getProps().delegated && element === groupper.getFirst(false))) {
          next = tabster.focusable.findNext({
            container: groupperElement,
            currentElement: element,
            useActiveModalizer: true
          });
        }
      } else if (event.keyCode === Keys.Esc) {
        if (groupperElement && groupperElement.contains(element)) {
          if (element !== groupperElement || noGoUp) {
            next = groupper.getFirst(true);
          } else {
            const parentElement = groupperElement.parentElement;
            const parentCtx = parentElement ? RootAPI.getTabsterContext(tabster, parentElement) : void 0;
            groupper = parentCtx === null || parentCtx === void 0 ? void 0 : parentCtx.groupper;
            next = groupper === null || groupper === void 0 ? void 0 : groupper.getFirst(true);
          }
        }
        if (groupper) {
          groupper.makeTabbable(false);
          if (modalizerInGroupper) {
            (_a = tabster.modalizer) === null || _a === void 0 ? void 0 : _a.setActive(void 0);
          }
        }
      }
      if (next) {
        event.preventDefault();
        event.stopImmediatePropagation();
        next.focus();
      }
    }
  }
};
function _setInformativeStyle$1(weakElement, remove) {
  if (true) {
    const element = weakElement.get();
    if (element) {
      if (remove) {
        element.style.removeProperty("--tabster-groupper");
      } else {
        element.style.setProperty("--tabster-groupper", "unlimited");
      }
    }
  }
}
var KeyboardNavigationState = class extends Subscribable {
  constructor(getWindow2) {
    super();
    this._onChange = (isNavigatingWithKeyboard) => {
      this.setVal(isNavigatingWithKeyboard, void 0);
    };
    this._keyborg = createKeyborg(getWindow2());
    this._keyborg.subscribe(this._onChange);
  }
  dispose() {
    super.dispose();
    if (this._keyborg) {
      this._keyborg.unsubscribe(this._onChange);
      disposeKeyborg(this._keyborg);
      delete this._keyborg;
    }
  }
  setNavigatingWithKeyboard(isNavigatingWithKeyboard) {
    var _a;
    (_a = this._keyborg) === null || _a === void 0 ? void 0 : _a.setVal(isNavigatingWithKeyboard);
  }
  isNavigatingWithKeyboard() {
    var _a;
    return !!((_a = this._keyborg) === null || _a === void 0 ? void 0 : _a.isNavigatingWithKeyboard());
  }
};
var _wasFocusedCounter = 0;
var _ariaHidden = "aria-hidden";
function _setInformativeStyle(weakElement, remove, internalId, userId, isActive, wasFocused) {
  if (true) {
    const element = weakElement.get();
    if (element) {
      if (remove) {
        element.style.removeProperty("--tabster-modalizer");
      } else {
        element.style.setProperty("--tabster-modalizer", internalId + "," + userId + "," + (isActive ? "active" : "inactive") + ",," + (wasFocused ? `focused(${wasFocused})` : "not-focused"));
      }
    }
  }
}
var ModalizerDummyManager = class extends DummyInputManager {
  constructor(element, tabster, sys) {
    super(tabster, element, DummyInputManagerPriorities.Modalizer, sys);
    this._setHandlers((dummyInput, isBackward) => {
      var _a, _b, _c;
      const el = element.get();
      const container = el && ((_a = RootAPI.getRoot(tabster, el)) === null || _a === void 0 ? void 0 : _a.getElement());
      const input = dummyInput.input;
      let toFocus;
      if (container && input) {
        const dummyContainer = (_b = input.__tabsterDummyContainer) === null || _b === void 0 ? void 0 : _b.get();
        const ctx = RootAPI.getTabsterContext(tabster, dummyContainer || input);
        if (ctx) {
          toFocus = (_c = FocusedElementState.findNextTabbable(tabster, ctx, container, input, isBackward, true, true)) === null || _c === void 0 ? void 0 : _c.element;
        }
        if (toFocus) {
          nativeFocus(toFocus);
        }
      }
    });
  }
};
var Modalizer = class extends TabsterPart {
  constructor(tabster, element, onDispose, props, sys, activeElements) {
    super(tabster, element, props);
    this._wasFocused = 0;
    this.userId = props.id;
    this._onDispose = onDispose;
    this._activeElements = activeElements;
    if (!tabster.controlTab) {
      this.dummyManager = new ModalizerDummyManager(this._element, tabster, sys);
    }
    if (true) {
      _setInformativeStyle(this._element, false, this.id, this.userId, this._isActive, this._wasFocused);
    }
  }
  makeActive(isActive) {
    if (this._isActive !== isActive) {
      this._isActive = isActive;
      const element = this.getElement();
      if (element) {
        const activeElements = this._activeElements;
        const index = activeElements.map((e) => e.deref()).indexOf(element);
        if (isActive) {
          if (index < 0) {
            activeElements.push(new WeakRef(element));
          }
        } else {
          if (index >= 0) {
            activeElements.splice(index, 1);
          }
        }
      }
      if (true) {
        _setInformativeStyle(this._element, false, this.id, this.userId, this._isActive, this._wasFocused);
      }
      this.triggerFocusEvent(isActive ? ModalizerActiveEventName : ModalizerInactiveEventName);
    }
  }
  focused(noIncrement) {
    if (!noIncrement) {
      this._wasFocused = ++_wasFocusedCounter;
    }
    return this._wasFocused;
  }
  setProps(props) {
    if (props.id) {
      this.userId = props.id;
    }
    this._props = {
      ...props
    };
  }
  dispose() {
    var _a;
    this.makeActive(false);
    this._onDispose(this);
    (_a = this.dummyManager) === null || _a === void 0 ? void 0 : _a.dispose();
    this._activeElements = [];
    this._remove();
  }
  isActive() {
    return !!this._isActive;
  }
  contains(element) {
    var _a;
    return !!((_a = this.getElement()) === null || _a === void 0 ? void 0 : _a.contains(element));
  }
  findNextTabbable(currentElement, isBackward, ignoreUncontrolled, ignoreAccessibility) {
    var _a, _b;
    const modalizerElement = this.getElement();
    if (!modalizerElement) {
      return null;
    }
    const tabster = this._tabster;
    let next = null;
    let uncontrolled;
    const onUncontrolled = (el) => {
      uncontrolled = el;
    };
    const container = currentElement && ((_a = RootAPI.getRoot(tabster, currentElement)) === null || _a === void 0 ? void 0 : _a.getElement());
    if (container) {
      next = tabster.focusable[isBackward ? "findPrev" : "findNext"]({
        container,
        currentElement,
        onUncontrolled,
        ignoreUncontrolled,
        ignoreAccessibility,
        useActiveModalizer: true
      });
      if (!uncontrolled && !next && this._props.isTrapped && ((_b = tabster.modalizer) === null || _b === void 0 ? void 0 : _b.activeId)) {
        next = tabster.focusable[isBackward ? "findLast" : "findFirst"]({
          container,
          ignoreUncontrolled: true,
          ignoreAccessibility,
          useActiveModalizer: true
        });
      }
    }
    return {
      element: next,
      uncontrolled
    };
  }
  triggerFocusEvent(eventName, allElements) {
    const element = this.getElement();
    let defaultPrevented = false;
    if (element) {
      const elements = allElements ? this._activeElements.map((e) => e.deref()) : [element];
      for (const el of elements) {
        if (el && !triggerEvent(el, eventName, {
          id: this.userId,
          element,
          eventName
        })) {
          defaultPrevented = true;
        }
      }
    }
    return defaultPrevented;
  }
  _remove() {
    if (true) {
      _setInformativeStyle(this._element, true);
    }
  }
};
var ModalizerAPI = class {
  constructor(tabster) {
    this._init = () => {
      this._initTimer = void 0;
      this._tabster.focusedElement.subscribe(this._onFocus);
    };
    this._onModalizerDispose = (modalizer) => {
      const id = modalizer.id;
      const userId = modalizer.userId;
      const part = this._parts[userId];
      delete this._modalizers[id];
      if (part) {
        delete part[id];
        if (Object.keys(part).length === 0) {
          delete this._parts[userId];
          if (this.activeId === userId) {
            this.setActive(void 0);
          }
        }
      }
    };
    this._onKeyDown = (event) => {
      var _a;
      if (event.keyCode !== Keys.Esc) {
        return;
      }
      const tabster2 = this._tabster;
      const element = tabster2.focusedElement.getFocusedElement();
      if (element) {
        const ctx = RootAPI.getTabsterContext(tabster2, element);
        const modalizer = ctx === null || ctx === void 0 ? void 0 : ctx.modalizer;
        if (ctx && !ctx.groupper && (modalizer === null || modalizer === void 0 ? void 0 : modalizer.isActive()) && !ctx.ignoreKeydown(event)) {
          const activeId = modalizer.userId;
          if (activeId) {
            const part = this._parts[activeId];
            if (part) {
              const focusedSince = Object.keys(part).map((id) => {
                var _a2;
                const m = part[id];
                const el = m.getElement();
                let groupper;
                if (el) {
                  groupper = (_a2 = getTabsterOnElement(this._tabster, el)) === null || _a2 === void 0 ? void 0 : _a2.groupper;
                }
                return m && el && groupper ? {
                  el,
                  focusedSince: m.focused(true)
                } : {
                  focusedSince: 0
                };
              }).filter((f) => f.focusedSince > 0).sort((a, b) => a.focusedSince > b.focusedSince ? -1 : a.focusedSince < b.focusedSince ? 1 : 0);
              if (focusedSince.length) {
                const groupperElement = focusedSince[0].el;
                if (groupperElement) {
                  (_a = tabster2.groupper) === null || _a === void 0 ? void 0 : _a.handleKeyPress(groupperElement, event, true);
                }
              }
            }
          }
        }
      }
    };
    this._onFocus = (focusedElement, details) => {
      var _a, _b;
      const ctx = focusedElement && RootAPI.getTabsterContext(this._tabster, focusedElement);
      if (!ctx || !focusedElement) {
        return;
      }
      const augmentedMap = this._augMap;
      for (let e = focusedElement; e; e = e.parentElement) {
        if (augmentedMap.has(e)) {
          augmentedMap.delete(e);
          augmentAttribute(this._tabster, e, _ariaHidden);
        }
      }
      const modalizer = ctx.modalizer;
      (_b = modalizer || ((_a = getTabsterOnElement(this._tabster, focusedElement)) === null || _a === void 0 ? void 0 : _a.modalizer)) === null || _b === void 0 ? void 0 : _b.focused();
      if ((modalizer === null || modalizer === void 0 ? void 0 : modalizer.userId) === this.activeId) {
        this.currentIsOthersAccessible = modalizer === null || modalizer === void 0 ? void 0 : modalizer.getProps().isOthersAccessible;
        return;
      }
      if (details.isFocusedProgrammatically || this.currentIsOthersAccessible || (modalizer === null || modalizer === void 0 ? void 0 : modalizer.getProps().isAlwaysAccessible)) {
        this.setActive(modalizer);
      } else {
        const win2 = this._win();
        win2.clearTimeout(this._restoreModalizerFocusTimer);
        this._restoreModalizerFocusTimer = win2.setTimeout(() => this._restoreModalizerFocus(focusedElement), 100);
      }
    };
    this._tabster = tabster;
    this._win = tabster.getWindow;
    this._initTimer = this._win().setTimeout(this._init, 0);
    this._modalizers = {};
    this._parts = {};
    this._augMap = /* @__PURE__ */ new WeakMap();
    this._aug = [];
    this.activeElements = [];
    if (!tabster.controlTab) {
      tabster.root.addDummyInputs();
    }
    const win = this._win();
    win.addEventListener("keydown", this._onKeyDown, true);
  }
  dispose() {
    const win = this._win();
    if (this._initTimer) {
      win.clearTimeout(this._initTimer);
      this._initTimer = void 0;
    }
    win.removeEventListener("keydown", this._onKeyDown, true);
    Object.keys(this._modalizers).forEach((modalizerId) => {
      if (this._modalizers[modalizerId]) {
        this._modalizers[modalizerId].dispose();
        delete this._modalizers[modalizerId];
      }
    });
    win.clearTimeout(this._restoreModalizerFocusTimer);
    win.clearTimeout(this._hiddenUpdateTimer);
    this._parts = {};
    delete this.activeId;
    this.activeElements = [];
    this._augMap = /* @__PURE__ */ new WeakMap();
    this._aug = [];
    this._tabster.focusedElement.unsubscribe(this._onFocus);
  }
  createModalizer(element, props, sys) {
    var _a;
    if (true)
      ;
    const modalizer = new Modalizer(this._tabster, element, this._onModalizerDispose, props, sys, this.activeElements);
    const id = modalizer.id;
    const userId = props.id;
    this._modalizers[id] = modalizer;
    let part = this._parts[userId];
    if (!part) {
      part = this._parts[userId] = {};
    }
    part[id] = modalizer;
    if (element.contains((_a = this._tabster.focusedElement.getFocusedElement()) !== null && _a !== void 0 ? _a : null)) {
      if (userId !== this.activeId) {
        this.setActive(modalizer);
      } else {
        modalizer.makeActive(true);
      }
    }
    return modalizer;
  }
  isAugmented(element) {
    return this._augMap.has(element);
  }
  hiddenUpdate() {
    if (this._hiddenUpdateTimer) {
      return;
    }
    this._hiddenUpdateTimer = this._win().setTimeout(() => {
      delete this._hiddenUpdateTimer;
      this._hiddenUpdate();
    }, 250);
  }
  setActive(modalizer) {
    const userId = modalizer === null || modalizer === void 0 ? void 0 : modalizer.userId;
    const activeId = this.activeId;
    if (activeId === userId) {
      return;
    }
    this.activeId = userId;
    if (activeId) {
      const part = this._parts[activeId];
      if (part) {
        for (const id of Object.keys(part)) {
          part[id].makeActive(false);
        }
      }
    }
    if (userId) {
      const part = this._parts[userId];
      if (part) {
        for (const id of Object.keys(part)) {
          part[id].makeActive(true);
        }
      }
    }
    this.currentIsOthersAccessible = modalizer === null || modalizer === void 0 ? void 0 : modalizer.getProps().isOthersAccessible;
    this.hiddenUpdate();
  }
  focus(elementFromModalizer, noFocusFirst, noFocusDefault) {
    const ctx = RootAPI.getTabsterContext(this._tabster, elementFromModalizer);
    const modalizer = ctx === null || ctx === void 0 ? void 0 : ctx.modalizer;
    if (modalizer) {
      this.setActive(modalizer);
      const props = modalizer.getProps();
      const modalizerRoot = modalizer.getElement();
      if (modalizerRoot) {
        if (noFocusFirst === void 0) {
          noFocusFirst = props.isNoFocusFirst;
        }
        if (!noFocusFirst && this._tabster.keyboardNavigation.isNavigatingWithKeyboard() && this._tabster.focusedElement.focusFirst({
          container: modalizerRoot
        })) {
          return true;
        }
        if (noFocusDefault === void 0) {
          noFocusDefault = props.isNoFocusDefault;
        }
        if (!noFocusDefault && this._tabster.focusedElement.focusDefault(modalizerRoot)) {
          return true;
        }
        this._tabster.focusedElement.resetFocus(modalizerRoot);
      }
    } else if (true) {
      console.error("Element is not in Modalizer.", elementFromModalizer);
    }
    return false;
  }
  acceptElement(element, state) {
    var _a;
    const modalizerUserId = state.modalizerUserId;
    const currentModalizer = (_a = state.currentCtx) === null || _a === void 0 ? void 0 : _a.modalizer;
    if (modalizerUserId) {
      for (const e of this.activeElements) {
        const el = e.deref();
        if (el && (element.contains(el) || el === element)) {
          return NodeFilter.FILTER_SKIP;
        }
      }
    }
    return modalizerUserId === (currentModalizer === null || currentModalizer === void 0 ? void 0 : currentModalizer.userId) || !modalizerUserId && (currentModalizer === null || currentModalizer === void 0 ? void 0 : currentModalizer.getProps().isAlwaysAccessible) ? void 0 : NodeFilter.FILTER_SKIP;
  }
  _hiddenUpdate() {
    var _a;
    const tabster = this._tabster;
    const body = tabster.getWindow().document.body;
    const activeId = this.activeId;
    const parts = this._parts;
    const visibleElements = [];
    const hiddenElements = [];
    const alwaysAccessibleElements = [];
    for (const userId of Object.keys(parts)) {
      const mParts = parts[userId];
      for (const id of Object.keys(mParts)) {
        const m = mParts[id];
        const el = m.getElement();
        const props = m.getProps();
        const isAlwaysAccessible = props.isAlwaysAccessible;
        if (el) {
          if (userId === activeId) {
            if (!this.currentIsOthersAccessible) {
              visibleElements.push(el);
            }
          } else if (isAlwaysAccessible) {
            alwaysAccessibleElements.push(el);
          } else {
            hiddenElements.push(el);
          }
        }
      }
    }
    const augmentedMap = this._augMap;
    const allVisibleElements = visibleElements.length > 0 ? [...visibleElements, ...alwaysAccessibleElements] : void 0;
    const newAugmented = [];
    const newAugmentedMap = /* @__PURE__ */ new WeakMap();
    const toggle = (element, hide2) => {
      const tagName = element.tagName;
      if (tagName === "SCRIPT" || tagName === "STYLE") {
        return;
      }
      let isAugmented = false;
      if (augmentedMap.has(element)) {
        if (hide2) {
          isAugmented = true;
        } else {
          augmentedMap.delete(element);
          augmentAttribute(tabster, element, _ariaHidden);
        }
      } else if (hide2 && augmentAttribute(tabster, element, _ariaHidden, "true")) {
        augmentedMap.set(element, true);
        isAugmented = true;
      }
      if (isAugmented) {
        newAugmented.push(new WeakRef(element));
        newAugmentedMap.set(element, true);
      }
    };
    const walk = (element) => {
      for (let el = element.firstElementChild; el; el = el.nextElementSibling) {
        let skip = false;
        let containsModalizer = false;
        if (allVisibleElements) {
          for (const c of allVisibleElements) {
            if (el === c) {
              skip = true;
              break;
            }
            if (el.contains(c)) {
              containsModalizer = true;
              break;
            }
          }
          if (containsModalizer) {
            walk(el);
          } else if (!skip) {
            toggle(el, true);
          }
        } else {
          toggle(el, false);
        }
      }
    };
    if (!allVisibleElements) {
      alwaysAccessibleElements.forEach((e) => toggle(e, false));
    }
    hiddenElements.forEach((e) => toggle(e, true));
    if (body) {
      walk(body);
    }
    (_a = this._aug) === null || _a === void 0 ? void 0 : _a.map((e) => e.deref()).forEach((e) => {
      if (e && !newAugmentedMap.get(e)) {
        toggle(e, false);
      }
    });
    this._aug = newAugmented;
    this._augMap = newAugmentedMap;
  }
  /**
   * Called when an element is focused outside of an active modalizer.
   * Attempts to pull focus back into the active modalizer
   * @param outsideElement - An element being focused outside of the modalizer
   */
  _restoreModalizerFocus(outsideElement) {
    const ownerDocument = outsideElement === null || outsideElement === void 0 ? void 0 : outsideElement.ownerDocument;
    if (!outsideElement || !ownerDocument) {
      return;
    }
    const ctx = RootAPI.getTabsterContext(this._tabster, outsideElement);
    const modalizer = ctx === null || ctx === void 0 ? void 0 : ctx.modalizer;
    const activeId = this.activeId;
    if (!modalizer && !activeId || modalizer && activeId === modalizer.userId) {
      return;
    }
    const container = ctx === null || ctx === void 0 ? void 0 : ctx.root.getElement();
    if (container) {
      let toFocus = this._tabster.focusable.findFirst({
        container,
        ignoreUncontrolled: true,
        useActiveModalizer: true
      });
      if (toFocus) {
        if (outsideElement.compareDocumentPosition(toFocus) & document.DOCUMENT_POSITION_PRECEDING) {
          toFocus = this._tabster.focusable.findLast({
            container,
            ignoreUncontrolled: true,
            useActiveModalizer: true
          });
          if (!toFocus) {
            throw new Error("Something went wrong.");
          }
        }
        this._tabster.focusedElement.focus(toFocus);
        return;
      }
    }
    outsideElement.blur();
  }
};
var _inputSelector = ["input", "textarea", "*[contenteditable]"].join(", ");
var MoverDummyManager = class extends DummyInputManager {
  constructor(element, tabster, getMemorized, sys) {
    super(tabster, element, DummyInputManagerPriorities.Mover, sys);
    this._onFocusDummyInput = (dummyInput) => {
      var _a, _b;
      const container = this._element.get();
      const input = dummyInput.input;
      if (container && input) {
        const ctx = RootAPI.getTabsterContext(this._tabster, container);
        let toFocus;
        if (ctx) {
          toFocus = (_a = FocusedElementState.findNextTabbable(this._tabster, ctx, void 0, input, !dummyInput.isFirst, true)) === null || _a === void 0 ? void 0 : _a.element;
        }
        const memorized = (_b = this._getMemorized()) === null || _b === void 0 ? void 0 : _b.get();
        if (memorized) {
          toFocus = memorized;
        }
        if (toFocus) {
          nativeFocus(toFocus);
        }
      }
    };
    this._tabster = tabster;
    this._getMemorized = getMemorized;
    this._setHandlers(this._onFocusDummyInput);
  }
};
var _moverUpdateAdd = 1;
var _moverUpdateAttr = 2;
var _moverUpdateRemove = 3;
var Mover = class extends TabsterPart {
  constructor(tabster, element, onDispose, props, sys) {
    var _a;
    super(tabster, element, props);
    this._visible = {};
    this._onIntersection = (entries) => {
      for (const entry of entries) {
        const el = entry.target;
        const id = getElementUId(this._win, el);
        let newVisibility;
        let fullyVisible = this._fullyVisible;
        if (entry.intersectionRatio >= 0.25) {
          newVisibility = entry.intersectionRatio >= 0.75 ? Visibilities.Visible : Visibilities.PartiallyVisible;
          if (newVisibility === Visibilities.Visible) {
            fullyVisible = id;
          }
        } else {
          newVisibility = Visibilities.Invisible;
        }
        if (this._visible[id] !== newVisibility) {
          if (newVisibility === void 0) {
            delete this._visible[id];
            if (fullyVisible === id) {
              delete this._fullyVisible;
            }
          } else {
            this._visible[id] = newVisibility;
            this._fullyVisible = fullyVisible;
          }
          const state = this.getState(el);
          if (state) {
            triggerEvent(el, MoverEventName, state);
          }
        }
      }
    };
    this._win = tabster.getWindow;
    this.visibilityTolerance = (_a = props.visibilityTolerance) !== null && _a !== void 0 ? _a : 0.8;
    if (this._props.trackState || this._props.visibilityAware) {
      this._intersectionObserver = new IntersectionObserver(this._onIntersection, {
        threshold: [0, 0.25, 0.5, 0.75, 1]
      });
      this._observeState();
    }
    this._onDispose = onDispose;
    const getMemorized = () => props.memorizeCurrent ? this._current : void 0;
    if (!tabster.controlTab) {
      this.dummyManager = new MoverDummyManager(this._element, tabster, getMemorized, sys);
    }
  }
  dispose() {
    var _a;
    this._onDispose(this);
    if (this._intersectionObserver) {
      this._intersectionObserver.disconnect();
      delete this._intersectionObserver;
    }
    delete this._current;
    delete this._fullyVisible;
    delete this._allElements;
    delete this._updateQueue;
    if (this._unobserve) {
      this._unobserve();
      delete this._unobserve;
    }
    const win = this._win();
    if (this._setCurrentTimer) {
      win.clearTimeout(this._setCurrentTimer);
      delete this._setCurrentTimer;
    }
    if (this._updateTimer) {
      win.clearTimeout(this._updateTimer);
      delete this._updateTimer;
    }
    (_a = this.dummyManager) === null || _a === void 0 ? void 0 : _a.dispose();
  }
  setCurrent(element) {
    if (element) {
      this._current = new WeakHTMLElement(this._win, element);
    } else {
      this._current = void 0;
    }
    if ((this._props.trackState || this._props.visibilityAware) && !this._setCurrentTimer) {
      this._setCurrentTimer = this._win().setTimeout(() => {
        var _a;
        delete this._setCurrentTimer;
        const changed = [];
        if (this._current !== this._prevCurrent) {
          changed.push(this._current);
          changed.push(this._prevCurrent);
          this._prevCurrent = this._current;
        }
        for (const weak of changed) {
          const el = weak === null || weak === void 0 ? void 0 : weak.get();
          if (el && ((_a = this._allElements) === null || _a === void 0 ? void 0 : _a.get(el)) === this) {
            const props = this._props;
            if (el && (props.visibilityAware !== void 0 || props.trackState)) {
              const state = this.getState(el);
              if (state) {
                triggerEvent(el, MoverEventName, state);
              }
            }
          }
        }
      });
    }
  }
  getCurrent() {
    var _a;
    return ((_a = this._current) === null || _a === void 0 ? void 0 : _a.get()) || null;
  }
  findNextTabbable(currentElement, isBackward, ignoreUncontrolled, ignoreAccessibility) {
    var _a;
    const container = this.getElement();
    const currentIsDummy = container && ((_a = currentElement === null || currentElement === void 0 ? void 0 : currentElement.__tabsterDummyContainer) === null || _a === void 0 ? void 0 : _a.get()) === container;
    if (!container) {
      return null;
    }
    const tabster = this._tabster;
    const focusable = tabster.focusable;
    let next = null;
    let uncontrolled;
    const onUncontrolled = (el) => {
      uncontrolled = el;
    };
    if (this._props.tabbable || currentIsDummy || currentElement && !container.contains(currentElement)) {
      next = isBackward ? focusable.findPrev({
        currentElement,
        container,
        onUncontrolled,
        ignoreUncontrolled,
        ignoreAccessibility,
        useActiveModalizer: true
      }) : focusable.findNext({
        currentElement,
        container,
        onUncontrolled,
        ignoreUncontrolled,
        ignoreAccessibility,
        useActiveModalizer: true
      });
    }
    return {
      element: next,
      uncontrolled,
      lastMoverOrGroupper: next || uncontrolled ? void 0 : this
    };
  }
  acceptElement(element, state) {
    var _a, _b, _c;
    if (!FocusedElementState.isTabbing) {
      return ((_a = state.currentCtx) === null || _a === void 0 ? void 0 : _a.isExcludedFromMover) ? NodeFilter.FILTER_REJECT : void 0;
    }
    const {
      memorizeCurrent,
      visibilityAware,
      hasDefault
    } = this._props;
    const moverElement = this.getElement();
    if (moverElement && (memorizeCurrent || visibilityAware || hasDefault) && (!moverElement.contains(state.from) || ((_b = state.from.__tabsterDummyContainer) === null || _b === void 0 ? void 0 : _b.get()) === moverElement)) {
      let found;
      if (memorizeCurrent) {
        const current = (_c = this._current) === null || _c === void 0 ? void 0 : _c.get();
        if (current && state.acceptCondition(current)) {
          found = current;
        }
      }
      if (!found && hasDefault) {
        found = this._tabster.focusable.findDefault({
          container: moverElement,
          ignoreUncontrolled: true,
          useActiveModalizer: true
        });
      }
      if (!found && visibilityAware) {
        found = this._tabster.focusable.findElement({
          container: moverElement,
          ignoreUncontrolled: true,
          useActiveModalizer: true,
          isBackward: state.isBackward,
          acceptCondition: (el) => {
            var _a2;
            const id = getElementUId(this._win, el);
            const visibility = this._visible[id];
            return moverElement !== el && !!((_a2 = this._allElements) === null || _a2 === void 0 ? void 0 : _a2.get(el)) && state.acceptCondition(el) && (visibility === Visibilities.Visible || visibility === Visibilities.PartiallyVisible && (visibilityAware === Visibilities.PartiallyVisible || !this._fullyVisible));
          }
        });
      }
      if (found) {
        state.found = true;
        state.foundElement = found;
        state.lastToIgnore = moverElement;
        return NodeFilter.FILTER_ACCEPT;
      }
    }
    return void 0;
  }
  _observeState() {
    const element = this.getElement();
    if (this._unobserve || !element || typeof MutationObserver === "undefined") {
      return;
    }
    const win = this._win();
    const allElements = this._allElements = /* @__PURE__ */ new WeakMap();
    const tabsterFocusable = this._tabster.focusable;
    let updateQueue = this._updateQueue = [];
    const observer = new MutationObserver((mutations) => {
      for (const mutation of mutations) {
        const target = mutation.target;
        const removed = mutation.removedNodes;
        const added = mutation.addedNodes;
        if (mutation.type === "attributes") {
          if (mutation.attributeName === "tabindex") {
            updateQueue.push({
              element: target,
              type: _moverUpdateAttr
            });
          }
        } else {
          for (let i = 0; i < removed.length; i++) {
            updateQueue.push({
              element: removed[i],
              type: _moverUpdateRemove
            });
          }
          for (let i = 0; i < added.length; i++) {
            updateQueue.push({
              element: added[i],
              type: _moverUpdateAdd
            });
          }
        }
      }
      requestUpdate();
    });
    const setElement = (element2, remove) => {
      var _a, _b;
      const current = allElements.get(element2);
      if (current && remove) {
        (_a = this._intersectionObserver) === null || _a === void 0 ? void 0 : _a.unobserve(element2);
        allElements.delete(element2);
      }
      if (!current && !remove) {
        allElements.set(element2, this);
        (_b = this._intersectionObserver) === null || _b === void 0 ? void 0 : _b.observe(element2);
      }
    };
    const updateElement = (element2) => {
      const isFocusable = tabsterFocusable.isFocusable(element2);
      const current = allElements.get(element2);
      if (current) {
        if (!isFocusable) {
          setElement(element2, true);
        }
      } else {
        if (isFocusable) {
          setElement(element2);
        }
      }
    };
    const addNewElements = (element2) => {
      const {
        mover
      } = getMoverGroupper(element2);
      if (mover && mover !== this) {
        if (mover.getElement() === element2 && tabsterFocusable.isFocusable(element2)) {
          setElement(element2);
        } else {
          return;
        }
      }
      const walker = createElementTreeWalker(win.document, element2, (node) => {
        const {
          mover: mover2,
          groupper
        } = getMoverGroupper(node);
        if (mover2 && mover2 !== this) {
          return NodeFilter.FILTER_REJECT;
        }
        const groupperFirstFocusable = groupper === null || groupper === void 0 ? void 0 : groupper.getFirst(true);
        if (groupper && groupper.getElement() !== node && groupperFirstFocusable && groupperFirstFocusable !== node) {
          return NodeFilter.FILTER_REJECT;
        }
        if (tabsterFocusable.isFocusable(node)) {
          setElement(node);
        }
        return NodeFilter.FILTER_SKIP;
      });
      if (walker) {
        walker.currentNode = element2;
        while (walker.nextNode()) {
        }
      }
    };
    const removeWalk = (element2) => {
      const current = allElements.get(element2);
      if (current) {
        setElement(element2, true);
      }
      for (let el = element2.firstElementChild; el; el = el.nextElementSibling) {
        removeWalk(el);
      }
    };
    const requestUpdate = () => {
      if (!this._updateTimer && updateQueue.length) {
        this._updateTimer = win.setTimeout(() => {
          delete this._updateTimer;
          for (const {
            element: element2,
            type
          } of updateQueue) {
            switch (type) {
              case _moverUpdateAttr:
                updateElement(element2);
                break;
              case _moverUpdateAdd:
                addNewElements(element2);
                break;
              case _moverUpdateRemove:
                removeWalk(element2);
                break;
            }
          }
          updateQueue = this._updateQueue = [];
        }, 0);
      }
    };
    const getMoverGroupper = (element2) => {
      const ret = {};
      for (let el = element2; el; el = el.parentElement) {
        const toe = getTabsterOnElement(this._tabster, el);
        if (toe) {
          if (toe.groupper && !ret.groupper) {
            ret.groupper = toe.groupper;
          }
          if (toe.mover) {
            ret.mover = toe.mover;
            break;
          }
        }
      }
      return ret;
    };
    updateQueue.push({
      element,
      type: _moverUpdateAdd
    });
    requestUpdate();
    observer.observe(element, {
      childList: true,
      subtree: true,
      attributes: true,
      attributeFilter: ["tabindex"]
    });
    this._unobserve = () => {
      observer.disconnect();
    };
  }
  getState(element) {
    const id = getElementUId(this._win, element);
    if (id in this._visible) {
      const visibility = this._visible[id] || Visibilities.Invisible;
      const isCurrent = this._current ? this._current.get() === element : void 0;
      return {
        isCurrent,
        visibility
      };
    }
    return void 0;
  }
};
function getDistance(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2) {
  const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;
  const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;
  return xDistance === 0 ? yDistance : yDistance === 0 ? xDistance : Math.sqrt(xDistance * xDistance + yDistance * yDistance);
}
var MoverAPI = class {
  constructor(tabster, getWindow2) {
    this._init = () => {
      this._initTimer = void 0;
      const win = this._win();
      win.addEventListener("keydown", this._onKeyDown, true);
    };
    this._onMoverDispose = (mover) => {
      delete this._movers[mover.id];
    };
    this._onFocus = (e) => {
      var _a;
      for (let el = e; el; el = el.parentElement) {
        const mover = (_a = getTabsterOnElement(this._tabster, el)) === null || _a === void 0 ? void 0 : _a.mover;
        if (mover) {
          mover.setCurrent(e);
          break;
        }
      }
    };
    this._onKeyDown = async (e) => {
      var _a, _b, _c, _d;
      if (this._ignoredInputTimer) {
        this._win().clearTimeout(this._ignoredInputTimer);
        delete this._ignoredInputTimer;
      }
      (_a = this._ignoredInputResolve) === null || _a === void 0 ? void 0 : _a.call(this, false);
      let keyCode = e.keyCode;
      if (e.ctrlKey) {
        return;
      }
      switch (keyCode) {
        case Keys.Down:
        case Keys.Right:
        case Keys.Up:
        case Keys.Left:
        case Keys.PageDown:
        case Keys.PageUp:
        case Keys.Home:
        case Keys.End:
          break;
        default:
          return;
      }
      const tabster2 = this._tabster;
      const focused = tabster2.focusedElement.getFocusedElement();
      if (!focused || await this._isIgnoredInput(focused, keyCode)) {
        return;
      }
      const ctx = RootAPI.getTabsterContext(tabster2, focused, {
        checkRtl: true
      });
      if (!ctx || !ctx.mover || ctx.isExcludedFromMover || ctx.ignoreKeydown(e)) {
        return;
      }
      const mover = ctx.mover;
      const container = mover.getElement();
      if (ctx.isGroupperFirst) {
        const groupper = ctx.groupper;
        if (groupper && !groupper.isActive(true)) {
          for (let el = (_b = groupper.getElement()) === null || _b === void 0 ? void 0 : _b.parentElement; el && el !== container; el = el.parentElement) {
            if ((_d = (_c = getTabsterOnElement(tabster2, el)) === null || _c === void 0 ? void 0 : _c.groupper) === null || _d === void 0 ? void 0 : _d.isActive(true)) {
              return;
            }
          }
        } else {
          return;
        }
      }
      if (!container) {
        return;
      }
      const focusable = tabster2.focusable;
      const moverProps = mover.getProps();
      const direction = moverProps.direction || MoverDirections.Both;
      const isBoth = direction === MoverDirections.Both;
      const isVertical = isBoth || direction === MoverDirections.Vertical;
      const isHorizontal = isBoth || direction === MoverDirections.Horizontal;
      const isGrid = direction === MoverDirections.Grid;
      const isCyclic = moverProps.cyclic;
      let next;
      let focusedElementRect;
      let focusedElementX1 = 0;
      let focusedElementX2 = 0;
      if (isGrid) {
        focusedElementRect = focused.getBoundingClientRect();
        focusedElementX1 = Math.ceil(focusedElementRect.left);
        focusedElementX2 = Math.floor(focusedElementRect.right);
      }
      if (ctx.isRtl) {
        if (keyCode === Keys.Right) {
          keyCode = Keys.Left;
        } else if (keyCode === Keys.Left) {
          keyCode = Keys.Right;
        }
      }
      if (keyCode === Keys.Down && isVertical || keyCode === Keys.Right && (isHorizontal || isGrid)) {
        next = focusable.findNext({
          currentElement: focused,
          container,
          useActiveModalizer: true
        });
        if (next && isGrid) {
          const nextElementX1 = Math.ceil(next.getBoundingClientRect().left);
          if (focusedElementX2 > nextElementX1) {
            next = void 0;
          }
        } else if (!next && isCyclic) {
          next = focusable.findFirst({
            container,
            ignoreUncontrolled: true,
            useActiveModalizer: true
          });
        }
      } else if (keyCode === Keys.Up && isVertical || keyCode === Keys.Left && (isHorizontal || isGrid)) {
        next = focusable.findPrev({
          currentElement: focused,
          container,
          useActiveModalizer: true
        });
        if (next && isGrid) {
          const nextElementX2 = Math.floor(next.getBoundingClientRect().right);
          if (nextElementX2 > focusedElementX1) {
            next = void 0;
          }
        } else if (!next && isCyclic) {
          next = focusable.findLast({
            container,
            ignoreUncontrolled: true,
            useActiveModalizer: true
          });
        }
      } else if (keyCode === Keys.Home) {
        if (isGrid) {
          focusable.findElement({
            container,
            currentElement: focused,
            ignoreUncontrolled: true,
            useActiveModalizer: true,
            isBackward: true,
            acceptCondition: (el) => {
              var _a2;
              if (!focusable.isFocusable(el)) {
                return false;
              }
              const nextElementX1 = Math.ceil((_a2 = el.getBoundingClientRect().left) !== null && _a2 !== void 0 ? _a2 : 0);
              if (el !== focused && focusedElementX1 <= nextElementX1) {
                return true;
              }
              next = el;
              return false;
            }
          });
        } else {
          next = focusable.findFirst({
            container,
            ignoreUncontrolled: true,
            useActiveModalizer: true
          });
        }
      } else if (keyCode === Keys.End) {
        if (isGrid) {
          focusable.findElement({
            container,
            currentElement: focused,
            ignoreUncontrolled: true,
            useActiveModalizer: true,
            acceptCondition: (el) => {
              var _a2;
              if (!focusable.isFocusable(el)) {
                return false;
              }
              const nextElementX1 = Math.ceil((_a2 = el.getBoundingClientRect().left) !== null && _a2 !== void 0 ? _a2 : 0);
              if (el !== focused && focusedElementX1 >= nextElementX1) {
                return true;
              }
              next = el;
              return false;
            }
          });
        } else {
          next = focusable.findLast({
            container,
            ignoreUncontrolled: true,
            useActiveModalizer: true
          });
        }
      } else if (keyCode === Keys.PageUp) {
        focusable.findElement({
          currentElement: focused,
          container,
          useActiveModalizer: true,
          isBackward: true,
          acceptCondition: (el) => {
            if (!focusable.isFocusable(el)) {
              return false;
            }
            if (isElementVerticallyVisibleInContainer(this._win, el, mover.visibilityTolerance)) {
              next = el;
              return false;
            }
            return true;
          }
        });
        if (isGrid && next) {
          const firstColumnX1 = Math.ceil(next.getBoundingClientRect().left);
          focusable.findElement({
            currentElement: next,
            container,
            useActiveModalizer: true,
            acceptCondition: (el) => {
              if (!focusable.isFocusable(el)) {
                return false;
              }
              const nextElementX1 = Math.ceil(el.getBoundingClientRect().left);
              if (focusedElementX1 < nextElementX1 || firstColumnX1 >= nextElementX1) {
                return true;
              }
              next = el;
              return false;
            }
          });
        }
        if (next) {
          scrollIntoView(this._win, next, false);
        }
      } else if (keyCode === Keys.PageDown) {
        focusable.findElement({
          currentElement: focused,
          container,
          useActiveModalizer: true,
          acceptCondition: (el) => {
            if (!focusable.isFocusable(el)) {
              return false;
            }
            if (isElementVerticallyVisibleInContainer(this._win, el, mover.visibilityTolerance)) {
              next = el;
              return false;
            }
            return true;
          }
        });
        if (isGrid && next) {
          const lastColumnX1 = Math.ceil(next.getBoundingClientRect().left);
          focusable.findElement({
            currentElement: next,
            container,
            useActiveModalizer: true,
            isBackward: true,
            acceptCondition: (el) => {
              if (!focusable.isFocusable(el)) {
                return false;
              }
              const nextElementX1 = Math.ceil(el.getBoundingClientRect().left);
              if (focusedElementX1 > nextElementX1 || lastColumnX1 <= nextElementX1) {
                return true;
              }
              next = el;
              return false;
            }
          });
        }
        if (next) {
          scrollIntoView(this._win, next, true);
        }
      } else if (isGrid) {
        const isBackward = keyCode === Keys.Up;
        const ax1 = focusedElementX1;
        const ay1 = Math.ceil(focusedElementRect.top);
        const ax2 = focusedElementX2;
        const ay2 = Math.floor(focusedElementRect.bottom);
        let targetElement;
        let lastDistance;
        let lastIntersection = 0;
        focusable.findAll({
          container,
          currentElement: focused,
          isBackward,
          onElement: (el) => {
            const rect = el.getBoundingClientRect();
            const bx1 = Math.ceil(rect.left);
            const by1 = Math.ceil(rect.top);
            const bx2 = Math.floor(rect.right);
            const by2 = Math.floor(rect.bottom);
            if (isBackward && ay1 < by2 || !isBackward && ay2 > by1) {
              return true;
            }
            const xIntersectionWidth = Math.ceil(Math.min(ax2, bx2)) - Math.floor(Math.max(ax1, bx1));
            const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));
            if (xIntersectionWidth > 0 && minWidth >= xIntersectionWidth) {
              const intersection = xIntersectionWidth / minWidth;
              if (intersection > lastIntersection) {
                targetElement = el;
                lastIntersection = intersection;
              }
            } else if (lastIntersection === 0) {
              const distance = getDistance(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2);
              if (lastDistance === void 0 || distance < lastDistance) {
                lastDistance = distance;
                targetElement = el;
              }
            } else if (lastIntersection > 0) {
              return false;
            }
            return true;
          }
        });
        next = targetElement;
      }
      if (next) {
        e.preventDefault();
        e.stopImmediatePropagation();
        nativeFocus(next);
      }
    };
    this._tabster = tabster;
    this._win = getWindow2;
    this._initTimer = getWindow2().setTimeout(this._init, 0);
    this._movers = {};
    tabster.focusedElement.subscribe(this._onFocus);
  }
  dispose() {
    var _a;
    const win = this._win();
    this._tabster.focusedElement.unsubscribe(this._onFocus);
    if (this._initTimer) {
      win.clearTimeout(this._initTimer);
      delete this._initTimer;
    }
    (_a = this._ignoredInputResolve) === null || _a === void 0 ? void 0 : _a.call(this, false);
    if (this._ignoredInputTimer) {
      win.clearTimeout(this._ignoredInputTimer);
      delete this._ignoredInputTimer;
    }
    win.removeEventListener("keydown", this._onKeyDown, true);
    Object.keys(this._movers).forEach((moverId) => {
      if (this._movers[moverId]) {
        this._movers[moverId].dispose();
        delete this._movers[moverId];
      }
    });
  }
  createMover(element, props, sys) {
    if (true)
      ;
    const newMover = new Mover(this._tabster, element, this._onMoverDispose, props, sys);
    this._movers[newMover.id] = newMover;
    return newMover;
  }
  async _isIgnoredInput(element, keyCode) {
    var _a;
    if (element.getAttribute("aria-expanded") === "true") {
      return true;
    }
    if (matchesSelector(element, _inputSelector)) {
      let selectionStart = 0;
      let selectionEnd = 0;
      let textLength = 0;
      let asyncRet;
      if (element.tagName === "INPUT" || element.tagName === "TEXTAREA") {
        const type = element.type;
        const value = element.value;
        textLength = (value || "").length;
        if (type === "email" || type === "number") {
          if (textLength) {
            const selection = (_a = element.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.getSelection();
            if (selection) {
              const initialLength = selection.toString().length;
              const isBackward = keyCode === Keys.Left || keyCode === Keys.Up;
              selection.modify("extend", isBackward ? "backward" : "forward", "character");
              if (initialLength !== selection.toString().length) {
                selection.modify("extend", isBackward ? "forward" : "backward", "character");
                return true;
              } else {
                textLength = 0;
              }
            }
          }
        } else {
          const selStart = element.selectionStart;
          if (selStart === null) {
            return type === "hidden";
          }
          selectionStart = selStart || 0;
          selectionEnd = element.selectionEnd || 0;
        }
      } else if (element.contentEditable === "true") {
        asyncRet = new (getPromise(this._win))((resolve) => {
          this._ignoredInputResolve = (value) => {
            delete this._ignoredInputResolve;
            resolve(value);
          };
          const win = this._win();
          if (this._ignoredInputTimer) {
            win.clearTimeout(this._ignoredInputTimer);
          }
          const {
            anchorNode: prevAnchorNode,
            focusNode: prevFocusNode,
            anchorOffset: prevAnchorOffset,
            focusOffset: prevFocusOffset
          } = win.getSelection() || {};
          this._ignoredInputTimer = win.setTimeout(() => {
            var _a2, _b, _c;
            delete this._ignoredInputTimer;
            const {
              anchorNode,
              focusNode,
              anchorOffset,
              focusOffset
            } = win.getSelection() || {};
            if (anchorNode !== prevAnchorNode || focusNode !== prevFocusNode || anchorOffset !== prevAnchorOffset || focusOffset !== prevFocusOffset) {
              (_a2 = this._ignoredInputResolve) === null || _a2 === void 0 ? void 0 : _a2.call(this, false);
              return;
            }
            selectionStart = anchorOffset || 0;
            selectionEnd = focusOffset || 0;
            textLength = ((_b = element.textContent) === null || _b === void 0 ? void 0 : _b.length) || 0;
            if (anchorNode && focusNode) {
              if (element.contains(anchorNode) && element.contains(focusNode)) {
                if (anchorNode !== element) {
                  let anchorFound = false;
                  const addOffsets = (node) => {
                    if (node === anchorNode) {
                      anchorFound = true;
                    } else if (node === focusNode) {
                      return true;
                    }
                    const nodeText = node.textContent;
                    if (nodeText && !node.firstChild) {
                      const len = nodeText.length;
                      if (anchorFound) {
                        if (focusNode !== anchorNode) {
                          selectionEnd += len;
                        }
                      } else {
                        selectionStart += len;
                        selectionEnd += len;
                      }
                    }
                    let stop = false;
                    for (let e = node.firstChild; e && !stop; e = e.nextSibling) {
                      stop = addOffsets(e);
                    }
                    return stop;
                  };
                  addOffsets(element);
                }
              }
            }
            (_c = this._ignoredInputResolve) === null || _c === void 0 ? void 0 : _c.call(this, true);
          }, 0);
        });
      }
      if (asyncRet && !await asyncRet) {
        return true;
      }
      if (selectionStart !== selectionEnd) {
        return true;
      }
      if (selectionStart > 0 && (keyCode === Keys.Left || keyCode === Keys.Up || keyCode === Keys.Home)) {
        return true;
      }
      if (selectionStart < textLength && (keyCode === Keys.Right || keyCode === Keys.Down || keyCode === Keys.End)) {
        return true;
      }
    }
    return false;
  }
};
function observeMutations(doc, tabster, updateTabsterByAttribute2, syncState) {
  if (typeof MutationObserver === "undefined") {
    return () => {
    };
  }
  const getWindow2 = tabster.getWindow;
  let elementByUId;
  const onMutation = (mutations) => {
    var _a, _b, _c, _d, _e;
    for (const mutation of mutations) {
      const target = mutation.target;
      const removed = mutation.removedNodes;
      const added = mutation.addedNodes;
      if (mutation.type === "attributes") {
        if (mutation.attributeName === TabsterAttributeName) {
          updateTabsterByAttribute2(tabster, target);
        }
      } else {
        for (let i = 0; i < removed.length; i++) {
          updateTabsterElements(removed[i], true);
          (_b = (_a = tabster._dummyObserver).domChanged) === null || _b === void 0 ? void 0 : _b.call(_a, target);
        }
        for (let i = 0; i < added.length; i++) {
          updateTabsterElements(added[i]);
          (_d = (_c = tabster._dummyObserver).domChanged) === null || _d === void 0 ? void 0 : _d.call(_c, target);
        }
      }
    }
    (_e = tabster.modalizer) === null || _e === void 0 ? void 0 : _e.hiddenUpdate();
  };
  function updateTabsterElements(node, removed) {
    if (!elementByUId) {
      elementByUId = getInstanceContext(getWindow2).elementByUId;
    }
    processNode(node, removed);
    const walker = createElementTreeWalker(doc, node, (element) => {
      return processNode(element, removed);
    });
    if (walker) {
      while (walker.nextNode()) {
      }
    }
  }
  function processNode(element, removed) {
    var _a;
    if (!element.getAttribute) {
      return NodeFilter.FILTER_SKIP;
    }
    const uid = element.__tabsterElementUID;
    if (uid && elementByUId) {
      if (removed) {
        delete elementByUId[uid];
      } else {
        (_a = elementByUId[uid]) !== null && _a !== void 0 ? _a : elementByUId[uid] = new WeakHTMLElement(getWindow2, element);
      }
    }
    if (getTabsterOnElement(tabster, element) || element.hasAttribute(TabsterAttributeName)) {
      updateTabsterByAttribute2(tabster, element, removed);
    }
    return NodeFilter.FILTER_SKIP;
  }
  const observer = new MutationObserver(onMutation);
  if (syncState) {
    updateTabsterElements(getWindow2().document.body);
  }
  observer.observe(doc, {
    childList: true,
    subtree: true,
    attributes: true,
    attributeFilter: [TabsterAttributeName]
  });
  return () => {
    observer.disconnect();
  };
}
var UncontrolledAPI = class {
  constructor() {
  }
};
var Tabster = class {
  constructor(tabster) {
    this.keyboardNavigation = tabster.keyboardNavigation;
    this.focusedElement = tabster.focusedElement;
    this.focusable = tabster.focusable;
    this.root = tabster.root;
    this.uncontrolled = tabster.uncontrolled;
    this.core = tabster;
  }
};
var TabsterCore = class {
  constructor(win, props) {
    var _a;
    this._forgetMemorizedElements = [];
    this._wrappers = /* @__PURE__ */ new Set();
    this._version = "4.2.0";
    this._noop = false;
    this.getWindow = () => {
      if (!this._win) {
        throw new Error("Using disposed Tabster.");
      }
      return this._win;
    };
    this._storage = createWeakMap(win);
    this._win = win;
    const getWindow2 = this.getWindow;
    this.keyboardNavigation = new KeyboardNavigationState(getWindow2);
    this.focusedElement = new FocusedElementState(this, getWindow2);
    this.focusable = new FocusableAPI(this);
    this.root = new RootAPI(this, props === null || props === void 0 ? void 0 : props.autoRoot);
    this.uncontrolled = new UncontrolledAPI();
    this.controlTab = (_a = props === null || props === void 0 ? void 0 : props.controlTab) !== null && _a !== void 0 ? _a : true;
    this.rootDummyInputs = !!(props === null || props === void 0 ? void 0 : props.rootDummyInputs);
    this._dummyObserver = new DummyInputObserver(getWindow2);
    this.internal = {
      stopObserver: () => {
        if (this._unobserve) {
          this._unobserve();
          delete this._unobserve;
        }
      },
      resumeObserver: (syncState) => {
        if (!this._unobserve) {
          const doc = getWindow2().document;
          this._unobserve = observeMutations(doc, this, updateTabsterByAttribute, syncState);
        }
      }
    };
    startFakeWeakRefsCleanup(getWindow2);
    this._initTimer = win.setTimeout(() => {
      delete this._initTimer;
      this.internal.resumeObserver(true);
    }, 0);
  }
  createTabster(noRefCount) {
    const wrapper = new Tabster(this);
    if (!noRefCount) {
      this._wrappers.add(wrapper);
    }
    return wrapper;
  }
  disposeTabster(wrapper, allInstances) {
    if (allInstances) {
      this._wrappers.clear();
    } else {
      this._wrappers.delete(wrapper);
    }
    if (this._wrappers.size === 0) {
      this.dispose();
    }
  }
  dispose() {
    var _a, _b, _c, _d, _e, _f, _g;
    this.internal.stopObserver();
    const win = this._win;
    win === null || win === void 0 ? void 0 : win.clearTimeout(this._initTimer);
    delete this._initTimer;
    this._forgetMemorizedElements = [];
    if (win && this._forgetMemorizedTimer) {
      win.clearTimeout(this._forgetMemorizedTimer);
      delete this._forgetMemorizedTimer;
    }
    (_a = this.outline) === null || _a === void 0 ? void 0 : _a.dispose();
    (_b = this.crossOrigin) === null || _b === void 0 ? void 0 : _b.dispose();
    (_c = this.deloser) === null || _c === void 0 ? void 0 : _c.dispose();
    (_d = this.groupper) === null || _d === void 0 ? void 0 : _d.dispose();
    (_e = this.mover) === null || _e === void 0 ? void 0 : _e.dispose();
    (_f = this.modalizer) === null || _f === void 0 ? void 0 : _f.dispose();
    (_g = this.observedElement) === null || _g === void 0 ? void 0 : _g.dispose();
    this.keyboardNavigation.dispose();
    this.focusable.dispose();
    this.focusedElement.dispose();
    this.root.dispose();
    this._dummyObserver.dispose();
    stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);
    clearElementCache(this.getWindow);
    this._storage = /* @__PURE__ */ new WeakMap();
    this._wrappers.clear();
    if (win) {
      disposeInstanceContext(win);
      delete win.__tabsterInstance;
      delete this._win;
    }
  }
  storageEntry(element, addremove) {
    const storage = this._storage;
    let entry = storage.get(element);
    if (entry) {
      if (addremove === false && Object.keys(entry).length === 0) {
        storage.delete(element);
      }
    } else if (addremove === true) {
      entry = {};
      storage.set(element, entry);
    }
    return entry;
  }
  forceCleanup() {
    if (!this._win) {
      return;
    }
    this._forgetMemorizedElements.push(this._win.document.body);
    if (this._forgetMemorizedTimer) {
      return;
    }
    this._forgetMemorizedTimer = this._win.setTimeout(() => {
      delete this._forgetMemorizedTimer;
      for (let el = this._forgetMemorizedElements.shift(); el; el = this._forgetMemorizedElements.shift()) {
        clearElementCache(this.getWindow, el);
        FocusedElementState.forgetMemorized(this.focusedElement, el);
      }
    }, 0);
    cleanupFakeWeakRefs(this.getWindow, true);
  }
};
function createTabster(win, props) {
  let tabster = getCurrentTabster(win);
  if (tabster) {
    return tabster.createTabster();
  }
  tabster = new TabsterCore(win, props);
  win.__tabsterInstance = tabster;
  return tabster.createTabster();
}
function getGroupper(tabster) {
  const tabsterCore = tabster.core;
  if (!tabsterCore.groupper) {
    tabsterCore.groupper = new GroupperAPI(tabsterCore, tabsterCore.getWindow);
  }
  return tabsterCore.groupper;
}
function getMover(tabster) {
  const tabsterCore = tabster.core;
  if (!tabsterCore.mover) {
    tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);
  }
  return tabsterCore.mover;
}
function getDeloser(tabster, props) {
  const tabsterCore = tabster.core;
  if (!tabsterCore.deloser) {
    tabsterCore.deloser = new DeloserAPI(tabsterCore, props);
  }
  return tabsterCore.deloser;
}
function getModalizer(tabster) {
  const tabsterCore = tabster.core;
  if (!tabsterCore.modalizer) {
    tabsterCore.modalizer = new ModalizerAPI(tabsterCore);
  }
  return tabsterCore.modalizer;
}
function disposeTabster(tabster, allInstances) {
  tabster.core.disposeTabster(tabster, allInstances);
}
function getCurrentTabster(win) {
  return win.__tabsterInstance;
}

// node_modules/@fluentui/react-tabster/lib/hooks/useTabster.js
var React28 = __toESM(require_react());
var useTabster = () => {
  const {
    targetDocument
  } = useFluent();
  const defaultView = (targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) || void 0;
  const tabster = React28.useMemo(() => {
    if (!defaultView) {
      return null;
    }
    return createTabster(defaultView, {
      autoRoot: {},
      controlTab: false
    });
  }, [defaultView]);
  useIsomorphicLayoutEffect(() => {
    return () => {
      if (tabster) {
        disposeTabster(tabster);
      }
    };
  }, [tabster]);
  return tabster;
};

// node_modules/@fluentui/react-tabster/lib/hooks/useTabsterAttributes.js
var useTabsterAttributes = (props) => {
  useTabster();
  return getTabsterAttribute(props);
};

// node_modules/@fluentui/react-tabster/lib/hooks/useArrowNavigationGroup.js
var useArrowNavigationGroup = (options = {}) => {
  const {
    circular,
    axis,
    memorizeCurrent,
    tabbable,
    ignoreDefaultKeydown,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_hasDefault
  } = options;
  const tabster = useTabster();
  if (tabster) {
    getMover(tabster);
  }
  return useTabsterAttributes({
    mover: {
      cyclic: !!circular,
      direction: axisToMoverDirection(axis !== null && axis !== void 0 ? axis : "vertical"),
      memorizeCurrent,
      tabbable,
      hasDefault: unstable_hasDefault
    },
    ...ignoreDefaultKeydown && {
      focusable: {
        ignoreKeydown: ignoreDefaultKeydown
      }
    }
  });
};
function axisToMoverDirection(axis) {
  switch (axis) {
    case "horizontal":
      return Types.MoverDirections.Horizontal;
    case "grid":
      return Types.MoverDirections.Grid;
    case "both":
      return Types.MoverDirections.Both;
    case "vertical":
    default:
      return Types.MoverDirections.Vertical;
  }
}

// node_modules/@fluentui/react-tabster/lib/hooks/useFocusableGroup.js
var useFocusableGroup = (options) => {
  const tabster = useTabster();
  if (tabster) {
    getGroupper(tabster);
  }
  return useTabsterAttributes({
    groupper: {
      tabbability: getTabbability(options === null || options === void 0 ? void 0 : options.tabBehavior)
    }
  });
};
var getTabbability = (tabBehavior) => {
  switch (tabBehavior) {
    case "unlimited":
      return Types.GroupperTabbabilities.Unlimited;
    case "limited":
      return Types.GroupperTabbabilities.Limited;
    case "limited-trap-focus":
      return Types.GroupperTabbabilities.LimitedTrapFocus;
    default:
      return void 0;
  }
};

// node_modules/@fluentui/react-tabster/lib/hooks/useFocusFinders.js
var React29 = __toESM(require_react());
var useFocusFinders = () => {
  const tabster = useTabster();
  const {
    targetDocument
  } = useFluent();
  const findAllFocusable = React29.useCallback((container, acceptCondition) => {
    return (tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findAll({
      container,
      acceptCondition
    })) || [];
  }, [tabster]);
  const findFirstFocusable = React29.useCallback((container) => {
    return tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findFirst({
      container
    });
  }, [tabster]);
  const findLastFocusable = React29.useCallback((container) => {
    return tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findLast({
      container
    });
  }, [tabster]);
  const findNextFocusable = React29.useCallback((currentElement, options = {}) => {
    if (!tabster || !targetDocument) {
      return null;
    }
    const {
      container = targetDocument.body
    } = options;
    return tabster.focusable.findNext({
      currentElement,
      container
    });
  }, [tabster, targetDocument]);
  const findPrevFocusable = React29.useCallback((currentElement, options = {}) => {
    if (!tabster || !targetDocument) {
      return null;
    }
    const {
      container = targetDocument.body
    } = options;
    return tabster.focusable.findPrev({
      currentElement,
      container
    });
  }, [tabster, targetDocument]);
  return {
    findAllFocusable,
    findFirstFocusable,
    findLastFocusable,
    findNextFocusable,
    findPrevFocusable
  };
};

// node_modules/@fluentui/react-tabster/lib/hooks/useFocusVisible.js
var React30 = __toESM(require_react());

// node_modules/@fluentui/react-tabster/lib/focus/constants.js
var KEYBOARD_NAV_ATTRIBUTE = "data-keyboard-nav";
var KEYBOARD_NAV_SELECTOR = `:global([${KEYBOARD_NAV_ATTRIBUTE}])`;
var FOCUS_VISIBLE_ATTR = "data-fui-focus-visible";
var FOCUS_WITHIN_ATTR = "data-fui-focus-within";
var defaultOptions = {
  style: {},
  selector: "focus"
};

// node_modules/@fluentui/react-tabster/lib/focus/focusVisiblePolyfill.js
function applyFocusVisiblePolyfill(scope, targetWindow) {
  if (alreadyInScope(scope)) {
    return () => void 0;
  }
  const state = {
    current: void 0
  };
  const keyborg = createKeyborg(targetWindow);
  keyborg.subscribe((isNavigatingWithKeyboard) => {
    if (!isNavigatingWithKeyboard && state.current) {
      removeFocusVisibleClass(state.current);
      state.current = void 0;
    }
  });
  const keyborgListener = (e) => {
    if (state.current) {
      removeFocusVisibleClass(state.current);
      state.current = void 0;
    }
    if (keyborg.isNavigatingWithKeyboard() && isHTMLElement(e.target) && e.target) {
      state.current = e.target;
      applyFocusVisibleClass(state.current);
    }
  };
  const blurListener = (e) => {
    if (!e.relatedTarget || isHTMLElement(e.relatedTarget) && !scope.contains(e.relatedTarget)) {
      if (state.current) {
        removeFocusVisibleClass(state.current);
        state.current = void 0;
      }
    }
  };
  scope.addEventListener(KEYBORG_FOCUSIN, keyborgListener);
  scope.addEventListener("focusout", blurListener);
  scope.focusVisible = true;
  return () => {
    scope.removeEventListener(KEYBORG_FOCUSIN, keyborgListener);
    scope.removeEventListener("focusout", blurListener);
    delete scope.focusVisible;
    disposeKeyborg(keyborg);
  };
}
function applyFocusVisibleClass(el) {
  el.setAttribute(FOCUS_VISIBLE_ATTR, "");
}
function removeFocusVisibleClass(el) {
  el.removeAttribute(FOCUS_VISIBLE_ATTR);
}
function alreadyInScope(el) {
  if (!el) {
    return false;
  }
  if (el.focusVisible) {
    return true;
  }
  return alreadyInScope(el === null || el === void 0 ? void 0 : el.parentElement);
}

// node_modules/@fluentui/react-tabster/lib/hooks/useFocusVisible.js
function useFocusVisible(options = {}) {
  const contentValue = useFluent();
  const scopeRef = React30.useRef(null);
  var _options_targetDocument;
  const targetDocument = (_options_targetDocument = options.targetDocument) !== null && _options_targetDocument !== void 0 ? _options_targetDocument : contentValue.targetDocument;
  React30.useEffect(() => {
    if ((targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) && scopeRef.current) {
      return applyFocusVisiblePolyfill(scopeRef.current, targetDocument.defaultView);
    }
  }, [scopeRef, targetDocument]);
  return scopeRef;
}

// node_modules/@fluentui/react-tabster/lib/hooks/useFocusWithin.js
var React31 = __toESM(require_react());

// node_modules/@fluentui/react-tabster/lib/focus/focusWithinPolyfill.js
function applyFocusWithinPolyfill(element, win) {
  const keyborg = createKeyborg(win);
  keyborg.subscribe((isNavigatingWithKeyboard) => {
    if (!isNavigatingWithKeyboard) {
      removeFocusWithinClass(element);
    }
  });
  const keyborgListener = (e) => {
    if (keyborg.isNavigatingWithKeyboard() && isHTMLElement2(e.target)) {
      applyFocusWithinClass(element);
    }
  };
  const blurListener = (e) => {
    if (!e.relatedTarget || isHTMLElement2(e.relatedTarget) && !element.contains(e.relatedTarget)) {
      removeFocusWithinClass(element);
    }
  };
  element.addEventListener(KEYBORG_FOCUSIN, keyborgListener);
  element.addEventListener("focusout", blurListener);
  return () => {
    element.removeEventListener(KEYBORG_FOCUSIN, keyborgListener);
    element.removeEventListener("focusout", blurListener);
    disposeKeyborg(keyborg);
  };
}
function applyFocusWithinClass(el) {
  el.setAttribute(FOCUS_WITHIN_ATTR, "");
}
function removeFocusWithinClass(el) {
  el.removeAttribute(FOCUS_WITHIN_ATTR);
}
function isHTMLElement2(target) {
  if (!target) {
    return false;
  }
  return Boolean(target && typeof target === "object" && "classList" in target && "contains" in target);
}

// node_modules/@fluentui/react-tabster/lib/hooks/useFocusWithin.js
function useFocusWithin() {
  const {
    targetDocument
  } = useFluent();
  const elementRef = React31.useRef(null);
  React31.useEffect(() => {
    if ((targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) && elementRef.current) {
      return applyFocusWithinPolyfill(elementRef.current, targetDocument.defaultView);
    }
  }, [elementRef, targetDocument]);
  return elementRef;
}

// node_modules/@fluentui/react-tabster/lib/hooks/useKeyboardNavAttribute.js
var import_react5 = __toESM(require_react());
function useKeyboardNavAttribute() {
  const {
    targetDocument
  } = useFluent();
  const keyborg = (0, import_react5.useMemo)(() => targetDocument && createKeyborg(targetDocument.defaultView), [targetDocument]);
  const ref = (0, import_react5.useRef)(null);
  (0, import_react5.useEffect)(() => {
    if (keyborg) {
      setBooleanAttribute(ref, KEYBOARD_NAV_ATTRIBUTE, keyborg.isNavigatingWithKeyboard());
      const cb = (next) => {
        setBooleanAttribute(ref, KEYBOARD_NAV_ATTRIBUTE, next);
      };
      keyborg.subscribe(cb);
      return () => keyborg.unsubscribe(cb);
    }
  }, [keyborg]);
  return ref;
}
function setBooleanAttribute(elementRef, attribute, value) {
  if (!elementRef.current) {
    return;
  }
  if (value) {
    elementRef.current.setAttribute(attribute, "");
  } else {
    elementRef.current.removeAttribute(attribute);
  }
}

// node_modules/@fluentui/react-tabster/lib/hooks/useModalAttributes.js
var useModalAttributes = (options = {}) => {
  const {
    trapFocus,
    alwaysFocusable,
    legacyTrapFocus
  } = options;
  const tabster = useTabster();
  if (tabster) {
    getModalizer(tabster);
    getDeloser(tabster);
  }
  const id = useId2("modal-", options.id);
  const modalAttributes = useTabsterAttributes({
    deloser: {},
    modalizer: {
      id,
      isOthersAccessible: !trapFocus,
      isAlwaysAccessible: alwaysFocusable,
      isTrapped: legacyTrapFocus && trapFocus
    }
  });
  const triggerAttributes = useTabsterAttributes({
    deloser: {}
  });
  return {
    modalAttributes,
    triggerAttributes
  };
};

// node_modules/@fluentui/react-tabster/lib/focus/createCustomFocusIndicatorStyle.js
function createCustomFocusIndicatorStyle(style, {
  selector = defaultOptions.selector,
  enableOutline = false
} = defaultOptions) {
  return {
    ":focus": {
      outlineStyle: enableOutline ? void 0 : "none"
    },
    ":focus-visible": {
      outlineStyle: enableOutline ? void 0 : "none"
    },
    ...selector === "focus" && {
      [`&[${FOCUS_VISIBLE_ATTR}]`]: style
    },
    ...selector === "focus-within" && {
      [`&[${FOCUS_WITHIN_ATTR}]:${selector}`]: style
    }
  };
}

// node_modules/@fluentui/tokens/lib/global/colors.js
var grey = {
  "2": "#050505",
  "4": "#0a0a0a",
  "6": "#0f0f0f",
  "8": "#141414",
  "10": "#1a1a1a",
  "12": "#1f1f1f",
  "14": "#242424",
  "16": "#292929",
  "18": "#2e2e2e",
  "20": "#333333",
  "22": "#383838",
  "24": "#3d3d3d",
  "26": "#424242",
  "28": "#474747",
  "30": "#4d4d4d",
  "32": "#525252",
  "34": "#575757",
  "36": "#5c5c5c",
  "38": "#616161",
  "40": "#666666",
  "42": "#6b6b6b",
  "44": "#707070",
  "46": "#757575",
  "48": "#7a7a7a",
  "50": "#808080",
  "52": "#858585",
  "54": "#8a8a8a",
  "56": "#8f8f8f",
  "58": "#949494",
  "60": "#999999",
  "62": "#9e9e9e",
  "64": "#a3a3a3",
  "66": "#a8a8a8",
  "68": "#adadad",
  "70": "#b3b3b3",
  "72": "#b8b8b8",
  "74": "#bdbdbd",
  "76": "#c2c2c2",
  "78": "#c7c7c7",
  "80": "#cccccc",
  "82": "#d1d1d1",
  "84": "#d6d6d6",
  "86": "#dbdbdb",
  "88": "#e0e0e0",
  "90": "#e6e6e6",
  "92": "#ebebeb",
  "94": "#f0f0f0",
  "96": "#f5f5f5",
  "98": "#fafafa"
};
var whiteAlpha = {
  "5": "rgba(255, 255, 255, 0.05)",
  "10": "rgba(255, 255, 255, 0.1)",
  "20": "rgba(255, 255, 255, 0.2)",
  "30": "rgba(255, 255, 255, 0.3)",
  "40": "rgba(255, 255, 255, 0.4)",
  "50": "rgba(255, 255, 255, 0.5)",
  "60": "rgba(255, 255, 255, 0.6)",
  "70": "rgba(255, 255, 255, 0.7)",
  "80": "rgba(255, 255, 255, 0.8)",
  "90": "rgba(255, 255, 255, 0.9)"
};
var blackAlpha = {
  "5": "rgba(0, 0, 0, 0.05)",
  "10": "rgba(0, 0, 0, 0.1)",
  "20": "rgba(0, 0, 0, 0.2)",
  "30": "rgba(0, 0, 0, 0.3)",
  "40": "rgba(0, 0, 0, 0.4)",
  "50": "rgba(0, 0, 0, 0.5)",
  "60": "rgba(0, 0, 0, 0.6)",
  "70": "rgba(0, 0, 0, 0.7)",
  "80": "rgba(0, 0, 0, 0.8)",
  "90": "rgba(0, 0, 0, 0.9)"
};
var grey10Alpha = {
  "5": "rgba(26, 26, 26, 0.05)",
  "10": "rgba(26, 26, 26, 0.1)",
  "20": "rgba(26, 26, 26, 0.2)",
  "30": "rgba(26, 26, 26, 0.3)",
  "40": "rgba(26, 26, 26, 0.4)",
  "50": "rgba(26, 26, 26, 0.5)",
  "60": "rgba(26, 26, 26, 0.6)",
  "70": "rgba(26, 26, 26, 0.7)",
  "80": "rgba(26, 26, 26, 0.8)",
  "90": "rgba(26, 26, 26, 0.9)"
};
var grey12Alpha = {
  "5": "rgba(31, 31, 31, 0.05)",
  "10": "rgba(31, 31, 31, 0.1)",
  "20": "rgba(31, 31, 31, 0.2)",
  "30": "rgba(31, 31, 31, 0.3)",
  "40": "rgba(31, 31, 31, 0.4)",
  "50": "rgba(31, 31, 31, 0.5)",
  "60": "rgba(31, 31, 31, 0.6)",
  "70": "rgba(31, 31, 31, 0.7)",
  "80": "rgba(31, 31, 31, 0.8)",
  "90": "rgba(31, 31, 31, 0.9)"
};
var grey14Alpha = {
  "5": "rgba(36, 36, 36, 0.05)",
  "10": "rgba(36, 36, 36, 0.1)",
  "20": "rgba(36, 36, 36, 0.2)",
  "30": "rgba(36, 36, 36, 0.3)",
  "40": "rgba(36, 36, 36, 0.4)",
  "50": "rgba(36, 36, 36, 0.5)",
  "60": "rgba(36, 36, 36, 0.6)",
  "70": "rgba(36, 36, 36, 0.7)",
  "80": "rgba(36, 36, 36, 0.8)",
  "90": "rgba(36, 36, 36, 0.9)"
};
var white = "#ffffff";
var black = "#000000";
var hcHyperlink = "#ffff00";
var hcHighlight = "#1aebff";
var hcDisabled = "#3ff23f";
var hcCanvas = "#000000";
var hcCanvasText = "#ffffff";
var hcHighlightText = "#000000";
var hcButtonText = "#000000";
var hcButtonFace = "#ffffff";
var darkRed = {
  shade50: "#130204",
  shade40: "#230308",
  shade30: "#420610",
  shade20: "#590815",
  shade10: "#690a19",
  primary: "#750b1c",
  tint10: "#861b2c",
  tint20: "#962f3f",
  tint30: "#ac4f5e",
  tint40: "#d69ca5",
  tint50: "#e9c7cd",
  tint60: "#f9f0f2"
};
var cranberry = {
  shade50: "#200205",
  shade40: "#3b0509",
  shade30: "#6e0811",
  shade20: "#960b18",
  shade10: "#b10e1c",
  primary: "#c50f1f",
  tint10: "#cc2635",
  tint20: "#d33f4c",
  tint30: "#dc626d",
  tint40: "#eeacb2",
  tint50: "#f6d1d5",
  tint60: "#fdf3f4"
};
var red = {
  shade50: "#210809",
  shade40: "#3f1011",
  shade30: "#751d1f",
  shade20: "#9f282b",
  shade10: "#bc2f32",
  primary: "#d13438",
  tint10: "#d7494c",
  tint20: "#dc5e62",
  tint30: "#e37d80",
  tint40: "#f1bbbc",
  tint50: "#f8dadb",
  tint60: "#fdf6f6"
};
var darkOrange = {
  shade50: "#230900",
  shade40: "#411200",
  shade30: "#7a2101",
  shade20: "#a62d01",
  shade10: "#c43501",
  primary: "#da3b01",
  tint10: "#de501c",
  tint20: "#e36537",
  tint30: "#e9835e",
  tint40: "#f4bfab",
  tint50: "#f9dcd1",
  tint60: "#fdf6f3"
};
var pumpkin = {
  shade50: "#200d03",
  shade40: "#3d1805",
  shade30: "#712d09",
  shade20: "#9a3d0c",
  shade10: "#b6480e",
  primary: "#ca5010",
  tint10: "#d06228",
  tint20: "#d77440",
  tint30: "#df8e64",
  tint40: "#efc4ad",
  tint50: "#f7dfd2",
  tint60: "#fdf7f4"
};
var peach = {
  shade50: "#291600",
  shade40: "#4d2a00",
  shade30: "#8f4e00",
  shade20: "#c26a00",
  shade10: "#e67e00",
  primary: "#ff8c00",
  tint10: "#ff9a1f",
  tint20: "#ffa83d",
  tint30: "#ffba66",
  tint40: "#ffddb3",
  tint50: "#ffedd6",
  tint60: "#fffaf5"
};
var marigold = {
  shade50: "#251a00",
  shade40: "#463100",
  shade30: "#835b00",
  shade20: "#b27c00",
  shade10: "#d39300",
  primary: "#eaa300",
  tint10: "#edad1c",
  tint20: "#efb839",
  tint30: "#f2c661",
  tint40: "#f9e2ae",
  tint50: "#fcefd3",
  tint60: "#fefbf4"
};
var yellow = {
  primary: "#fde300",
  shade10: "#e4cc00",
  shade20: "#c0ad00",
  shade30: "#817400",
  shade40: "#4c4400",
  shade50: "#282400",
  tint10: "#fde61e",
  tint20: "#fdea3d",
  tint30: "#feee66",
  tint40: "#fef7b2",
  tint50: "#fffad6",
  tint60: "#fffef5"
};
var gold = {
  shade50: "#1f1900",
  shade40: "#3a2f00",
  shade30: "#6c5700",
  shade20: "#937700",
  shade10: "#ae8c00",
  primary: "#c19c00",
  tint10: "#c8a718",
  tint20: "#d0b232",
  tint30: "#dac157",
  tint40: "#ecdfa5",
  tint50: "#f5eece",
  tint60: "#fdfbf2"
};
var brass = {
  shade50: "#181202",
  shade40: "#2e2103",
  shade30: "#553e06",
  shade20: "#745408",
  shade10: "#89640a",
  primary: "#986f0b",
  tint10: "#a47d1e",
  tint20: "#b18c34",
  tint30: "#c1a256",
  tint40: "#e0cea2",
  tint50: "#efe4cb",
  tint60: "#fbf8f2"
};
var brown = {
  shade50: "#170e07",
  shade40: "#2b1a0e",
  shade30: "#50301a",
  shade20: "#6c4123",
  shade10: "#804d29",
  primary: "#8e562e",
  tint10: "#9c663f",
  tint20: "#a97652",
  tint30: "#bb8f6f",
  tint40: "#ddc3b0",
  tint50: "#edded3",
  tint60: "#faf7f4"
};
var forest = {
  shade50: "#0c1501",
  shade40: "#162702",
  shade30: "#294903",
  shade20: "#376304",
  shade10: "#427505",
  primary: "#498205",
  tint10: "#599116",
  tint20: "#6ba02b",
  tint30: "#85b44c",
  tint40: "#bdd99b",
  tint50: "#dbebc7",
  tint60: "#f6faf0"
};
var seafoam = {
  shade50: "#002111",
  shade40: "#003d20",
  shade30: "#00723b",
  shade20: "#009b51",
  shade10: "#00b85f",
  primary: "#00cc6a",
  tint10: "#19d279",
  tint20: "#34d889",
  tint30: "#5ae0a0",
  tint40: "#a8f0cd",
  tint50: "#cff7e4",
  tint60: "#f3fdf8"
};
var lightGreen = {
  shade50: "#031a02",
  shade40: "#063004",
  shade30: "#0b5a08",
  shade20: "#0e7a0b",
  shade10: "#11910d",
  primary: "#13a10e",
  tint10: "#27ac22",
  tint20: "#3db838",
  tint30: "#5ec75a",
  tint40: "#a7e3a5",
  tint50: "#cef0cd",
  tint60: "#f2fbf2"
};
var green = {
  shade50: "#031403",
  shade40: "#052505",
  shade30: "#094509",
  shade20: "#0c5e0c",
  shade10: "#0e700e",
  primary: "#107c10",
  tint10: "#218c21",
  tint20: "#359b35",
  tint30: "#54b054",
  tint40: "#9fd89f",
  tint50: "#c9eac9",
  tint60: "#f1faf1"
};
var darkGreen = {
  shade50: "#021102",
  shade40: "#032003",
  shade30: "#063b06",
  shade20: "#085108",
  shade10: "#0a5f0a",
  primary: "#0b6a0b",
  tint10: "#1a7c1a",
  tint20: "#2d8e2d",
  tint30: "#4da64d",
  tint40: "#9ad29a",
  tint50: "#c6e7c6",
  tint60: "#f0f9f0"
};
var lightTeal = {
  shade50: "#001d1f",
  shade40: "#00373a",
  shade30: "#00666d",
  shade20: "#008b94",
  shade10: "#00a5af",
  primary: "#00b7c3",
  tint10: "#18bfca",
  tint20: "#32c8d1",
  tint30: "#58d3db",
  tint40: "#a6e9ed",
  tint50: "#cef3f5",
  tint60: "#f2fcfd"
};
var teal = {
  shade50: "#001516",
  shade40: "#012728",
  shade30: "#02494c",
  shade20: "#026467",
  shade10: "#037679",
  primary: "#038387",
  tint10: "#159195",
  tint20: "#2aa0a4",
  tint30: "#4cb4b7",
  tint40: "#9bd9db",
  tint50: "#c7ebec",
  tint60: "#f0fafa"
};
var steel = {
  shade50: "#000f12",
  shade40: "#001b22",
  shade30: "#00333f",
  shade20: "#004555",
  shade10: "#005265",
  primary: "#005b70",
  tint10: "#0f6c81",
  tint20: "#237d92",
  tint30: "#4496a9",
  tint40: "#94c8d4",
  tint50: "#c3e1e8",
  tint60: "#eff7f9"
};
var blue = {
  shade50: "#001322",
  shade40: "#002440",
  shade30: "#004377",
  shade20: "#005ba1",
  shade10: "#006cbf",
  primary: "#0078d4",
  tint10: "#1a86d9",
  tint20: "#3595de",
  tint30: "#5caae5",
  tint40: "#a9d3f2",
  tint50: "#d0e7f8",
  tint60: "#f3f9fd"
};
var royalBlue = {
  shade50: "#000c16",
  shade40: "#00172a",
  shade30: "#002c4e",
  shade20: "#003b6a",
  shade10: "#00467e",
  primary: "#004e8c",
  tint10: "#125e9a",
  tint20: "#286fa8",
  tint30: "#4a89ba",
  tint40: "#9abfdc",
  tint50: "#c7dced",
  tint60: "#f0f6fa"
};
var cornflower = {
  shade50: "#0d1126",
  shade40: "#182047",
  shade30: "#2c3c85",
  shade20: "#3c51b4",
  shade10: "#4760d5",
  primary: "#4f6bed",
  tint10: "#637cef",
  tint20: "#778df1",
  tint30: "#93a4f4",
  tint40: "#c8d1fa",
  tint50: "#e1e6fc",
  tint60: "#f7f9fe"
};
var navy = {
  shade50: "#00061d",
  shade40: "#000c36",
  shade30: "#001665",
  shade20: "#001e89",
  shade10: "#0023a2",
  primary: "#0027b4",
  tint10: "#173bbd",
  tint20: "#3050c6",
  tint30: "#546fd2",
  tint40: "#a3b2e8",
  tint50: "#ccd5f3",
  tint60: "#f2f4fc"
};
var lavender = {
  shade50: "#120f25",
  shade40: "#221d46",
  shade30: "#3f3682",
  shade20: "#5649b0",
  shade10: "#6656d1",
  primary: "#7160e8",
  tint10: "#8172eb",
  tint20: "#9184ee",
  tint30: "#a79cf1",
  tint40: "#d2ccf8",
  tint50: "#e7e4fb",
  tint60: "#f9f8fe"
};
var purple = {
  shade50: "#0f0717",
  shade40: "#1c0e2b",
  shade30: "#341a51",
  shade20: "#46236e",
  shade10: "#532982",
  primary: "#5c2e91",
  tint10: "#6b3f9e",
  tint20: "#7c52ab",
  tint30: "#9470bd",
  tint40: "#c6b1de",
  tint50: "#e0d3ed",
  tint60: "#f7f4fb"
};
var grape = {
  shade50: "#160418",
  shade40: "#29072e",
  shade30: "#4c0d55",
  shade20: "#671174",
  shade10: "#7a1589",
  primary: "#881798",
  tint10: "#952aa4",
  tint20: "#a33fb1",
  tint30: "#b55fc1",
  tint40: "#d9a7e0",
  tint50: "#eaceef",
  tint60: "#faf2fb"
};
var berry = {
  shade50: "#1f091d",
  shade40: "#3a1136",
  shade30: "#6d2064",
  shade20: "#932b88",
  shade10: "#af33a1",
  primary: "#c239b3",
  tint10: "#c94cbc",
  tint20: "#d161c4",
  tint30: "#da7ed0",
  tint40: "#edbbe7",
  tint50: "#f5daf2",
  tint60: "#fdf5fc"
};
var lilac = {
  shade50: "#1c0b1f",
  shade40: "#35153a",
  shade30: "#63276d",
  shade20: "#863593",
  shade10: "#9f3faf",
  primary: "#b146c2",
  tint10: "#ba58c9",
  tint20: "#c36bd1",
  tint30: "#cf87da",
  tint40: "#e6bfed",
  tint50: "#f2dcf5",
  tint60: "#fcf6fd"
};
var pink = {
  shade50: "#24091b",
  shade40: "#441232",
  shade30: "#80215d",
  shade20: "#ad2d7e",
  shade10: "#cd3595",
  primary: "#e43ba6",
  tint10: "#e750b0",
  tint20: "#ea66ba",
  tint30: "#ef85c8",
  tint40: "#f7c0e3",
  tint50: "#fbddf0",
  tint60: "#fef6fb"
};
var magenta = {
  shade50: "#1f0013",
  shade40: "#390024",
  shade30: "#6b0043",
  shade20: "#91005a",
  shade10: "#ac006b",
  primary: "#bf0077",
  tint10: "#c71885",
  tint20: "#ce3293",
  tint30: "#d957a8",
  tint40: "#eca5d1",
  tint50: "#f5cee6",
  tint60: "#fcf2f9"
};
var plum = {
  shade50: "#13000c",
  shade40: "#240017",
  shade30: "#43002b",
  shade20: "#5a003b",
  shade10: "#6b0045",
  primary: "#77004d",
  tint10: "#87105d",
  tint20: "#98246f",
  tint30: "#ad4589",
  tint40: "#d696c0",
  tint50: "#e9c4dc",
  tint60: "#faf0f6"
};
var beige = {
  shade50: "#141313",
  shade40: "#252323",
  shade30: "#444241",
  shade20: "#5d5958",
  shade10: "#6e6968",
  primary: "#7a7574",
  tint10: "#8a8584",
  tint20: "#9a9594",
  tint30: "#afabaa",
  tint40: "#d7d4d4",
  tint50: "#eae8e8",
  tint60: "#faf9f9"
};
var mink = {
  shade50: "#0f0e0e",
  shade40: "#1c1b1a",
  shade30: "#343231",
  shade20: "#474443",
  shade10: "#54514f",
  primary: "#5d5a58",
  tint10: "#706d6b",
  tint20: "#84817e",
  tint30: "#9e9b99",
  tint40: "#cecccb",
  tint50: "#e5e4e3",
  tint60: "#f8f8f8"
};
var platinum = {
  shade50: "#111314",
  shade40: "#1f2426",
  shade30: "#3b4447",
  shade20: "#505c60",
  shade10: "#5f6d71",
  primary: "#69797e",
  tint10: "#79898d",
  tint20: "#89989d",
  tint30: "#a0adb2",
  tint40: "#cdd6d8",
  tint50: "#e4e9ea",
  tint60: "#f8f9fa"
};
var anchor = {
  shade50: "#090a0b",
  shade40: "#111315",
  shade30: "#202427",
  shade20: "#2b3135",
  shade10: "#333a3f",
  primary: "#394146",
  tint10: "#4d565c",
  tint20: "#626c72",
  tint30: "#808a90",
  tint40: "#bcc3c7",
  tint50: "#dbdfe1",
  tint60: "#f6f7f8"
};

// node_modules/@fluentui/tokens/lib/global/colorPalette.js
var statusSharedColors = {
  red,
  green,
  darkOrange,
  yellow,
  berry,
  lightGreen,
  marigold
};
var personaSharedColors = {
  darkRed,
  cranberry,
  pumpkin,
  peach,
  gold,
  brass,
  brown,
  forest,
  seafoam,
  darkGreen,
  lightTeal,
  teal,
  steel,
  blue,
  royalBlue,
  cornflower,
  navy,
  lavender,
  purple,
  grape,
  lilac,
  pink,
  magenta,
  plum,
  beige,
  mink,
  platinum,
  anchor
};

// node_modules/@fluentui/tokens/lib/sharedColorNames.js
var statusSharedColorNames = ["red", "green", "darkOrange", "yellow", "berry", "lightGreen", "marigold"];
var personaSharedColorNames = ["darkRed", "cranberry", "pumpkin", "peach", "gold", "brass", "brown", "forest", "seafoam", "darkGreen", "lightTeal", "teal", "steel", "blue", "royalBlue", "cornflower", "navy", "lavender", "purple", "grape", "lilac", "pink", "magenta", "plum", "beige", "mink", "platinum", "anchor"];

// node_modules/@fluentui/tokens/lib/alias/lightColorPalette.js
var statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background1`]: statusSharedColors[sharedColor].tint60,
    [`colorPalette${color}Background2`]: statusSharedColors[sharedColor].tint40,
    [`colorPalette${color}Background3`]: statusSharedColors[sharedColor].primary,
    [`colorPalette${color}Foreground1`]: statusSharedColors[sharedColor].shade10,
    [`colorPalette${color}Foreground2`]: statusSharedColors[sharedColor].shade30,
    [`colorPalette${color}Foreground3`]: statusSharedColors[sharedColor].primary,
    [`colorPalette${color}BorderActive`]: statusSharedColors[sharedColor].primary,
    [`colorPalette${color}Border1`]: statusSharedColors[sharedColor].tint40,
    [`colorPalette${color}Border2`]: statusSharedColors[sharedColor].primary
  };
  return Object.assign(acc, sharedColorTokens);
}, {});
statusColorPaletteTokens.colorPaletteYellowForeground1 = statusSharedColors.yellow.shade30;
statusColorPaletteTokens.colorPaletteRedForegroundInverted = statusSharedColors.red.tint20;
statusColorPaletteTokens.colorPaletteGreenForegroundInverted = statusSharedColors.green.tint20;
statusColorPaletteTokens.colorPaletteYellowForegroundInverted = statusSharedColors.yellow.tint40;
var personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background2`]: personaSharedColors[sharedColor].tint40,
    [`colorPalette${color}Foreground2`]: personaSharedColors[sharedColor].shade30,
    [`colorPalette${color}BorderActive`]: personaSharedColors[sharedColor].primary
  };
  return Object.assign(acc, sharedColorTokens);
}, {});
var colorPaletteTokens = {
  ...statusColorPaletteTokens,
  ...personaColorPaletteTokens
};

// node_modules/@fluentui/tokens/lib/alias/lightColor.js
var generateColorTokens = (brand) => ({
  colorNeutralForeground1: grey[14],
  colorNeutralForeground1Hover: grey[14],
  colorNeutralForeground1Pressed: grey[14],
  colorNeutralForeground1Selected: grey[14],
  colorNeutralForeground2: grey[26],
  colorNeutralForeground2Hover: grey[14],
  colorNeutralForeground2Pressed: grey[14],
  colorNeutralForeground2Selected: grey[14],
  colorNeutralForeground2BrandHover: brand[80],
  colorNeutralForeground2BrandPressed: brand[70],
  colorNeutralForeground2BrandSelected: brand[80],
  colorNeutralForeground3: grey[38],
  colorNeutralForeground3Hover: grey[26],
  colorNeutralForeground3Pressed: grey[26],
  colorNeutralForeground3Selected: grey[26],
  colorNeutralForeground3BrandHover: brand[80],
  colorNeutralForeground3BrandPressed: brand[70],
  colorNeutralForeground3BrandSelected: brand[80],
  colorNeutralForeground4: grey[44],
  colorNeutralForegroundDisabled: grey[74],
  colorNeutralForegroundInvertedDisabled: whiteAlpha[40],
  colorBrandForegroundLink: brand[70],
  colorBrandForegroundLinkHover: brand[60],
  colorBrandForegroundLinkPressed: brand[40],
  colorBrandForegroundLinkSelected: brand[70],
  colorNeutralForeground2Link: grey[26],
  colorNeutralForeground2LinkHover: grey[14],
  colorNeutralForeground2LinkPressed: grey[14],
  colorNeutralForeground2LinkSelected: grey[14],
  colorCompoundBrandForeground1: brand[80],
  colorCompoundBrandForeground1Hover: brand[70],
  colorCompoundBrandForeground1Pressed: brand[60],
  colorBrandForeground1: brand[80],
  colorBrandForeground2: brand[70],
  colorNeutralForeground1Static: grey[14],
  colorNeutralForegroundStaticInverted: white,
  colorNeutralForegroundInverted: white,
  colorNeutralForegroundInvertedHover: white,
  colorNeutralForegroundInvertedPressed: white,
  colorNeutralForegroundInvertedSelected: white,
  colorNeutralForegroundInverted2: white,
  colorNeutralForegroundOnBrand: white,
  colorNeutralForegroundInvertedLink: white,
  colorNeutralForegroundInvertedLinkHover: white,
  colorNeutralForegroundInvertedLinkPressed: white,
  colorNeutralForegroundInvertedLinkSelected: white,
  colorBrandForegroundInverted: brand[100],
  colorBrandForegroundInvertedHover: brand[110],
  colorBrandForegroundInvertedPressed: brand[100],
  colorBrandForegroundOnLight: brand[80],
  colorBrandForegroundOnLightHover: brand[70],
  colorBrandForegroundOnLightPressed: brand[50],
  colorBrandForegroundOnLightSelected: brand[60],
  colorNeutralBackground1: white,
  colorNeutralBackground1Hover: grey[96],
  colorNeutralBackground1Pressed: grey[88],
  colorNeutralBackground1Selected: grey[92],
  colorNeutralBackground2: grey[98],
  colorNeutralBackground2Hover: grey[94],
  colorNeutralBackground2Pressed: grey[86],
  colorNeutralBackground2Selected: grey[90],
  colorNeutralBackground3: grey[96],
  colorNeutralBackground3Hover: grey[92],
  colorNeutralBackground3Pressed: grey[84],
  colorNeutralBackground3Selected: grey[88],
  colorNeutralBackground4: grey[94],
  colorNeutralBackground4Hover: grey[98],
  colorNeutralBackground4Pressed: grey[96],
  colorNeutralBackground4Selected: white,
  colorNeutralBackground5: grey[92],
  colorNeutralBackground5Hover: grey[96],
  colorNeutralBackground5Pressed: grey[94],
  colorNeutralBackground5Selected: grey[98],
  colorNeutralBackground6: grey[90],
  colorNeutralBackgroundInverted: grey[16],
  colorNeutralBackgroundStatic: grey[20],
  colorNeutralBackgroundAlpha: whiteAlpha[50],
  colorNeutralBackgroundAlpha2: whiteAlpha[80],
  colorSubtleBackground: "transparent",
  colorSubtleBackgroundHover: grey[96],
  colorSubtleBackgroundPressed: grey[88],
  colorSubtleBackgroundSelected: grey[92],
  colorSubtleBackgroundLightAlphaHover: whiteAlpha[70],
  colorSubtleBackgroundLightAlphaPressed: whiteAlpha[50],
  colorSubtleBackgroundLightAlphaSelected: "transparent",
  colorSubtleBackgroundInverted: "transparent",
  colorSubtleBackgroundInvertedHover: blackAlpha[10],
  colorSubtleBackgroundInvertedPressed: blackAlpha[30],
  colorSubtleBackgroundInvertedSelected: blackAlpha[20],
  colorTransparentBackground: "transparent",
  colorTransparentBackgroundHover: "transparent",
  colorTransparentBackgroundPressed: "transparent",
  colorTransparentBackgroundSelected: "transparent",
  colorNeutralBackgroundDisabled: grey[94],
  colorNeutralBackgroundInvertedDisabled: whiteAlpha[10],
  colorNeutralStencil1: grey[90],
  colorNeutralStencil2: grey[98],
  colorNeutralStencil1Alpha: blackAlpha[10],
  colorNeutralStencil2Alpha: blackAlpha[5],
  colorBackgroundOverlay: blackAlpha[40],
  colorScrollbarOverlay: blackAlpha[50],
  colorBrandBackground: brand[80],
  colorBrandBackgroundHover: brand[70],
  colorBrandBackgroundPressed: brand[40],
  colorBrandBackgroundSelected: brand[60],
  colorCompoundBrandBackground: brand[80],
  colorCompoundBrandBackgroundHover: brand[70],
  colorCompoundBrandBackgroundPressed: brand[60],
  colorBrandBackgroundStatic: brand[80],
  colorBrandBackground2: brand[160],
  colorBrandBackgroundInverted: white,
  colorBrandBackgroundInvertedHover: brand[160],
  colorBrandBackgroundInvertedPressed: brand[140],
  colorBrandBackgroundInvertedSelected: brand[150],
  colorNeutralStrokeAccessible: grey[38],
  colorNeutralStrokeAccessibleHover: grey[34],
  colorNeutralStrokeAccessiblePressed: grey[30],
  colorNeutralStrokeAccessibleSelected: brand[80],
  colorNeutralStroke1: grey[82],
  colorNeutralStroke1Hover: grey[78],
  colorNeutralStroke1Pressed: grey[70],
  colorNeutralStroke1Selected: grey[74],
  colorNeutralStroke2: grey[88],
  colorNeutralStroke3: grey[94],
  colorNeutralStrokeOnBrand: white,
  colorNeutralStrokeOnBrand2: white,
  colorNeutralStrokeOnBrand2Hover: white,
  colorNeutralStrokeOnBrand2Pressed: white,
  colorNeutralStrokeOnBrand2Selected: white,
  colorBrandStroke1: brand[80],
  colorBrandStroke2: brand[140],
  colorCompoundBrandStroke: brand[80],
  colorCompoundBrandStrokeHover: brand[70],
  colorCompoundBrandStrokePressed: brand[60],
  colorNeutralStrokeDisabled: grey[88],
  colorNeutralStrokeInvertedDisabled: whiteAlpha[40],
  colorTransparentStroke: "transparent",
  colorTransparentStrokeInteractive: "transparent",
  colorTransparentStrokeDisabled: "transparent",
  colorNeutralStrokeAlpha: blackAlpha[5],
  colorStrokeFocus1: white,
  colorStrokeFocus2: black,
  colorNeutralShadowAmbient: "rgba(0,0,0,0.12)",
  colorNeutralShadowKey: "rgba(0,0,0,0.14)",
  colorNeutralShadowAmbientLighter: "rgba(0,0,0,0.06)",
  colorNeutralShadowKeyLighter: "rgba(0,0,0,0.07)",
  colorNeutralShadowAmbientDarker: "rgba(0,0,0,0.20)",
  colorNeutralShadowKeyDarker: "rgba(0,0,0,0.24)",
  colorBrandShadowAmbient: "rgba(0,0,0,0.30)",
  colorBrandShadowKey: "rgba(0,0,0,0.25)"
});

// node_modules/@fluentui/tokens/lib/global/borderRadius.js
var borderRadius = {
  borderRadiusNone: "0",
  borderRadiusSmall: "2px",
  borderRadiusMedium: "4px",
  borderRadiusLarge: "6px",
  borderRadiusXLarge: "8px",
  borderRadiusCircular: "10000px"
};

// node_modules/@fluentui/tokens/lib/global/curves.js
var curves = {
  curveAccelerateMax: "cubic-bezier(1,0,1,1)",
  curveAccelerateMid: "cubic-bezier(0.7,0,1,0.5)",
  curveAccelerateMin: "cubic-bezier(0.8,0,1,1)",
  curveDecelerateMax: "cubic-bezier(0,0,0,1)",
  curveDecelerateMid: "cubic-bezier(0.1,0.9,0.2,1)",
  curveDecelerateMin: "cubic-bezier(0.33,0,0.1,1)",
  curveEasyEaseMax: "cubic-bezier(0.8,0,0.1,1)",
  curveEasyEase: "cubic-bezier(0.33,0,0.67,1)",
  curveLinear: "cubic-bezier(0,0,1,1)"
};

// node_modules/@fluentui/tokens/lib/global/durations.js
var durations = {
  durationUltraFast: "50ms",
  durationFaster: "100ms",
  durationFast: "150ms",
  durationNormal: "200ms",
  durationSlow: "300ms",
  durationSlower: "400ms",
  durationUltraSlow: "500ms"
};

// node_modules/@fluentui/tokens/lib/global/fonts.js
var fontSizes = {
  fontSizeBase100: "10px",
  fontSizeBase200: "12px",
  fontSizeBase300: "14px",
  fontSizeBase400: "16px",
  fontSizeBase500: "20px",
  fontSizeBase600: "24px",
  fontSizeHero700: "28px",
  fontSizeHero800: "32px",
  fontSizeHero900: "40px",
  fontSizeHero1000: "68px"
};
var lineHeights = {
  lineHeightBase100: "14px",
  lineHeightBase200: "16px",
  lineHeightBase300: "20px",
  lineHeightBase400: "22px",
  lineHeightBase500: "28px",
  lineHeightBase600: "32px",
  lineHeightHero700: "36px",
  lineHeightHero800: "40px",
  lineHeightHero900: "52px",
  lineHeightHero1000: "92px"
};
var fontWeights = {
  fontWeightRegular: 400,
  fontWeightMedium: 500,
  fontWeightSemibold: 600,
  fontWeightBold: 700
};
var fontFamilies = {
  fontFamilyBase: (
    // eslint-disable-next-line @fluentui/max-len
    "'Segoe UI', 'Segoe UI Web (West European)', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif"
  ),
  fontFamilyMonospace: "Consolas, 'Courier New', Courier, monospace",
  fontFamilyNumeric: (
    // eslint-disable-next-line @fluentui/max-len
    "Bahnschrift, 'Segoe UI', 'Segoe UI Web (West European)', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif"
  )
};

// node_modules/@fluentui/tokens/lib/global/spacings.js
var spacings = {
  none: "0",
  xxs: "2px",
  xs: "4px",
  sNudge: "6px",
  s: "8px",
  mNudge: "10px",
  m: "12px",
  l: "16px",
  xl: "20px",
  xxl: "24px",
  xxxl: "32px"
};
var horizontalSpacings = {
  spacingHorizontalNone: spacings.none,
  spacingHorizontalXXS: spacings.xxs,
  spacingHorizontalXS: spacings.xs,
  spacingHorizontalSNudge: spacings.sNudge,
  spacingHorizontalS: spacings.s,
  spacingHorizontalMNudge: spacings.mNudge,
  spacingHorizontalM: spacings.m,
  spacingHorizontalL: spacings.l,
  spacingHorizontalXL: spacings.xl,
  spacingHorizontalXXL: spacings.xxl,
  spacingHorizontalXXXL: spacings.xxxl
};
var verticalSpacings = {
  spacingVerticalNone: spacings.none,
  spacingVerticalXXS: spacings.xxs,
  spacingVerticalXS: spacings.xs,
  spacingVerticalSNudge: spacings.sNudge,
  spacingVerticalS: spacings.s,
  spacingVerticalMNudge: spacings.mNudge,
  spacingVerticalM: spacings.m,
  spacingVerticalL: spacings.l,
  spacingVerticalXL: spacings.xl,
  spacingVerticalXXL: spacings.xxl,
  spacingVerticalXXXL: spacings.xxxl
};

// node_modules/@fluentui/tokens/lib/global/strokeWidths.js
var strokeWidths = {
  strokeWidthThin: "1px",
  strokeWidthThick: "2px",
  strokeWidthThicker: "3px",
  strokeWidthThickest: "4px"
};

// node_modules/@fluentui/tokens/lib/tokens.js
var tokens = {
  // Color tokens
  colorNeutralForeground1: "var(--colorNeutralForeground1)",
  colorNeutralForeground1Hover: "var(--colorNeutralForeground1Hover)",
  colorNeutralForeground1Pressed: "var(--colorNeutralForeground1Pressed)",
  colorNeutralForeground1Selected: "var(--colorNeutralForeground1Selected)",
  colorNeutralForeground2: "var(--colorNeutralForeground2)",
  colorNeutralForeground2Hover: "var(--colorNeutralForeground2Hover)",
  colorNeutralForeground2Pressed: "var(--colorNeutralForeground2Pressed)",
  colorNeutralForeground2Selected: "var(--colorNeutralForeground2Selected)",
  colorNeutralForeground2BrandHover: "var(--colorNeutralForeground2BrandHover)",
  colorNeutralForeground2BrandPressed: "var(--colorNeutralForeground2BrandPressed)",
  colorNeutralForeground2BrandSelected: "var(--colorNeutralForeground2BrandSelected)",
  colorNeutralForeground3: "var(--colorNeutralForeground3)",
  colorNeutralForeground3Hover: "var(--colorNeutralForeground3Hover)",
  colorNeutralForeground3Pressed: "var(--colorNeutralForeground3Pressed)",
  colorNeutralForeground3Selected: "var(--colorNeutralForeground3Selected)",
  colorNeutralForeground3BrandHover: "var(--colorNeutralForeground3BrandHover)",
  colorNeutralForeground3BrandPressed: "var(--colorNeutralForeground3BrandPressed)",
  colorNeutralForeground3BrandSelected: "var(--colorNeutralForeground3BrandSelected)",
  colorNeutralForeground4: "var(--colorNeutralForeground4)",
  colorNeutralForegroundDisabled: "var(--colorNeutralForegroundDisabled)",
  colorBrandForegroundLink: "var(--colorBrandForegroundLink)",
  colorBrandForegroundLinkHover: "var(--colorBrandForegroundLinkHover)",
  colorBrandForegroundLinkPressed: "var(--colorBrandForegroundLinkPressed)",
  colorBrandForegroundLinkSelected: "var(--colorBrandForegroundLinkSelected)",
  colorNeutralForeground2Link: "var(--colorNeutralForeground2Link)",
  colorNeutralForeground2LinkHover: "var(--colorNeutralForeground2LinkHover)",
  colorNeutralForeground2LinkPressed: "var(--colorNeutralForeground2LinkPressed)",
  colorNeutralForeground2LinkSelected: "var(--colorNeutralForeground2LinkSelected)",
  colorCompoundBrandForeground1: "var(--colorCompoundBrandForeground1)",
  colorCompoundBrandForeground1Hover: "var(--colorCompoundBrandForeground1Hover)",
  colorCompoundBrandForeground1Pressed: "var(--colorCompoundBrandForeground1Pressed)",
  colorNeutralForegroundOnBrand: "var(--colorNeutralForegroundOnBrand)",
  colorNeutralForegroundInverted: "var(--colorNeutralForegroundInverted)",
  colorNeutralForegroundInvertedHover: "var(--colorNeutralForegroundInvertedHover)",
  colorNeutralForegroundInvertedPressed: "var(--colorNeutralForegroundInvertedPressed)",
  colorNeutralForegroundInvertedSelected: "var(--colorNeutralForegroundInvertedSelected)",
  colorNeutralForegroundInverted2: "var(--colorNeutralForegroundInverted2)",
  colorNeutralForegroundStaticInverted: "var(--colorNeutralForegroundStaticInverted)",
  colorNeutralForegroundInvertedLink: "var(--colorNeutralForegroundInvertedLink)",
  colorNeutralForegroundInvertedLinkHover: "var(--colorNeutralForegroundInvertedLinkHover)",
  colorNeutralForegroundInvertedLinkPressed: "var(--colorNeutralForegroundInvertedLinkPressed)",
  colorNeutralForegroundInvertedLinkSelected: "var(--colorNeutralForegroundInvertedLinkSelected)",
  colorNeutralForegroundInvertedDisabled: "var(--colorNeutralForegroundInvertedDisabled)",
  colorBrandForeground1: "var(--colorBrandForeground1)",
  colorBrandForeground2: "var(--colorBrandForeground2)",
  colorNeutralForeground1Static: "var(--colorNeutralForeground1Static)",
  colorBrandForegroundInverted: "var(--colorBrandForegroundInverted)",
  colorBrandForegroundInvertedHover: "var(--colorBrandForegroundInvertedHover)",
  colorBrandForegroundInvertedPressed: "var(--colorBrandForegroundInvertedPressed)",
  colorBrandForegroundOnLight: "var(--colorBrandForegroundOnLight)",
  colorBrandForegroundOnLightHover: "var(--colorBrandForegroundOnLightHover)",
  colorBrandForegroundOnLightPressed: "var(--colorBrandForegroundOnLightPressed)",
  colorBrandForegroundOnLightSelected: "var(--colorBrandForegroundOnLightSelected)",
  colorNeutralBackground1: "var(--colorNeutralBackground1)",
  colorNeutralBackground1Hover: "var(--colorNeutralBackground1Hover)",
  colorNeutralBackground1Pressed: "var(--colorNeutralBackground1Pressed)",
  colorNeutralBackground1Selected: "var(--colorNeutralBackground1Selected)",
  colorNeutralBackground2: "var(--colorNeutralBackground2)",
  colorNeutralBackground2Hover: "var(--colorNeutralBackground2Hover)",
  colorNeutralBackground2Pressed: "var(--colorNeutralBackground2Pressed)",
  colorNeutralBackground2Selected: "var(--colorNeutralBackground2Selected)",
  colorNeutralBackground3: "var(--colorNeutralBackground3)",
  colorNeutralBackground3Hover: "var(--colorNeutralBackground3Hover)",
  colorNeutralBackground3Pressed: "var(--colorNeutralBackground3Pressed)",
  colorNeutralBackground3Selected: "var(--colorNeutralBackground3Selected)",
  colorNeutralBackground4: "var(--colorNeutralBackground4)",
  colorNeutralBackground4Hover: "var(--colorNeutralBackground4Hover)",
  colorNeutralBackground4Pressed: "var(--colorNeutralBackground4Pressed)",
  colorNeutralBackground4Selected: "var(--colorNeutralBackground4Selected)",
  colorNeutralBackground5: "var(--colorNeutralBackground5)",
  colorNeutralBackground5Hover: "var(--colorNeutralBackground5Hover)",
  colorNeutralBackground5Pressed: "var(--colorNeutralBackground5Pressed)",
  colorNeutralBackground5Selected: "var(--colorNeutralBackground5Selected)",
  colorNeutralBackground6: "var(--colorNeutralBackground6)",
  colorNeutralBackgroundInverted: "var(--colorNeutralBackgroundInverted)",
  colorNeutralBackgroundStatic: "var(--colorNeutralBackgroundStatic)",
  colorNeutralBackgroundAlpha: "var(--colorNeutralBackgroundAlpha)",
  colorNeutralBackgroundAlpha2: "var(--colorNeutralBackgroundAlpha2)",
  colorSubtleBackground: "var(--colorSubtleBackground)",
  colorSubtleBackgroundHover: "var(--colorSubtleBackgroundHover)",
  colorSubtleBackgroundPressed: "var(--colorSubtleBackgroundPressed)",
  colorSubtleBackgroundSelected: "var(--colorSubtleBackgroundSelected)",
  colorSubtleBackgroundLightAlphaHover: "var(--colorSubtleBackgroundLightAlphaHover)",
  colorSubtleBackgroundLightAlphaPressed: "var(--colorSubtleBackgroundLightAlphaPressed)",
  colorSubtleBackgroundLightAlphaSelected: "var(--colorSubtleBackgroundLightAlphaSelected)",
  colorSubtleBackgroundInverted: "var(--colorSubtleBackgroundInverted)",
  colorSubtleBackgroundInvertedHover: "var(--colorSubtleBackgroundInvertedHover)",
  colorSubtleBackgroundInvertedPressed: "var(--colorSubtleBackgroundInvertedPressed)",
  colorSubtleBackgroundInvertedSelected: "var(--colorSubtleBackgroundInvertedSelected)",
  colorTransparentBackground: "var(--colorTransparentBackground)",
  colorTransparentBackgroundHover: "var(--colorTransparentBackgroundHover)",
  colorTransparentBackgroundPressed: "var(--colorTransparentBackgroundPressed)",
  colorTransparentBackgroundSelected: "var(--colorTransparentBackgroundSelected)",
  colorNeutralBackgroundDisabled: "var(--colorNeutralBackgroundDisabled)",
  colorNeutralBackgroundInvertedDisabled: "var(--colorNeutralBackgroundInvertedDisabled)",
  colorNeutralStencil1: "var(--colorNeutralStencil1)",
  colorNeutralStencil2: "var(--colorNeutralStencil2)",
  colorNeutralStencil1Alpha: "var(--colorNeutralStencil1Alpha)",
  colorNeutralStencil2Alpha: "var(--colorNeutralStencil2Alpha)",
  colorBackgroundOverlay: "var(--colorBackgroundOverlay)",
  colorScrollbarOverlay: "var(--colorScrollbarOverlay)",
  colorBrandBackground: "var(--colorBrandBackground)",
  colorBrandBackgroundHover: "var(--colorBrandBackgroundHover)",
  colorBrandBackgroundPressed: "var(--colorBrandBackgroundPressed)",
  colorBrandBackgroundSelected: "var(--colorBrandBackgroundSelected)",
  colorCompoundBrandBackground: "var(--colorCompoundBrandBackground)",
  colorCompoundBrandBackgroundHover: "var(--colorCompoundBrandBackgroundHover)",
  colorCompoundBrandBackgroundPressed: "var(--colorCompoundBrandBackgroundPressed)",
  colorBrandBackgroundStatic: "var(--colorBrandBackgroundStatic)",
  colorBrandBackground2: "var(--colorBrandBackground2)",
  colorBrandBackgroundInverted: "var(--colorBrandBackgroundInverted)",
  colorBrandBackgroundInvertedHover: "var(--colorBrandBackgroundInvertedHover)",
  colorBrandBackgroundInvertedPressed: "var(--colorBrandBackgroundInvertedPressed)",
  colorBrandBackgroundInvertedSelected: "var(--colorBrandBackgroundInvertedSelected)",
  colorNeutralStrokeAccessible: "var(--colorNeutralStrokeAccessible)",
  colorNeutralStrokeAccessibleHover: "var(--colorNeutralStrokeAccessibleHover)",
  colorNeutralStrokeAccessiblePressed: "var(--colorNeutralStrokeAccessiblePressed)",
  colorNeutralStrokeAccessibleSelected: "var(--colorNeutralStrokeAccessibleSelected)",
  colorNeutralStroke1: "var(--colorNeutralStroke1)",
  colorNeutralStroke1Hover: "var(--colorNeutralStroke1Hover)",
  colorNeutralStroke1Pressed: "var(--colorNeutralStroke1Pressed)",
  colorNeutralStroke1Selected: "var(--colorNeutralStroke1Selected)",
  colorNeutralStroke2: "var(--colorNeutralStroke2)",
  colorNeutralStroke3: "var(--colorNeutralStroke3)",
  colorNeutralStrokeOnBrand: "var(--colorNeutralStrokeOnBrand)",
  colorNeutralStrokeOnBrand2: "var(--colorNeutralStrokeOnBrand2)",
  colorNeutralStrokeOnBrand2Hover: "var(--colorNeutralStrokeOnBrand2Hover)",
  colorNeutralStrokeOnBrand2Pressed: "var(--colorNeutralStrokeOnBrand2Pressed)",
  colorNeutralStrokeOnBrand2Selected: "var(--colorNeutralStrokeOnBrand2Selected)",
  colorBrandStroke1: "var(--colorBrandStroke1)",
  colorBrandStroke2: "var(--colorBrandStroke2)",
  colorCompoundBrandStroke: "var(--colorCompoundBrandStroke)",
  colorCompoundBrandStrokeHover: "var(--colorCompoundBrandStrokeHover)",
  colorCompoundBrandStrokePressed: "var(--colorCompoundBrandStrokePressed)",
  colorNeutralStrokeDisabled: "var(--colorNeutralStrokeDisabled)",
  colorNeutralStrokeInvertedDisabled: "var(--colorNeutralStrokeInvertedDisabled)",
  colorTransparentStroke: "var(--colorTransparentStroke)",
  colorTransparentStrokeInteractive: "var(--colorTransparentStrokeInteractive)",
  colorTransparentStrokeDisabled: "var(--colorTransparentStrokeDisabled)",
  colorNeutralStrokeAlpha: "var(--colorNeutralStrokeAlpha)",
  colorStrokeFocus1: "var(--colorStrokeFocus1)",
  colorStrokeFocus2: "var(--colorStrokeFocus2)",
  colorNeutralShadowAmbient: "var(--colorNeutralShadowAmbient)",
  colorNeutralShadowKey: "var(--colorNeutralShadowKey)",
  colorNeutralShadowAmbientLighter: "var(--colorNeutralShadowAmbientLighter)",
  colorNeutralShadowKeyLighter: "var(--colorNeutralShadowKeyLighter)",
  colorNeutralShadowAmbientDarker: "var(--colorNeutralShadowAmbientDarker)",
  colorNeutralShadowKeyDarker: "var(--colorNeutralShadowKeyDarker)",
  colorBrandShadowAmbient: "var(--colorBrandShadowAmbient)",
  colorBrandShadowKey: "var(--colorBrandShadowKey)",
  // Color palette tokens
  // Color palette red tokens
  colorPaletteRedBackground1: "var(--colorPaletteRedBackground1)",
  colorPaletteRedBackground2: "var(--colorPaletteRedBackground2)",
  colorPaletteRedBackground3: "var(--colorPaletteRedBackground3)",
  colorPaletteRedBorderActive: "var(--colorPaletteRedBorderActive)",
  colorPaletteRedBorder1: "var(--colorPaletteRedBorder1)",
  colorPaletteRedBorder2: "var(--colorPaletteRedBorder2)",
  colorPaletteRedForeground1: "var(--colorPaletteRedForeground1)",
  colorPaletteRedForeground2: "var(--colorPaletteRedForeground2)",
  colorPaletteRedForeground3: "var(--colorPaletteRedForeground3)",
  colorPaletteRedForegroundInverted: "var(--colorPaletteRedForegroundInverted)",
  // Color palette green tokens
  colorPaletteGreenBackground1: "var(--colorPaletteGreenBackground1)",
  colorPaletteGreenBackground2: "var(--colorPaletteGreenBackground2)",
  colorPaletteGreenBackground3: "var(--colorPaletteGreenBackground3)",
  colorPaletteGreenBorderActive: "var(--colorPaletteGreenBorderActive)",
  colorPaletteGreenBorder1: "var(--colorPaletteGreenBorder1)",
  colorPaletteGreenBorder2: "var(--colorPaletteGreenBorder2)",
  colorPaletteGreenForeground1: "var(--colorPaletteGreenForeground1)",
  colorPaletteGreenForeground2: "var(--colorPaletteGreenForeground2)",
  colorPaletteGreenForeground3: "var(--colorPaletteGreenForeground3)",
  colorPaletteGreenForegroundInverted: "var(--colorPaletteGreenForegroundInverted)",
  // Color palette dark orange tokens
  colorPaletteDarkOrangeBackground1: "var(--colorPaletteDarkOrangeBackground1)",
  colorPaletteDarkOrangeBackground2: "var(--colorPaletteDarkOrangeBackground2)",
  colorPaletteDarkOrangeBackground3: "var(--colorPaletteDarkOrangeBackground3)",
  colorPaletteDarkOrangeBorderActive: "var(--colorPaletteDarkOrangeBorderActive)",
  colorPaletteDarkOrangeBorder1: "var(--colorPaletteDarkOrangeBorder1)",
  colorPaletteDarkOrangeBorder2: "var(--colorPaletteDarkOrangeBorder2)",
  colorPaletteDarkOrangeForeground1: "var(--colorPaletteDarkOrangeForeground1)",
  colorPaletteDarkOrangeForeground2: "var(--colorPaletteDarkOrangeForeground2)",
  colorPaletteDarkOrangeForeground3: "var(--colorPaletteDarkOrangeForeground3)",
  // Color palette yellow tokens
  colorPaletteYellowBackground1: "var(--colorPaletteYellowBackground1)",
  colorPaletteYellowBackground2: "var(--colorPaletteYellowBackground2)",
  colorPaletteYellowBackground3: "var(--colorPaletteYellowBackground3)",
  colorPaletteYellowBorderActive: "var(--colorPaletteYellowBorderActive)",
  colorPaletteYellowBorder1: "var(--colorPaletteYellowBorder1)",
  colorPaletteYellowBorder2: "var(--colorPaletteYellowBorder2)",
  colorPaletteYellowForeground1: "var(--colorPaletteYellowForeground1)",
  colorPaletteYellowForeground2: "var(--colorPaletteYellowForeground2)",
  colorPaletteYellowForeground3: "var(--colorPaletteYellowForeground3)",
  colorPaletteYellowForegroundInverted: "var(--colorPaletteYellowForegroundInverted)",
  // Color palette berry tokens
  colorPaletteBerryBackground1: "var(--colorPaletteBerryBackground1)",
  colorPaletteBerryBackground2: "var(--colorPaletteBerryBackground2)",
  colorPaletteBerryBackground3: "var(--colorPaletteBerryBackground3)",
  colorPaletteBerryBorderActive: "var(--colorPaletteBerryBorderActive)",
  colorPaletteBerryBorder1: "var(--colorPaletteBerryBorder1)",
  colorPaletteBerryBorder2: "var(--colorPaletteBerryBorder2)",
  colorPaletteBerryForeground1: "var(--colorPaletteBerryForeground1)",
  colorPaletteBerryForeground2: "var(--colorPaletteBerryForeground2)",
  colorPaletteBerryForeground3: "var(--colorPaletteBerryForeground3)",
  // Color palette marigold tokens
  colorPaletteMarigoldBackground1: "var(--colorPaletteMarigoldBackground1)",
  colorPaletteMarigoldBackground2: "var(--colorPaletteMarigoldBackground2)",
  colorPaletteMarigoldBackground3: "var(--colorPaletteMarigoldBackground3)",
  colorPaletteMarigoldBorderActive: "var(--colorPaletteMarigoldBorderActive)",
  colorPaletteMarigoldBorder1: "var(--colorPaletteMarigoldBorder1)",
  colorPaletteMarigoldBorder2: "var(--colorPaletteMarigoldBorder2)",
  colorPaletteMarigoldForeground1: "var(--colorPaletteMarigoldForeground1)",
  colorPaletteMarigoldForeground2: "var(--colorPaletteMarigoldForeground2)",
  colorPaletteMarigoldForeground3: "var(--colorPaletteMarigoldForeground3)",
  // Color palette light green tokens
  colorPaletteLightGreenBackground1: "var(--colorPaletteLightGreenBackground1)",
  colorPaletteLightGreenBackground2: "var(--colorPaletteLightGreenBackground2)",
  colorPaletteLightGreenBackground3: "var(--colorPaletteLightGreenBackground3)",
  colorPaletteLightGreenBorderActive: "var(--colorPaletteLightGreenBorderActive)",
  colorPaletteLightGreenBorder1: "var(--colorPaletteLightGreenBorder1)",
  colorPaletteLightGreenBorder2: "var(--colorPaletteLightGreenBorder2)",
  colorPaletteLightGreenForeground1: "var(--colorPaletteLightGreenForeground1)",
  colorPaletteLightGreenForeground2: "var(--colorPaletteLightGreenForeground2)",
  colorPaletteLightGreenForeground3: "var(--colorPaletteLightGreenForeground3)",
  // Color palette anchor tokens
  colorPaletteAnchorBackground2: "var(--colorPaletteAnchorBackground2)",
  colorPaletteAnchorBorderActive: "var(--colorPaletteAnchorBorderActive)",
  colorPaletteAnchorForeground2: "var(--colorPaletteAnchorForeground2)",
  // Color palette beige tokens
  colorPaletteBeigeBackground2: "var(--colorPaletteBeigeBackground2)",
  colorPaletteBeigeBorderActive: "var(--colorPaletteBeigeBorderActive)",
  colorPaletteBeigeForeground2: "var(--colorPaletteBeigeForeground2)",
  // Color palette blue tokens
  colorPaletteBlueBackground2: "var(--colorPaletteBlueBackground2)",
  colorPaletteBlueBorderActive: "var(--colorPaletteBlueBorderActive)",
  colorPaletteBlueForeground2: "var(--colorPaletteBlueForeground2)",
  // Color palette brass tokens
  colorPaletteBrassBackground2: "var(--colorPaletteBrassBackground2)",
  colorPaletteBrassBorderActive: "var(--colorPaletteBrassBorderActive)",
  colorPaletteBrassForeground2: "var(--colorPaletteBrassForeground2)",
  // Color palette brown tokens
  colorPaletteBrownBackground2: "var(--colorPaletteBrownBackground2)",
  colorPaletteBrownBorderActive: "var(--colorPaletteBrownBorderActive)",
  colorPaletteBrownForeground2: "var(--colorPaletteBrownForeground2)",
  // Color palette cornflower tokens
  colorPaletteCornflowerBackground2: "var(--colorPaletteCornflowerBackground2)",
  colorPaletteCornflowerBorderActive: "var(--colorPaletteCornflowerBorderActive)",
  colorPaletteCornflowerForeground2: "var(--colorPaletteCornflowerForeground2)",
  // Color palette cranberry tokens
  colorPaletteCranberryBackground2: "var(--colorPaletteCranberryBackground2)",
  colorPaletteCranberryBorderActive: "var(--colorPaletteCranberryBorderActive)",
  colorPaletteCranberryForeground2: "var(--colorPaletteCranberryForeground2)",
  // Color palette dark green tokens
  colorPaletteDarkGreenBackground2: "var(--colorPaletteDarkGreenBackground2)",
  colorPaletteDarkGreenBorderActive: "var(--colorPaletteDarkGreenBorderActive)",
  colorPaletteDarkGreenForeground2: "var(--colorPaletteDarkGreenForeground2)",
  // Color palette dark red tokens
  colorPaletteDarkRedBackground2: "var(--colorPaletteDarkRedBackground2)",
  colorPaletteDarkRedBorderActive: "var(--colorPaletteDarkRedBorderActive)",
  colorPaletteDarkRedForeground2: "var(--colorPaletteDarkRedForeground2)",
  // Color palette forest tokens
  colorPaletteForestBackground2: "var(--colorPaletteForestBackground2)",
  colorPaletteForestBorderActive: "var(--colorPaletteForestBorderActive)",
  colorPaletteForestForeground2: "var(--colorPaletteForestForeground2)",
  // Color palette gold tokens
  colorPaletteGoldBackground2: "var(--colorPaletteGoldBackground2)",
  colorPaletteGoldBorderActive: "var(--colorPaletteGoldBorderActive)",
  colorPaletteGoldForeground2: "var(--colorPaletteGoldForeground2)",
  // Color palette grape tokens
  colorPaletteGrapeBackground2: "var(--colorPaletteGrapeBackground2)",
  colorPaletteGrapeBorderActive: "var(--colorPaletteGrapeBorderActive)",
  colorPaletteGrapeForeground2: "var(--colorPaletteGrapeForeground2)",
  // Color palette lavender tokens
  colorPaletteLavenderBackground2: "var(--colorPaletteLavenderBackground2)",
  colorPaletteLavenderBorderActive: "var(--colorPaletteLavenderBorderActive)",
  colorPaletteLavenderForeground2: "var(--colorPaletteLavenderForeground2)",
  // Color palette light teal tokens
  colorPaletteLightTealBackground2: "var(--colorPaletteLightTealBackground2)",
  colorPaletteLightTealBorderActive: "var(--colorPaletteLightTealBorderActive)",
  colorPaletteLightTealForeground2: "var(--colorPaletteLightTealForeground2)",
  // Color palette lilac tokens
  colorPaletteLilacBackground2: "var(--colorPaletteLilacBackground2)",
  colorPaletteLilacBorderActive: "var(--colorPaletteLilacBorderActive)",
  colorPaletteLilacForeground2: "var(--colorPaletteLilacForeground2)",
  // Color palette magenta tokens
  colorPaletteMagentaBackground2: "var(--colorPaletteMagentaBackground2)",
  colorPaletteMagentaBorderActive: "var(--colorPaletteMagentaBorderActive)",
  colorPaletteMagentaForeground2: "var(--colorPaletteMagentaForeground2)",
  // Color palette mink tokens
  colorPaletteMinkBackground2: "var(--colorPaletteMinkBackground2)",
  colorPaletteMinkBorderActive: "var(--colorPaletteMinkBorderActive)",
  colorPaletteMinkForeground2: "var(--colorPaletteMinkForeground2)",
  // Color palette navy tokens
  colorPaletteNavyBackground2: "var(--colorPaletteNavyBackground2)",
  colorPaletteNavyBorderActive: "var(--colorPaletteNavyBorderActive)",
  colorPaletteNavyForeground2: "var(--colorPaletteNavyForeground2)",
  // Color palette peach tokens
  colorPalettePeachBackground2: "var(--colorPalettePeachBackground2)",
  colorPalettePeachBorderActive: "var(--colorPalettePeachBorderActive)",
  colorPalettePeachForeground2: "var(--colorPalettePeachForeground2)",
  // Color palette pink tokens
  colorPalettePinkBackground2: "var(--colorPalettePinkBackground2)",
  colorPalettePinkBorderActive: "var(--colorPalettePinkBorderActive)",
  colorPalettePinkForeground2: "var(--colorPalettePinkForeground2)",
  // Color palette platinum tokens
  colorPalettePlatinumBackground2: "var(--colorPalettePlatinumBackground2)",
  colorPalettePlatinumBorderActive: "var(--colorPalettePlatinumBorderActive)",
  colorPalettePlatinumForeground2: "var(--colorPalettePlatinumForeground2)",
  // Color palette plum tokens
  colorPalettePlumBackground2: "var(--colorPalettePlumBackground2)",
  colorPalettePlumBorderActive: "var(--colorPalettePlumBorderActive)",
  colorPalettePlumForeground2: "var(--colorPalettePlumForeground2)",
  // Color palette pumpkin tokens
  colorPalettePumpkinBackground2: "var(--colorPalettePumpkinBackground2)",
  colorPalettePumpkinBorderActive: "var(--colorPalettePumpkinBorderActive)",
  colorPalettePumpkinForeground2: "var(--colorPalettePumpkinForeground2)",
  // Color palette purple tokens
  colorPalettePurpleBackground2: "var(--colorPalettePurpleBackground2)",
  colorPalettePurpleBorderActive: "var(--colorPalettePurpleBorderActive)",
  colorPalettePurpleForeground2: "var(--colorPalettePurpleForeground2)",
  // Color palette royal blue tokens
  colorPaletteRoyalBlueBackground2: "var(--colorPaletteRoyalBlueBackground2)",
  colorPaletteRoyalBlueBorderActive: "var(--colorPaletteRoyalBlueBorderActive)",
  colorPaletteRoyalBlueForeground2: "var(--colorPaletteRoyalBlueForeground2)",
  // Color palette seafoam tokens
  colorPaletteSeafoamBackground2: "var(--colorPaletteSeafoamBackground2)",
  colorPaletteSeafoamBorderActive: "var(--colorPaletteSeafoamBorderActive)",
  colorPaletteSeafoamForeground2: "var(--colorPaletteSeafoamForeground2)",
  // Color palette steel tokens
  colorPaletteSteelBackground2: "var(--colorPaletteSteelBackground2)",
  colorPaletteSteelBorderActive: "var(--colorPaletteSteelBorderActive)",
  colorPaletteSteelForeground2: "var(--colorPaletteSteelForeground2)",
  // Color palette teal tokens
  colorPaletteTealBackground2: "var(--colorPaletteTealBackground2)",
  colorPaletteTealBorderActive: "var(--colorPaletteTealBorderActive)",
  colorPaletteTealForeground2: "var(--colorPaletteTealForeground2)",
  // Border radius tokens
  borderRadiusNone: "var(--borderRadiusNone)",
  borderRadiusSmall: "var(--borderRadiusSmall)",
  borderRadiusMedium: "var(--borderRadiusMedium)",
  borderRadiusLarge: "var(--borderRadiusLarge)",
  borderRadiusXLarge: "var(--borderRadiusXLarge)",
  borderRadiusCircular: "var(--borderRadiusCircular)",
  // Font family tokens
  fontFamilyBase: "var(--fontFamilyBase)",
  fontFamilyMonospace: "var(--fontFamilyMonospace)",
  fontFamilyNumeric: "var(--fontFamilyNumeric)",
  // Font size tokens
  fontSizeBase100: "var(--fontSizeBase100)",
  fontSizeBase200: "var(--fontSizeBase200)",
  fontSizeBase300: "var(--fontSizeBase300)",
  fontSizeBase400: "var(--fontSizeBase400)",
  fontSizeBase500: "var(--fontSizeBase500)",
  fontSizeBase600: "var(--fontSizeBase600)",
  fontSizeHero700: "var(--fontSizeHero700)",
  fontSizeHero800: "var(--fontSizeHero800)",
  fontSizeHero900: "var(--fontSizeHero900)",
  fontSizeHero1000: "var(--fontSizeHero1000)",
  // Font weight tokens
  fontWeightRegular: "var(--fontWeightRegular)",
  fontWeightMedium: "var(--fontWeightMedium)",
  fontWeightSemibold: "var(--fontWeightSemibold)",
  fontWeightBold: "var(--fontWeightBold)",
  // Line height tokens
  lineHeightBase100: "var(--lineHeightBase100)",
  lineHeightBase200: "var(--lineHeightBase200)",
  lineHeightBase300: "var(--lineHeightBase300)",
  lineHeightBase400: "var(--lineHeightBase400)",
  lineHeightBase500: "var(--lineHeightBase500)",
  lineHeightBase600: "var(--lineHeightBase600)",
  lineHeightHero700: "var(--lineHeightHero700)",
  lineHeightHero800: "var(--lineHeightHero800)",
  lineHeightHero900: "var(--lineHeightHero900)",
  lineHeightHero1000: "var(--lineHeightHero1000)",
  // Shadow tokens
  shadow2: "var(--shadow2)",
  shadow4: "var(--shadow4)",
  shadow8: "var(--shadow8)",
  shadow16: "var(--shadow16)",
  shadow28: "var(--shadow28)",
  shadow64: "var(--shadow64)",
  // Shadow brand tokens
  shadow2Brand: "var(--shadow2Brand)",
  shadow4Brand: "var(--shadow4Brand)",
  shadow8Brand: "var(--shadow8Brand)",
  shadow16Brand: "var(--shadow16Brand)",
  shadow28Brand: "var(--shadow28Brand)",
  shadow64Brand: "var(--shadow64Brand)",
  // Stroke width tokens
  strokeWidthThin: "var(--strokeWidthThin)",
  strokeWidthThick: "var(--strokeWidthThick)",
  strokeWidthThicker: "var(--strokeWidthThicker)",
  strokeWidthThickest: "var(--strokeWidthThickest)",
  // Spacings
  spacingHorizontalNone: "var(--spacingHorizontalNone)",
  spacingHorizontalXXS: "var(--spacingHorizontalXXS)",
  spacingHorizontalXS: "var(--spacingHorizontalXS)",
  spacingHorizontalSNudge: "var(--spacingHorizontalSNudge)",
  spacingHorizontalS: "var(--spacingHorizontalS)",
  spacingHorizontalMNudge: "var(--spacingHorizontalMNudge)",
  spacingHorizontalM: "var(--spacingHorizontalM)",
  spacingHorizontalL: "var(--spacingHorizontalL)",
  spacingHorizontalXL: "var(--spacingHorizontalXL)",
  spacingHorizontalXXL: "var(--spacingHorizontalXXL)",
  spacingHorizontalXXXL: "var(--spacingHorizontalXXXL)",
  spacingVerticalNone: "var(--spacingVerticalNone)",
  spacingVerticalXXS: "var(--spacingVerticalXXS)",
  spacingVerticalXS: "var(--spacingVerticalXS)",
  spacingVerticalSNudge: "var(--spacingVerticalSNudge)",
  spacingVerticalS: "var(--spacingVerticalS)",
  spacingVerticalMNudge: "var(--spacingVerticalMNudge)",
  spacingVerticalM: "var(--spacingVerticalM)",
  spacingVerticalL: "var(--spacingVerticalL)",
  spacingVerticalXL: "var(--spacingVerticalXL)",
  spacingVerticalXXL: "var(--spacingVerticalXXL)",
  spacingVerticalXXXL: "var(--spacingVerticalXXXL)",
  // Durations
  durationUltraFast: "var(--durationUltraFast)",
  durationFaster: "var(--durationFaster)",
  durationFast: "var(--durationFast)",
  durationNormal: "var(--durationNormal)",
  durationSlow: "var(--durationSlow)",
  durationSlower: "var(--durationSlower)",
  durationUltraSlow: "var(--durationUltraSlow)",
  // Curves
  curveAccelerateMax: "var(--curveAccelerateMax)",
  curveAccelerateMid: "var(--curveAccelerateMid)",
  curveAccelerateMin: "var(--curveAccelerateMin)",
  curveDecelerateMax: "var(--curveDecelerateMax)",
  curveDecelerateMid: "var(--curveDecelerateMid)",
  curveDecelerateMin: "var(--curveDecelerateMin)",
  curveEasyEaseMax: "var(--curveEasyEaseMax)",
  curveEasyEase: "var(--curveEasyEase)",
  curveLinear: "var(--curveLinear)"
};

// node_modules/@fluentui/tokens/lib/global/typographyStyles.js
var typographyStyles = {
  body1: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase300,
    fontWeight: tokens.fontWeightRegular,
    lineHeight: tokens.lineHeightBase300
  },
  body1Strong: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase300,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightBase300
  },
  body1Stronger: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase300,
    fontWeight: tokens.fontWeightBold,
    lineHeight: tokens.lineHeightBase300
  },
  body2: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase400,
    fontWeight: tokens.fontWeightRegular,
    lineHeight: tokens.lineHeightBase400
  },
  caption1: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase200,
    fontWeight: tokens.fontWeightRegular,
    lineHeight: tokens.lineHeightBase200
  },
  caption1Strong: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase200,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightBase200
  },
  caption1Stronger: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase200,
    fontWeight: tokens.fontWeightBold,
    lineHeight: tokens.lineHeightBase200
  },
  caption2: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase100,
    fontWeight: tokens.fontWeightRegular,
    lineHeight: tokens.lineHeightBase100
  },
  caption2Strong: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase100,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightBase100
  },
  subtitle1: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase500,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightBase500
  },
  subtitle2: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase400,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightBase400
  },
  subtitle2Stronger: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase400,
    fontWeight: tokens.fontWeightBold,
    lineHeight: tokens.lineHeightBase400
  },
  title1: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeHero800,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightHero800
  },
  title2: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeHero700,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightHero700
  },
  title3: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeBase600,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightBase600
  },
  largeTitle: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeHero900,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightHero900
  },
  display: {
    fontFamily: tokens.fontFamilyBase,
    fontSize: tokens.fontSizeHero1000,
    fontWeight: tokens.fontWeightSemibold,
    lineHeight: tokens.lineHeightHero1000
  }
};

// node_modules/@fluentui/tokens/lib/utils/shadows.js
function createShadowTokens(ambientColor, keyColor, tokenSuffix = "") {
  return {
    [`shadow2${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 1px 2px ${keyColor}`,
    [`shadow4${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 2px 4px ${keyColor}`,
    [`shadow8${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 4px 8px ${keyColor}`,
    [`shadow16${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 8px 16px ${keyColor}`,
    [`shadow28${tokenSuffix}`]: `0 0 8px ${ambientColor}, 0 14px 28px ${keyColor}`,
    [`shadow64${tokenSuffix}`]: `0 0 8px ${ambientColor}, 0 32px 64px ${keyColor}`
  };
}

// node_modules/@fluentui/tokens/lib/utils/createLightTheme.js
var createLightTheme = (brand) => {
  const colorTokens = generateColorTokens(brand);
  return {
    ...borderRadius,
    ...fontSizes,
    ...lineHeights,
    ...fontFamilies,
    ...fontWeights,
    ...strokeWidths,
    ...horizontalSpacings,
    ...verticalSpacings,
    ...durations,
    ...curves,
    ...colorTokens,
    ...colorPaletteTokens,
    ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),
    ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, "Brand")
  };
};

// node_modules/@fluentui/tokens/lib/global/brandColors.js
var brandWeb = {
  10: `#061724`,
  20: `#082338`,
  30: `#0a2e4a`,
  40: `#0c3b5e`,
  50: `#0e4775`,
  60: `#0f548c`,
  70: `#115ea3`,
  80: `#0f6cbd`,
  90: `#2886de`,
  100: `#479ef5`,
  110: `#62abf5`,
  120: `#77b7f7`,
  130: `#96c6fa`,
  140: `#b4d6fa`,
  150: `#cfe4fa`,
  160: `#ebf3fc`
};
var brandTeams = {
  10: `#2b2b40`,
  20: `#2f2f4a`,
  30: `#333357`,
  40: `#383966`,
  50: `#3d3e78`,
  60: `#444791`,
  70: `#4f52b2`,
  80: `#5b5fc7`,
  90: `#7579eb`,
  100: `#7f85f5`,
  110: `#9299f7`,
  120: `#aab1fa`,
  130: `#b6bcfa`,
  140: `#c5cbfa`,
  150: `#dce0fa`,
  160: `#e8ebfa`
};

// node_modules/@fluentui/tokens/lib/themes/teams/lightTheme.js
var teamsLightTheme = createLightTheme(brandTeams);

// node_modules/@fluentui/tokens/lib/alias/darkColorPalette.js
var statusColorPaletteTokens2 = statusSharedColorNames.reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background1`]: statusSharedColors[sharedColor].shade40,
    [`colorPalette${color}Background2`]: statusSharedColors[sharedColor].shade30,
    [`colorPalette${color}Background3`]: statusSharedColors[sharedColor].primary,
    [`colorPalette${color}Foreground1`]: statusSharedColors[sharedColor].tint30,
    [`colorPalette${color}Foreground2`]: statusSharedColors[sharedColor].tint40,
    [`colorPalette${color}Foreground3`]: statusSharedColors[sharedColor].tint20,
    [`colorPalette${color}BorderActive`]: statusSharedColors[sharedColor].tint30,
    [`colorPalette${color}Border1`]: statusSharedColors[sharedColor].primary,
    [`colorPalette${color}Border2`]: statusSharedColors[sharedColor].tint20
  };
  return Object.assign(acc, sharedColorTokens);
}, {});
statusColorPaletteTokens2.colorPaletteRedForeground3 = statusSharedColors.red.tint30;
statusColorPaletteTokens2.colorPaletteRedBorder2 = statusSharedColors.red.tint30;
statusColorPaletteTokens2.colorPaletteGreenForeground3 = statusSharedColors.green.tint40;
statusColorPaletteTokens2.colorPaletteGreenBorder2 = statusSharedColors.green.tint40;
statusColorPaletteTokens2.colorPaletteDarkOrangeForeground3 = statusSharedColors.darkOrange.tint30;
statusColorPaletteTokens2.colorPaletteDarkOrangeBorder2 = statusSharedColors.darkOrange.tint30;
statusColorPaletteTokens2.colorPaletteRedForegroundInverted = statusSharedColors.red.primary;
statusColorPaletteTokens2.colorPaletteGreenForegroundInverted = statusSharedColors.green.primary;
statusColorPaletteTokens2.colorPaletteYellowForegroundInverted = statusSharedColors.yellow.shade30;
var personaColorPaletteTokens2 = personaSharedColorNames.reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background2`]: personaSharedColors[sharedColor].shade30,
    [`colorPalette${color}Foreground2`]: personaSharedColors[sharedColor].tint40,
    [`colorPalette${color}BorderActive`]: personaSharedColors[sharedColor].tint30
  };
  return Object.assign(acc, sharedColorTokens);
}, {});
personaColorPaletteTokens2.colorPaletteDarkRedBackground2 = personaSharedColors.darkRed.shade20;
personaColorPaletteTokens2.colorPalettePlumBackground2 = personaSharedColors.plum.shade20;
var colorPaletteTokens2 = {
  ...statusColorPaletteTokens2,
  ...personaColorPaletteTokens2
};

// node_modules/@fluentui/tokens/lib/alias/teamsDarkColor.js
var generateColorTokens2 = (brand) => ({
  colorNeutralForeground1: white,
  colorNeutralForeground1Hover: white,
  colorNeutralForeground1Pressed: white,
  colorNeutralForeground1Selected: white,
  colorNeutralForeground2: grey[84],
  colorNeutralForeground2Hover: white,
  colorNeutralForeground2Pressed: white,
  colorNeutralForeground2Selected: white,
  colorNeutralForeground2BrandHover: brand[100],
  colorNeutralForeground2BrandPressed: brand[90],
  colorNeutralForeground2BrandSelected: brand[100],
  colorNeutralForeground3: grey[68],
  colorNeutralForeground3Hover: grey[84],
  colorNeutralForeground3Pressed: grey[84],
  colorNeutralForeground3Selected: grey[84],
  colorNeutralForeground3BrandHover: brand[100],
  colorNeutralForeground3BrandPressed: brand[90],
  colorNeutralForeground3BrandSelected: brand[100],
  colorNeutralForeground4: grey[60],
  colorNeutralForegroundDisabled: grey[36],
  colorNeutralForegroundInvertedDisabled: whiteAlpha[40],
  colorBrandForegroundLink: brand[100],
  colorBrandForegroundLinkHover: brand[110],
  colorBrandForegroundLinkPressed: brand[90],
  colorBrandForegroundLinkSelected: brand[100],
  colorNeutralForeground2Link: grey[84],
  colorNeutralForeground2LinkHover: white,
  colorNeutralForeground2LinkPressed: white,
  colorNeutralForeground2LinkSelected: white,
  colorCompoundBrandForeground1: brand[100],
  colorCompoundBrandForeground1Hover: brand[110],
  colorCompoundBrandForeground1Pressed: brand[90],
  colorBrandForeground1: brand[100],
  colorBrandForeground2: brand[120],
  colorNeutralForeground1Static: grey[14],
  colorNeutralForegroundStaticInverted: white,
  colorNeutralForegroundInverted: grey[14],
  colorNeutralForegroundInvertedHover: grey[14],
  colorNeutralForegroundInvertedPressed: grey[14],
  colorNeutralForegroundInvertedSelected: grey[14],
  colorNeutralForegroundInverted2: grey[14],
  colorNeutralForegroundOnBrand: white,
  colorNeutralForegroundInvertedLink: white,
  colorNeutralForegroundInvertedLinkHover: white,
  colorNeutralForegroundInvertedLinkPressed: white,
  colorNeutralForegroundInvertedLinkSelected: white,
  colorBrandForegroundInverted: brand[80],
  colorBrandForegroundInvertedHover: brand[70],
  colorBrandForegroundInvertedPressed: brand[60],
  colorBrandForegroundOnLight: brand[80],
  colorBrandForegroundOnLightHover: brand[70],
  colorBrandForegroundOnLightPressed: brand[50],
  colorBrandForegroundOnLightSelected: brand[60],
  colorNeutralBackground1: grey[16],
  colorNeutralBackground1Hover: grey[24],
  colorNeutralBackground1Pressed: grey[12],
  colorNeutralBackground1Selected: grey[22],
  colorNeutralBackground2: grey[14],
  colorNeutralBackground2Hover: grey[22],
  colorNeutralBackground2Pressed: grey[10],
  colorNeutralBackground2Selected: grey[20],
  colorNeutralBackground3: grey[12],
  colorNeutralBackground3Hover: grey[20],
  colorNeutralBackground3Pressed: grey[8],
  colorNeutralBackground3Selected: grey[18],
  colorNeutralBackground4: grey[8],
  colorNeutralBackground4Hover: grey[16],
  colorNeutralBackground4Pressed: grey[4],
  colorNeutralBackground4Selected: grey[14],
  colorNeutralBackground5: grey[4],
  colorNeutralBackground5Hover: grey[12],
  colorNeutralBackground5Pressed: black,
  colorNeutralBackground5Selected: grey[10],
  colorNeutralBackground6: grey[20],
  colorNeutralBackgroundInverted: white,
  colorNeutralBackgroundStatic: grey[24],
  colorNeutralBackgroundAlpha: grey10Alpha[50],
  colorNeutralBackgroundAlpha2: grey12Alpha[70],
  colorSubtleBackground: "transparent",
  colorSubtleBackgroundHover: grey[22],
  colorSubtleBackgroundPressed: grey[18],
  colorSubtleBackgroundSelected: grey[20],
  colorSubtleBackgroundLightAlphaHover: grey14Alpha[80],
  colorSubtleBackgroundLightAlphaPressed: grey14Alpha[50],
  colorSubtleBackgroundLightAlphaSelected: "transparent",
  colorSubtleBackgroundInverted: "transparent",
  colorSubtleBackgroundInvertedHover: blackAlpha[10],
  colorSubtleBackgroundInvertedPressed: blackAlpha[30],
  colorSubtleBackgroundInvertedSelected: blackAlpha[20],
  colorTransparentBackground: "transparent",
  colorTransparentBackgroundHover: "transparent",
  colorTransparentBackgroundPressed: "transparent",
  colorTransparentBackgroundSelected: "transparent",
  colorNeutralBackgroundDisabled: grey[8],
  colorNeutralBackgroundInvertedDisabled: whiteAlpha[10],
  colorNeutralStencil1: grey[34],
  colorNeutralStencil2: grey[20],
  colorNeutralStencil1Alpha: whiteAlpha[10],
  colorNeutralStencil2Alpha: whiteAlpha[5],
  colorBackgroundOverlay: blackAlpha[50],
  colorScrollbarOverlay: whiteAlpha[60],
  colorBrandBackground: brand[70],
  colorBrandBackgroundHover: brand[80],
  colorBrandBackgroundPressed: brand[40],
  colorBrandBackgroundSelected: brand[60],
  colorCompoundBrandBackground: brand[100],
  colorCompoundBrandBackgroundHover: brand[110],
  colorCompoundBrandBackgroundPressed: brand[90],
  colorBrandBackgroundStatic: brand[80],
  colorBrandBackground2: brand[40],
  colorBrandBackgroundInverted: white,
  colorBrandBackgroundInvertedHover: brand[160],
  colorBrandBackgroundInvertedPressed: brand[140],
  colorBrandBackgroundInvertedSelected: brand[150],
  colorNeutralStrokeAccessible: grey[68],
  colorNeutralStrokeAccessibleHover: grey[74],
  colorNeutralStrokeAccessiblePressed: grey[70],
  colorNeutralStrokeAccessibleSelected: brand[100],
  colorNeutralStroke1: grey[40],
  colorNeutralStroke1Hover: grey[46],
  colorNeutralStroke1Pressed: grey[42],
  colorNeutralStroke1Selected: grey[44],
  colorNeutralStroke2: grey[32],
  colorNeutralStroke3: grey[24],
  colorNeutralStrokeOnBrand: grey[16],
  colorNeutralStrokeOnBrand2: white,
  colorNeutralStrokeOnBrand2Hover: white,
  colorNeutralStrokeOnBrand2Pressed: white,
  colorNeutralStrokeOnBrand2Selected: white,
  colorBrandStroke1: brand[100],
  colorBrandStroke2: brand[50],
  colorCompoundBrandStroke: brand[90],
  colorCompoundBrandStrokeHover: brand[100],
  colorCompoundBrandStrokePressed: brand[80],
  colorNeutralStrokeDisabled: grey[26],
  colorNeutralStrokeInvertedDisabled: whiteAlpha[40],
  colorTransparentStroke: "transparent",
  colorTransparentStrokeInteractive: "transparent",
  colorTransparentStrokeDisabled: "transparent",
  colorNeutralStrokeAlpha: whiteAlpha[10],
  colorStrokeFocus1: black,
  colorStrokeFocus2: white,
  colorNeutralShadowAmbient: "rgba(0,0,0,0.24)",
  colorNeutralShadowKey: "rgba(0,0,0,0.28)",
  colorNeutralShadowAmbientLighter: "rgba(0,0,0,0.12)",
  colorNeutralShadowKeyLighter: "rgba(0,0,0,0.14)",
  colorNeutralShadowAmbientDarker: "rgba(0,0,0,0.40)",
  colorNeutralShadowKeyDarker: "rgba(0,0,0,0.48)",
  colorBrandShadowAmbient: "rgba(0,0,0,0.30)",
  colorBrandShadowKey: "rgba(0,0,0,0.25)"
});

// node_modules/@fluentui/tokens/lib/utils/createTeamsDarkTheme.js
var createTeamsDarkTheme = (brand) => {
  const colorTokens = generateColorTokens2(brand);
  return {
    ...borderRadius,
    ...fontSizes,
    ...lineHeights,
    ...fontFamilies,
    ...fontWeights,
    ...strokeWidths,
    ...horizontalSpacings,
    ...verticalSpacings,
    ...durations,
    ...curves,
    ...colorTokens,
    ...colorPaletteTokens2,
    ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),
    ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, "Brand")
  };
};

// node_modules/@fluentui/tokens/lib/themes/teams/darkTheme.js
var teamsDarkTheme = createTeamsDarkTheme(brandTeams);

// node_modules/@fluentui/tokens/lib/alias/highContrastColorPalette.js
var statusColorPaletteTokens3 = statusSharedColorNames.reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background1`]: hcCanvas,
    [`colorPalette${color}Background2`]: hcCanvas,
    [`colorPalette${color}Background3`]: hcCanvasText,
    [`colorPalette${color}Foreground1`]: hcCanvasText,
    [`colorPalette${color}Foreground2`]: hcCanvasText,
    [`colorPalette${color}Foreground3`]: hcCanvasText,
    [`colorPalette${color}BorderActive`]: hcHighlight,
    [`colorPalette${color}Border1`]: hcCanvasText,
    [`colorPalette${color}Border2`]: hcCanvasText
  };
  return Object.assign(acc, sharedColorTokens);
}, {});
statusColorPaletteTokens3.colorPaletteRedForegroundInverted = hcCanvasText;
statusColorPaletteTokens3.colorPaletteGreenForegroundInverted = hcCanvasText;
statusColorPaletteTokens3.colorPaletteYellowForegroundInverted = hcCanvasText;
var personaColorPaletteTokens3 = personaSharedColorNames.reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background2`]: hcCanvas,
    [`colorPalette${color}Foreground2`]: hcCanvasText,
    [`colorPalette${color}BorderActive`]: hcHighlight
  };
  return Object.assign(acc, sharedColorTokens);
}, {});
var colorPaletteTokens3 = {
  ...statusColorPaletteTokens3,
  ...personaColorPaletteTokens3
};

// node_modules/@fluentui/tokens/lib/alias/highContrastColor.js
var generateColorTokens3 = () => ({
  colorNeutralForeground1: hcCanvasText,
  colorNeutralForeground1Hover: hcHighlightText,
  colorNeutralForeground1Pressed: hcHighlightText,
  colorNeutralForeground1Selected: hcHighlightText,
  colorNeutralForeground2: hcCanvasText,
  colorNeutralForeground2Hover: hcHighlightText,
  colorNeutralForeground2Pressed: hcHighlightText,
  colorNeutralForeground2Selected: hcHighlightText,
  colorNeutralForeground2BrandHover: hcHighlightText,
  colorNeutralForeground2BrandPressed: hcHighlightText,
  colorNeutralForeground2BrandSelected: hcHighlightText,
  colorNeutralForeground3: hcCanvasText,
  colorNeutralForeground3Hover: hcHighlightText,
  colorNeutralForeground3Pressed: hcHighlightText,
  colorNeutralForeground3Selected: hcHighlightText,
  colorNeutralForeground3BrandHover: hcHighlightText,
  colorNeutralForeground3BrandPressed: hcHighlightText,
  colorNeutralForeground3BrandSelected: hcHighlightText,
  colorNeutralForeground4: hcCanvasText,
  colorNeutralForegroundDisabled: hcDisabled,
  colorNeutralForegroundInvertedDisabled: hcDisabled,
  colorBrandForegroundLink: hcHyperlink,
  colorBrandForegroundLinkHover: hcHyperlink,
  colorBrandForegroundLinkPressed: hcHyperlink,
  colorBrandForegroundLinkSelected: hcHyperlink,
  colorNeutralForeground2Link: hcHyperlink,
  colorNeutralForeground2LinkHover: hcHyperlink,
  colorNeutralForeground2LinkPressed: hcHyperlink,
  colorNeutralForeground2LinkSelected: hcHyperlink,
  colorCompoundBrandForeground1: hcHighlight,
  colorCompoundBrandForeground1Hover: hcHighlight,
  colorCompoundBrandForeground1Pressed: hcHighlight,
  colorBrandForeground1: hcCanvasText,
  colorBrandForeground2: hcButtonText,
  colorNeutralForeground1Static: hcCanvas,
  colorNeutralForegroundStaticInverted: hcCanvasText,
  colorNeutralForegroundInverted: hcHighlightText,
  colorNeutralForegroundInvertedHover: hcHighlightText,
  colorNeutralForegroundInvertedPressed: hcHighlightText,
  colorNeutralForegroundInvertedSelected: hcHighlightText,
  colorNeutralForegroundInverted2: hcCanvasText,
  colorNeutralForegroundOnBrand: hcButtonText,
  colorNeutralForegroundInvertedLink: hcHyperlink,
  colorNeutralForegroundInvertedLinkHover: hcHyperlink,
  colorNeutralForegroundInvertedLinkPressed: hcHyperlink,
  colorNeutralForegroundInvertedLinkSelected: hcHyperlink,
  colorBrandForegroundInverted: hcCanvasText,
  colorBrandForegroundInvertedHover: hcHighlightText,
  colorBrandForegroundInvertedPressed: hcHighlightText,
  colorBrandForegroundOnLight: hcButtonText,
  colorBrandForegroundOnLightHover: hcHighlightText,
  colorBrandForegroundOnLightPressed: hcHighlightText,
  colorBrandForegroundOnLightSelected: hcHighlightText,
  colorNeutralBackground1: hcCanvas,
  colorNeutralBackground1Hover: hcHighlight,
  colorNeutralBackground1Pressed: hcHighlight,
  colorNeutralBackground1Selected: hcHighlight,
  colorNeutralBackground2: hcCanvas,
  colorNeutralBackground2Hover: hcHighlight,
  colorNeutralBackground2Pressed: hcHighlight,
  colorNeutralBackground2Selected: hcHighlight,
  colorNeutralBackground3: hcCanvas,
  colorNeutralBackground3Hover: hcHighlight,
  colorNeutralBackground3Pressed: hcHighlight,
  colorNeutralBackground3Selected: hcHighlight,
  colorNeutralBackground4: hcCanvas,
  colorNeutralBackground4Hover: hcHighlight,
  colorNeutralBackground4Pressed: hcHighlight,
  colorNeutralBackground4Selected: hcHighlight,
  colorNeutralBackground5: hcCanvas,
  colorNeutralBackground5Hover: hcHighlight,
  colorNeutralBackground5Pressed: hcHighlight,
  colorNeutralBackground5Selected: hcHighlight,
  colorNeutralBackground6: hcCanvas,
  colorNeutralBackgroundInverted: hcCanvas,
  colorNeutralBackgroundStatic: hcCanvas,
  colorNeutralBackgroundAlpha: hcCanvas,
  colorNeutralBackgroundAlpha2: hcCanvas,
  colorSubtleBackground: "transparent",
  colorSubtleBackgroundHover: hcHighlight,
  colorSubtleBackgroundPressed: hcHighlight,
  colorSubtleBackgroundSelected: hcHighlight,
  colorSubtleBackgroundLightAlphaHover: hcHighlight,
  colorSubtleBackgroundLightAlphaPressed: hcHighlight,
  colorSubtleBackgroundLightAlphaSelected: hcHighlight,
  colorSubtleBackgroundInverted: "transparent",
  colorSubtleBackgroundInvertedHover: hcHighlight,
  colorSubtleBackgroundInvertedPressed: hcHighlight,
  colorSubtleBackgroundInvertedSelected: hcHighlight,
  colorTransparentBackground: "transparent",
  colorTransparentBackgroundHover: hcHighlight,
  colorTransparentBackgroundPressed: hcHighlight,
  colorTransparentBackgroundSelected: hcHighlight,
  colorNeutralBackgroundDisabled: hcCanvas,
  colorNeutralBackgroundInvertedDisabled: hcCanvas,
  colorNeutralStencil1: hcCanvasText,
  colorNeutralStencil2: hcCanvasText,
  colorNeutralStencil1Alpha: hcCanvasText,
  colorNeutralStencil2Alpha: hcCanvasText,
  colorBackgroundOverlay: blackAlpha[50],
  colorScrollbarOverlay: hcButtonFace,
  colorBrandBackground: hcButtonFace,
  colorBrandBackgroundHover: hcHighlight,
  colorBrandBackgroundPressed: hcHighlight,
  colorBrandBackgroundSelected: hcHighlight,
  colorCompoundBrandBackground: hcHighlight,
  colorCompoundBrandBackgroundHover: hcHighlight,
  colorCompoundBrandBackgroundPressed: hcHighlight,
  colorBrandBackgroundStatic: hcCanvas,
  colorBrandBackground2: hcButtonFace,
  colorBrandBackgroundInverted: hcButtonFace,
  colorBrandBackgroundInvertedHover: hcHighlight,
  colorBrandBackgroundInvertedPressed: hcHighlight,
  colorBrandBackgroundInvertedSelected: hcHighlight,
  colorNeutralStrokeAccessible: hcCanvasText,
  colorNeutralStrokeAccessibleHover: hcHighlight,
  colorNeutralStrokeAccessiblePressed: hcHighlight,
  colorNeutralStrokeAccessibleSelected: hcHighlight,
  colorNeutralStroke1: hcCanvasText,
  colorNeutralStroke1Hover: hcHighlight,
  colorNeutralStroke1Pressed: hcHighlight,
  colorNeutralStroke1Selected: hcHighlight,
  colorNeutralStroke2: hcCanvasText,
  colorNeutralStroke3: hcCanvasText,
  colorNeutralStrokeOnBrand: hcCanvas,
  colorNeutralStrokeOnBrand2: hcCanvasText,
  colorNeutralStrokeOnBrand2Hover: hcCanvasText,
  colorNeutralStrokeOnBrand2Pressed: hcCanvasText,
  colorNeutralStrokeOnBrand2Selected: hcCanvasText,
  colorBrandStroke1: hcCanvasText,
  colorBrandStroke2: hcCanvasText,
  colorCompoundBrandStroke: hcHighlight,
  colorCompoundBrandStrokeHover: hcHighlight,
  colorCompoundBrandStrokePressed: hcHighlight,
  colorNeutralStrokeDisabled: hcDisabled,
  colorNeutralStrokeInvertedDisabled: hcDisabled,
  colorTransparentStroke: hcCanvasText,
  colorTransparentStrokeInteractive: hcHighlight,
  colorTransparentStrokeDisabled: hcDisabled,
  colorNeutralStrokeAlpha: hcCanvasText,
  colorStrokeFocus1: hcCanvas,
  colorStrokeFocus2: hcHighlight,
  colorNeutralShadowAmbient: "rgba(0,0,0,0.24)",
  colorNeutralShadowKey: "rgba(0,0,0,0.28)",
  colorNeutralShadowAmbientLighter: "rgba(0,0,0,0.12)",
  colorNeutralShadowKeyLighter: "rgba(0,0,0,0.14)",
  colorNeutralShadowAmbientDarker: "rgba(0,0,0,0.40)",
  colorNeutralShadowKeyDarker: "rgba(0,0,0,0.48)",
  colorBrandShadowAmbient: "rgba(0,0,0,0.30)",
  colorBrandShadowKey: "rgba(0,0,0,0.25)"
});

// node_modules/@fluentui/tokens/lib/utils/createHighContrastTheme.js
var createHighContrastTheme = () => {
  const colorTokens = generateColorTokens3();
  return {
    ...borderRadius,
    ...fontSizes,
    ...lineHeights,
    ...fontFamilies,
    ...fontWeights,
    ...strokeWidths,
    ...horizontalSpacings,
    ...verticalSpacings,
    ...durations,
    ...curves,
    ...colorTokens,
    ...colorPaletteTokens3,
    ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),
    ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, "Brand")
  };
};

// node_modules/@fluentui/tokens/lib/themes/teams/highContrastTheme.js
var teamsHighContrastTheme = createHighContrastTheme();

// node_modules/@fluentui/tokens/lib/themes/web/lightTheme.js
var webLightTheme = createLightTheme(brandWeb);

// node_modules/@fluentui/tokens/lib/alias/darkColor.js
var generateColorTokens4 = (brand) => ({
  colorNeutralForeground1: white,
  colorNeutralForeground1Hover: white,
  colorNeutralForeground1Pressed: white,
  colorNeutralForeground1Selected: white,
  colorNeutralForeground2: grey[84],
  colorNeutralForeground2Hover: white,
  colorNeutralForeground2Pressed: white,
  colorNeutralForeground2Selected: white,
  colorNeutralForeground2BrandHover: brand[100],
  colorNeutralForeground2BrandPressed: brand[90],
  colorNeutralForeground2BrandSelected: brand[100],
  colorNeutralForeground3: grey[68],
  colorNeutralForeground3Hover: grey[84],
  colorNeutralForeground3Pressed: grey[84],
  colorNeutralForeground3Selected: grey[84],
  colorNeutralForeground3BrandHover: brand[100],
  colorNeutralForeground3BrandPressed: brand[90],
  colorNeutralForeground3BrandSelected: brand[100],
  colorNeutralForeground4: grey[60],
  colorNeutralForegroundDisabled: grey[36],
  colorNeutralForegroundInvertedDisabled: whiteAlpha[40],
  colorBrandForegroundLink: brand[100],
  colorBrandForegroundLinkHover: brand[110],
  colorBrandForegroundLinkPressed: brand[90],
  colorBrandForegroundLinkSelected: brand[100],
  colorNeutralForeground2Link: grey[84],
  colorNeutralForeground2LinkHover: white,
  colorNeutralForeground2LinkPressed: white,
  colorNeutralForeground2LinkSelected: white,
  colorCompoundBrandForeground1: brand[100],
  colorCompoundBrandForeground1Hover: brand[110],
  colorCompoundBrandForeground1Pressed: brand[90],
  colorBrandForeground1: brand[100],
  colorBrandForeground2: brand[110],
  colorNeutralForeground1Static: grey[14],
  colorNeutralForegroundStaticInverted: white,
  colorNeutralForegroundInverted: grey[14],
  colorNeutralForegroundInvertedHover: grey[14],
  colorNeutralForegroundInvertedPressed: grey[14],
  colorNeutralForegroundInvertedSelected: grey[14],
  colorNeutralForegroundInverted2: grey[14],
  colorNeutralForegroundOnBrand: white,
  colorNeutralForegroundInvertedLink: white,
  colorNeutralForegroundInvertedLinkHover: white,
  colorNeutralForegroundInvertedLinkPressed: white,
  colorNeutralForegroundInvertedLinkSelected: white,
  colorBrandForegroundInverted: brand[80],
  colorBrandForegroundInvertedHover: brand[70],
  colorBrandForegroundInvertedPressed: brand[60],
  colorBrandForegroundOnLight: brand[80],
  colorBrandForegroundOnLightHover: brand[70],
  colorBrandForegroundOnLightPressed: brand[50],
  colorBrandForegroundOnLightSelected: brand[60],
  colorNeutralBackground1: grey[16],
  colorNeutralBackground1Hover: grey[24],
  colorNeutralBackground1Pressed: grey[12],
  colorNeutralBackground1Selected: grey[22],
  colorNeutralBackground2: grey[12],
  colorNeutralBackground2Hover: grey[20],
  colorNeutralBackground2Pressed: grey[8],
  colorNeutralBackground2Selected: grey[18],
  colorNeutralBackground3: grey[8],
  colorNeutralBackground3Hover: grey[16],
  colorNeutralBackground3Pressed: grey[4],
  colorNeutralBackground3Selected: grey[14],
  colorNeutralBackground4: grey[4],
  colorNeutralBackground4Hover: grey[12],
  colorNeutralBackground4Pressed: black,
  colorNeutralBackground4Selected: grey[10],
  colorNeutralBackground5: black,
  colorNeutralBackground5Hover: grey[8],
  colorNeutralBackground5Pressed: grey[2],
  colorNeutralBackground5Selected: grey[6],
  colorNeutralBackground6: grey[20],
  colorNeutralBackgroundInverted: white,
  colorNeutralBackgroundStatic: grey[24],
  colorNeutralBackgroundAlpha: grey10Alpha[50],
  colorNeutralBackgroundAlpha2: grey12Alpha[70],
  colorSubtleBackground: "transparent",
  colorSubtleBackgroundHover: grey[22],
  colorSubtleBackgroundPressed: grey[18],
  colorSubtleBackgroundSelected: grey[20],
  colorSubtleBackgroundLightAlphaHover: grey14Alpha[80],
  colorSubtleBackgroundLightAlphaPressed: grey14Alpha[50],
  colorSubtleBackgroundLightAlphaSelected: "transparent",
  colorSubtleBackgroundInverted: "transparent",
  colorSubtleBackgroundInvertedHover: blackAlpha[10],
  colorSubtleBackgroundInvertedPressed: blackAlpha[30],
  colorSubtleBackgroundInvertedSelected: blackAlpha[20],
  colorTransparentBackground: "transparent",
  colorTransparentBackgroundHover: "transparent",
  colorTransparentBackgroundPressed: "transparent",
  colorTransparentBackgroundSelected: "transparent",
  colorNeutralBackgroundDisabled: grey[8],
  colorNeutralBackgroundInvertedDisabled: whiteAlpha[10],
  colorNeutralStencil1: grey[34],
  colorNeutralStencil2: grey[20],
  colorNeutralStencil1Alpha: whiteAlpha[10],
  colorNeutralStencil2Alpha: whiteAlpha[5],
  colorBackgroundOverlay: blackAlpha[50],
  colorScrollbarOverlay: whiteAlpha[60],
  colorBrandBackground: brand[70],
  colorBrandBackgroundHover: brand[80],
  colorBrandBackgroundPressed: brand[40],
  colorBrandBackgroundSelected: brand[60],
  colorCompoundBrandBackground: brand[100],
  colorCompoundBrandBackgroundHover: brand[110],
  colorCompoundBrandBackgroundPressed: brand[90],
  colorBrandBackgroundStatic: brand[80],
  colorBrandBackground2: brand[40],
  colorBrandBackgroundInverted: white,
  colorBrandBackgroundInvertedHover: brand[160],
  colorBrandBackgroundInvertedPressed: brand[140],
  colorBrandBackgroundInvertedSelected: brand[150],
  colorNeutralStrokeAccessible: grey[68],
  colorNeutralStrokeAccessibleHover: grey[74],
  colorNeutralStrokeAccessiblePressed: grey[70],
  colorNeutralStrokeAccessibleSelected: brand[100],
  colorNeutralStroke1: grey[40],
  colorNeutralStroke1Hover: grey[46],
  colorNeutralStroke1Pressed: grey[42],
  colorNeutralStroke1Selected: grey[44],
  colorNeutralStroke2: grey[32],
  colorNeutralStroke3: grey[24],
  colorNeutralStrokeOnBrand: grey[16],
  colorNeutralStrokeOnBrand2: white,
  colorNeutralStrokeOnBrand2Hover: white,
  colorNeutralStrokeOnBrand2Pressed: white,
  colorNeutralStrokeOnBrand2Selected: white,
  colorBrandStroke1: brand[100],
  colorBrandStroke2: brand[50],
  colorCompoundBrandStroke: brand[100],
  colorCompoundBrandStrokeHover: brand[110],
  colorCompoundBrandStrokePressed: brand[90],
  colorNeutralStrokeDisabled: grey[26],
  colorNeutralStrokeInvertedDisabled: whiteAlpha[40],
  colorTransparentStroke: "transparent",
  colorTransparentStrokeInteractive: "transparent",
  colorTransparentStrokeDisabled: "transparent",
  colorNeutralStrokeAlpha: whiteAlpha[10],
  colorStrokeFocus1: black,
  colorStrokeFocus2: white,
  colorNeutralShadowAmbient: "rgba(0,0,0,0.24)",
  colorNeutralShadowKey: "rgba(0,0,0,0.28)",
  colorNeutralShadowAmbientLighter: "rgba(0,0,0,0.12)",
  colorNeutralShadowKeyLighter: "rgba(0,0,0,0.14)",
  colorNeutralShadowAmbientDarker: "rgba(0,0,0,0.40)",
  colorNeutralShadowKeyDarker: "rgba(0,0,0,0.48)",
  colorBrandShadowAmbient: "rgba(0,0,0,0.30)",
  colorBrandShadowKey: "rgba(0,0,0,0.25)"
});

// node_modules/@fluentui/tokens/lib/utils/createDarkTheme.js
var createDarkTheme = (brand) => {
  const colorTokens = generateColorTokens4(brand);
  return {
    ...borderRadius,
    ...fontSizes,
    ...lineHeights,
    ...fontFamilies,
    ...fontWeights,
    ...strokeWidths,
    ...horizontalSpacings,
    ...verticalSpacings,
    ...durations,
    ...curves,
    ...colorTokens,
    ...colorPaletteTokens2,
    ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),
    ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, "Brand")
  };
};

// node_modules/@fluentui/tokens/lib/themes/web/darkTheme.js
var webDarkTheme = createDarkTheme(brandWeb);

// node_modules/@fluentui/tokens/lib/themeToTokensObject.js
function themeToTokensObject(theme) {
  const tokens2 = {};
  const keys = Object.keys(theme);
  for (const key of keys) {
    tokens2[key] = `var(--${key})`;
  }
  return tokens2;
}

// node_modules/@fluentui/react-tabster/lib/focus/createFocusOutlineStyle.js
var getFocusOutlineStyles = (options) => {
  const {
    outlineRadius,
    outlineColor,
    outlineOffset,
    outlineWidth
  } = options;
  const outlineOffsetTop = (outlineOffset === null || outlineOffset === void 0 ? void 0 : outlineOffset.top) || outlineOffset;
  const outlineOffsetBottom = (outlineOffset === null || outlineOffset === void 0 ? void 0 : outlineOffset.bottom) || outlineOffset;
  const outlineOffsetLeft = (outlineOffset === null || outlineOffset === void 0 ? void 0 : outlineOffset.left) || outlineOffset;
  const outlineOffsetRight = (outlineOffset === null || outlineOffset === void 0 ? void 0 : outlineOffset.right) || outlineOffset;
  return {
    ...shorthands.borderColor("transparent"),
    "::after": {
      content: '""',
      position: "absolute",
      pointerEvents: "none",
      zIndex: 1,
      ...shorthands.borderStyle("solid"),
      ...shorthands.borderWidth(outlineWidth),
      ...shorthands.borderRadius(outlineRadius),
      ...shorthands.borderColor(outlineColor),
      top: !outlineOffset ? `-${outlineWidth}` : `calc(0px - ${outlineWidth} - ${outlineOffsetTop})`,
      bottom: !outlineOffset ? `-${outlineWidth}` : `calc(0px - ${outlineWidth} - ${outlineOffsetBottom})`,
      left: !outlineOffset ? `-${outlineWidth}` : `calc(0px - ${outlineWidth} - ${outlineOffsetLeft})`,
      right: !outlineOffset ? `-${outlineWidth}` : `calc(0px - ${outlineWidth} - ${outlineOffsetRight})`
    }
  };
};
var createFocusOutlineStyle = ({
  selector = defaultOptions.selector,
  style = defaultOptions.style
} = defaultOptions) => createCustomFocusIndicatorStyle(getFocusOutlineStyles({
  outlineColor: tokens.colorStrokeFocus2,
  outlineRadius: tokens.borderRadiusMedium,
  // FIXME: tokens.strokeWidthThick causes some weird bugs
  outlineWidth: "2px",
  ...style
}), {
  selector
});

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js
var React33 = __toESM(require_react());

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js
var React32 = __toESM(require_react());

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderStyles.js
var fluentProviderClassNames = {
  root: "fui-FluentProvider"
};
var useStyles = __styles({
  root: {
    sj55zd: "f19n0e5",
    De3pzq: "fxugw4r",
    fsow6f: ["f1o700av", "fes3tcz"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".f19n0e5{color:var(--colorNeutralForeground1);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var useFluentProviderStyles_unstable = (state) => {
  const renderer = useRenderer();
  const styles = useStyles({
    dir: state.dir,
    renderer
  });
  state.root.className = mergeClasses(fluentProviderClassNames.root, state.themeClassName, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js
var useInsertionEffect2 = React32["useInsertionEffect"] ? React32["useInsertionEffect"] : useIsomorphicLayoutEffect;
var createStyleTag = (target, elementAttributes) => {
  if (!target) {
    return void 0;
  }
  const tag = target.createElement("style");
  Object.keys(elementAttributes).forEach((attrName) => {
    tag.setAttribute(attrName, elementAttributes[attrName]);
  });
  target.head.appendChild(tag);
  return tag;
};
var insertSheet = (tag, rule) => {
  const sheet = tag.sheet;
  if (sheet) {
    if (sheet.cssRules.length > 0) {
      sheet.deleteRule(0);
    }
    sheet.insertRule(rule, 0);
  } else if (true) {
    console.error("FluentProvider: No sheet available on styleTag, styles will not be inserted into DOM.");
  }
};
var useFluentProviderThemeStyleTag = (options) => {
  const {
    targetDocument,
    theme,
    rendererAttributes
  } = options;
  const styleTag = React32.useRef();
  const styleTagId = useId2(fluentProviderClassNames.root);
  const styleElementAttributes = rendererAttributes;
  const cssVarsAsString = React32.useMemo(() => {
    return theme ? Object.keys(theme).reduce((cssVarRule, cssVar) => {
      cssVarRule += `--${cssVar}: ${theme[cssVar]}; `;
      return cssVarRule;
    }, "") : "";
  }, [theme]);
  const rule = `.${styleTagId} { ${cssVarsAsString} }`;
  useHandleSSRStyleElements(targetDocument, styleTagId);
  useInsertionEffect2(() => {
    const ssrStyleElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(styleTagId);
    if (ssrStyleElement) {
      styleTag.current = ssrStyleElement;
    } else {
      styleTag.current = createStyleTag(targetDocument, {
        ...styleElementAttributes,
        id: styleTagId
      });
      if (styleTag.current) {
        insertSheet(styleTag.current, rule);
      }
    }
    return () => {
      var _styleTag_current;
      (_styleTag_current = styleTag.current) === null || _styleTag_current === void 0 ? void 0 : _styleTag_current.remove();
    };
  }, [styleTagId, targetDocument, rule, styleElementAttributes]);
  return {
    styleTagId,
    rule
  };
};
function useHandleSSRStyleElements(targetDocument, styleTagId) {
  React32.useState(() => {
    if (!targetDocument) {
      return;
    }
    const themeStyleElement = targetDocument.getElementById(styleTagId);
    if (themeStyleElement) {
      targetDocument.head.append(themeStyleElement);
    }
  });
}

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js
var useFluentProvider_unstable = (props, ref) => {
  const parentContext = useFluent();
  const parentTheme = useTheme();
  const parentOverrides = useOverrides();
  const parentCustomStyleHooks = useCustomStyleHooks();
  const {
    applyStylesToPortals = true,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable,
    dir = parentContext.dir,
    targetDocument = parentContext.targetDocument,
    theme,
    overrides_unstable: overrides = {}
  } = props;
  const mergedTheme = shallowMerge(parentTheme, theme);
  const mergedOverrides = shallowMerge(parentOverrides, overrides);
  const mergedCustomStyleHooks = shallowMerge(parentCustomStyleHooks, customStyleHooks_unstable);
  React33.useEffect(() => {
    if (mergedTheme === void 0) {
      console.warn(`
      FluentProvider: your "theme" is not defined !
      =============================================
      Make sure your root FluentProvider has set a theme or you're setting the theme in your child FluentProvider.
      `);
    }
  }, []);
  const renderer = useRenderer();
  var _renderer_styleElementAttributes;
  const {
    styleTagId,
    rule
  } = useFluentProviderThemeStyleTag({
    theme: mergedTheme,
    targetDocument,
    rendererAttributes: (_renderer_styleElementAttributes = renderer.styleElementAttributes) !== null && _renderer_styleElementAttributes !== void 0 ? _renderer_styleElementAttributes : {}
  });
  return {
    applyStylesToPortals,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable: mergedCustomStyleHooks,
    dir,
    targetDocument,
    theme: mergedTheme,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    overrides_unstable: mergedOverrides,
    themeClassName: styleTagId,
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ...props,
      dir,
      ref: useMergedRefs(ref, useFocusVisible({
        targetDocument
      }))
    }),
    serverStyleProps: {
      cssRule: rule,
      attributes: {
        ...renderer.styleElementAttributes,
        id: styleTagId
      }
    }
  };
};
function shallowMerge(a, b) {
  if (a && b) {
    return {
      ...a,
      ...b
    };
  }
  if (a) {
    return a;
  }
  return b;
}
function useTheme() {
  return React33.useContext(ThemeContext);
}

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderContextValues.js
var React34 = __toESM(require_react());
function useFluentProviderContextValues_unstable(state) {
  const {
    applyStylesToPortals,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable,
    dir,
    root,
    targetDocument,
    theme,
    themeClassName,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    overrides_unstable
  } = state;
  const provider = React34.useMemo(() => ({
    dir,
    targetDocument
  }), [dir, targetDocument]);
  const [tooltip] = React34.useState(() => ({}));
  return {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    overrides_unstable,
    provider,
    textDirection: dir,
    tooltip,
    theme,
    themeClassName: applyStylesToPortals ? root.className : themeClassName
  };
}

// node_modules/@fluentui/react-provider/lib/components/FluentProvider/FluentProvider.js
var FluentProvider = React35.forwardRef((props, ref) => {
  const state = useFluentProvider_unstable(props, ref);
  useFluentProviderStyles_unstable(state);
  const contextValues = useFluentProviderContextValues_unstable(state);
  return renderFluentProvider_unstable(state, contextValues);
});
FluentProvider.displayName = "FluentProvider";

// node_modules/@fluentui/react-accordion/lib/components/Accordion/Accordion.js
var React41 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/Accordion/renderAccordion.js
var React39 = __toESM(require_react());

// node_modules/@fluentui/react-context-selector/lib/createContext.js
var React36 = __toESM(require_react());
var import_scheduler = __toESM(require_scheduler());
var createProvider = (Original) => {
  const Provider2 = (props) => {
    const valueRef = React36.useRef(props.value);
    const versionRef = React36.useRef(0);
    const contextValue = React36.useRef();
    if (!contextValue.current) {
      contextValue.current = {
        value: valueRef,
        version: versionRef,
        listeners: []
      };
    }
    useIsomorphicLayoutEffect(() => {
      valueRef.current = props.value;
      versionRef.current += 1;
      (0, import_scheduler.unstable_runWithPriority)(import_scheduler.unstable_NormalPriority, () => {
        contextValue.current.listeners.forEach((listener) => {
          listener([versionRef.current, props.value]);
        });
      });
    }, [props.value]);
    return React36.createElement(Original, {
      value: contextValue.current
    }, props.children);
  };
  if (true) {
    Provider2.displayName = "ContextSelector.Provider";
  }
  return Provider2;
};
var createContext10 = (defaultValue) => {
  const context = React36.createContext({
    value: {
      current: defaultValue
    },
    version: {
      current: -1
    },
    listeners: []
  });
  context.Provider = createProvider(context.Provider);
  delete context.Consumer;
  return context;
};

// node_modules/@fluentui/react-context-selector/lib/useContextSelector.js
var React37 = __toESM(require_react());
var useContextSelector = (context, selector) => {
  const contextValue = React37.useContext(context);
  const {
    value: {
      current: value
    },
    version: {
      current: version2
    },
    listeners
  } = contextValue;
  const selected = selector(value);
  const [state, dispatch] = React37.useReducer((prevState, payload) => {
    if (!payload) {
      return [value, selected];
    }
    if (payload[0] <= version2) {
      if (objectIs(prevState[1], selected)) {
        return prevState;
      }
      return [value, selected];
    }
    try {
      if (objectIs(prevState[0], payload[1])) {
        return prevState;
      }
      const nextSelected = selector(payload[1]);
      if (objectIs(prevState[1], nextSelected)) {
        return prevState;
      }
      return [payload[1], nextSelected];
    } catch (e) {
    }
    return [prevState[0], prevState[1]];
  }, [value, selected]);
  if (!objectIs(state[1], selected)) {
    dispatch(void 0);
  }
  useIsomorphicLayoutEffect(() => {
    listeners.push(dispatch);
    return () => {
      const index = listeners.indexOf(dispatch);
      listeners.splice(index, 1);
    };
  }, [listeners]);
  return state[1];
};
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
}
var objectIs = (
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore fallback to native if it exists (not in IE11)
  typeof Object.is === "function" ? Object.is : is
);

// node_modules/@fluentui/react-context-selector/lib/useHasParentContext.js
var React38 = __toESM(require_react());
function useHasParentContext(context) {
  const contextValue = React38.useContext(context);
  if (contextValue.version) {
    return contextValue.version.current !== -1;
  }
  return false;
}

// node_modules/@fluentui/react-accordion/lib/components/Accordion/AccordionContext.js
var AccordionContext = createContext10(void 0);
var accordionContextDefaultValue = {
  openItems: [],
  collapsible: false,
  requestToggle() {
  }
};
var AccordionProvider = AccordionContext.Provider;
var useAccordionContext_unstable = (selector) => useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-accordion/lib/components/Accordion/renderAccordion.js
var renderAccordion_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React39.createElement(slots.root, slotProps.root, React39.createElement(AccordionContext.Provider, {
    value: contextValues.accordion
  }, slotProps.root.children));
};

// node_modules/@fluentui/react-accordion/lib/components/Accordion/useAccordion.js
var React40 = __toESM(require_react());
var useAccordion_unstable = (props, ref) => {
  const {
    openItems: controlledOpenItems,
    defaultOpenItems,
    multiple = false,
    collapsible = false,
    onToggle,
    navigation
  } = props;
  const [openItems, setOpenItems] = useControllableState({
    state: React40.useMemo(() => normalizeValues(controlledOpenItems), [controlledOpenItems]),
    defaultState: () => initializeUncontrolledOpenItems({
      defaultOpenItems,
      multiple
    }),
    initialState: []
  });
  const arrowNavigationProps = useArrowNavigationGroup({
    circular: navigation === "circular",
    tabbable: true
  });
  const requestToggle = useEventCallback((event, data) => {
    onToggle === null || onToggle === void 0 ? void 0 : onToggle(event, data);
    setOpenItems((previousOpenItems) => updateOpenItems(data.value, previousOpenItems, multiple, collapsible));
  });
  return {
    collapsible,
    navigation,
    openItems,
    requestToggle,
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ...props,
      ...navigation ? arrowNavigationProps : {},
      ref
    })
  };
};
function initializeUncontrolledOpenItems({
  defaultOpenItems,
  multiple
}) {
  if (defaultOpenItems !== void 0) {
    if (Array.isArray(defaultOpenItems)) {
      return multiple ? defaultOpenItems : [defaultOpenItems[0]];
    }
    return [defaultOpenItems];
  }
  return [];
}
function updateOpenItems(value, previousOpenItems, multiple, collapsible) {
  if (multiple) {
    if (previousOpenItems.includes(value)) {
      if (previousOpenItems.length > 1 || collapsible) {
        return previousOpenItems.filter((i) => i !== value);
      }
    } else {
      return [...previousOpenItems, value].sort();
    }
  } else {
    return previousOpenItems[0] === value && collapsible ? [] : [value];
  }
  return previousOpenItems;
}
function normalizeValues(index) {
  if (index === void 0) {
    return void 0;
  }
  return Array.isArray(index) ? index : [index];
}

// node_modules/@fluentui/react-accordion/lib/components/Accordion/useAccordionContextValues.js
function useAccordionContextValues_unstable(state) {
  const {
    navigation,
    openItems,
    requestToggle,
    collapsible
  } = state;
  const accordion = {
    navigation,
    openItems,
    requestToggle,
    collapsible
  };
  return {
    accordion
  };
}

// node_modules/@fluentui/react-accordion/lib/components/Accordion/useAccordionStyles.js
var accordionClassNames = {
  root: "fui-Accordion"
};
var useAccordionStyles_unstable = (state) => {
  state.root.className = mergeClasses(accordionClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-accordion/lib/components/Accordion/Accordion.js
var Accordion = React41.forwardRef((props, ref) => {
  const state = useAccordion_unstable(props, ref);
  const contextValues = useAccordionContextValues_unstable(state);
  useAccordionStyles_unstable(state);
  const {
    useAccordionStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderAccordion_unstable(state, contextValues);
});
Accordion.displayName = "Accordion";

// node_modules/@fluentui/react-accordion/lib/components/Accordion/Accordion.types.js
var React42 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/AccordionItem.js
var React47 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/useAccordionItem.js
var React43 = __toESM(require_react());
var useAccordionItem_unstable = (props, ref) => {
  const {
    value,
    disabled = false
  } = props;
  const requestToggle = useAccordionContext_unstable((ctx) => ctx.requestToggle);
  const open = useAccordionContext_unstable((ctx) => ctx.openItems.includes(value));
  const onAccordionHeaderClick = React43.useCallback((ev) => requestToggle(ev, {
    value
  }), [requestToggle, value]);
  return {
    open,
    disabled,
    onHeaderClick: onAccordionHeaderClick,
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props
    })
  };
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/useAccordionItemContextValues.js
var React44 = __toESM(require_react());
function useAccordionItemContextValues_unstable(state) {
  const {
    disabled,
    onHeaderClick,
    open
  } = state;
  const accordionItem = React44.useMemo(() => ({
    disabled,
    onHeaderClick,
    open
  }), [disabled, onHeaderClick, open]);
  return {
    accordionItem
  };
}

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/renderAccordionItem.js
var React46 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/AccordionItemContext.js
var React45 = __toESM(require_react());
var AccordionItemContext = React45.createContext(void 0);
var accordionItemContextDefaultValue = {
  onHeaderClick() {
  },
  open: false,
  disabled: false
};
var AccordionItemProvider = AccordionItemContext.Provider;
var _React_useContext;
var useAccordionItemContext_unstable = () => (_React_useContext = React45.useContext(AccordionItemContext)) !== null && _React_useContext !== void 0 ? _React_useContext : accordionItemContextDefaultValue;

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/renderAccordionItem.js
var renderAccordionItem_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React46.createElement(slots.root, slotProps.root, React46.createElement(AccordionItemContext.Provider, {
    value: contextValues.accordionItem
  }, slotProps.root.children));
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/useAccordionItemStyles.js
var accordionItemClassNames = {
  root: "fui-AccordionItem"
};
var useAccordionItemStyles_unstable = (state) => {
  state.root.className = mergeClasses(accordionItemClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/AccordionItem.js
var AccordionItem = React47.forwardRef((props, ref) => {
  const state = useAccordionItem_unstable(props, ref);
  const contextValues = useAccordionItemContextValues_unstable(state);
  useAccordionItemStyles_unstable(state);
  const {
    useAccordionItemStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderAccordionItem_unstable(state, contextValues);
});
AccordionItem.displayName = "AccordionItem";

// node_modules/@fluentui/react-accordion/lib/components/AccordionItem/AccordionItem.types.js
var React48 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/AccordionHeader.js
var React55 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeader.js
var React51 = __toESM(require_react());

// node_modules/@fluentui/keyboard-keys/lib/keys.js
var Shift = "Shift";
var Enter = "Enter";
var Space = " ";
var Tab = "Tab";
var ArrowDown = "ArrowDown";
var ArrowLeft = "ArrowLeft";
var ArrowRight = "ArrowRight";
var ArrowUp = "ArrowUp";
var End = "End";
var Home = "Home";
var PageDown = "PageDown";
var PageUp = "PageUp";
var Escape = "Escape";

// node_modules/@fluentui/react-aria/lib/button/useARIAButtonProps.js
var React49 = __toESM(require_react());
function useARIAButtonProps(type, props) {
  const {
    disabled,
    disabledFocusable = false,
    ["aria-disabled"]: ariaDisabled,
    onClick,
    onKeyDown,
    onKeyUp,
    ...rest
  } = props !== null && props !== void 0 ? props : {};
  const normalizedARIADisabled = typeof ariaDisabled === "string" ? ariaDisabled === "true" : ariaDisabled;
  const isDisabled = disabled || disabledFocusable || normalizedARIADisabled;
  const handleClick = useEventCallback((ev) => {
    if (isDisabled) {
      ev.preventDefault();
      ev.stopPropagation();
    } else {
      onClick === null || onClick === void 0 ? void 0 : onClick(ev);
    }
  });
  const handleKeyDown = useEventCallback((ev) => {
    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(ev);
    if (ev.isDefaultPrevented()) {
      return;
    }
    const key = ev.key;
    if (isDisabled && (key === Enter || key === Space)) {
      ev.preventDefault();
      ev.stopPropagation();
      return;
    }
    if (key === Space) {
      ev.preventDefault();
      return;
    } else if (key === Enter) {
      ev.preventDefault();
      ev.currentTarget.click();
    }
  });
  const handleKeyUp = useEventCallback((ev) => {
    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp(ev);
    if (ev.isDefaultPrevented()) {
      return;
    }
    const key = ev.key;
    if (isDisabled && (key === Enter || key === Space)) {
      ev.preventDefault();
      ev.stopPropagation();
      return;
    }
    if (key === Space) {
      ev.preventDefault();
      ev.currentTarget.click();
    }
  });
  if (type === "button" || type === void 0) {
    return {
      ...rest,
      disabled: disabled && !disabledFocusable,
      "aria-disabled": disabledFocusable ? true : normalizedARIADisabled,
      // onclick should still use internal handler to ensure prevention if disabled
      // if disabledFocusable then there's no requirement for handlers as those events should not be propagated
      onClick: disabledFocusable ? void 0 : handleClick,
      onKeyUp: disabledFocusable ? void 0 : onKeyUp,
      onKeyDown: disabledFocusable ? void 0 : onKeyDown
    };
  } else {
    const resultProps = {
      role: "button",
      tabIndex: disabled && !disabledFocusable ? void 0 : 0,
      ...rest,
      // If it's not a <button> than listeners are required even with disabledFocusable
      // Since you cannot assure the default behavior of the element
      // E.g: <a> will redirect on click
      onClick: handleClick,
      onKeyUp: handleKeyUp,
      onKeyDown: handleKeyDown,
      "aria-disabled": disabled || disabledFocusable || normalizedARIADisabled
    };
    if (type === "a" && isDisabled) {
      resultProps.href = void 0;
    }
    return resultProps;
  }
}

// node_modules/@fluentui/react-aria/lib/button/useARIAButtonShorthand.js
var useARIAButtonShorthand = (slot, options) => {
  const shorthand = resolveShorthand(slot, options);
  var _shorthand_as;
  const shorthandARIAButton = useARIAButtonProps((_shorthand_as = shorthand === null || shorthand === void 0 ? void 0 : shorthand.as) !== null && _shorthand_as !== void 0 ? _shorthand_as : "button", shorthand);
  return shorthand && shorthandARIAButton;
};

// node_modules/@fluentui/react-aria/lib/button/types.js
var React50 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeader.js
var useAccordionHeader_unstable = (props, ref) => {
  const {
    as,
    icon,
    button,
    expandIcon,
    inline: inline2 = false,
    size: size2 = "medium",
    expandIconPosition = "start"
  } = props;
  const {
    onHeaderClick: onAccordionHeaderClick,
    disabled,
    open
  } = useAccordionItemContext_unstable();
  const disabledFocusable = useAccordionContext_unstable((ctx) => !ctx.collapsible && ctx.openItems.length === 1 && open);
  const {
    dir
  } = useFluent();
  let expandIconRotation;
  if (expandIconPosition === "end") {
    expandIconRotation = open ? -90 : 90;
  } else {
    expandIconRotation = open ? 90 : dir !== "rtl" ? 0 : 180;
  }
  const buttonShorthand = useARIAButtonShorthand(button, {
    required: true,
    defaultProps: {
      disabled,
      disabledFocusable,
      "aria-expanded": open,
      type: "button"
    }
  });
  return {
    disabled,
    open,
    size: size2,
    inline: inline2,
    expandIconPosition,
    components: {
      root: "div",
      button: "button",
      expandIcon: "span",
      icon: "div"
    },
    root: getNativeElementProps(as || "div", {
      ref,
      ...props
    }),
    icon: resolveShorthand(icon),
    expandIcon: resolveShorthand(expandIcon, {
      required: true,
      defaultProps: {
        children: React51.createElement(ChevronRightRegular, {
          style: {
            transform: `rotate(${expandIconRotation}deg)`
          }
        }),
        "aria-hidden": true
      }
    }),
    button: {
      ...buttonShorthand,
      onClick: useEventCallback((ev) => {
        var _buttonShorthand_onClick;
        (_buttonShorthand_onClick = buttonShorthand.onClick) === null || _buttonShorthand_onClick === void 0 ? void 0 : _buttonShorthand_onClick.call(buttonShorthand, ev);
        if (!ev.defaultPrevented) {
          onAccordionHeaderClick(ev);
        }
      })
    }
  };
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/renderAccordionHeader.js
var React53 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/AccordionHeaderContext.js
var React52 = __toESM(require_react());
var AccordionHeaderContext = React52.createContext(void 0);

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/renderAccordionHeader.js
var renderAccordionHeader_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React53.createElement(AccordionHeaderContext.Provider, {
    value: contextValues.accordionHeader
  }, React53.createElement(slots.root, slotProps.root, React53.createElement(slots.button, slotProps.button, state.expandIconPosition === "start" && React53.createElement(slots.expandIcon, slotProps.expandIcon), slots.icon && React53.createElement(slots.icon, slotProps.icon), slotProps.root.children, state.expandIconPosition === "end" && React53.createElement(slots.expandIcon, slotProps.expandIcon))));
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeaderStyles.js
var accordionHeaderClassNames = {
  root: "fui-AccordionHeader",
  button: "fui-AccordionHeader__button",
  expandIcon: "fui-AccordionHeader__expandIcon",
  icon: "fui-AccordionHeader__icon"
};
var useStyles2 = __styles2({
  resetButton: {
    B7ck84d: "f1e4lqlz",
    De3pzq: "f1u2r49w",
    sj55zd: "f1ym3bx4",
    Bahqtrf: "f1mo0ibp",
    Be2twd7: "fjoy568",
    Bg96gwp: "fytdu2e",
    B68tc82: "f1mtd64y",
    Bmxbyg5: "f1y7q3j9",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    Bv0vk6g: "f37px4s",
    fsow6f: "fgusgyc"
  },
  focusIndicator: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bm4h7ae: "f15bsgw9",
    B7ys5i9: "f14e48fq",
    Busjfv9: "f18yb2kv",
    Bhk32uz: "fd6o370",
    Bf4ptjt: "fh1cnn4",
    kclons: ["fy7oxxb", "f184ne2d"],
    Bhdgwq3: "fpukqih",
    Blkhhs4: ["f184ne2d", "fy7oxxb"],
    Bqtpl0w: "frrh606",
    clg4pj: ["f1v5zibi", "fo2hd23"],
    hgwjuy: "ful5kiu",
    Bonggc9: ["fo2hd23", "f1v5zibi"],
    B1tsrr9: ["f1jqcqds", "ftffrms"],
    Dah5zi: ["ftffrms", "f1jqcqds"],
    Bkh64rk: ["f2e7qr6", "fsr1zz6"],
    qqdqy8: ["fsr1zz6", "f2e7qr6"],
    B6dhp37: "f1dvezut",
    i03rao: ["fd0oaoj", "f1cwg4i8"],
    Boxcth7: "fjvm52t",
    Bsom6fd: ["f1cwg4i8", "fd0oaoj"],
    J0r882: "fdiulkx",
    Bjwuhne: "f1yalx80",
    Ghsupd: ["fq22d5a", "f1jw7pan"],
    Bule8hv: ["f1jw7pan", "fq22d5a"]
  },
  root: {
    sj55zd: "f19n0e5",
    De3pzq: "f1c21dwh",
    B6of3ja: "f1hu3pq6",
    t21cq0: ["f11qmguv", "f1tyq0we"],
    jrapky: "f19f4twv",
    Frg6f3: ["f1tyq0we", "f11qmguv"],
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"]
  },
  rootDisabled: {
    Bcmaq0h: "fwrgwhw",
    sj55zd: "f1s2aq7o"
  },
  rootInline: {
    mc9l5x: "f14t3ns0"
  },
  button: {
    qhf8xq: "f10pi13n",
    a9b677: "fly5x3f",
    B4j52fo: "f5ogflp",
    Bekrc4i: ["f1hqa2wf", "finvdd3"],
    Bn0qgzm: "f1f09k3d",
    ibv6hh: ["finvdd3", "f1hqa2wf"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    z8tnut: "f1g0x7ka",
    z189sj: ["fw5db7e", "f1uw59to"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1ng84yb", "f11gcy0p"],
    sshi5w: "f5pgtk9",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Bceei9c: "f1k6fduh",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    B7ck84d: "f1ewtqcl"
  },
  buttonSmall: {
    sshi5w: "f1nxs5xn",
    Be2twd7: "fy9rknc"
  },
  buttonLarge: {
    Bg96gwp: "faaz57k",
    Be2twd7: "fod5ikn"
  },
  buttonExtraLarge: {
    Bg96gwp: "f106mvju",
    Be2twd7: "f1pp30po"
  },
  buttonInline: {
    mc9l5x: "ftuwxu6"
  },
  buttonExpandIconEndNoIcon: {
    uwmqm3: ["f1uw59to", "fw5db7e"]
  },
  buttonExpandIconEnd: {
    z189sj: ["f11gcy0p", "f1ng84yb"]
  },
  expandIcon: {
    Bqenvij: "f1l02sjl",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Bg96gwp: "f106mvju",
    Be2twd7: "f1pp30po"
  },
  expandIconStart: {
    z189sj: ["f1vdfbxk", "f1f5gg8d"]
  },
  expandIconEnd: {
    Bh6795r: "fqerorx",
    Bnnss6s: "f1neuvcm",
    xawz: "flqd7gy",
    mc9l5x: "f22iagw",
    Brf1p80: "f9c4gz4",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"]
  },
  icon: {
    Bqenvij: "f1l02sjl",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Bg96gwp: "f106mvju",
    Be2twd7: "f1pp30po"
  }
}, {
  d: [".f1e4lqlz{box-sizing:content-box;}", ".f1u2r49w{background-color:inherit;}", ".f1ym3bx4{color:inherit;}", ".f1mo0ibp{font-family:inherit;}", ".fjoy568{font-size:inherit;}", ".fytdu2e{line-height:normal;}", ".f1mtd64y{overflow-x:visible;}", ".f1y7q3j9{overflow-y:visible;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".f37px4s{-webkit-appearance:button;}", ".fgusgyc{text-align:unset;}", ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", '.f15bsgw9[data-fui-focus-visible]::after{content:"";}', ".f14e48fq[data-fui-focus-visible]::after{position:absolute;}", ".f18yb2kv[data-fui-focus-visible]::after{pointer-events:none;}", ".fd6o370[data-fui-focus-visible]::after{z-index:1;}", ".fh1cnn4[data-fui-focus-visible]::after{border-top-style:solid;}", ".fy7oxxb[data-fui-focus-visible]::after{border-right-style:solid;}", ".f184ne2d[data-fui-focus-visible]::after{border-left-style:solid;}", ".fpukqih[data-fui-focus-visible]::after{border-bottom-style:solid;}", ".frrh606[data-fui-focus-visible]::after{border-top-width:2px;}", ".f1v5zibi[data-fui-focus-visible]::after{border-right-width:2px;}", ".fo2hd23[data-fui-focus-visible]::after{border-left-width:2px;}", ".ful5kiu[data-fui-focus-visible]::after{border-bottom-width:2px;}", ".f1jqcqds[data-fui-focus-visible]::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".ftffrms[data-fui-focus-visible]::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f2e7qr6[data-fui-focus-visible]::after{border-top-right-radius:var(--borderRadiusMedium);}", ".fsr1zz6[data-fui-focus-visible]::after{border-top-left-radius:var(--borderRadiusMedium);}", ".f1dvezut[data-fui-focus-visible]::after{border-top-color:var(--colorStrokeFocus2);}", ".fd0oaoj[data-fui-focus-visible]::after{border-right-color:var(--colorStrokeFocus2);}", ".f1cwg4i8[data-fui-focus-visible]::after{border-left-color:var(--colorStrokeFocus2);}", ".fjvm52t[data-fui-focus-visible]::after{border-bottom-color:var(--colorStrokeFocus2);}", ".fdiulkx[data-fui-focus-visible]::after{top:-2px;}", ".f1yalx80[data-fui-focus-visible]::after{bottom:-2px;}", ".fq22d5a[data-fui-focus-visible]::after{left:-2px;}", ".f1jw7pan[data-fui-focus-visible]::after{right:-2px;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1hu3pq6{margin-top:0;}", ".f11qmguv{margin-right:0;}", ".f1tyq0we{margin-left:0;}", ".f19f4twv{margin-bottom:0;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".fwrgwhw{background-image:none;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f14t3ns0{display:inline-block;}", ".f10pi13n{position:relative;}", ".fly5x3f{width:100%;}", ".f5ogflp{border-top-width:1px;}", ".f1hqa2wf{border-right-width:1px;}", ".finvdd3{border-left-width:1px;}", ".f1f09k3d{border-bottom-width:1px;}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".f5pgtk9{min-height:44px;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f1k6fduh{cursor:pointer;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1ewtqcl{box-sizing:border-box;}", ".f1nxs5xn{min-height:32px;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".f106mvju{line-height:var(--lineHeightBase500);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".f1l02sjl{height:100%;}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1neuvcm{-webkit-flex-shrink:1;-ms-flex-negative:1;flex-shrink:1;}", ".flqd7gy{-webkit-flex-basis:0%;-ms-flex-preferred-size:0%;flex-basis:0%;}", ".f9c4gz4{-webkit-box-pack:end;-ms-flex-pack:end;-webkit-justify-content:flex-end;justify-content:flex-end;}"],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"]
});
var useAccordionHeaderStyles_unstable = (state) => {
  const styles = useStyles2();
  state.root.className = mergeClasses(accordionHeaderClassNames.root, styles.root, state.inline && styles.rootInline, state.disabled && styles.rootDisabled, state.root.className);
  state.button.className = mergeClasses(accordionHeaderClassNames.button, styles.resetButton, styles.button, styles.focusIndicator, state.expandIconPosition === "end" && !state.icon && styles.buttonExpandIconEndNoIcon, state.expandIconPosition === "end" && styles.buttonExpandIconEnd, state.inline && styles.buttonInline, state.size === "small" && styles.buttonSmall, state.size === "large" && styles.buttonLarge, state.size === "extra-large" && styles.buttonExtraLarge, state.button.className);
  if (state.expandIcon) {
    state.expandIcon.className = mergeClasses(accordionHeaderClassNames.expandIcon, styles.expandIcon, state.expandIconPosition === "start" && styles.expandIconStart, state.expandIconPosition === "end" && styles.expandIconEnd, state.expandIcon.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(accordionHeaderClassNames.icon, styles.icon, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/useAccordionHeaderContextValues.js
var React54 = __toESM(require_react());
function useAccordionHeaderContextValues_unstable(state) {
  const {
    disabled,
    expandIconPosition,
    open,
    size: size2
  } = state;
  const accordionHeader = React54.useMemo(() => ({
    disabled,
    expandIconPosition,
    open,
    size: size2
  }), [disabled, expandIconPosition, open, size2]);
  return {
    accordionHeader
  };
}

// node_modules/@fluentui/react-accordion/lib/components/AccordionHeader/AccordionHeader.js
var AccordionHeader = React55.forwardRef((props, ref) => {
  const state = useAccordionHeader_unstable(props, ref);
  const contextValues = useAccordionHeaderContextValues_unstable(state);
  useAccordionHeaderStyles_unstable(state);
  const {
    useAccordionHeaderStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderAccordionHeader_unstable(state, contextValues);
});
AccordionHeader.displayName = "AccordionHeader";

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/AccordionPanel.js
var React58 = __toESM(require_react());

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/useAccordionPanel.js
var React56 = __toESM(require_react());
var useAccordionPanel_unstable = (props, ref) => {
  const {
    open
  } = useAccordionItemContext_unstable();
  const focusableProps = useTabsterAttributes({
    focusable: {
      excludeFromMover: true
    }
  });
  const navigation = useAccordionContext_unstable((ctx) => ctx.navigation);
  return {
    open,
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props,
      ...navigation && focusableProps
    })
  };
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/renderAccordionPanel.js
var React57 = __toESM(require_react());
var renderAccordionPanel_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return state.open ? React57.createElement(slots.root, slotProps.root, slotProps.root.children) : null;
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/useAccordionPanelStyles.js
var accordionPanelClassNames = {
  root: "fui-AccordionPanel"
};
var useStyles3 = __styles2({
  root: {
    B6of3ja: "f1hu3pq6",
    t21cq0: ["fkujibs", "f199hnxi"],
    jrapky: "f19f4twv",
    Frg6f3: ["f199hnxi", "fkujibs"]
  }
}, {
  d: [".f1hu3pq6{margin-top:0;}", ".fkujibs{margin-right:var(--spacingHorizontalM);}", ".f199hnxi{margin-left:var(--spacingHorizontalM);}", ".f19f4twv{margin-bottom:0;}"]
});
var useAccordionPanelStyles_unstable = (state) => {
  const styles = useStyles3();
  state.root.className = mergeClasses(accordionPanelClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-accordion/lib/components/AccordionPanel/AccordionPanel.js
var AccordionPanel = React58.forwardRef((props, ref) => {
  const state = useAccordionPanel_unstable(props, ref);
  useAccordionPanelStyles_unstable(state);
  const {
    useAccordionPanelStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderAccordionPanel_unstable(state);
});
AccordionPanel.displayName = "AccordionPanel";

// node_modules/@fluentui/react-avatar/lib/components/Avatar/Avatar.js
var React70 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/Avatar/renderAvatar.js
var React59 = __toESM(require_react());
var renderAvatar_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React59.createElement(slots.root, slotProps.root, slots.initials && React59.createElement(slots.initials, slotProps.initials), slots.icon && React59.createElement(slots.icon, slotProps.icon), slots.image && React59.createElement(slots.image, slotProps.image), slots.badge && React59.createElement(slots.badge, slotProps.badge), state.activeAriaLabelElement);
};

// node_modules/@fluentui/react-avatar/lib/components/Avatar/useAvatar.js
var React69 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/utils/getInitials.js
var UNWANTED_ENCLOSURES_REGEX = /[\(\[\{][^\)\]\}]*[\)\]\}]/g;
var UNWANTED_CHARS_REGEX = /[\0-\u001F\!-/:-@\[-`\{-\u00BF\u0250-\u036F\uD800-\uFFFF]/g;
var PHONENUMBER_REGEX = /^\d+[\d\s]*(:?ext|x|)\s*\d+$/i;
var MULTIPLE_WHITESPACES_REGEX = /\s+/g;
var UNSUPPORTED_TEXT_REGEX = /[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\u1100-\u11FF\u3130-\u318F\uA960-\uA97F\uAC00-\uD7AF\uD7B0-\uD7FF\u3040-\u309F\u30A0-\u30FF\u3400-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF]|[\uD840-\uD869][\uDC00-\uDED6]/;
function getInitialsLatin(displayName, isRtl, firstInitialOnly) {
  let initials = "";
  const splits = displayName.split(" ");
  if (splits.length !== 0) {
    initials += splits[0].charAt(0).toUpperCase();
  }
  if (!firstInitialOnly) {
    if (splits.length === 2) {
      initials += splits[1].charAt(0).toUpperCase();
    } else if (splits.length === 3) {
      initials += splits[2].charAt(0).toUpperCase();
    }
  }
  if (isRtl && initials.length > 1) {
    return initials.charAt(1) + initials.charAt(0);
  }
  return initials;
}
function cleanupDisplayName(displayName) {
  displayName = displayName.replace(UNWANTED_ENCLOSURES_REGEX, "");
  displayName = displayName.replace(UNWANTED_CHARS_REGEX, "");
  displayName = displayName.replace(MULTIPLE_WHITESPACES_REGEX, " ");
  displayName = displayName.trim();
  return displayName;
}
function getInitials(displayName, isRtl, options) {
  if (!displayName) {
    return "";
  }
  displayName = cleanupDisplayName(displayName);
  if (UNSUPPORTED_TEXT_REGEX.test(displayName) || !(options === null || options === void 0 ? void 0 : options.allowPhoneInitials) && PHONENUMBER_REGEX.test(displayName)) {
    return "";
  }
  return getInitialsLatin(displayName, isRtl, options === null || options === void 0 ? void 0 : options.firstInitialOnly);
}

// node_modules/@fluentui/react-avatar/lib/utils/partitionAvatarGroupItems.js
var partitionAvatarGroupItems = (options) => {
  const {
    items
  } = options;
  const isPie = options.layout === "pie";
  if (isPie) {
    return {
      inlineItems: items.slice(0, 3),
      overflowItems: items.length > 0 ? items : void 0
    };
  }
  var _options_maxInlineItems;
  const maxInlineItems = (_options_maxInlineItems = options.maxInlineItems) !== null && _options_maxInlineItems !== void 0 ? _options_maxInlineItems : 5;
  const inlineCount = -(maxInlineItems - (items.length > maxInlineItems ? 1 : 0));
  const overflowItems = items.slice(0, inlineCount);
  return {
    inlineItems: items.slice(inlineCount),
    overflowItems: overflowItems.length > 0 ? overflowItems : void 0
  };
};

// node_modules/@fluentui/react-badge/lib/components/Badge/Badge.js
var React62 = __toESM(require_react());

// node_modules/@fluentui/react-badge/lib/components/Badge/useBadge.js
var React60 = __toESM(require_react());
var useBadge_unstable = (props, ref) => {
  const {
    shape = "circular",
    size: size2 = "medium",
    iconPosition = "before",
    appearance = "filled",
    color = "brand"
  } = props;
  const state = {
    shape,
    size: size2,
    iconPosition,
    appearance,
    color,
    components: {
      root: "div",
      icon: "span"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props
    }),
    icon: resolveShorthand(props.icon)
  };
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/Badge/useBadgeStyles.js
var badgeClassNames = {
  root: "fui-Badge",
  icon: "fui-Badge__icon"
};
var textPadding = tokens.spacingHorizontalXXS;
var useRootClassName = __resetStyles("r1iycov", "r115jdol", [".r1iycov{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;box-sizing:border-box;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;position:relative;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase200);height:20px;min-width:20px;padding:0 calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));border-radius:var(--borderRadiusCircular);border-color:var(--colorTransparentStroke);}", '.r1iycov::after{content:"";position:absolute;top:0;left:0;bottom:0;right:0;border-style:solid;border-color:inherit;border-width:var(--strokeWidthThin);border-radius:inherit;}', ".r115jdol{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;box-sizing:border-box;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;position:relative;font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase200);height:20px;min-width:20px;padding:0 calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));border-radius:var(--borderRadiusCircular);border-color:var(--colorTransparentStroke);}", '.r115jdol::after{content:"";position:absolute;top:0;right:0;bottom:0;left:0;border-style:solid;border-color:inherit;border-width:var(--strokeWidthThin);border-radius:inherit;}']);
var useRootStyles = __styles2({
  fontSmallToTiny: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f13mqy1h",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fcpl73t"
  },
  tiny: {
    a9b677: "f16dn6v3",
    Bqenvij: "f3mu39s",
    Be2twd7: "f130uwy9",
    Bg96gwp: "fod1mrr",
    Bf4jedk: "f18p0k4z",
    z8tnut: "f1q8r6hh",
    z189sj: ["fio2s09", "fkiw60q"],
    Byoj8tv: "f9yu9nh",
    uwmqm3: ["fkiw60q", "fio2s09"]
  },
  "extra-small": {
    a9b677: "fpd43o0",
    Bqenvij: "f30q22z",
    Be2twd7: "f1tccstq",
    Bg96gwp: "f1y3arg5",
    Bf4jedk: "f18p0k4z",
    z8tnut: "f1q8r6hh",
    z189sj: ["fio2s09", "fkiw60q"],
    Byoj8tv: "f9yu9nh",
    uwmqm3: ["fkiw60q", "fio2s09"]
  },
  small: {
    Bf4jedk: "fq2vo04",
    Bqenvij: "fd461yt",
    z8tnut: "f1g0x7ka",
    z189sj: ["fps1v9c", "f17ae1jz"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f17ae1jz", "fps1v9c"]
  },
  medium: {},
  large: {
    Bf4jedk: "f17fgpbq",
    Bqenvij: "frvgh55",
    z8tnut: "f1g0x7ka",
    z189sj: ["f17a92cs", "f1pe0i86"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1pe0i86", "f17a92cs"]
  },
  "extra-large": {
    Bf4jedk: "fwbmr0d",
    Bqenvij: "f1d2rq10",
    z8tnut: "f1g0x7ka",
    z189sj: ["fqznh8f", "f1xile11"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1xile11", "fqznh8f"]
  },
  square: {
    Bbmb7ep: ["fzi6hpg", "fyowgf4"],
    Beyfa6y: ["fyowgf4", "fzi6hpg"],
    B7oj6ja: ["f3fg2lr", "f13av6d4"],
    Btl43ni: ["f13av6d4", "f3fg2lr"]
  },
  rounded: {
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"]
  },
  roundedSmallToTiny: {
    Bbmb7ep: ["f1g3puop", "fi2rrw2"],
    Beyfa6y: ["fi2rrw2", "f1g3puop"],
    B7oj6ja: ["f1rstyi9", "f1s4nn1u"],
    Btl43ni: ["f1s4nn1u", "f1rstyi9"]
  },
  circular: {},
  borderGhost: {
    ap17g6: "f10ludwy"
  },
  filled: {},
  "filled-brand": {
    De3pzq: "ffp7eso",
    sj55zd: "f1phragk"
  },
  "filled-danger": {
    De3pzq: "fdl5y0r",
    sj55zd: "f1phragk"
  },
  "filled-important": {
    De3pzq: "f1c73kur",
    sj55zd: "fr0bkrk"
  },
  "filled-informative": {
    De3pzq: "f3vzo32",
    sj55zd: "f11d4kpn"
  },
  "filled-severe": {
    De3pzq: "f1s438gw",
    sj55zd: "f1phragk"
  },
  "filled-subtle": {
    De3pzq: "fxugw4r",
    sj55zd: "f19n0e5"
  },
  "filled-success": {
    De3pzq: "flxk52p",
    sj55zd: "f1phragk"
  },
  "filled-warning": {
    De3pzq: "ffq97bm",
    sj55zd: "ff5vbop"
  },
  ghost: {},
  "ghost-brand": {
    sj55zd: "f16muhyy"
  },
  "ghost-danger": {
    sj55zd: "f1whyuy6"
  },
  "ghost-important": {
    sj55zd: "f19n0e5"
  },
  "ghost-informative": {
    sj55zd: "f11d4kpn"
  },
  "ghost-severe": {
    sj55zd: "f1l8vj45"
  },
  "ghost-subtle": {
    sj55zd: "fonrgv7"
  },
  "ghost-success": {
    sj55zd: "f1m7fhi8"
  },
  "ghost-warning": {
    sj55zd: "fpti2h4"
  },
  outline: {
    g2u3we: "f23ftbb",
    h3c5rm: ["f1gkuv52", "f1p1bl80"],
    B9xav0g: "fioka3i",
    zhjwy3: ["f1p1bl80", "f1gkuv52"]
  },
  "outline-brand": {
    sj55zd: "f16muhyy"
  },
  "outline-danger": {
    sj55zd: "f1whyuy6",
    g2u3we: "fyqpifd",
    h3c5rm: ["f3ukxca", "f1k7dugc"],
    B9xav0g: "f1njxb2b",
    zhjwy3: ["f1k7dugc", "f3ukxca"]
  },
  "outline-important": {
    sj55zd: "f11d4kpn",
    g2u3we: "fq0vr37",
    h3c5rm: ["f1byw159", "f11cr0be"],
    B9xav0g: "f1c1zstj",
    zhjwy3: ["f11cr0be", "f1byw159"]
  },
  "outline-informative": {
    sj55zd: "f11d4kpn",
    g2u3we: "f68mrw8",
    h3c5rm: ["f7pw515", "fw35ms5"],
    B9xav0g: "frpde29",
    zhjwy3: ["fw35ms5", "f7pw515"]
  },
  "outline-severe": {
    sj55zd: "f1l8vj45"
  },
  "outline-subtle": {
    sj55zd: "fonrgv7"
  },
  "outline-success": {
    sj55zd: "f1m7fhi8",
    g2u3we: "f1mmhl11",
    h3c5rm: ["f1tjpp2f", "f1ocn5n7"],
    B9xav0g: "f1gjv25d",
    zhjwy3: ["f1ocn5n7", "f1tjpp2f"]
  },
  "outline-warning": {
    sj55zd: "fpti2h4"
  },
  tint: {},
  "tint-brand": {
    De3pzq: "f16xkysk",
    sj55zd: "faj9fo0",
    g2u3we: "f161y7kd",
    h3c5rm: ["f1c8dzaj", "f1sl6hi9"],
    B9xav0g: "f1619yhw",
    zhjwy3: ["f1sl6hi9", "f1c8dzaj"]
  },
  "tint-danger": {
    De3pzq: "ff0poqj",
    sj55zd: "f1hcrxcs",
    g2u3we: "f1oqjm8o",
    h3c5rm: ["fkgrb8g", "frb5wm0"],
    B9xav0g: "f1iai1ph",
    zhjwy3: ["frb5wm0", "fkgrb8g"]
  },
  "tint-important": {
    De3pzq: "f945g0u",
    sj55zd: "fr0bkrk",
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"]
  },
  "tint-informative": {
    De3pzq: "f1ctqxl6",
    sj55zd: "f11d4kpn",
    g2u3we: "f68mrw8",
    h3c5rm: ["f7pw515", "fw35ms5"],
    B9xav0g: "frpde29",
    zhjwy3: ["fw35ms5", "f7pw515"]
  },
  "tint-severe": {
    De3pzq: "f1xzsg4",
    sj55zd: "f1k5f75o",
    g2u3we: "fxy9dsj",
    h3c5rm: ["f54u6j2", "fcm23ze"],
    B9xav0g: "f4vf0uq",
    zhjwy3: ["fcm23ze", "f54u6j2"]
  },
  "tint-subtle": {
    De3pzq: "fxugw4r",
    sj55zd: "f11d4kpn",
    g2u3we: "f68mrw8",
    h3c5rm: ["f7pw515", "fw35ms5"],
    B9xav0g: "frpde29",
    zhjwy3: ["fw35ms5", "f7pw515"]
  },
  "tint-success": {
    De3pzq: "f2vsrz6",
    sj55zd: "ffmvakt",
    g2u3we: "fdmic9h",
    h3c5rm: ["f196y6m", "fetptd8"],
    B9xav0g: "f1pev5xq",
    zhjwy3: ["fetptd8", "f196y6m"]
  },
  "tint-warning": {
    De3pzq: "f10s6hli",
    sj55zd: "f42v8de",
    g2u3we: "fn9i3n",
    h3c5rm: ["f1aw8cx4", "f51if14"],
    B9xav0g: "fvq8iai",
    zhjwy3: ["f51if14", "f1aw8cx4"]
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fcpl73t{line-height:var(--lineHeightBase100);}", ".f16dn6v3{width:6px;}", ".f3mu39s{height:6px;}", ".f130uwy9{font-size:4px;}", ".fod1mrr{line-height:4px;}", ".f18p0k4z{min-width:unset;}", ".f1q8r6hh{padding-top:unset;}", ".fio2s09{padding-right:unset;}", ".fkiw60q{padding-left:unset;}", ".f9yu9nh{padding-bottom:unset;}", ".fpd43o0{width:10px;}", ".f30q22z{height:10px;}", ".f1tccstq{font-size:6px;}", ".f1y3arg5{line-height:6px;}", ".fq2vo04{min-width:16px;}", ".fd461yt{height:16px;}", ".f1g0x7ka{padding-top:0;}", ".fps1v9c{padding-right:calc(var(--spacingHorizontalXXS) + var(--spacingHorizontalXXS));}", ".f17ae1jz{padding-left:calc(var(--spacingHorizontalXXS) + var(--spacingHorizontalXXS));}", ".f1qch9an{padding-bottom:0;}", ".f17fgpbq{min-width:24px;}", ".frvgh55{height:24px;}", ".f17a92cs{padding-right:calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));}", ".f1pe0i86{padding-left:calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));}", ".fwbmr0d{min-width:32px;}", ".f1d2rq10{height:32px;}", ".fqznh8f{padding-right:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".f1xile11{padding-left:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}", ".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}", ".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}", ".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f1g3puop{border-bottom-right-radius:var(--borderRadiusSmall);}", ".fi2rrw2{border-bottom-left-radius:var(--borderRadiusSmall);}", ".f1rstyi9{border-top-right-radius:var(--borderRadiusSmall);}", ".f1s4nn1u{border-top-left-radius:var(--borderRadiusSmall);}", ".f10ludwy::after{display:none;}", ".ffp7eso{background-color:var(--colorBrandBackground);}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".fdl5y0r{background-color:var(--colorPaletteRedBackground3);}", ".f1c73kur{background-color:var(--colorNeutralForeground1);}", ".fr0bkrk{color:var(--colorNeutralBackground1);}", ".f3vzo32{background-color:var(--colorNeutralBackground5);}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f1s438gw{background-color:var(--colorPaletteDarkOrangeBackground3);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".flxk52p{background-color:var(--colorPaletteGreenBackground3);}", ".ffq97bm{background-color:var(--colorPaletteYellowBackground3);}", ".ff5vbop{color:var(--colorNeutralForeground1Static);}", ".f16muhyy{color:var(--colorBrandForeground1);}", ".f1whyuy6{color:var(--colorPaletteRedForeground3);}", ".f1l8vj45{color:var(--colorPaletteDarkOrangeForeground3);}", ".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".f1m7fhi8{color:var(--colorPaletteGreenForeground3);}", ".fpti2h4{color:var(--colorPaletteYellowForeground2);}", ".f23ftbb{border-top-color:currentColor;}", ".f1gkuv52{border-right-color:currentColor;}", ".f1p1bl80{border-left-color:currentColor;}", ".fioka3i{border-bottom-color:currentColor;}", ".fyqpifd{border-top-color:var(--colorPaletteRedBorder2);}", ".f3ukxca{border-right-color:var(--colorPaletteRedBorder2);}", ".f1k7dugc{border-left-color:var(--colorPaletteRedBorder2);}", ".f1njxb2b{border-bottom-color:var(--colorPaletteRedBorder2);}", ".fq0vr37{border-top-color:var(--colorNeutralStrokeAccessible);}", ".f1byw159{border-right-color:var(--colorNeutralStrokeAccessible);}", ".f11cr0be{border-left-color:var(--colorNeutralStrokeAccessible);}", ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".f68mrw8{border-top-color:var(--colorNeutralStroke2);}", ".f7pw515{border-right-color:var(--colorNeutralStroke2);}", ".fw35ms5{border-left-color:var(--colorNeutralStroke2);}", ".frpde29{border-bottom-color:var(--colorNeutralStroke2);}", ".f1mmhl11{border-top-color:var(--colorPaletteGreenBorder2);}", ".f1tjpp2f{border-right-color:var(--colorPaletteGreenBorder2);}", ".f1ocn5n7{border-left-color:var(--colorPaletteGreenBorder2);}", ".f1gjv25d{border-bottom-color:var(--colorPaletteGreenBorder2);}", ".f16xkysk{background-color:var(--colorBrandBackground2);}", ".faj9fo0{color:var(--colorBrandForeground2);}", ".f161y7kd{border-top-color:var(--colorBrandStroke2);}", ".f1c8dzaj{border-right-color:var(--colorBrandStroke2);}", ".f1sl6hi9{border-left-color:var(--colorBrandStroke2);}", ".f1619yhw{border-bottom-color:var(--colorBrandStroke2);}", ".ff0poqj{background-color:var(--colorPaletteRedBackground1);}", ".f1hcrxcs{color:var(--colorPaletteRedForeground1);}", ".f1oqjm8o{border-top-color:var(--colorPaletteRedBorder1);}", ".fkgrb8g{border-right-color:var(--colorPaletteRedBorder1);}", ".frb5wm0{border-left-color:var(--colorPaletteRedBorder1);}", ".f1iai1ph{border-bottom-color:var(--colorPaletteRedBorder1);}", ".f945g0u{background-color:var(--colorNeutralForeground3);}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".f1ctqxl6{background-color:var(--colorNeutralBackground4);}", ".f1xzsg4{background-color:var(--colorPaletteDarkOrangeBackground1);}", ".f1k5f75o{color:var(--colorPaletteDarkOrangeForeground1);}", ".fxy9dsj{border-top-color:var(--colorPaletteDarkOrangeBorder1);}", ".f54u6j2{border-right-color:var(--colorPaletteDarkOrangeBorder1);}", ".fcm23ze{border-left-color:var(--colorPaletteDarkOrangeBorder1);}", ".f4vf0uq{border-bottom-color:var(--colorPaletteDarkOrangeBorder1);}", ".f2vsrz6{background-color:var(--colorPaletteGreenBackground1);}", ".ffmvakt{color:var(--colorPaletteGreenForeground1);}", ".fdmic9h{border-top-color:var(--colorPaletteGreenBorder1);}", ".f196y6m{border-right-color:var(--colorPaletteGreenBorder1);}", ".fetptd8{border-left-color:var(--colorPaletteGreenBorder1);}", ".f1pev5xq{border-bottom-color:var(--colorPaletteGreenBorder1);}", ".f10s6hli{background-color:var(--colorPaletteYellowBackground1);}", ".f42v8de{color:var(--colorPaletteYellowForeground1);}", ".fn9i3n{border-top-color:var(--colorPaletteYellowBorder1);}", ".f1aw8cx4{border-right-color:var(--colorPaletteYellowBorder1);}", ".f51if14{border-left-color:var(--colorPaletteYellowBorder1);}", ".fvq8iai{border-bottom-color:var(--colorPaletteYellowBorder1);}"]
});
var useIconRootClassName = __resetStyles("rttl5z0", null, [".rttl5z0{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:1;margin:0 calc(-1 * var(--spacingHorizontalXXS));font-size:12px;}"]);
var useIconStyles = __styles2({
  beforeText: {
    t21cq0: ["f1t8l4o1", "f11juvx6"]
  },
  afterText: {
    Frg6f3: ["f11juvx6", "f1t8l4o1"]
  },
  beforeTextXL: {
    t21cq0: ["f1rs9grm", "f1kwmkpi"]
  },
  afterTextXL: {
    Frg6f3: ["f1kwmkpi", "f1rs9grm"]
  },
  tiny: {
    Be2twd7: "f1tccstq"
  },
  "extra-small": {
    Be2twd7: "fnmn6fi"
  },
  small: {
    Be2twd7: "f1ugzwwg"
  },
  medium: {},
  large: {
    Be2twd7: "f4ybsrx"
  },
  "extra-large": {
    Be2twd7: "fe5j1ua"
  }
}, {
  d: [".f1t8l4o1{margin-right:calc(var(--spacingHorizontalXXS) + var(--spacingHorizontalXXS));}", ".f11juvx6{margin-left:calc(var(--spacingHorizontalXXS) + var(--spacingHorizontalXXS));}", ".f1rs9grm{margin-right:calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));}", ".f1kwmkpi{margin-left:calc(var(--spacingHorizontalXS) + var(--spacingHorizontalXXS));}", ".f1tccstq{font-size:6px;}", ".fnmn6fi{font-size:10px;}", ".f1ugzwwg{font-size:12px;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}"]
});
var useBadgeStyles_unstable = (state) => {
  const rootClassName = useRootClassName();
  const rootStyles = useRootStyles();
  const smallToTiny = state.size === "small" || state.size === "extra-small" || state.size === "tiny";
  state.root.className = mergeClasses(badgeClassNames.root, rootClassName, smallToTiny && rootStyles.fontSmallToTiny, rootStyles[state.size], rootStyles[state.shape], state.shape === "rounded" && smallToTiny && rootStyles.roundedSmallToTiny, state.appearance === "ghost" && rootStyles.borderGhost, rootStyles[state.appearance], rootStyles[`${state.appearance}-${state.color}`], state.root.className);
  const iconRootClassName = useIconRootClassName();
  const iconStyles = useIconStyles();
  if (state.icon) {
    let iconPositionClass;
    if (state.root.children) {
      if (state.size === "extra-large") {
        iconPositionClass = state.iconPosition === "after" ? iconStyles.afterTextXL : iconStyles.beforeTextXL;
      } else {
        iconPositionClass = state.iconPosition === "after" ? iconStyles.afterText : iconStyles.beforeText;
      }
    }
    state.icon.className = mergeClasses(badgeClassNames.icon, iconRootClassName, iconPositionClass, iconStyles[state.size], state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/Badge/renderBadge.js
var React61 = __toESM(require_react());
var renderBadge_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React61.createElement(slots.root, slotProps.root, state.iconPosition === "before" && slots.icon && React61.createElement(slots.icon, slotProps.icon), state.root.children, state.iconPosition === "after" && slots.icon && React61.createElement(slots.icon, slotProps.icon));
};

// node_modules/@fluentui/react-badge/lib/components/Badge/Badge.js
var Badge = React62.forwardRef((props, ref) => {
  const state = useBadge_unstable(props, ref);
  useBadgeStyles_unstable(state);
  const {
    useBadgeStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderBadge_unstable(state);
});
Badge.displayName = "Badge";

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/PresenceBadge.js
var React65 = __toESM(require_react());

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/usePresenceBadge.js
var React64 = __toESM(require_react());

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/presenceIcons.js
var React63 = __toESM(require_react());
var presenceAwayRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceAway10Regular,
  "extra-small": PresenceAway10Regular,
  small: PresenceAway12Regular,
  medium: PresenceAway16Regular,
  large: PresenceAway20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceAway20Regular
};
var presenceAwayFilled = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceAway10Filled,
  "extra-small": PresenceAway10Filled,
  small: PresenceAway12Filled,
  medium: PresenceAway16Filled,
  large: PresenceAway20Filled,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceAway20Filled
};
var presenceAvailableRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceAvailable10Regular,
  "extra-small": PresenceAvailable10Regular,
  small: PresenceAvailable12Regular,
  medium: PresenceAvailable16Regular,
  large: PresenceAvailable20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceAvailable20Regular
};
var presenceAvailableFilled = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceAvailable10Filled,
  "extra-small": PresenceAvailable10Filled,
  small: PresenceAvailable12Filled,
  medium: PresenceAvailable16Filled,
  large: PresenceAvailable20Filled,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceAvailable20Filled
};
var presenceBlockedRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceBlocked10Regular,
  "extra-small": PresenceBlocked10Regular,
  small: PresenceBlocked12Regular,
  medium: PresenceBlocked16Regular,
  large: PresenceBlocked20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceBlocked20Regular
};
var presenceBusyFilled = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceBusy10Filled,
  "extra-small": PresenceBusy10Filled,
  small: PresenceBusy12Filled,
  medium: PresenceBusy16Filled,
  large: PresenceBusy20Filled,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceBusy20Filled
};
var presenceDndFilled = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceDnd10Filled,
  "extra-small": PresenceDnd10Filled,
  small: PresenceDnd12Filled,
  medium: PresenceDnd16Filled,
  large: PresenceDnd20Filled,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceDnd20Filled
};
var presenceDndRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceDnd10Regular,
  "extra-small": PresenceDnd10Regular,
  small: PresenceDnd12Regular,
  medium: PresenceDnd16Regular,
  large: PresenceDnd20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceDnd20Regular
};
var presenceOofRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceOof10Regular,
  "extra-small": PresenceOof10Regular,
  small: PresenceOof12Regular,
  medium: PresenceOof16Regular,
  large: PresenceOof20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceOof20Regular
};
var presenceOfflineRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceOffline10Regular,
  "extra-small": PresenceOffline10Regular,
  small: PresenceOffline12Regular,
  medium: PresenceOffline16Regular,
  large: PresenceOffline20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceOffline20Regular
};
var presenceUnknownRegular = {
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  tiny: PresenceUnknown10Regular,
  "extra-small": PresenceUnknown10Regular,
  small: PresenceUnknown12Regular,
  medium: PresenceUnknown16Regular,
  large: PresenceUnknown20Regular,
  // FIXME not all presence icon sizes are available
  // https://github.com/microsoft/fluentui/issues/20650
  "extra-large": PresenceUnknown20Regular
};

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/usePresenceBadge.js
var iconMap = (status, outOfOffice, size2) => {
  switch (status) {
    case "available":
      return outOfOffice ? presenceAvailableRegular[size2] : presenceAvailableFilled[size2];
    case "away":
      return outOfOffice ? presenceAwayRegular[size2] : presenceAwayFilled[size2];
    case "blocked":
      return presenceBlockedRegular[size2];
    case "busy":
      return outOfOffice ? presenceUnknownRegular[size2] : presenceBusyFilled[size2];
    case "do-not-disturb":
      return outOfOffice ? presenceDndRegular[size2] : presenceDndFilled[size2];
    case "offline":
      return presenceOfflineRegular[size2];
    case "out-of-office":
      return presenceOofRegular[size2];
    case "unknown":
      return presenceUnknownRegular[size2];
  }
};
var DEFAULT_STRINGS = {
  busy: "busy",
  "out-of-office": "out of office",
  away: "away",
  available: "available",
  offline: "offline",
  "do-not-disturb": "do not disturb",
  unknown: "unknown",
  blocked: "blocked"
};
var usePresenceBadge_unstable = (props, ref) => {
  const {
    size: size2 = "medium",
    status = "available",
    outOfOffice = false
  } = props;
  const statusText = DEFAULT_STRINGS[status];
  const oofText = props.outOfOffice && props.status !== "out-of-office" ? ` ${DEFAULT_STRINGS["out-of-office"]}` : "";
  const IconElement = iconMap(status, outOfOffice, size2);
  const state = {
    ...useBadge_unstable({
      "aria-label": statusText + oofText,
      role: "img",
      ...props,
      size: size2,
      icon: resolveShorthand(props.icon, {
        defaultProps: {
          children: IconElement ? React64.createElement(IconElement, null) : null
        },
        required: true
      })
    }, ref),
    status,
    outOfOffice
  };
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/usePresenceBadgeStyles.js
var presenceBadgeClassNames = {
  root: "fui-PresenceBadge",
  icon: "fui-PresenceBadge__icon"
};
var getIsBusy = (status) => {
  if (status === "busy" || status === "do-not-disturb" || status === "blocked") {
    return true;
  }
  return false;
};
var useRootClassName2 = __resetStyles("r11sysef", null, [".r11sysef{padding:0;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;box-sizing:border-box;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border-radius:var(--borderRadiusCircular);background-color:var(--colorNeutralBackground1);}", ".r11sysef span{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}"]);
var useStyles4 = __styles2({
  statusBusy: {
    sj55zd: "fvi85wt"
  },
  statusAway: {
    sj55zd: "f14k8a89"
  },
  statusAvailable: {
    sj55zd: "fqa5hgp"
  },
  statusOffline: {
    sj55zd: "f11d4kpn"
  },
  statusOutOfOffice: {
    sj55zd: "fdce8r3"
  },
  statusUnknown: {
    sj55zd: "f11d4kpn"
  },
  outOfOffice: {
    sj55zd: "fr0bkrk"
  },
  outOfOfficeAvailable: {
    sj55zd: "fqa5hgp"
  },
  outOfOfficeBusy: {
    sj55zd: "fvi85wt"
  },
  outOfOfficeUnknown: {
    sj55zd: "f11d4kpn"
  },
  tiny: {
    Bubjx69: "f9ikmtg",
    a9b677: "f16dn6v3",
    B5pe6w7: "fab5kbq",
    p4uzdd: "f1ms1d91"
  },
  large: {
    Bubjx69: "f9ikmtg",
    a9b677: "f64fuq3",
    B5pe6w7: "f1vfi1yj",
    p4uzdd: "f15s34gz"
  },
  extraLarge: {
    Bubjx69: "f9ikmtg",
    a9b677: "f1w9dchk",
    B5pe6w7: "f14efy9b",
    p4uzdd: "fhipgdu"
  }
}, {
  d: [".fvi85wt{color:var(--colorPaletteRedBackground3);}", ".f14k8a89{color:var(--colorPaletteMarigoldBackground3);}", ".fqa5hgp{color:var(--colorPaletteLightGreenForeground3);}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".fdce8r3{color:var(--colorPaletteBerryForeground3);}", ".fr0bkrk{color:var(--colorNeutralBackground1);}", ".f9ikmtg{aspect-ratio:1;}", ".f16dn6v3{width:6px;}", ".fab5kbq svg{width:6px!important;}", ".f1ms1d91 svg{height:6px!important;}", ".f64fuq3{width:20px;}", ".f1vfi1yj svg{width:20px!important;}", ".f15s34gz svg{height:20px!important;}", ".f1w9dchk{width:28px;}", ".f14efy9b svg{width:28px!important;}", ".fhipgdu svg{height:28px!important;}"]
});
var usePresenceBadgeStyles_unstable = (state) => {
  const rootClassName = useRootClassName2();
  const styles = useStyles4();
  const isBusy = getIsBusy(state.status);
  state.root.className = mergeClasses(presenceBadgeClassNames.root, rootClassName, isBusy && styles.statusBusy, state.status === "away" && styles.statusAway, state.status === "available" && styles.statusAvailable, state.status === "offline" && styles.statusOffline, state.status === "out-of-office" && styles.statusOutOfOffice, state.status === "unknown" && styles.statusUnknown, state.outOfOffice && styles.outOfOffice, state.outOfOffice && state.status === "available" && styles.outOfOfficeAvailable, state.outOfOffice && isBusy && styles.outOfOfficeBusy, state.outOfOffice && state.status === "away" && styles.statusAway, state.outOfOffice && state.status === "offline" && styles.statusOffline, state.outOfOffice && state.status === "out-of-office" && styles.statusOutOfOffice, state.outOfOffice && state.status === "unknown" && styles.outOfOfficeUnknown, state.size === "tiny" && styles.tiny, state.size === "large" && styles.large, state.size === "extra-large" && styles.extraLarge, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(presenceBadgeClassNames.icon, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/PresenceBadge/PresenceBadge.js
var PresenceBadge = React65.forwardRef((props, ref) => {
  const state = usePresenceBadge_unstable(props, ref);
  usePresenceBadgeStyles_unstable(state);
  const {
    usePresenceBadgeStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderBadge_unstable(state);
});
PresenceBadge.displayName = "PresenceBadge";

// node_modules/@fluentui/react-badge/lib/components/CounterBadge/CounterBadge.js
var React67 = __toESM(require_react());

// node_modules/@fluentui/react-badge/lib/components/CounterBadge/useCounterBadge.js
var React66 = __toESM(require_react());
var useCounterBadge_unstable = (props, ref) => {
  const {
    shape = "circular",
    appearance = "filled",
    showZero = false,
    overflowCount = 99,
    count = 0,
    dot = false
  } = props;
  const state = {
    ...useBadge_unstable(props, ref),
    shape,
    appearance,
    showZero,
    count,
    dot
  };
  if ((count !== 0 || showZero) && !dot && !state.root.children) {
    state.root.children = count > overflowCount ? `${overflowCount}+` : `${count}`;
  }
  return state;
};

// node_modules/@fluentui/react-badge/lib/components/CounterBadge/useCounterBadgeStyles.js
var counterBadgeClassNames = {
  root: "fui-CounterBadge",
  icon: "fui-CounterBadge__icon"
};
var useStyles5 = __styles2({
  dot: {
    Bf4jedk: "fgfkb25",
    a9b677: "f16dn6v3",
    Bqenvij: "f3mu39s",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"]
  },
  hide: {
    mc9l5x: "fjseox"
  }
}, {
  d: [".fgfkb25{min-width:auto;}", ".f16dn6v3{width:6px;}", ".f3mu39s{height:6px;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".fjseox{display:none;}"]
});
var useCounterBadgeStyles_unstable = (state) => {
  const styles = useStyles5();
  state.root.className = mergeClasses(counterBadgeClassNames.root, state.dot && styles.dot, !state.root.children && !state.dot && styles.hide, state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(counterBadgeClassNames.icon, state.icon.className);
  }
  return useBadgeStyles_unstable(state);
};

// node_modules/@fluentui/react-badge/lib/components/CounterBadge/CounterBadge.js
var CounterBadge = React67.forwardRef((props, ref) => {
  const state = useCounterBadge_unstable(props, ref);
  useCounterBadgeStyles_unstable(state);
  const {
    useCounterBadgeStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderBadge_unstable(state);
});
CounterBadge.displayName = "CounterBadge";

// node_modules/@fluentui/react-avatar/lib/contexts/AvatarContext.js
var React68 = __toESM(require_react());
var avatarContext = React68.createContext(void 0);
var avatarContextDefaultValue = {};
var AvatarContextProvider = avatarContext.Provider;
var _React_useContext2;
var useAvatarContext = () => (_React_useContext2 = React68.useContext(avatarContext)) !== null && _React_useContext2 !== void 0 ? _React_useContext2 : avatarContextDefaultValue;

// node_modules/@fluentui/react-avatar/lib/components/Avatar/useAvatar.js
var DEFAULT_STRINGS2 = {
  active: "active",
  inactive: "inactive"
};
var useAvatar_unstable = (props, ref) => {
  const {
    dir
  } = useFluent();
  const {
    size: contextSize
  } = useAvatarContext();
  const {
    name,
    size: size2 = contextSize !== null && contextSize !== void 0 ? contextSize : 32,
    shape = "circular",
    active = "unset",
    activeAppearance = "ring",
    idForColor
  } = props;
  let {
    color = "neutral"
  } = props;
  if (color === "colorful") {
    var _ref;
    color = avatarColors[getHashCode((_ref = idForColor !== null && idForColor !== void 0 ? idForColor : name) !== null && _ref !== void 0 ? _ref : "") % avatarColors.length];
  }
  const baseId = useId2("avatar-");
  const root = getNativeElementProps(
    "span",
    {
      role: "img",
      id: baseId,
      // aria-label and/or aria-labelledby are resolved below
      ...props,
      ref
    },
    /* excludedPropNames: */
    ["name"]
  );
  const [imageHidden, setImageHidden] = React69.useState(void 0);
  const image = resolveShorthand(props.image, {
    defaultProps: {
      alt: "",
      role: "presentation",
      "aria-hidden": true,
      hidden: imageHidden
    }
  });
  if (image) {
    image.onError = mergeCallbacks(image.onError, () => setImageHidden(true));
    image.onLoad = mergeCallbacks(image.onLoad, () => setImageHidden(void 0));
  }
  let initials = resolveShorthand(props.initials, {
    required: true,
    defaultProps: {
      children: getInitials(name, dir === "rtl", {
        firstInitialOnly: size2 <= 16
      }),
      id: baseId + "__initials"
    }
  });
  if (!(initials === null || initials === void 0 ? void 0 : initials.children)) {
    initials = void 0;
  }
  let icon = void 0;
  if (!initials && (!image || imageHidden)) {
    icon = resolveShorthand(props.icon, {
      required: true,
      defaultProps: {
        children: React69.createElement(PersonRegular, null),
        "aria-hidden": true
      }
    });
  }
  const badge = resolveShorthand(props.badge, {
    defaultProps: {
      size: getBadgeSize(size2),
      id: baseId + "__badge"
    }
  });
  let activeAriaLabelElement;
  if (!root["aria-label"] && !root["aria-labelledby"]) {
    if (name) {
      root["aria-label"] = name;
      if (badge) {
        root["aria-labelledby"] = root.id + " " + badge.id;
      }
    } else if (initials) {
      root["aria-labelledby"] = initials.id + (badge ? " " + badge.id : "");
    }
    if (active === "active" || active === "inactive") {
      const activeText = DEFAULT_STRINGS2[active];
      if (root["aria-labelledby"]) {
        const activeId = baseId + "__active";
        root["aria-labelledby"] += " " + activeId;
        activeAriaLabelElement = React69.createElement("span", {
          hidden: true,
          id: activeId
        }, activeText);
      } else if (root["aria-label"]) {
        root["aria-label"] += " " + activeText;
      }
    }
  }
  return {
    size: size2,
    shape,
    active,
    activeAppearance,
    activeAriaLabelElement,
    color,
    components: {
      root: "span",
      initials: "span",
      icon: "span",
      image: "img",
      badge: PresenceBadge
    },
    root,
    initials,
    icon,
    image,
    badge
  };
};
var getBadgeSize = (size2) => {
  if (size2 >= 96) {
    return "extra-large";
  } else if (size2 >= 64) {
    return "large";
  } else if (size2 >= 56) {
    return "medium";
  } else if (size2 >= 40) {
    return "small";
  } else if (size2 >= 28) {
    return "extra-small";
  } else {
    return "tiny";
  }
};
var avatarColors = ["dark-red", "cranberry", "red", "pumpkin", "peach", "marigold", "gold", "brass", "brown", "forest", "seafoam", "dark-green", "light-teal", "teal", "steel", "blue", "royal-blue", "cornflower", "navy", "lavender", "purple", "grape", "lilac", "pink", "magenta", "plum", "beige", "mink", "platinum", "anchor"];
var getHashCode = (str) => {
  let hashCode = 0;
  for (let len = str.length - 1; len >= 0; len--) {
    const ch = str.charCodeAt(len);
    const shift3 = len % 8;
    hashCode ^= (ch << shift3) + (ch >> 8 - shift3);
  }
  return hashCode;
};

// node_modules/@fluentui/react-avatar/lib/components/Avatar/useAvatarStyles.js
var avatarClassNames = {
  root: "fui-Avatar",
  image: "fui-Avatar__image",
  initials: "fui-Avatar__initials",
  icon: "fui-Avatar__icon",
  badge: "fui-Avatar__badge"
};
var animations = {
  fastOutSlowInMax: tokens.curveDecelerateMax,
  fastOutSlowInMid: tokens.curveDecelerateMid,
  fastOutSlowInMin: tokens.curveDecelerateMin,
  slowOutFastInMax: tokens.curveAccelerateMax,
  slowOutFastInMid: tokens.curveAccelerateMid,
  slowOutFastInMin: tokens.curveAccelerateMin,
  fastEase: tokens.curveEasyEaseMax,
  normalEase: tokens.curveEasyEase,
  nullEasing: tokens.curveLinear
};
var useRootClassName3 = __resetStyles("rz243wu", null, [".rz243wu{display:inline-block;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;position:relative;vertical-align:middle;border-radius:var(--borderRadiusCircular);font-family:var(--fontFamilyBase);font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);width:32px;height:32px;}"]);
var useImageClassName = __resetStyles("r136dc0n", "rjly0nl", [".r136dc0n{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;object-fit:cover;vertical-align:top;}", ".rjly0nl{position:absolute;top:0;right:0;width:100%;height:100%;border-radius:inherit;object-fit:cover;vertical-align:top;}"]);
var useIconInitialsClassName = __resetStyles("rip04v", "r31uzil", [".rip04v{position:absolute;box-sizing:border-box;top:0;left:0;width:100%;height:100%;line-height:1;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;vertical-align:center;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;}", ".r31uzil{position:absolute;box-sizing:border-box;top:0;right:0;width:100%;height:100%;line-height:1;border:var(--strokeWidthThin) solid var(--colorTransparentStroke);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;vertical-align:center;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;}"]);
var useStyles6 = __styles2({
  textCaption2Strong: {
    Be2twd7: "f13mqy1h"
  },
  textCaption1Strong: {
    Be2twd7: "fy9rknc"
  },
  textSubtitle2: {
    Be2twd7: "fod5ikn"
  },
  textSubtitle1: {
    Be2twd7: "f1pp30po"
  },
  textTitle3: {
    Be2twd7: "f1x0m3f5"
  },
  squareSmall: {
    Bbmb7ep: ["f1g3puop", "fi2rrw2"],
    Beyfa6y: ["fi2rrw2", "f1g3puop"],
    B7oj6ja: ["f1rstyi9", "f1s4nn1u"],
    Btl43ni: ["f1s4nn1u", "f1rstyi9"]
  },
  squareMedium: {
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"]
  },
  squareLarge: {
    Bbmb7ep: ["f1ldthgs", "frrelxk"],
    Beyfa6y: ["frrelxk", "f1ldthgs"],
    B7oj6ja: ["fobrfso", "ffisxpw"],
    Btl43ni: ["ffisxpw", "fobrfso"]
  },
  squareXLarge: {
    Bbmb7ep: ["fnivh3a", "fc7yr5o"],
    Beyfa6y: ["fc7yr5o", "fnivh3a"],
    B7oj6ja: ["f1el4m67", "f8yange"],
    Btl43ni: ["f8yange", "f1el4m67"]
  },
  activeOrInactive: {
    Bz10aip: "ftfx35i",
    Bmy1vo4: "fv0atk9",
    B3o57yi: "f1iry5bo",
    Cwk7ip: "f1gyuh7d",
    Hwfdqs: "f1onx1g3",
    Ftih45: "f1wl9k8s",
    Brfgrao: "f1j7ml58",
    Bciustq: "ffi060y",
    Fbdkly: ["f1fzr1x6", "f1f351id"],
    lawp4y: "fchca7p",
    mdwyqc: ["f1f351id", "f1fzr1x6"],
    Budzafs: ["f1kd9phw", "fyf2ch2"],
    r59vdv: ["fyf2ch2", "f1kd9phw"],
    n07z76: ["f1gnrg9b", "f1xx2lx6"],
    ck0cow: ["f1xx2lx6", "f1gnrg9b"],
    B8bqphf: "f1e9wvyh",
    h7gv66: "f1vyz52m",
    Bvy8d8o: "f1rjhkxy",
    B1pumaf: "f1ak47q9",
    B17wnbm: "f1apa6og"
  },
  ring: {
    Bdkvgpv: "f163fonl",
    m598lv: ["f1yq6w5o", "f1jpmc5p"],
    qa3bma: "f11yjt3y",
    Bbv0w2i: ["f1jpmc5p", "f1yq6w5o"]
  },
  ringThick: {
    qehafq: "f1rbtjc9",
    Bicfajf: ["f1wm0e7m", "f1o0l8kp"],
    susq4k: "f1tz5420",
    Biibvgv: ["f1o0l8kp", "f1wm0e7m"],
    B0qfbqy: "f1q30tuz",
    B4f6apu: ["f9c0djs", "fcwzx2y"],
    y0oebl: "f1hdqo1a",
    uvfttm: ["fcwzx2y", "f9c0djs"]
  },
  ringThicker: {
    qehafq: "fk7ejgl",
    Bicfajf: ["f12sbt0w", "f1tnh028"],
    susq4k: "fcrsff4",
    Biibvgv: ["f1tnh028", "f12sbt0w"],
    B0qfbqy: "f1jrge4j",
    B4f6apu: ["fc2vpa6", "f133djwz"],
    y0oebl: "f9hcsm3",
    uvfttm: ["f133djwz", "fc2vpa6"]
  },
  ringThickest: {
    qehafq: "fl3e39p",
    Bicfajf: ["f14m8wrz", "fckzhtt"],
    susq4k: "fnxq6pw",
    Biibvgv: ["fckzhtt", "f14m8wrz"],
    B0qfbqy: "fr6r3yi",
    B4f6apu: ["ftxoq8w", "f4gs2h8"],
    y0oebl: "f9gga8r",
    uvfttm: ["f4gs2h8", "ftxoq8w"]
  },
  shadow4: {
    h8m2vh: "f196qwgu"
  },
  shadow8: {
    h8m2vh: "fut48mo"
  },
  shadow16: {
    h8m2vh: "fh2kfig"
  },
  shadow28: {
    h8m2vh: "f4c2u2p"
  },
  inactive: {
    abs64n: "fp25eh",
    Bz10aip: "f1clczzi",
    Bmy1vo4: "fv0atk9",
    B3o57yi: "f1iry5bo",
    Cwk7ip: "fxm264b",
    Hwfdqs: "f1onx1g3",
    Bwz0kr7: "f1o7dfsw",
    qehafq: "fe3o830",
    Bicfajf: ["fzynn9s", "f1z0ukd1"],
    susq4k: "f1kyqvp9",
    Biibvgv: ["f1z0ukd1", "fzynn9s"],
    vz82u: "f1dhznln",
    B8bqphf: "f1e9wvyh",
    h7gv66: "f1vyz52m",
    Bvy8d8o: "f1yb2g89",
    B1pumaf: "f1ak47q9",
    B17wnbm: "f1apa6og"
  },
  badge: {
    qhf8xq: "f1euv43f",
    B5kzvoi: "f1yab3r1",
    j35jbq: ["f1e31b4d", "f1vgc2s3"],
    E5pizo: "ffo9j2l"
  },
  badgeLarge: {
    E5pizo: "f1nayfl2"
  },
  icon12: {
    Be2twd7: "f1ugzwwg"
  },
  icon16: {
    Be2twd7: "f4ybsrx"
  },
  icon20: {
    Be2twd7: "fe5j1ua"
  },
  icon24: {
    Be2twd7: "f1rt2boy"
  },
  icon28: {
    Be2twd7: "f24l1pt"
  },
  icon32: {
    Be2twd7: "ffl51b"
  },
  icon48: {
    Be2twd7: "f18m8u13"
  }
}, {
  d: [".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f1x0m3f5{font-size:var(--fontSizeBase600);}", ".f1g3puop{border-bottom-right-radius:var(--borderRadiusSmall);}", ".fi2rrw2{border-bottom-left-radius:var(--borderRadiusSmall);}", ".f1rstyi9{border-top-right-radius:var(--borderRadiusSmall);}", ".f1s4nn1u{border-top-left-radius:var(--borderRadiusSmall);}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f1ldthgs{border-bottom-right-radius:var(--borderRadiusLarge);}", ".frrelxk{border-bottom-left-radius:var(--borderRadiusLarge);}", ".fobrfso{border-top-right-radius:var(--borderRadiusLarge);}", ".ffisxpw{border-top-left-radius:var(--borderRadiusLarge);}", ".fnivh3a{border-bottom-right-radius:var(--borderRadiusXLarge);}", ".fc7yr5o{border-bottom-left-radius:var(--borderRadiusXLarge);}", ".f1el4m67{border-top-right-radius:var(--borderRadiusXLarge);}", ".f8yange{border-top-left-radius:var(--borderRadiusXLarge);}", ".ftfx35i{-webkit-transform:perspective(1px);-moz-transform:perspective(1px);-ms-transform:perspective(1px);transform:perspective(1px);}", ".fv0atk9{transition-property:transform,opacity;}", ".f1iry5bo{transition-duration:var(--durationUltraSlow),var(--durationFaster);}", ".f1gyuh7d{transition-delay:var(--curveEasyEaseMax),var(--curveLinear);}", '.f1wl9k8s::before{content:"";}', ".f1j7ml58::before{position:absolute;}", ".ffi060y::before{top:0;}", ".f1fzr1x6::before{left:0;}", ".f1f351id::before{right:0;}", ".fchca7p::before{bottom:0;}", ".f1kd9phw::before{border-bottom-right-radius:inherit;}", ".fyf2ch2::before{border-bottom-left-radius:inherit;}", ".f1gnrg9b::before{border-top-right-radius:inherit;}", ".f1xx2lx6::before{border-top-left-radius:inherit;}", ".f1e9wvyh::before{transition-property:margin,opacity;}", ".f1vyz52m::before{transition-duration:var(--durationUltraSlow),var(--durationSlower);}", ".f1rjhkxy::before{transition-delay:var(--curveEasyEaseMax),var(--curveLinear);}", ".f163fonl::before{border-top-style:solid;}", ".f1yq6w5o::before{border-right-style:solid;}", ".f1jpmc5p::before{border-left-style:solid;}", ".f11yjt3y::before{border-bottom-style:solid;}", ".f1rbtjc9::before{margin-top:calc(-2 * var(--strokeWidthThick));}", ".f1wm0e7m::before{margin-right:calc(-2 * var(--strokeWidthThick));}", ".f1o0l8kp::before{margin-left:calc(-2 * var(--strokeWidthThick));}", ".f1tz5420::before{margin-bottom:calc(-2 * var(--strokeWidthThick));}", ".f1q30tuz::before{border-top-width:var(--strokeWidthThick);}", ".f9c0djs::before{border-right-width:var(--strokeWidthThick);}", ".fcwzx2y::before{border-left-width:var(--strokeWidthThick);}", ".f1hdqo1a::before{border-bottom-width:var(--strokeWidthThick);}", ".fk7ejgl::before{margin-top:calc(-2 * var(--strokeWidthThicker));}", ".f12sbt0w::before{margin-right:calc(-2 * var(--strokeWidthThicker));}", ".f1tnh028::before{margin-left:calc(-2 * var(--strokeWidthThicker));}", ".fcrsff4::before{margin-bottom:calc(-2 * var(--strokeWidthThicker));}", ".f1jrge4j::before{border-top-width:var(--strokeWidthThicker);}", ".fc2vpa6::before{border-right-width:var(--strokeWidthThicker);}", ".f133djwz::before{border-left-width:var(--strokeWidthThicker);}", ".f9hcsm3::before{border-bottom-width:var(--strokeWidthThicker);}", ".fl3e39p::before{margin-top:calc(-2 * var(--strokeWidthThickest));}", ".f14m8wrz::before{margin-right:calc(-2 * var(--strokeWidthThickest));}", ".fckzhtt::before{margin-left:calc(-2 * var(--strokeWidthThickest));}", ".fnxq6pw::before{margin-bottom:calc(-2 * var(--strokeWidthThickest));}", ".fr6r3yi::before{border-top-width:var(--strokeWidthThickest);}", ".ftxoq8w::before{border-right-width:var(--strokeWidthThickest);}", ".f4gs2h8::before{border-left-width:var(--strokeWidthThickest);}", ".f9gga8r::before{border-bottom-width:var(--strokeWidthThickest);}", ".f196qwgu::before{box-shadow:var(--shadow4);}", ".fut48mo::before{box-shadow:var(--shadow8);}", ".fh2kfig::before{box-shadow:var(--shadow16);}", ".f4c2u2p::before{box-shadow:var(--shadow28);}", ".fp25eh{opacity:0.8;}", ".f1clczzi{-webkit-transform:scale(0.875);-moz-transform:scale(0.875);-ms-transform:scale(0.875);transform:scale(0.875);}", ".fxm264b{transition-delay:var(--curveDecelerateMin),var(--curveLinear);}", ".fe3o830::before{margin-top:0;}", ".fzynn9s::before{margin-right:0;}", ".f1z0ukd1::before{margin-left:0;}", ".f1kyqvp9::before{margin-bottom:0;}", ".f1dhznln::before{opacity:0;}", ".f1yb2g89::before{transition-delay:var(--curveDecelerateMin),var(--curveLinear);}", ".f1euv43f{position:absolute;}", ".f1yab3r1{bottom:0;}", ".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".ffo9j2l{box-shadow:0 0 0 var(--strokeWidthThin) var(--colorNeutralBackground1);}", ".f1nayfl2{box-shadow:0 0 0 var(--strokeWidthThick) var(--colorNeutralBackground1);}", ".f1ugzwwg{font-size:12px;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f24l1pt{font-size:28px;}", ".ffl51b{font-size:32px;}", ".f18m8u13{font-size:48px;}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.f1onx1g3{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1ak47q9::before{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1apa6og::before{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1onx1g3{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1o7dfsw{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1ak47q9::before{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1apa6og::before{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]]
});
var useSizeStyles = __styles2({
  "16": {
    a9b677: "fjw5fx7",
    Bqenvij: "fd461yt"
  },
  "20": {
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b"
  },
  "24": {
    a9b677: "fq4mcun",
    Bqenvij: "frvgh55"
  },
  "28": {
    a9b677: "f1w9dchk",
    Bqenvij: "fxldao9"
  },
  "32": {
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10"
  },
  "36": {
    a9b677: "fpdz1er",
    Bqenvij: "f8ljn23"
  },
  "40": {
    a9b677: "feqmc2u",
    Bqenvij: "fbhnoac"
  },
  "48": {
    a9b677: "f124akge",
    Bqenvij: "ff2sm71"
  },
  "56": {
    a9b677: "f1u66zr1",
    Bqenvij: "fzki0ko"
  },
  "64": {
    a9b677: "fa9ln6p",
    Bqenvij: "f16k9i2m"
  },
  "72": {
    a9b677: "fhcae8x",
    Bqenvij: "f1shusfg"
  },
  "96": {
    a9b677: "f1kyr2gn",
    Bqenvij: "fypu0ge"
  },
  "120": {
    a9b677: "fwfqyga",
    Bqenvij: "fjr5b71"
  },
  "128": {
    a9b677: "f1iksgmy",
    Bqenvij: "fele2au"
  }
}, {
  d: [".fjw5fx7{width:16px;}", ".fd461yt{height:16px;}", ".f64fuq3{width:20px;}", ".fjamq6b{height:20px;}", ".fq4mcun{width:24px;}", ".frvgh55{height:24px;}", ".f1w9dchk{width:28px;}", ".fxldao9{height:28px;}", ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}", ".fpdz1er{width:36px;}", ".f8ljn23{height:36px;}", ".feqmc2u{width:40px;}", ".fbhnoac{height:40px;}", ".f124akge{width:48px;}", ".ff2sm71{height:48px;}", ".f1u66zr1{width:56px;}", ".fzki0ko{height:56px;}", ".fa9ln6p{width:64px;}", ".f16k9i2m{height:64px;}", ".fhcae8x{width:72px;}", ".f1shusfg{height:72px;}", ".f1kyr2gn{width:96px;}", ".fypu0ge{height:96px;}", ".fwfqyga{width:120px;}", ".fjr5b71{height:120px;}", ".f1iksgmy{width:128px;}", ".fele2au{height:128px;}"]
});
var useColorStyles = __styles2({
  neutral: {
    sj55zd: "f11d4kpn",
    De3pzq: "f18f03hv",
    Bic5iru: "f1uuiafn"
  },
  brand: {
    sj55zd: "fonrgv7",
    De3pzq: "f1blnnmj",
    Bic5iru: "f1uuiafn"
  },
  "dark-red": {
    sj55zd: "fqjd1y1",
    De3pzq: "f1vq2oo4",
    Bic5iru: "f1t2x9on"
  },
  cranberry: {
    sj55zd: "fg9gses",
    De3pzq: "f1lwxszt",
    Bic5iru: "f1pvshc9"
  },
  red: {
    sj55zd: "f23f7i0",
    De3pzq: "f1q9qhfq",
    Bic5iru: "f1ectbk9"
  },
  pumpkin: {
    sj55zd: "fjnan08",
    De3pzq: "fz91bi3",
    Bic5iru: "fvzpl0b"
  },
  peach: {
    sj55zd: "fknu15p",
    De3pzq: "f1b9nr51",
    Bic5iru: "fwj2kd7"
  },
  marigold: {
    sj55zd: "f9603vw",
    De3pzq: "f3z4w6d",
    Bic5iru: "fr120vy"
  },
  gold: {
    sj55zd: "fmq0uwp",
    De3pzq: "fg50kya",
    Bic5iru: "f8xmmar"
  },
  brass: {
    sj55zd: "f28g5vo",
    De3pzq: "f4w2gd0",
    Bic5iru: "f1hbety2"
  },
  brown: {
    sj55zd: "ftl572b",
    De3pzq: "f14wu1f4",
    Bic5iru: "f1vg3s4g"
  },
  forest: {
    sj55zd: "f1gymlvd",
    De3pzq: "f19ut4y6",
    Bic5iru: "f1m3olm5"
  },
  seafoam: {
    sj55zd: "fnnb6wn",
    De3pzq: "f1n057jc",
    Bic5iru: "f17xiqtr"
  },
  "dark-green": {
    sj55zd: "ff58qw8",
    De3pzq: "f11t05wk",
    Bic5iru: "fx32vyh"
  },
  "light-teal": {
    sj55zd: "f1up9qbj",
    De3pzq: "f42feg1",
    Bic5iru: "f1mkihwv"
  },
  teal: {
    sj55zd: "f135dsb4",
    De3pzq: "f6hvv1p",
    Bic5iru: "fecnooh"
  },
  steel: {
    sj55zd: "f151dlcp",
    De3pzq: "f1lnp8zf",
    Bic5iru: "f15hfgzm"
  },
  blue: {
    sj55zd: "f1rjv50u",
    De3pzq: "f1ggcpy6",
    Bic5iru: "fqproka"
  },
  "royal-blue": {
    sj55zd: "f1emykk5",
    De3pzq: "f12rj61f",
    Bic5iru: "f17v2w59"
  },
  cornflower: {
    sj55zd: "fqsigj7",
    De3pzq: "f8k7hur",
    Bic5iru: "fp0q1mo"
  },
  navy: {
    sj55zd: "f1nj97xi",
    De3pzq: "f19gw0ux",
    Bic5iru: "f1nlym55"
  },
  lavender: {
    sj55zd: "fwctg0i",
    De3pzq: "ff379vm",
    Bic5iru: "f62vk8h"
  },
  purple: {
    sj55zd: "fjrsgpu",
    De3pzq: "f1mzf1e1",
    Bic5iru: "f15zl69q"
  },
  grape: {
    sj55zd: "f1fiiydq",
    De3pzq: "f1o4k8oy",
    Bic5iru: "f53w4j7"
  },
  lilac: {
    sj55zd: "f1res9jt",
    De3pzq: "f1x6mz1o",
    Bic5iru: "fu2771t"
  },
  pink: {
    sj55zd: "fv3fbbi",
    De3pzq: "fydlv6t",
    Bic5iru: "fzflscs"
  },
  magenta: {
    sj55zd: "f1f1fwnz",
    De3pzq: "f4xb6j5",
    Bic5iru: "fb6rmqc"
  },
  plum: {
    sj55zd: "f8ptl6j",
    De3pzq: "fqo8e26",
    Bic5iru: "f1a4gm5b"
  },
  beige: {
    sj55zd: "f1ntv3ld",
    De3pzq: "f101elhj",
    Bic5iru: "f1qpf9z1"
  },
  mink: {
    sj55zd: "f1fscmp",
    De3pzq: "f13g8o5c",
    Bic5iru: "f1l7or83"
  },
  platinum: {
    sj55zd: "f1dr00v2",
    De3pzq: "fkh7blw",
    Bic5iru: "fzrj0iu"
  },
  anchor: {
    sj55zd: "f1f3ti53",
    De3pzq: "fu4yj0j",
    Bic5iru: "f8oz6wf"
  }
}, {
  d: [".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f18f03hv{background-color:var(--colorNeutralBackground6);}", ".f1uuiafn::before{color:var(--colorBrandStroke1);}", ".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".f1blnnmj{background-color:var(--colorBrandBackgroundStatic);}", ".fqjd1y1{color:var(--colorPaletteDarkRedForeground2);}", ".f1vq2oo4{background-color:var(--colorPaletteDarkRedBackground2);}", ".f1t2x9on::before{color:var(--colorPaletteDarkRedBorderActive);}", ".fg9gses{color:var(--colorPaletteCranberryForeground2);}", ".f1lwxszt{background-color:var(--colorPaletteCranberryBackground2);}", ".f1pvshc9::before{color:var(--colorPaletteCranberryBorderActive);}", ".f23f7i0{color:var(--colorPaletteRedForeground2);}", ".f1q9qhfq{background-color:var(--colorPaletteRedBackground2);}", ".f1ectbk9::before{color:var(--colorPaletteRedBorderActive);}", ".fjnan08{color:var(--colorPalettePumpkinForeground2);}", ".fz91bi3{background-color:var(--colorPalettePumpkinBackground2);}", ".fvzpl0b::before{color:var(--colorPalettePumpkinBorderActive);}", ".fknu15p{color:var(--colorPalettePeachForeground2);}", ".f1b9nr51{background-color:var(--colorPalettePeachBackground2);}", ".fwj2kd7::before{color:var(--colorPalettePeachBorderActive);}", ".f9603vw{color:var(--colorPaletteMarigoldForeground2);}", ".f3z4w6d{background-color:var(--colorPaletteMarigoldBackground2);}", ".fr120vy::before{color:var(--colorPaletteMarigoldBorderActive);}", ".fmq0uwp{color:var(--colorPaletteGoldForeground2);}", ".fg50kya{background-color:var(--colorPaletteGoldBackground2);}", ".f8xmmar::before{color:var(--colorPaletteGoldBorderActive);}", ".f28g5vo{color:var(--colorPaletteBrassForeground2);}", ".f4w2gd0{background-color:var(--colorPaletteBrassBackground2);}", ".f1hbety2::before{color:var(--colorPaletteBrassBorderActive);}", ".ftl572b{color:var(--colorPaletteBrownForeground2);}", ".f14wu1f4{background-color:var(--colorPaletteBrownBackground2);}", ".f1vg3s4g::before{color:var(--colorPaletteBrownBorderActive);}", ".f1gymlvd{color:var(--colorPaletteForestForeground2);}", ".f19ut4y6{background-color:var(--colorPaletteForestBackground2);}", ".f1m3olm5::before{color:var(--colorPaletteForestBorderActive);}", ".fnnb6wn{color:var(--colorPaletteSeafoamForeground2);}", ".f1n057jc{background-color:var(--colorPaletteSeafoamBackground2);}", ".f17xiqtr::before{color:var(--colorPaletteSeafoamBorderActive);}", ".ff58qw8{color:var(--colorPaletteDarkGreenForeground2);}", ".f11t05wk{background-color:var(--colorPaletteDarkGreenBackground2);}", ".fx32vyh::before{color:var(--colorPaletteDarkGreenBorderActive);}", ".f1up9qbj{color:var(--colorPaletteLightTealForeground2);}", ".f42feg1{background-color:var(--colorPaletteLightTealBackground2);}", ".f1mkihwv::before{color:var(--colorPaletteLightTealBorderActive);}", ".f135dsb4{color:var(--colorPaletteTealForeground2);}", ".f6hvv1p{background-color:var(--colorPaletteTealBackground2);}", ".fecnooh::before{color:var(--colorPaletteTealBorderActive);}", ".f151dlcp{color:var(--colorPaletteSteelForeground2);}", ".f1lnp8zf{background-color:var(--colorPaletteSteelBackground2);}", ".f15hfgzm::before{color:var(--colorPaletteSteelBorderActive);}", ".f1rjv50u{color:var(--colorPaletteBlueForeground2);}", ".f1ggcpy6{background-color:var(--colorPaletteBlueBackground2);}", ".fqproka::before{color:var(--colorPaletteBlueBorderActive);}", ".f1emykk5{color:var(--colorPaletteRoyalBlueForeground2);}", ".f12rj61f{background-color:var(--colorPaletteRoyalBlueBackground2);}", ".f17v2w59::before{color:var(--colorPaletteRoyalBlueBorderActive);}", ".fqsigj7{color:var(--colorPaletteCornflowerForeground2);}", ".f8k7hur{background-color:var(--colorPaletteCornflowerBackground2);}", ".fp0q1mo::before{color:var(--colorPaletteCornflowerBorderActive);}", ".f1nj97xi{color:var(--colorPaletteNavyForeground2);}", ".f19gw0ux{background-color:var(--colorPaletteNavyBackground2);}", ".f1nlym55::before{color:var(--colorPaletteNavyBorderActive);}", ".fwctg0i{color:var(--colorPaletteLavenderForeground2);}", ".ff379vm{background-color:var(--colorPaletteLavenderBackground2);}", ".f62vk8h::before{color:var(--colorPaletteLavenderBorderActive);}", ".fjrsgpu{color:var(--colorPalettePurpleForeground2);}", ".f1mzf1e1{background-color:var(--colorPalettePurpleBackground2);}", ".f15zl69q::before{color:var(--colorPalettePurpleBorderActive);}", ".f1fiiydq{color:var(--colorPaletteGrapeForeground2);}", ".f1o4k8oy{background-color:var(--colorPaletteGrapeBackground2);}", ".f53w4j7::before{color:var(--colorPaletteGrapeBorderActive);}", ".f1res9jt{color:var(--colorPaletteLilacForeground2);}", ".f1x6mz1o{background-color:var(--colorPaletteLilacBackground2);}", ".fu2771t::before{color:var(--colorPaletteLilacBorderActive);}", ".fv3fbbi{color:var(--colorPalettePinkForeground2);}", ".fydlv6t{background-color:var(--colorPalettePinkBackground2);}", ".fzflscs::before{color:var(--colorPalettePinkBorderActive);}", ".f1f1fwnz{color:var(--colorPaletteMagentaForeground2);}", ".f4xb6j5{background-color:var(--colorPaletteMagentaBackground2);}", ".fb6rmqc::before{color:var(--colorPaletteMagentaBorderActive);}", ".f8ptl6j{color:var(--colorPalettePlumForeground2);}", ".fqo8e26{background-color:var(--colorPalettePlumBackground2);}", ".f1a4gm5b::before{color:var(--colorPalettePlumBorderActive);}", ".f1ntv3ld{color:var(--colorPaletteBeigeForeground2);}", ".f101elhj{background-color:var(--colorPaletteBeigeBackground2);}", ".f1qpf9z1::before{color:var(--colorPaletteBeigeBorderActive);}", ".f1fscmp{color:var(--colorPaletteMinkForeground2);}", ".f13g8o5c{background-color:var(--colorPaletteMinkBackground2);}", ".f1l7or83::before{color:var(--colorPaletteMinkBorderActive);}", ".f1dr00v2{color:var(--colorPalettePlatinumForeground2);}", ".fkh7blw{background-color:var(--colorPalettePlatinumBackground2);}", ".fzrj0iu::before{color:var(--colorPalettePlatinumBorderActive);}", ".f1f3ti53{color:var(--colorPaletteAnchorForeground2);}", ".fu4yj0j{background-color:var(--colorPaletteAnchorBackground2);}", ".f8oz6wf::before{color:var(--colorPaletteAnchorBorderActive);}"]
});
var useAvatarStyles_unstable = (state) => {
  const {
    size: size2,
    shape,
    active,
    activeAppearance,
    color
  } = state;
  const rootClassName = useRootClassName3();
  const imageClassName = useImageClassName();
  const iconInitialsClassName = useIconInitialsClassName();
  const styles = useStyles6();
  const sizeStyles = useSizeStyles();
  const colorStyles = useColorStyles();
  const rootClasses = [rootClassName, size2 !== 32 && sizeStyles[size2], colorStyles[color]];
  if (size2 <= 24) {
    rootClasses.push(styles.textCaption2Strong);
  } else if (size2 <= 28) {
    rootClasses.push(styles.textCaption1Strong);
  } else if (size2 <= 40) {
  } else if (size2 <= 56) {
    rootClasses.push(styles.textSubtitle2);
  } else if (size2 <= 96) {
    rootClasses.push(styles.textSubtitle1);
  } else {
    rootClasses.push(styles.textTitle3);
  }
  if (shape === "square") {
    if (size2 <= 24) {
      rootClasses.push(styles.squareSmall);
    } else if (size2 <= 48) {
      rootClasses.push(styles.squareMedium);
    } else if (size2 <= 72) {
      rootClasses.push(styles.squareLarge);
    } else {
      rootClasses.push(styles.squareXLarge);
    }
  }
  if (active === "active" || active === "inactive") {
    rootClasses.push(styles.activeOrInactive);
    if (activeAppearance === "ring" || activeAppearance === "ring-shadow") {
      rootClasses.push(styles.ring);
      if (size2 <= 48) {
        rootClasses.push(styles.ringThick);
      } else if (size2 <= 64) {
        rootClasses.push(styles.ringThicker);
      } else {
        rootClasses.push(styles.ringThickest);
      }
    }
    if (activeAppearance === "shadow" || activeAppearance === "ring-shadow") {
      if (size2 <= 28) {
        rootClasses.push(styles.shadow4);
      } else if (size2 <= 48) {
        rootClasses.push(styles.shadow8);
      } else if (size2 <= 64) {
        rootClasses.push(styles.shadow16);
      } else {
        rootClasses.push(styles.shadow28);
      }
    }
    if (active === "inactive") {
      rootClasses.push(styles.inactive);
    }
  }
  state.root.className = mergeClasses(avatarClassNames.root, ...rootClasses, state.root.className);
  if (state.badge) {
    state.badge.className = mergeClasses(avatarClassNames.badge, styles.badge, size2 >= 64 && styles.badgeLarge, state.badge.className);
  }
  if (state.image) {
    state.image.className = mergeClasses(avatarClassNames.image, imageClassName, state.image.className);
  }
  if (state.initials) {
    state.initials.className = mergeClasses(avatarClassNames.initials, iconInitialsClassName, state.initials.className);
  }
  if (state.icon) {
    let iconSizeClass;
    if (size2 <= 16) {
      iconSizeClass = styles.icon12;
    } else if (size2 <= 24) {
      iconSizeClass = styles.icon16;
    } else if (size2 <= 40) {
      iconSizeClass = styles.icon20;
    } else if (size2 <= 48) {
      iconSizeClass = styles.icon24;
    } else if (size2 <= 56) {
      iconSizeClass = styles.icon28;
    } else if (size2 <= 72) {
      iconSizeClass = styles.icon32;
    } else {
      iconSizeClass = styles.icon48;
    }
    state.icon.className = mergeClasses(avatarClassNames.icon, iconInitialsClassName, iconSizeClass, state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-avatar/lib/components/Avatar/Avatar.js
var Avatar = React70.forwardRef((props, ref) => {
  const state = useAvatar_unstable(props, ref);
  useAvatarStyles_unstable(state);
  const {
    useAvatarStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderAvatar_unstable(state);
});
Avatar.displayName = "Avatar";

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/AvatarGroup.js
var React73 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/renderAvatarGroup.js
var React71 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/contexts/AvatarGroupContext.js
var AvatarGroupContext = createContext10(void 0);
var avatarGroupContextDefaultValue = {};
var AvatarGroupProvider = AvatarGroupContext.Provider;
var useAvatarGroupContext_unstable = (selector) => useContextSelector(AvatarGroupContext, (ctx = avatarGroupContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/renderAvatarGroup.js
var renderAvatarGroup_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React71.createElement(AvatarGroupProvider, {
    value: contextValues.avatarGroup
  }, React71.createElement(slots.root, slotProps.root));
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/useAvatarGroup.js
var React72 = __toESM(require_react());
var useAvatarGroup_unstable = (props, ref) => {
  const {
    layout = "spread",
    size: size2 = defaultAvatarGroupSize
  } = props;
  const root = getNativeElementProps("div", {
    role: "group",
    ...props,
    ref
  }, ["size"]);
  return {
    layout,
    size: size2,
    components: {
      root: "div"
    },
    root
  };
};
var defaultAvatarGroupSize = 32;

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/useAvatarGroupContextValues.js
var useAvatarGroupContextValues = (state) => {
  const {
    layout,
    size: size2
  } = state;
  const avatarGroup = {
    layout,
    size: size2
  };
  return {
    avatarGroup
  };
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/useAvatarGroupStyles.js
var avatarGroupClassNames = {
  root: "fui-AvatarGroup"
};
var useStyles7 = __styles2({
  base: {
    mc9l5x: "ftuwxu6",
    qhf8xq: "f10pi13n"
  },
  pie: {
    Bgl5zvf: "f1uz6ud1",
    De3pzq: "f1ganh6p",
    Bsw6fvg: "fe2ae1k"
  }
}, {
  d: [".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".f10pi13n{position:relative;}", ".f1uz6ud1{-webkit-clip-path:circle(50%);clip-path:circle(50%);}", ".f1ganh6p{background-color:var(--colorTransparentStroke);}"],
  m: [["@media (forced-colors: active){.fe2ae1k{background-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useAvatarGroupStyles_unstable = (state) => {
  const {
    layout,
    size: size2
  } = state;
  const styles = useStyles7();
  const sizeStyles = useSizeStyles();
  state.root.className = mergeClasses(avatarGroupClassNames.root, styles.base, layout === "pie" && sizeStyles[size2], layout === "pie" && styles.pie, state.root.className);
  return state;
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroup/AvatarGroup.js
var AvatarGroup = React73.forwardRef((props, ref) => {
  const state = useAvatarGroup_unstable(props, ref);
  const contextValues = useAvatarGroupContextValues(state);
  useAvatarGroupStyles_unstable(state);
  const {
    useAvatarGroupStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderAvatarGroup_unstable(state, contextValues);
});
AvatarGroup.displayName = "AvatarGroup";

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/AvatarGroupItem.js
var React76 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/renderAvatarGroupItem.js
var React74 = __toESM(require_react());
var renderAvatarGroupItem_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React74.createElement(slots.root, slotProps.root, React74.createElement(slots.avatar, slotProps.avatar), state.isOverflowItem && React74.createElement(slots.overflowLabel, slotProps.overflowLabel));
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/useAvatarGroupItem.js
var React75 = __toESM(require_react());
var useAvatarGroupItem_unstable = (props, ref) => {
  const groupIsOverflow = useAvatarGroupContext_unstable((ctx) => ctx.isOverflow);
  const groupSize = useAvatarGroupContext_unstable((ctx) => ctx.size);
  const layout = useAvatarGroupContext_unstable((ctx) => ctx.layout);
  const {
    style,
    className,
    ...avatarSlotProps
  } = props;
  const size2 = groupSize !== null && groupSize !== void 0 ? groupSize : defaultAvatarGroupSize;
  const hasAvatarGroupContext = useHasParentContext(AvatarGroupContext);
  if (!hasAvatarGroupContext) {
    console.warn("AvatarGroupItem must only be used inside an AvatarGroup component.");
  }
  return {
    isOverflowItem: groupIsOverflow,
    layout,
    size: size2,
    components: {
      root: groupIsOverflow ? "li" : "div",
      avatar: Avatar,
      overflowLabel: "span"
    },
    root: resolveShorthand(props.root, {
      required: true,
      defaultProps: {
        style,
        className
      }
    }),
    avatar: resolveShorthand(props.avatar, {
      required: true,
      defaultProps: {
        ref,
        size: size2,
        color: "colorful",
        ...avatarSlotProps
      }
    }),
    overflowLabel: resolveShorthand(props.overflowLabel, {
      required: true,
      defaultProps: {
        // Avatar already has its aria-label set to the name, this will prevent the name to be read twice.
        "aria-hidden": true,
        children: props.name
      }
    })
  };
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/useAvatarGroupItemStyles.js
var avatarGroupItemClassNames = {
  root: "fui-AvatarGroupItem",
  avatar: "fui-AvatarGroupItem__avatar",
  overflowLabel: "fui-AvatarGroupItem__overflowLabel"
};
var useRootStyles2 = __styles2({
  base: {
    Bt984gj: "f122n59",
    mc9l5x: "ftuwxu6",
    Bnnss6s: "fi64zpg",
    qhf8xq: "f10pi13n"
  },
  overflowItem: {
    z8tnut: "f1ywm7hm",
    z189sj: ["f7x41pl", "fruq291"],
    Byoj8tv: "f14wxoun",
    uwmqm3: ["fruq291", "f7x41pl"]
  },
  nonOverflowItem: {
    Bbmb7ep: ["f8fbkgy", "f1nfllo7"],
    Beyfa6y: ["f1nfllo7", "f8fbkgy"],
    B7oj6ja: ["f1djnp8u", "f1s8kh49"],
    Btl43ni: ["f1s8kh49", "f1djnp8u"]
  }
}, {
  d: [".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".fi64zpg{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}", ".f10pi13n{position:relative;}", ".f1ywm7hm{padding-top:var(--spacingVerticalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".f14wxoun{padding-bottom:var(--spacingVerticalXS);}", ".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}", ".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}"]
});
var useAvatarStyles = __styles2({
  nonOverflowItem: {
    qhf8xq: "f1euv43f"
  },
  pie: {
    Bbmb7ep: ["f1krrbdw", "f1deotkl"],
    Beyfa6y: ["f1deotkl", "f1krrbdw"],
    B7oj6ja: ["f10ostut", "f1ozlkrg"],
    Btl43ni: ["f1ozlkrg", "f10ostut"]
  }
}, {
  d: [".f1euv43f{position:absolute;}", ".f1krrbdw{border-bottom-right-radius:0;}", ".f1deotkl{border-bottom-left-radius:0;}", ".f10ostut{border-top-right-radius:0;}", ".f1ozlkrg{border-top-left-radius:0;}"]
});
var useOverflowLabelStyles = __styles2({
  base: {
    Frg6f3: ["foyynoy", "f1vcna3q"],
    sj55zd: "f19n0e5",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".foyynoy{margin-left:var(--spacingHorizontalS);}", ".f1vcna3q{margin-right:var(--spacingHorizontalS);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var useStackStyles = __styles2({
  thick: {
    E5pizo: "foiuzp5"
  },
  thicker: {
    E5pizo: "f1x6o7w7"
  },
  thickest: {
    E5pizo: "f2aml1u"
  },
  xxs: {
    jhia2w: ["f1cjco14", "f13dxjc9"]
  },
  xs: {
    jhia2w: ["f15p6bln", "f1bab3ru"]
  },
  s: {
    jhia2w: ["f1v53ncc", "f17pu8r8"]
  },
  l: {
    jhia2w: ["flv48ch", "fnh1ydj"]
  }
}, {
  d: [".foiuzp5{box-shadow:0 0 0 var(--strokeWidthThick) var(--colorNeutralBackground2);}", ".f1x6o7w7{box-shadow:0 0 0 var(--strokeWidthThicker) var(--colorNeutralBackground2);}", ".f2aml1u{box-shadow:0 0 0 var(--strokeWidthThickest) var(--colorNeutralBackground2);}", ".f1cjco14:not(:first-child){margin-left:calc(-1 * var(--spacingHorizontalXXS));}", ".f13dxjc9:not(:first-child){margin-right:calc(-1 * var(--spacingHorizontalXXS));}", ".f15p6bln:not(:first-child){margin-left:calc(-1 * var(--spacingHorizontalXS));}", ".f1bab3ru:not(:first-child){margin-right:calc(-1 * var(--spacingHorizontalXS));}", ".f1v53ncc:not(:first-child){margin-left:calc(-1 * var(--spacingHorizontalS));}", ".f17pu8r8:not(:first-child){margin-right:calc(-1 * var(--spacingHorizontalS));}", ".flv48ch:not(:first-child){margin-left:calc(-1 * var(--spacingHorizontalL));}", ".fnh1ydj:not(:first-child){margin-right:calc(-1 * var(--spacingHorizontalL));}"]
});
var useSpreadStyles = __styles2({
  s: {
    jhia2w: ["f7lhxv7", "f6ou2b0"]
  },
  mNudge: {
    jhia2w: ["f1h0okno", "fnnqava"]
  },
  m: {
    jhia2w: ["f1wkt588", "f1maio5g"]
  },
  l: {
    jhia2w: ["f1l333zn", "f1r41m4c"]
  },
  xl: {
    jhia2w: ["fahr13a", "f2n7rbo"]
  }
}, {
  d: [".f7lhxv7:not(:first-child){margin-left:var(--spacingHorizontalS);}", ".f6ou2b0:not(:first-child){margin-right:var(--spacingHorizontalS);}", ".f1h0okno:not(:first-child){margin-left:var(--spacingHorizontalMNudge);}", ".fnnqava:not(:first-child){margin-right:var(--spacingHorizontalMNudge);}", ".f1wkt588:not(:first-child){margin-left:var(--spacingHorizontalM);}", ".f1maio5g:not(:first-child){margin-right:var(--spacingHorizontalM);}", ".f1l333zn:not(:first-child){margin-left:var(--spacingHorizontalL);}", ".f1r41m4c:not(:first-child){margin-right:var(--spacingHorizontalL);}", ".fahr13a:not(:first-child){margin-left:var(--spacingHorizontalXL);}", ".f2n7rbo:not(:first-child){margin-right:var(--spacingHorizontalXL);}"]
});
var usePieStyles = __styles2({
  base: {
    qhf8xq: "f1euv43f"
  },
  slices: {
    B3gf25r: "f16m7w7k",
    Be2twx7: ["f1o4hhgz", "fb4gjrz"],
    Bvaow4n: "f1pgb5nx",
    Gpecfs: ["fugirid", "f4sk99m"],
    bhabj1: "fjreaf3",
    B7rc6i7: ["f1k4vw81", "f1w1xcy7"],
    Bwrfys5: "f1ef8vxk",
    Bwuzm9m: ["f1x2qbfv", "f1xwf4nz"],
    fflka: "ff6xuso",
    do7bja: "fzpvk6c",
    Be8zqhl: "f4onu7f",
    Bij0kh0: ["f1ydfez1", "fjensob"],
    Bwexnyt: "f1yv732j",
    Bhe5x6o: "fchq2fj",
    B3kv7bh: "ff5binh"
  },
  rtlSlices: {
    B3gf25r: "f5vdl61",
    Bvaow4n: "f1bnra92",
    bhabj1: "f4ibo7t",
    Bwrfys5: "f17heuis",
    Bwuzm9m: ["f64f2ud", "f1yjglu3"],
    Be8zqhl: "fa6l61x",
    Bij0kh0: ["f1w2396a", "f14ab3yo"]
  },
  thick: {
    uiicq7: "fnyfzln"
  },
  thicker: {
    uiicq7: "f1xdzzot"
  },
  thickest: {
    uiicq7: "f1auhru5"
  }
}, {
  d: [".f1euv43f{position:absolute;}", ".f16m7w7k:nth-of-type(1):nth-last-of-type(2){-webkit-clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);}", ".f1o4hhgz:nth-of-type(1):nth-last-of-type(2){left:-25%;}", ".fb4gjrz:nth-of-type(1):nth-last-of-type(2){right:-25%;}", ".f1pgb5nx:nth-of-type(2):nth-last-of-type(1){-webkit-clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));}", ".fugirid:nth-of-type(2):nth-last-of-type(1){left:25%;}", ".f4sk99m:nth-of-type(2):nth-last-of-type(1){right:25%;}", ".fjreaf3:nth-of-type(1):nth-last-of-type(3){-webkit-clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);}", ".f1k4vw81:nth-of-type(1):nth-last-of-type(3){left:-25%;}", ".f1w1xcy7:nth-of-type(1):nth-last-of-type(3){right:-25%;}", ".f1ef8vxk:nth-of-type(2):nth-last-of-type(2){-webkit-clip-path:inset(0 0 var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width));clip-path:inset(0 0 var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width));}", ".f1x2qbfv:nth-of-type(2):nth-last-of-type(2){left:50%;}", ".f1xwf4nz:nth-of-type(2):nth-last-of-type(2){right:50%;}", ".ff6xuso:nth-of-type(2):nth-last-of-type(2){-webkit-transform:scale(0.5);-moz-transform:scale(0.5);-ms-transform:scale(0.5);transform:scale(0.5);}", ".fzpvk6c:nth-of-type(2):nth-last-of-type(2){transform-origin:0 0;}", ".f4onu7f:nth-of-type(3):nth-last-of-type(1){-webkit-clip-path:inset(var(--fuiAvatarGroupItem__divider--width) 0 0 var(--fuiAvatarGroupItem__divider--width));clip-path:inset(var(--fuiAvatarGroupItem__divider--width) 0 0 var(--fuiAvatarGroupItem__divider--width));}", ".f1ydfez1:nth-of-type(3):nth-last-of-type(1){left:50%;}", ".fjensob:nth-of-type(3):nth-last-of-type(1){right:50%;}", ".f1yv732j:nth-of-type(3):nth-last-of-type(1){top:50%;}", ".fchq2fj:nth-of-type(3):nth-last-of-type(1){-webkit-transform:scale(0.5);-moz-transform:scale(0.5);-ms-transform:scale(0.5);transform:scale(0.5);}", ".ff5binh:nth-of-type(3):nth-last-of-type(1){transform-origin:0 0;}", ".f5vdl61:nth-of-type(1):nth-last-of-type(2){-webkit-clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));}", ".f1bnra92:nth-of-type(2):nth-last-of-type(1){-webkit-clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);clip-path:inset(0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)) 0 25%);}", ".f4ibo7t:nth-of-type(1):nth-last-of-type(3){-webkit-clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));clip-path:inset(0 25% 0 calc(25% + (var(--fuiAvatarGroupItem__divider--width) / 2)));}", ".f17heuis:nth-of-type(2):nth-last-of-type(2){-webkit-clip-path:inset(0 var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width) 0);clip-path:inset(0 var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width) 0);}", ".f64f2ud:nth-of-type(2):nth-last-of-type(2){left:0;}", ".f1yjglu3:nth-of-type(2):nth-last-of-type(2){right:0;}", ".fa6l61x:nth-of-type(3):nth-last-of-type(1){-webkit-clip-path:inset(var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width) 0 0);clip-path:inset(var(--fuiAvatarGroupItem__divider--width) var(--fuiAvatarGroupItem__divider--width) 0 0);}", ".f1w2396a:nth-of-type(3):nth-last-of-type(1){left:0;}", ".f14ab3yo:nth-of-type(3):nth-last-of-type(1){right:0;}", ".fnyfzln{--fuiAvatarGroupItem__divider--width:var(--strokeWidthThick);}", ".f1xdzzot{--fuiAvatarGroupItem__divider--width:var(--strokeWidthThicker);}", ".f1auhru5{--fuiAvatarGroupItem__divider--width:var(--strokeWidthThickest);}"]
});
var useAvatarGroupItemStyles_unstable = (state) => {
  const {
    isOverflowItem,
    layout,
    size: size2
  } = state;
  const {
    dir
  } = useFluent();
  const avatarStyles = useAvatarStyles();
  const overflowLabelStyles = useOverflowLabelStyles();
  const pieStyles = usePieStyles();
  const rootStyles = useRootStyles2();
  const sizeStyles = useSizeStyles();
  const groupChildClassName = useGroupChildClassName(layout, size2);
  const rootClasses = [rootStyles.base];
  if (!isOverflowItem) {
    rootClasses.push(rootStyles.nonOverflowItem);
    rootClasses.push(groupChildClassName);
    rootClasses.push(sizeStyles[size2]);
    if (layout === "pie") {
      rootClasses.push(pieStyles.base);
      if (size2 < 56) {
        rootClasses.push(pieStyles.thick);
      } else if (size2 < 72) {
        rootClasses.push(pieStyles.thicker);
      } else {
        rootClasses.push(pieStyles.thickest);
      }
      rootClasses.push(pieStyles.slices);
      if (dir === "rtl") {
        rootClasses.push(pieStyles.rtlSlices);
      }
    }
  } else {
    rootClasses.push(rootStyles.overflowItem);
  }
  state.root.className = mergeClasses(avatarGroupItemClassNames.root, ...rootClasses, state.root.className);
  state.avatar.className = mergeClasses(avatarGroupItemClassNames.avatar, !isOverflowItem && avatarStyles.nonOverflowItem, layout === "pie" && avatarStyles.pie, state.avatar.className);
  if (state.overflowLabel) {
    state.overflowLabel.className = mergeClasses(avatarGroupItemClassNames.overflowLabel, overflowLabelStyles.base, state.overflowLabel.className);
  }
  return state;
};
var useGroupChildClassName = (layout, size2) => {
  const stackStyles = useStackStyles();
  const spreadStyles = useSpreadStyles();
  const layoutClasses = [];
  if (size2) {
    if (layout === "stack") {
      if (size2 < 56) {
        layoutClasses.push(stackStyles.thick);
      } else if (size2 < 72) {
        layoutClasses.push(stackStyles.thicker);
      } else {
        layoutClasses.push(stackStyles.thickest);
      }
      if (size2 < 24) {
        layoutClasses.push(stackStyles.xxs);
      } else if (size2 < 48) {
        layoutClasses.push(stackStyles.xs);
      } else if (size2 < 96) {
        layoutClasses.push(stackStyles.s);
      } else {
        layoutClasses.push(stackStyles.l);
      }
    } else if (layout === "spread") {
      if (size2 < 20) {
        layoutClasses.push(spreadStyles.s);
      } else if (size2 < 32) {
        layoutClasses.push(spreadStyles.mNudge);
      } else if (size2 < 64) {
        layoutClasses.push(spreadStyles.l);
      } else {
        layoutClasses.push(spreadStyles.xl);
      }
    }
  }
  return mergeClasses(...layoutClasses);
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupItem/AvatarGroupItem.js
var AvatarGroupItem = React76.forwardRef((props, ref) => {
  const state = useAvatarGroupItem_unstable(props, ref);
  useAvatarGroupItemStyles_unstable(state);
  const {
    useAvatarGroupItemStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderAvatarGroupItem_unstable(state);
});
AvatarGroupItem.displayName = "AvatarGroupItem";

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/AvatarGroupPopover.js
var React103 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/renderAvatarGroupPopover.js
var React97 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/Popover/Popover.js
var React92 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/Popover/usePopover.js
var React90 = __toESM(require_react());

// node_modules/@fluentui/react-positioning/lib/createVirtualElementFromClick.js
function createVirtualElementFromClick(nativeEvent) {
  const left = nativeEvent.clientX;
  const top = nativeEvent.clientY;
  const right = left + 1;
  const bottom = top + 1;
  function getBoundingClientRect2() {
    return {
      left,
      top,
      right,
      bottom,
      x: left,
      y: top,
      height: 1,
      width: 1
    };
  }
  return {
    getBoundingClientRect: getBoundingClientRect2
  };
}

// node_modules/@floating-ui/core/dist/floating-ui.core.browser.mjs
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getLengthFromAxis(axis) {
  return axis === "y" ? "height" : "width";
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "x" : "y";
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  const commonAlign = reference[length] / 2 - floating[length] / 2;
  const side = getSide(placement);
  const isVertical = mainAxis === "x";
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getSideObjectFromPadding(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = options;
  const paddingObject = getSideObjectFromPadding(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    ...rects.floating,
    x,
    y
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
var min = Math.min;
var max = Math.max;
function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    const {
      element,
      padding = 0
    } = options || {};
    const {
      x,
      y,
      placement,
      rects,
      platform: platform2,
      elements
    } = state;
    if (element == null) {
      return {};
    }
    const paddingObject = getSideObjectFromPadding(padding);
    const coords = {
      x,
      y
    };
    const axis = getMainAxisFromPlacement(placement);
    const length = getLengthFromAxis(axis);
    const arrowDimensions = await platform2.getDimensions(element);
    const isYAxis = axis === "y";
    const minProp = isYAxis ? "top" : "left";
    const maxProp = isYAxis ? "bottom" : "right";
    const clientProp = isYAxis ? "clientHeight" : "clientWidth";
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
      clientSize = elements.floating[clientProp] || rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const min3 = paddingObject[minProp];
    const max3 = clientSize - arrowDimensions[length] - paddingObject[maxProp];
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset3 = within(min3, center, max3);
    const shouldAddOffset = getAlignment(placement) != null && center != offset3 && rects.reference[length] / 2 - (center < min3 ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min3 ? min3 - center : max3 - center : 0;
    return {
      [axis]: coords[axis] - alignmentOffset,
      data: {
        [axis]: offset3,
        centerOffset: center - offset3
      }
    };
  }
});
var sides = ["top", "right", "bottom", "left"];
var allPlacements = sides.reduce((acc, side) => acc.concat(side, side + "-start", side + "-end"), []);
var oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  let mainAlignmentSide = mainAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return {
    main: mainAlignmentSide,
    cross: getOppositePlacement(mainAlignmentSide)
  };
}
var oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl = ["right", "left"];
  const tb = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl)
        return isStart ? rl : lr;
      return isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list = list.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
var flip = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = options;
      const side = getSide(placement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== "none") {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const {
          main,
          cross
        } = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[main], overflow[cross]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$map$so;
              const placement2 = (_overflowsData$map$so = overflowsData.map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
var hide = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "hide",
    options,
    async fn(state) {
      const {
        strategy = "referenceHidden",
        ...detectOverflowOptions
      } = options;
      const {
        rects
      } = state;
      switch (strategy) {
        case "referenceHidden": {
          const overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            elementContext: "reference"
          });
          const offsets = getSideOffsets(overflow, rects.reference);
          return {
            data: {
              referenceHiddenOffsets: offsets,
              referenceHidden: isAnySideFullyClipped(offsets)
            }
          };
        }
        case "escaped": {
          const overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            altBoundary: true
          });
          const offsets = getSideOffsets(overflow, rects.floating);
          return {
            data: {
              escapedOffsets: offsets,
              escaped: isAnySideFullyClipped(offsets)
            }
          };
        }
        default: {
          return {};
        }
      }
    }
  };
};
async function convertValueToCoords(state, value) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getMainAxisFromPlacement(placement) === "x";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = typeof value === "function" ? value(state) : value;
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(value) {
  if (value === void 0) {
    value = 0;
  }
  return {
    name: "offset",
    options: value,
    async fn(state) {
      const {
        x,
        y
      } = state;
      const diffCoords = await convertValueToCoords(state, value);
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};
function getCrossAxis(axis) {
  return axis === "x" ? "y" : "x";
}
var shift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "shift",
    options,
    async fn(state) {
      const {
        x,
        y,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x2,
              y: y2
            } = _ref;
            return {
              x: x2,
              y: y2
            };
          }
        },
        ...detectOverflowOptions
      } = options;
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const mainAxis = getMainAxisFromPlacement(getSide(placement));
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min3 = mainAxisCoord + overflow[minSide];
        const max3 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = within(min3, mainAxisCoord, max3);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min3 = crossAxisCoord + overflow[minSide];
        const max3 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = within(min3, crossAxisCoord, max3);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y
        }
      };
    }
  };
};
var limitShift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(state) {
      const {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = state;
      const {
        offset: offset3 = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = options;
      const coords = {
        x,
        y
      };
      const mainAxis = getMainAxisFromPlacement(placement);
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = typeof offset3 === "function" ? offset3(state) : offset3;
      const computedOffset = typeof rawOffset === "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === "y" ? "height" : "width";
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        const len = mainAxis === "y" ? "width" : "height";
        const isOriginSide = ["top", "left"].includes(getSide(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};
var size = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "size",
    options,
    async fn(state) {
      const {
        placement,
        rects,
        platform: platform2,
        elements
      } = state;
      const {
        apply = () => {
        },
        ...detectOverflowOptions
      } = options;
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const side = getSide(placement);
      const alignment = getAlignment(placement);
      const axis = getMainAxisFromPlacement(placement);
      const isXAxis = axis === "x";
      const {
        width,
        height
      } = rects.floating;
      let heightSide;
      let widthSide;
      if (side === "top" || side === "bottom") {
        heightSide = side;
        widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right";
      } else {
        widthSide = side;
        heightSide = alignment === "end" ? "top" : "bottom";
      }
      const overflowAvailableHeight = height - overflow[heightSide];
      const overflowAvailableWidth = width - overflow[widthSide];
      let availableHeight = overflowAvailableHeight;
      let availableWidth = overflowAvailableWidth;
      if (isXAxis) {
        availableWidth = min(
          // Maximum clipping viewport width
          width - overflow.right - overflow.left,
          overflowAvailableWidth
        );
      } else {
        availableHeight = min(
          // Maximum clipping viewport height
          height - overflow.bottom - overflow.top,
          overflowAvailableHeight
        );
      }
      if (!state.middlewareData.shift && !alignment) {
        const xMin = max(overflow.left, 0);
        const xMax = max(overflow.right, 0);
        const yMin = max(overflow.top, 0);
        const yMax = max(overflow.bottom, 0);
        if (isXAxis) {
          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));
        } else {
          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
        }
      }
      await apply({
        ...state,
        availableWidth,
        availableHeight
      });
      const nextDimensions = await platform2.getDimensions(elements.floating);
      if (width !== nextDimensions.width || height !== nextDimensions.height) {
        return {
          reset: {
            rects: true
          }
        };
      }
      return {};
    }
  };
};

// node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs
function getWindow(node) {
  var _node$ownerDocument;
  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}
function isNode(value) {
  return value instanceof getWindow(value).Node;
}
function getNodeName(node) {
  return isNode(node) ? (node.nodeName || "").toLowerCase() : "";
}
var uaString;
function getUAString() {
  if (uaString) {
    return uaString;
  }
  const uaData = navigator.userAgentData;
  if (uaData && Array.isArray(uaData.brands)) {
    uaString = uaData.brands.map((item) => item.brand + "/" + item.version).join(" ");
    return uaString;
  }
  return navigator.userAgent;
}
function isHTMLElement3(value) {
  return value instanceof getWindow(value).HTMLElement;
}
function isElement(value) {
  return value instanceof getWindow(value).Element;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  const OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const isFirefox = /firefox/i.test(getUAString());
  const css = getComputedStyle$1(element);
  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;
  return css.transform !== "none" || css.perspective !== "none" || (backdropFilter ? backdropFilter !== "none" : false) || isFirefox && css.willChange === "filter" || isFirefox && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective"].some((value) => css.willChange.includes(value)) || ["paint", "layout", "strict", "content"].some((value) => {
    const contain = css.contain;
    return contain != null ? contain.includes(value) : false;
  });
}
function isClientRectVisualViewportBased() {
  return /^((?!chrome|android).)*safari/i.test(getUAString());
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
var min2 = Math.min;
var max2 = Math.max;
var round = Math.round;
function getCssDimensions(element) {
  const css = getComputedStyle$1(element);
  let width = parseFloat(css.width);
  let height = parseFloat(css.height);
  const hasOffset = isHTMLElement3(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    fallback: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement(element) ? element.contextElement : element;
}
var FALLBACK_SCALE = {
  x: 1,
  y: 1
};
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement3(domElement)) {
    return FALLBACK_SCALE;
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    fallback
  } = getCssDimensions(domElement);
  let x = (fallback ? round(rect.width) : rect.width) / width;
  let y = (fallback ? round(rect.height) : rect.height) / height;
  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  var _win$visualViewport, _win$visualViewport2;
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = FALLBACK_SCALE;
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const win = domElement ? getWindow(domElement) : window;
  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;
  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;
  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win2 = getWindow(domElement);
    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentIFrame = win2.frameElement;
    while (currentIFrame && offsetParent && offsetWin !== win2) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle(currentIFrame);
      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += iframeRect.x;
      y += iframeRect.y;
      currentIFrame = getWindow(currentIFrame).frameElement;
    }
  }
  return rectToClientRect({
    width,
    height,
    x,
    y
  });
}
function getDocumentElement(node) {
  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = isHTMLElement3(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = {
    x: 1,
    y: 1
  };
  const offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement3(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
  };
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function getDocumentRect(element) {
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max2(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max2(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle$1(body).direction === "rtl") {
    x += max2(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return parentNode.ownerDocument.body;
  }
  if (isHTMLElement3(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list) {
  var _node$ownerDocument;
  if (list === void 0) {
    list = [];
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isClientRectVisualViewportBased();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement3(element) ? getScale(element) : {
    x: 1,
    y: 1
  };
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const mutableRect = {
      ...clippingAncestor
    };
    if (isClientRectVisualViewportBased()) {
      var _win$visualViewport, _win$visualViewport2;
      const win = getWindow(element);
      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;
      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;
    }
    rect = mutableRect;
  }
  return rectToClientRect(rect);
}
function getClippingElementAncestors(element, cache2) {
  const cachedResult = cache2.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element).filter((el) => isElement(el) && getNodeName(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle$1(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle$1(currentNode);
    const containingBlock = isContainingBlock(currentNode);
    const shouldIgnoreCurrentNode = computedStyle.position === "fixed";
    if (shouldIgnoreCurrentNode) {
      currentContainingBlockComputedStyle = null;
    } else {
      const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position);
      if (shouldDropCurrentNode) {
        result = result.filter((ancestor) => ancestor !== currentNode);
      } else {
        currentContainingBlockComputedStyle = computedStyle;
      }
    }
    currentNode = getParentNode(currentNode);
  }
  cache2.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max2(rect.top, accRect.top);
    accRect.right = min2(rect.right, accRect.right);
    accRect.bottom = min2(rect.bottom, accRect.bottom);
    accRect.left = max2(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  return getCssDimensions(element);
}
function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement3(element) || getComputedStyle$1(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement3(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = getParentNode(currentNode);
    }
  }
  return null;
}
function getOffsetParent(element, polyfill) {
  const window2 = getWindow(element);
  if (!isHTMLElement3(element)) {
    return window2;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle$1(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement3(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const rect = getBoundingClientRect(element, true, strategy === "fixed", offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement3(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
var platform = {
  getClippingRect,
  convertOffsetParentRelativeRectToViewportRelativeRect,
  isElement,
  getDimensions,
  getOffsetParent,
  getDocumentElement,
  getScale,
  async getElementRects(_ref) {
    let {
      reference,
      floating,
      strategy
    } = _ref;
    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
    const getDimensionsFn = this.getDimensions;
    return {
      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
      floating: {
        x: 0,
        y: 0,
        ...await getDimensionsFn(floating)
      }
    };
  },
  getClientRects: (element) => Array.from(element.getClientRects()),
  isRTL: (element) => getComputedStyle$1(element).direction === "rtl"
};
var computePosition2 = (reference, floating, options) => {
  const cache2 = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache2
  };
  return computePosition(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// node_modules/@fluentui/react-positioning/lib/usePositioning.js
var React79 = __toESM(require_react());

// node_modules/@fluentui/react-positioning/lib/utils/parseFloatingUIPlacement.js
function parseFloatingUIPlacement(placement) {
  const tokens2 = placement.split("-");
  return {
    side: tokens2[0],
    alignment: tokens2[1]
  };
}

// node_modules/@fluentui/react-positioning/lib/utils/getScrollParent.js
var getParentNode2 = (node) => {
  if (node.nodeName === "HTML") {
    return node;
  }
  return node.parentNode || node.host;
};
var getStyleComputedProperty = (node) => {
  var _node_ownerDocument;
  if (node.nodeType !== 1) {
    return {};
  }
  const window2 = (_node_ownerDocument = node.ownerDocument) === null || _node_ownerDocument === void 0 ? void 0 : _node_ownerDocument.defaultView;
  return window2.getComputedStyle(node, null);
};
var getScrollParent = (node) => {
  const parentNode = node && getParentNode2(node);
  if (!parentNode)
    return document.body;
  switch (parentNode.nodeName) {
    case "HTML":
    case "BODY":
      return parentNode.ownerDocument.body;
    case "#document":
      return parentNode.body;
  }
  const {
    overflow,
    overflowX,
    overflowY
  } = getStyleComputedProperty(parentNode);
  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return parentNode;
  }
  return getScrollParent(parentNode);
};
var hasScrollParent = (node) => {
  var _scrollParentElement_ownerDocument;
  const scrollParentElement = getScrollParent(node);
  return scrollParentElement ? scrollParentElement !== ((_scrollParentElement_ownerDocument = scrollParentElement.ownerDocument) === null || _scrollParentElement_ownerDocument === void 0 ? void 0 : _scrollParentElement_ownerDocument.body) : false;
};

// node_modules/@fluentui/react-positioning/lib/utils/getBoundary.js
function getBoundary(element, boundary) {
  if (boundary === "window") {
    return element === null || element === void 0 ? void 0 : element.ownerDocument.documentElement;
  }
  if (boundary === "clippingParents") {
    return "clippingAncestors";
  }
  if (boundary === "scrollParent") {
    let boundariesNode = getScrollParent(element);
    if (boundariesNode.nodeName === "BODY") {
      boundariesNode = element === null || element === void 0 ? void 0 : element.ownerDocument.documentElement;
    }
    return boundariesNode;
  }
  return boundary;
}

// node_modules/@fluentui/react-positioning/lib/utils/getReactFiberFromNode.js
var React77 = __toESM(require_react());
var WorkTag;
(function(WorkTag2) {
  WorkTag2[WorkTag2["FunctionComponent"] = 0] = "FunctionComponent";
  WorkTag2[WorkTag2["ClassComponent"] = 1] = "ClassComponent";
  WorkTag2[WorkTag2["IndeterminateComponent"] = 2] = "IndeterminateComponent";
  WorkTag2[WorkTag2["HostRoot"] = 3] = "HostRoot";
  WorkTag2[WorkTag2["HostPortal"] = 4] = "HostPortal";
  WorkTag2[WorkTag2["HostComponent"] = 5] = "HostComponent";
  WorkTag2[WorkTag2["HostText"] = 6] = "HostText";
  WorkTag2[WorkTag2["Fragment"] = 7] = "Fragment";
  WorkTag2[WorkTag2["Mode"] = 8] = "Mode";
  WorkTag2[WorkTag2["ContextConsumer"] = 9] = "ContextConsumer";
  WorkTag2[WorkTag2["ContextProvider"] = 10] = "ContextProvider";
  WorkTag2[WorkTag2["ForwardRef"] = 11] = "ForwardRef";
  WorkTag2[WorkTag2["Profiler"] = 12] = "Profiler";
  WorkTag2[WorkTag2["SuspenseComponent"] = 13] = "SuspenseComponent";
  WorkTag2[WorkTag2["MemoComponent"] = 14] = "MemoComponent";
  WorkTag2[WorkTag2["SimpleMemoComponent"] = 15] = "SimpleMemoComponent";
  WorkTag2[WorkTag2["LazyComponent"] = 16] = "LazyComponent";
  WorkTag2[WorkTag2["IncompleteClassComponent"] = 17] = "IncompleteClassComponent";
  WorkTag2[WorkTag2["DehydratedFragment"] = 18] = "DehydratedFragment";
  WorkTag2[WorkTag2["SuspenseListComponent"] = 19] = "SuspenseListComponent";
  WorkTag2[WorkTag2["FundamentalComponent"] = 20] = "FundamentalComponent";
  WorkTag2[WorkTag2["ScopeComponent"] = 21] = "ScopeComponent";
})(WorkTag || (WorkTag = {}));
function getReactFiberFromNode(elm) {
  if (!elm) {
    return null;
  }
  for (const k in elm) {
    if (k.indexOf("__reactInternalInstance$") === 0 || k.indexOf("__reactFiber$") === 0) {
      return elm[k];
    }
  }
  throw new Error("getReactFiber(): Failed to find a React Fiber on a node");
}

// node_modules/@fluentui/react-positioning/lib/utils/mergeArrowOffset.js
function mergeArrowOffset(userOffset, arrowHeight2) {
  if (typeof userOffset === "number") {
    return addArrowOffset(userOffset, arrowHeight2);
  }
  if (typeof userOffset === "object" && userOffset !== null) {
    return addArrowOffset(userOffset, arrowHeight2);
  }
  if (typeof userOffset === "function") {
    return (offsetParams) => {
      const offset3 = userOffset(offsetParams);
      return addArrowOffset(offset3, arrowHeight2);
    };
  }
  return {
    mainAxis: arrowHeight2
  };
}
var addArrowOffset = (offset3, arrowHeight2) => {
  if (typeof offset3 === "number") {
    return {
      mainAxis: offset3 + arrowHeight2
    };
  }
  var _offset_mainAxis;
  return {
    ...offset3,
    mainAxis: ((_offset_mainAxis = offset3.mainAxis) !== null && _offset_mainAxis !== void 0 ? _offset_mainAxis : 0) + arrowHeight2
  };
};

// node_modules/@fluentui/react-positioning/lib/utils/toFloatingUIPadding.js
function toFloatingUIPadding(padding, isRtl) {
  if (typeof padding === "number") {
    return padding;
  }
  const {
    start,
    end,
    ...verticalPadding
  } = padding;
  const paddingObject = verticalPadding;
  const left = isRtl ? "end" : "start";
  const right = isRtl ? "start" : "end";
  if (padding[left]) {
    paddingObject.left = padding[left];
  }
  if (padding[right]) {
    paddingObject.right = padding[right];
  }
  return paddingObject;
}

// node_modules/@fluentui/react-positioning/lib/utils/toFloatingUIPlacement.js
var getPositionMap = (rtl) => ({
  above: "top",
  below: "bottom",
  before: rtl ? "right" : "left",
  after: rtl ? "left" : "right"
});
var getAlignmentMap = () => ({
  start: "start",
  end: "end",
  top: "start",
  bottom: "end",
  center: void 0
});
var shouldAlignToCenter = (p, a) => {
  const positionedVertically = p === "above" || p === "below";
  const alignedVertically = a === "top" || a === "bottom";
  return positionedVertically && alignedVertically || !positionedVertically && !alignedVertically;
};
var toFloatingUIPlacement = (align, position, rtl) => {
  const alignment = shouldAlignToCenter(position, align) ? "center" : align;
  const computedPosition = position && getPositionMap(rtl)[position];
  const computedAlignment = alignment && getAlignmentMap()[alignment];
  if (computedPosition && computedAlignment) {
    return `${computedPosition}-${computedAlignment}`;
  }
  return computedPosition;
};

// node_modules/@fluentui/react-positioning/lib/utils/fromFloatingUIPlacement.js
var getPositionMap2 = () => ({
  top: "above",
  bottom: "below",
  right: "after",
  left: "before"
});
var getAlignmentMap2 = (position) => {
  if (position === "above" || position === "below") {
    return {
      start: "start",
      end: "end"
    };
  }
  return {
    start: "top",
    end: "bottom"
  };
};
var fromFloatingUIPlacement = (placement) => {
  const {
    side,
    alignment: floatingUIAlignment
  } = parseFloatingUIPlacement(placement);
  const position = getPositionMap2()[side];
  const alignment = floatingUIAlignment && getAlignmentMap2(position)[floatingUIAlignment];
  return {
    position,
    alignment
  };
};

// node_modules/@fluentui/react-positioning/lib/utils/resolvePositioningShorthand.js
var shorthandLookup = {
  above: {
    position: "above",
    align: "center"
  },
  "above-start": {
    position: "above",
    align: "start"
  },
  "above-end": {
    position: "above",
    align: "end"
  },
  below: {
    position: "below",
    align: "center"
  },
  "below-start": {
    position: "below",
    align: "start"
  },
  "below-end": {
    position: "below",
    align: "end"
  },
  before: {
    position: "before",
    align: "center"
  },
  "before-top": {
    position: "before",
    align: "top"
  },
  "before-bottom": {
    position: "before",
    align: "bottom"
  },
  after: {
    position: "after",
    align: "center"
  },
  "after-top": {
    position: "after",
    align: "top"
  },
  "after-bottom": {
    position: "after",
    align: "bottom"
  }
};
function resolvePositioningShorthand(shorthand) {
  if (shorthand === void 0 || shorthand === null) {
    return {};
  }
  if (typeof shorthand === "string") {
    return shorthandLookup[shorthand];
  }
  return shorthand;
}

// node_modules/@fluentui/react-positioning/lib/utils/useCallbackRef.js
var React78 = __toESM(require_react());
function useCallbackRef(initialValue, callback, skipInitialResolve) {
  const isFirst = React78.useRef(true);
  const [ref] = React78.useState(() => ({
    // value
    value: initialValue,
    // last callback
    callback,
    // "memoized" public interface
    facade: {
      get current() {
        return ref.value;
      },
      set current(value) {
        const last = ref.value;
        if (last !== value) {
          ref.value = value;
          if (skipInitialResolve && isFirst.current) {
            return;
          }
          ref.callback(value, last);
        }
      }
    }
  }));
  useIsomorphicLayoutEffect(() => {
    isFirst.current = false;
  }, []);
  ref.callback = callback;
  return ref.facade;
}

// node_modules/@fluentui/react-positioning/lib/utils/debounce.js
function debounce(fn) {
  let pending;
  return () => {
    if (!pending) {
      pending = new Promise((resolve) => {
        Promise.resolve().then(() => {
          pending = void 0;
          resolve(fn());
        });
      });
    }
    return pending;
  };
}

// node_modules/@fluentui/react-positioning/lib/utils/hasAutoFocusFilter.js
function hasAutofocusProp(node) {
  const isAutoFocusableElement = node.nodeName === "BUTTON" || node.nodeName === "INPUT" || node.nodeName === "SELECT" || node.nodeName === "TEXTAREA";
  if (isAutoFocusableElement) {
    var _getReactFiberFromNode;
    return !!((_getReactFiberFromNode = getReactFiberFromNode(node)) === null || _getReactFiberFromNode === void 0 ? void 0 : _getReactFiberFromNode.pendingProps.autoFocus);
  }
  return false;
}
function hasAutofocusFilter(node) {
  return hasAutofocusProp(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
}

// node_modules/@fluentui/react-positioning/lib/utils/writeArrowUpdates.js
function writeArrowUpdates(options) {
  const {
    arrow: arrow2,
    middlewareData
  } = options;
  if (!middlewareData.arrow || !arrow2) {
    return;
  }
  const {
    x: arrowX,
    y: arrowY
  } = middlewareData.arrow;
  Object.assign(arrow2.style, {
    left: `${arrowX}px`,
    top: `${arrowY}px`
  });
}

// node_modules/@fluentui/react-positioning/lib/constants.js
var DATA_POSITIONING_INTERSECTING = "data-popper-is-intersecting";
var DATA_POSITIONING_ESCAPED = "data-popper-escaped";
var DATA_POSITIONING_HIDDEN = "data-popper-reference-hidden";
var DATA_POSITIONING_PLACEMENT = "data-popper-placement";

// node_modules/@fluentui/react-positioning/lib/utils/writeContainerupdates.js
function writeContainerUpdates(options) {
  var _middlewareData_hide, _middlewareData_hide1, _container_ownerDocument_defaultView;
  const {
    container,
    placement,
    middlewareData,
    strategy,
    lowPPI,
    coordinates
  } = options;
  if (!container) {
    return;
  }
  container.setAttribute(DATA_POSITIONING_PLACEMENT, placement);
  container.removeAttribute(DATA_POSITIONING_INTERSECTING);
  if (middlewareData.intersectionObserver.intersecting) {
    container.setAttribute(DATA_POSITIONING_INTERSECTING, "");
  }
  container.removeAttribute(DATA_POSITIONING_ESCAPED);
  if ((_middlewareData_hide = middlewareData.hide) === null || _middlewareData_hide === void 0 ? void 0 : _middlewareData_hide.escaped) {
    container.setAttribute(DATA_POSITIONING_ESCAPED, "");
  }
  container.removeAttribute(DATA_POSITIONING_HIDDEN);
  if ((_middlewareData_hide1 = middlewareData.hide) === null || _middlewareData_hide1 === void 0 ? void 0 : _middlewareData_hide1.referenceHidden) {
    container.setAttribute(DATA_POSITIONING_HIDDEN, "");
  }
  const devicePixelRatio = ((_container_ownerDocument_defaultView = container.ownerDocument.defaultView) === null || _container_ownerDocument_defaultView === void 0 ? void 0 : _container_ownerDocument_defaultView.devicePixelRatio) || 1;
  const x = Math.round(coordinates.x * devicePixelRatio) / devicePixelRatio;
  const y = Math.round(coordinates.y * devicePixelRatio) / devicePixelRatio;
  Object.assign(container.style, {
    transform: lowPPI ? `translate(${x}px, ${y}px)` : `translate3d(${x}px, ${y}px, 0)`,
    position: strategy
  });
}

// node_modules/@fluentui/react-positioning/lib/middleware/coverTarget.js
function coverTarget() {
  return {
    name: "coverTarget",
    fn: (middlewareArguments) => {
      const {
        placement,
        rects,
        x,
        y
      } = middlewareArguments;
      const basePlacement = parseFloatingUIPlacement(placement).side;
      const newCoords = {
        x,
        y
      };
      switch (basePlacement) {
        case "bottom":
          newCoords.y -= rects.reference.height;
          break;
        case "top":
          newCoords.y += rects.reference.height;
          break;
        case "left":
          newCoords.x += rects.reference.width;
          break;
        case "right":
          newCoords.x -= rects.reference.width;
          break;
      }
      return newCoords;
    }
  };
}

// node_modules/@fluentui/react-positioning/lib/middleware/flip.js
function flip2(options) {
  const {
    hasScrollableElement,
    flipBoundary,
    container,
    fallbackPositions = [],
    isRtl
  } = options;
  const fallbackPlacements = fallbackPositions.reduce((acc, shorthand) => {
    const {
      position,
      align
    } = resolvePositioningShorthand(shorthand);
    const placement = toFloatingUIPlacement(align, position, isRtl);
    if (placement) {
      acc.push(placement);
    }
    return acc;
  }, []);
  return flip({
    ...hasScrollableElement && {
      boundary: "clippingAncestors"
    },
    ...flipBoundary && {
      altBoundary: true,
      boundary: getBoundary(container, flipBoundary)
    },
    fallbackStrategy: "bestFit",
    ...fallbackPlacements.length && {
      fallbackPlacements
    }
  });
}

// node_modules/@fluentui/react-positioning/lib/middleware/intersecting.js
function intersecting() {
  return {
    name: "intersectionObserver",
    fn: async (middlewareArguments) => {
      const floatingRect = middlewareArguments.rects.floating;
      const altOverflow = await detectOverflow(middlewareArguments, {
        altBoundary: true
      });
      const isIntersectingTop = altOverflow.top < floatingRect.height && altOverflow.top > 0;
      const isIntersectingBottom = altOverflow.bottom < floatingRect.height && altOverflow.bottom > 0;
      const isIntersecting = isIntersectingTop || isIntersectingBottom;
      return {
        data: {
          intersecting: isIntersecting
        }
      };
    }
  };
}

// node_modules/@fluentui/react-positioning/lib/middleware/maxSize.js
function maxSize(autoSize, options) {
  const {
    container,
    overflowBoundary
  } = options;
  return size({
    ...overflowBoundary && {
      altBoundary: true,
      boundary: getBoundary(container, overflowBoundary)
    },
    apply({
      availableHeight,
      availableWidth,
      elements,
      rects
    }) {
      const applyMaxWidth = autoSize === "always" || autoSize === "width-always" || rects.floating.width > availableWidth && (autoSize === true || autoSize === "width");
      const applyMaxHeight = autoSize === "always" || autoSize === "height-always" || rects.floating.height > availableHeight && (autoSize === true || autoSize === "height");
      if (applyMaxHeight) {
        Object.assign(elements.floating.style, {
          maxHeight: `${availableHeight}px`,
          boxSizing: "border-box",
          overflowY: "auto"
        });
      }
      if (applyMaxWidth) {
        Object.assign(elements.floating.style, {
          maxWidth: `${availableWidth}px`,
          boxSizing: "border-box",
          overflowX: "auto"
        });
      }
    }
  });
}

// node_modules/@fluentui/react-positioning/lib/utils/getFloatingUIOffset.js
function getFloatingUIOffset(rawOffset) {
  if (!rawOffset) {
    return rawOffset;
  }
  if (typeof rawOffset === "number" || typeof rawOffset === "object") {
    return rawOffset;
  }
  return ({
    rects: {
      floating,
      reference
    },
    placement
  }) => {
    const {
      position,
      alignment
    } = fromFloatingUIPlacement(placement);
    return rawOffset({
      positionedRect: floating,
      targetRect: reference,
      position,
      alignment
    });
  };
}

// node_modules/@fluentui/react-positioning/lib/middleware/offset.js
function offset2(offsetValue) {
  const floatingUIOffset = getFloatingUIOffset(offsetValue);
  return offset(floatingUIOffset);
}

// node_modules/@fluentui/react-positioning/lib/middleware/shift.js
function shift2(options) {
  const {
    hasScrollableElement,
    disableTether,
    overflowBoundary,
    container,
    overflowBoundaryPadding,
    isRtl
  } = options;
  return shift({
    ...hasScrollableElement && {
      boundary: "clippingAncestors"
    },
    ...disableTether && {
      crossAxis: disableTether === "all",
      limiter: limitShift({
        crossAxis: disableTether !== "all",
        mainAxis: false
      })
    },
    ...overflowBoundaryPadding && {
      padding: toFloatingUIPadding(overflowBoundaryPadding, isRtl)
    },
    ...overflowBoundary && {
      altBoundary: true,
      boundary: getBoundary(container, overflowBoundary)
    }
  });
}

// node_modules/@fluentui/react-positioning/lib/createPositionManager.js
function createPositionManager(options) {
  const {
    container,
    target,
    arrow: arrow2,
    strategy,
    middleware,
    placement
  } = options;
  let isDestroyed = false;
  if (!target || !container) {
    return {
      updatePosition: () => void 0,
      dispose: () => void 0
    };
  }
  let isFirstUpdate = true;
  const scrollParents = /* @__PURE__ */ new Set();
  const targetWindow = container.ownerDocument.defaultView;
  Object.assign(container.style, {
    position: "fixed",
    left: 0,
    top: 0,
    margin: 0
  });
  const forceUpdate = () => {
    if (isDestroyed) {
      return;
    }
    if (isFirstUpdate) {
      scrollParents.add(getScrollParent(container));
      if (isHTMLElement(target)) {
        scrollParents.add(getScrollParent(target));
      }
      scrollParents.forEach((scrollParent) => {
        scrollParent.addEventListener("scroll", updatePosition);
      });
      isFirstUpdate = false;
    }
    Object.assign(container.style, {
      position: strategy
    });
    computePosition2(target, container, {
      placement,
      middleware,
      strategy
    }).then(({
      x,
      y,
      middlewareData,
      placement: computedPlacement
    }) => {
      if (isDestroyed) {
        return;
      }
      writeArrowUpdates({
        arrow: arrow2,
        middlewareData
      });
      writeContainerUpdates({
        container,
        middlewareData,
        placement: computedPlacement,
        coordinates: {
          x,
          y
        },
        lowPPI: ((targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.devicePixelRatio) || 1) <= 1,
        strategy
      });
    }).catch((err) => {
      if (true) {
        console.error("[usePositioning]: Failed to calculate position", err);
      }
    });
  };
  const updatePosition = debounce(() => forceUpdate());
  const dispose = () => {
    isDestroyed = true;
    if (targetWindow) {
      targetWindow.removeEventListener("scroll", updatePosition);
      targetWindow.removeEventListener("resize", updatePosition);
    }
    scrollParents.forEach((scrollParent) => {
      scrollParent.removeEventListener("scroll", updatePosition);
    });
  };
  if (targetWindow) {
    targetWindow.addEventListener("scroll", updatePosition);
    targetWindow.addEventListener("resize", updatePosition);
  }
  updatePosition();
  return {
    updatePosition,
    dispose
  };
}

// node_modules/@fluentui/react-positioning/lib/usePositioning.js
function usePositioning(options) {
  const managerRef = React79.useRef(null);
  const targetRef = React79.useRef(null);
  const overrideTargetRef = React79.useRef(null);
  const containerRef = React79.useRef(null);
  const arrowRef = React79.useRef(null);
  const {
    enabled = true
  } = options;
  const resolvePositioningOptions = usePositioningOptions(options);
  const updatePositionManager = React79.useCallback(() => {
    if (managerRef.current) {
      managerRef.current.dispose();
    }
    managerRef.current = null;
    var _overrideTargetRef_current;
    const target = (_overrideTargetRef_current = overrideTargetRef.current) !== null && _overrideTargetRef_current !== void 0 ? _overrideTargetRef_current : targetRef.current;
    if (enabled && canUseDOM() && target && containerRef.current) {
      managerRef.current = createPositionManager({
        container: containerRef.current,
        target,
        arrow: arrowRef.current,
        ...resolvePositioningOptions(containerRef.current, arrowRef.current)
      });
    }
  }, [enabled, resolvePositioningOptions]);
  const setOverrideTarget = useEventCallback((target) => {
    overrideTargetRef.current = target;
    updatePositionManager();
  });
  React79.useImperativeHandle(options.positioningRef, () => {
    return {
      updatePosition: () => {
        var _managerRef_current;
        return (_managerRef_current = managerRef.current) === null || _managerRef_current === void 0 ? void 0 : _managerRef_current.updatePosition();
      },
      setTarget: (target) => {
        if (options.target && true) {
          const err = new Error();
          console.warn("Imperative setTarget should not be used at the same time as target option");
          console.warn(err.stack);
        }
        setOverrideTarget(target);
      }
    };
  }, [options.target, setOverrideTarget]);
  useIsomorphicLayoutEffect(() => {
    var _options_target;
    setOverrideTarget((_options_target = options.target) !== null && _options_target !== void 0 ? _options_target : null);
  }, [options.target, setOverrideTarget]);
  useIsomorphicLayoutEffect(() => {
    updatePositionManager();
  }, [updatePositionManager]);
  if (true) {
    React79.useEffect(() => {
      if (containerRef.current) {
        var _contentNode_ownerDocument;
        const contentNode = containerRef.current;
        const treeWalker = (_contentNode_ownerDocument = contentNode.ownerDocument) === null || _contentNode_ownerDocument === void 0 ? void 0 : _contentNode_ownerDocument.createTreeWalker(contentNode, NodeFilter.SHOW_ELEMENT, {
          acceptNode: hasAutofocusFilter
        });
        while (treeWalker.nextNode()) {
          const node = treeWalker.currentNode;
          console.warn("<Popper>:", node);
          console.warn(['<Popper>: ^ this node contains "autoFocus" prop on a React element. This can break the initial', "positioning of an element and cause a window jump effect. This issue occurs because React polyfills", '"autoFocus" behavior to solve inconsistencies between different browsers:', "https://github.com/facebook/react/issues/11851#issuecomment-351787078", "\n", 'However, ".focus()" in this case occurs before any other React effects will be executed', "(React.useEffect(), componentDidMount(), etc.) and we can not prevent this behavior. If you really", 'want to use "autoFocus" please add "position: fixed" to styles of the element that is wrapped by', '"Popper".', `In general, it's not recommended to use "autoFocus" as it may break accessibility aspects:`, "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-autofocus.md", "\n", 'We suggest to use the "trapFocus" prop on Fluent components or a catch "ref" and then use', '"ref.current.focus" in React.useEffect():', "https://reactjs.org/docs/refs-and-the-dom.html#adding-a-ref-to-a-dom-element"].join(" "));
        }
      }
    }, []);
  }
  const setTarget = useCallbackRef(null, (target) => {
    if (targetRef.current !== target) {
      targetRef.current = target;
      updatePositionManager();
    }
  });
  const setContainer = useCallbackRef(null, (container) => {
    if (containerRef.current !== container) {
      containerRef.current = container;
      updatePositionManager();
    }
  });
  const setArrow = useCallbackRef(null, (arrow2) => {
    if (arrowRef.current !== arrow2) {
      arrowRef.current = arrow2;
      updatePositionManager();
    }
  });
  return {
    targetRef: setTarget,
    containerRef: setContainer,
    arrowRef: setArrow
  };
}
function usePositioningOptions(options) {
  const {
    align,
    arrowPadding,
    autoSize,
    coverTarget: coverTarget2,
    flipBoundary,
    offset: offset3,
    overflowBoundary,
    pinned,
    position,
    unstable_disableTether: disableTether,
    positionFixed,
    overflowBoundaryPadding,
    fallbackPositions
  } = options;
  const {
    dir
  } = useFluent();
  const isRtl = dir === "rtl";
  const strategy = positionFixed ? "fixed" : "absolute";
  return React79.useCallback((container, arrow2) => {
    const hasScrollableElement = hasScrollParent(container);
    const middleware = [offset3 && offset2(offset3), coverTarget2 && coverTarget(), !pinned && flip2({
      container,
      flipBoundary,
      hasScrollableElement,
      isRtl,
      fallbackPositions
    }), shift2({
      container,
      hasScrollableElement,
      overflowBoundary,
      disableTether,
      overflowBoundaryPadding,
      isRtl
    }), autoSize && maxSize(autoSize, {
      container,
      overflowBoundary
    }), intersecting(), arrow2 && arrow({
      element: arrow2,
      padding: arrowPadding
    }), hide({
      strategy: "referenceHidden"
    }), hide({
      strategy: "escaped"
    })].filter(Boolean);
    const placement = toFloatingUIPlacement(align, position, isRtl);
    return {
      placement,
      middleware,
      strategy
    };
  }, [align, arrowPadding, autoSize, coverTarget2, disableTether, flipBoundary, isRtl, offset3, overflowBoundary, pinned, position, strategy, overflowBoundaryPadding, fallbackPositions]);
}

// node_modules/@fluentui/react-positioning/lib/usePositioningMouseTarget.js
var React80 = __toESM(require_react());
var usePositioningMouseTarget = (initialState) => {
  const [virtualElement, setVirtualElement] = React80.useState(initialState);
  const setVirtualMouseTarget = (event) => {
    if (event === void 0 || event === null) {
      setVirtualElement(void 0);
      return;
    }
    let mouseevent;
    if (!(event instanceof MouseEvent)) {
      mouseevent = event.nativeEvent;
    } else {
      mouseevent = event;
    }
    if (!(mouseevent instanceof MouseEvent) && true) {
      console.error("usePositioningMouseTarget should only be used with MouseEvent");
    }
    const contextTarget = createVirtualElementFromClick(mouseevent);
    setVirtualElement(contextTarget);
  };
  return [virtualElement, setVirtualMouseTarget];
};

// node_modules/@fluentui/react-portal/lib/components/Portal/Portal.js
var React85 = __toESM(require_react());

// node_modules/@fluentui/react-portal/lib/components/Portal/usePortal.js
var React83 = __toESM(require_react());

// node_modules/@fluentui/react-portal/lib/virtualParent/isVirtualElement.js
function isVirtualElement(element) {
  return element && !!element._virtual;
}

// node_modules/@fluentui/react-portal/lib/virtualParent/getParent.js
function getVirtualParent(child) {
  return isVirtualElement(child) ? child._virtual.parent || null : null;
}
function getParent(child, options = {}) {
  if (!child) {
    return null;
  }
  if (!options.skipVirtual) {
    const virtualParent = getVirtualParent(child);
    if (virtualParent) {
      return virtualParent;
    }
  }
  return (child === null || child === void 0 ? void 0 : child.parentNode) || null;
}

// node_modules/@fluentui/react-portal/lib/virtualParent/elementContains.js
function elementContains(parent, child) {
  if (!parent || !child) {
    return false;
  }
  if (parent === child) {
    return true;
  } else {
    const set = /* @__PURE__ */ new WeakSet();
    while (child) {
      const nextParent = getParent(child, {
        skipVirtual: set.has(child)
      });
      set.add(child);
      if (nextParent === parent) {
        return true;
      }
      child = nextParent;
    }
  }
  return false;
}

// node_modules/@fluentui/react-portal/lib/virtualParent/setVirtualParent.js
function setVirtualParent(child, parent) {
  if (!child) {
    return;
  }
  const virtualChild = child;
  if (!virtualChild._virtual) {
    virtualChild._virtual = {};
  }
  virtualChild._virtual.parent = parent;
}

// node_modules/@fluentui/react-portal/lib/components/Portal/usePortalMountNode.js
var React82 = __toESM(require_react());

// node_modules/use-disposable/lib/index.js
var React81 = __toESM(require_react());
var React410 = __toESM(require_react());
var React210 = __toESM(require_react());
var React310 = __toESM(require_react());
var getCurrentOwner = () => React81.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner.current;
var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
var useIsStrictMode = () => {
  if (false) {
    return false;
  }
  const isStrictMode = React81.useRef(void 0);
  const reactMajorVersion = React81.useMemo(() => {
    return Number(React81.version.split(".")[0]);
  }, [React81.version]);
  if (isNaN(reactMajorVersion) || reactMajorVersion < 18) {
    return false;
  }
  if (isStrictMode.current === void 0) {
    let currentOwner = getCurrentOwner();
    while (currentOwner.return) {
      currentOwner = currentOwner.return;
      if (currentOwner.type === REACT_STRICT_MODE_TYPE || currentOwner.elementType === REACT_STRICT_MODE_TYPE) {
        isStrictMode.current = true;
      }
    }
  }
  return !!isStrictMode.current;
};
var effectSet = /* @__PURE__ */ new WeakSet();
function useStrictEffect(effect, deps) {
  const currentOwner = getCurrentOwner();
  React210.useEffect(() => {
    if (!effectSet.has(currentOwner)) {
      effectSet.add(currentOwner);
      effect();
      return;
    }
    const dispose = effect();
    return dispose;
  }, deps);
}
var memoSet = /* @__PURE__ */ new WeakSet();
function useStrictMemo(factory, deps) {
  return React310.useMemo(() => {
    const currentOwner = getCurrentOwner();
    if (!memoSet.has(currentOwner)) {
      memoSet.add(currentOwner);
      return null;
    }
    return factory();
  }, deps);
}
function useDisposable(factory, deps) {
  var _a;
  const isStrictMode = useIsStrictMode() && true;
  const useMemo42 = isStrictMode ? useStrictMemo : React410.useMemo;
  const useEffect33 = isStrictMode ? useStrictEffect : React410.useEffect;
  const [disposable, dispose] = (_a = useMemo42(() => factory(), deps)) != null ? _a : [
    null,
    () => null
  ];
  useEffect33(() => {
    return dispose;
  }, deps);
  return disposable;
}

// node_modules/@fluentui/react-portal/lib/components/Portal/usePortalMountNode.js
var useInsertionEffect4 = React82["useInsertionEffect"];
var useStyles8 = __styles2({
  root: {
    qhf8xq: "f10pi13n",
    Bj3rh1h: "f494woh"
  }
}, {
  d: [".f10pi13n{position:relative;}", ".f494woh{z-index:1000000;}"]
});
var usePortalMountNode = (options) => {
  const {
    targetDocument,
    dir
  } = useFluent();
  const focusVisibleRef = useFocusVisible();
  const classes = useStyles8();
  const themeClassName = useThemeClassName();
  const className = mergeClasses(themeClassName, classes.root, options.className);
  const element = useDisposable(() => {
    if (targetDocument === void 0 || options.disabled) {
      return [null, () => null];
    }
    const newElement = targetDocument.createElement("div");
    targetDocument.body.appendChild(newElement);
    return [newElement, () => newElement.remove()];
  }, [targetDocument]);
  if (useInsertionEffect4) {
    useInsertionEffect4(() => {
      if (!element) {
        return;
      }
      const classesToApply = className.split(" ").filter(Boolean);
      element.classList.add(...classesToApply);
      element.setAttribute("dir", dir);
      focusVisibleRef.current = element;
      return () => {
        element.classList.remove(...classesToApply);
        element.removeAttribute("dir");
      };
    }, [className, dir, element, focusVisibleRef]);
  } else {
    React82.useMemo(() => {
      if (!element) {
        return;
      }
      element.className = className;
      element.setAttribute("dir", dir);
      focusVisibleRef.current = element;
    }, [className, dir, element, focusVisibleRef]);
  }
  return element;
};

// node_modules/@fluentui/react-portal/lib/components/Portal/usePortal.js
function toMountNodeProps(mountNode) {
  if (isHTMLElement(mountNode)) {
    return {
      element: mountNode
    };
  }
  if (typeof mountNode === "object") {
    if (mountNode === null) {
      return {
        element: null
      };
    }
    return mountNode;
  }
  return {};
}
var usePortal_unstable = (props) => {
  const {
    element,
    className
  } = toMountNodeProps(props.mountNode);
  const virtualParentRootRef = React83.useRef(null);
  const fallbackElement = usePortalMountNode({
    disabled: !!element,
    className
  });
  const state = {
    children: props.children,
    mountNode: element !== null && element !== void 0 ? element : fallbackElement,
    virtualParentRootRef
  };
  React83.useEffect(() => {
    if (state.virtualParentRootRef.current && state.mountNode) {
      setVirtualParent(state.mountNode, state.virtualParentRootRef.current);
    }
    return () => {
      if (state.mountNode) {
        setVirtualParent(state.mountNode, void 0);
      }
    };
  }, [state.virtualParentRootRef, state.mountNode]);
  return state;
};

// node_modules/@fluentui/react-portal/lib/components/Portal/renderPortal.js
var ReactDOM = __toESM(require_react_dom());
var React84 = __toESM(require_react());
var renderPortal_unstable = (state) => {
  return React84.createElement("span", {
    hidden: true,
    ref: state.virtualParentRootRef
  }, state.mountNode && ReactDOM.createPortal(state.children, state.mountNode));
};

// node_modules/@fluentui/react-portal/lib/components/Portal/Portal.js
var Portal = (props) => {
  const state = usePortal_unstable(props);
  return renderPortal_unstable(state);
};
Portal.displayName = "Portal";

// node_modules/@fluentui/react-portal/lib/components/Portal/Portal.types.js
var React86 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/PopoverSurface.js
var React89 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/usePopoverSurface.js
var React87 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/popoverContext.js
var PopoverContext = createContext10(void 0);
var popoverContextDefaultValue = {
  open: false,
  setOpen: () => null,
  toggleOpen: () => null,
  triggerRef: {
    current: null
  },
  contentRef: {
    current: null
  },
  arrowRef: {
    current: null
  },
  openOnContext: false,
  openOnHover: false,
  size: "medium",
  trapFocus: false,
  inline: false
};
var PopoverProvider = PopoverContext.Provider;
var usePopoverContext_unstable = (selector) => useContextSelector(PopoverContext, (ctx = popoverContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/usePopoverSurface.js
var usePopoverSurface_unstable = (props, ref) => {
  const contentRef = usePopoverContext_unstable((context) => context.contentRef);
  const openOnHover = usePopoverContext_unstable((context) => context.openOnHover);
  const setOpen = usePopoverContext_unstable((context) => context.setOpen);
  const mountNode = usePopoverContext_unstable((context) => context.mountNode);
  const arrowRef = usePopoverContext_unstable((context) => context.arrowRef);
  const size2 = usePopoverContext_unstable((context) => context.size);
  const withArrow = usePopoverContext_unstable((context) => context.withArrow);
  const appearance = usePopoverContext_unstable((context) => context.appearance);
  const trapFocus = usePopoverContext_unstable((context) => context.trapFocus);
  const inertTrapFocus = usePopoverContext_unstable((context) => context.inertTrapFocus);
  const inline2 = usePopoverContext_unstable((context) => context.inline);
  const {
    modalAttributes
  } = useModalAttributes({
    trapFocus,
    legacyTrapFocus: !inertTrapFocus,
    alwaysFocusable: !trapFocus
  });
  const state = {
    inline: inline2,
    appearance,
    withArrow,
    size: size2,
    arrowRef,
    mountNode,
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref: useMergedRefs(ref, contentRef),
      role: trapFocus ? "dialog" : "group",
      "aria-modal": trapFocus ? true : void 0,
      ...modalAttributes,
      ...props
    })
  };
  const {
    onMouseEnter: onMouseEnterOriginal,
    onMouseLeave: onMouseLeaveOriginal,
    onKeyDown: onKeyDownOriginal
  } = state.root;
  state.root.onMouseEnter = (e) => {
    if (openOnHover) {
      setOpen(e, true);
    }
    onMouseEnterOriginal === null || onMouseEnterOriginal === void 0 ? void 0 : onMouseEnterOriginal(e);
  };
  state.root.onMouseLeave = (e) => {
    if (openOnHover) {
      setOpen(e, false);
    }
    onMouseLeaveOriginal === null || onMouseLeaveOriginal === void 0 ? void 0 : onMouseLeaveOriginal(e);
  };
  state.root.onKeyDown = (e) => {
    var _contentRef_current;
    if (e.key === "Escape" && ((_contentRef_current = contentRef.current) === null || _contentRef_current === void 0 ? void 0 : _contentRef_current.contains(e.target))) {
      setOpen(e, false);
    }
    onKeyDownOriginal === null || onKeyDownOriginal === void 0 ? void 0 : onKeyDownOriginal(e);
  };
  return state;
};

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/renderPopoverSurface.js
var React88 = __toESM(require_react());
var renderPopoverSurface_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  const surface = React88.createElement(slots.root, slotProps.root, state.withArrow && React88.createElement("div", {
    ref: state.arrowRef,
    className: state.arrowClassName
  }), slotProps.root.children);
  if (state.inline) {
    return surface;
  }
  return React88.createElement(Portal, {
    mountNode: state.mountNode
  }, surface);
};

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/usePopoverSurfaceStyles.js
var popoverSurfaceClassNames = {
  root: "fui-PopoverSurface"
};
var arrowHeights = {
  small: 6,
  medium: 8,
  large: 8
};
var useStyles9 = __styles2({
  root: {
    sj55zd: "f19n0e5",
    De3pzq: "fxugw4r",
    E5pizo: "f1hg901r",
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    B4j52fo: "f5ogflp",
    Bekrc4i: ["f1hqa2wf", "finvdd3"],
    Bn0qgzm: "f1f09k3d",
    ibv6hh: ["finvdd3", "f1hqa2wf"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  inverted: {
    De3pzq: "fg3r6xk",
    sj55zd: "fonrgv7"
  },
  brand: {
    De3pzq: "ffp7eso",
    sj55zd: "f1phragk"
  },
  smallPadding: {
    z8tnut: "f1kcqot9",
    z189sj: ["f11qrl6u", "fjlbh76"],
    Byoj8tv: "fpe6lb7",
    uwmqm3: ["fjlbh76", "f11qrl6u"]
  },
  mediumPadding: {
    z8tnut: "fqag9an",
    z189sj: ["f1gbmcue", "f1rh9g5y"],
    Byoj8tv: "fp67ikv",
    uwmqm3: ["f1rh9g5y", "f1gbmcue"]
  },
  largePadding: {
    z8tnut: "fc7z3ec",
    z189sj: ["fat0sn4", "fekwl8i"],
    Byoj8tv: "fe2my4m",
    uwmqm3: ["fekwl8i", "fat0sn4"]
  },
  smallArrow: {
    a9b677: "f1ekdpwm",
    Bqenvij: "f83vc9z"
  },
  mediumLargeArrow: {
    a9b677: "f1kmc0fn",
    Bqenvij: "fb6lvc5"
  },
  arrow: {
    qhf8xq: "f1euv43f",
    De3pzq: "f1u2r49w",
    Bcdw1i0: "fd7fpy0",
    Bj3rh1h: "f1bsuimh",
    Ftih45: "f1wl9k8s",
    B1puzpu: "f1wkw4r9",
    Brfgrao: "f1j7ml58",
    Bcvre1j: "fyl8oag",
    Ccq8qp: "frdoeuz",
    Baz25je: "fb81m9q",
    cmx5o7: "f1ljr5q2",
    B4f6apu: "fyfemzf",
    m598lv: "focyt6c",
    Bk5zm6e: "fnhxbxj",
    y0oebl: "fdw6hkg",
    qa3bma: "f11yjt3y",
    Bqjgrrk: "f1172wan",
    Budzafs: ["f9e5op9", "f112wvtl"],
    Hv9wc6: ["ftj5xct", "fyavhwi"],
    hl6cv3: "f1773hnp",
    Bh2vraf: "f1n8855c",
    yayu3t: "f1v7783n",
    wedwtw: "fsw6im5",
    rhl9o9: "fh2hsk5",
    Bu8t5uz: "f159pzir",
    B6q6orb: "f11yvu4",
    Bwwlvwl: "fm1ycve"
  }
}, {
  d: [".f19n0e5{color:var(--colorNeutralForeground1);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f1hg901r{box-shadow:var(--shadow16);}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f5ogflp{border-top-width:1px;}", ".f1hqa2wf{border-right-width:1px;}", ".finvdd3{border-left-width:1px;}", ".f1f09k3d{border-bottom-width:1px;}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fg3r6xk{background-color:var(--colorNeutralBackgroundStatic);}", ".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".ffp7eso{background-color:var(--colorBrandBackground);}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".f1kcqot9{padding-top:12px;}", ".f11qrl6u{padding-right:12px;}", ".fjlbh76{padding-left:12px;}", ".fpe6lb7{padding-bottom:12px;}", ".fqag9an{padding-top:16px;}", ".f1gbmcue{padding-right:16px;}", ".f1rh9g5y{padding-left:16px;}", ".fp67ikv{padding-bottom:16px;}", ".fc7z3ec{padding-top:20px;}", ".fat0sn4{padding-right:20px;}", ".fekwl8i{padding-left:20px;}", ".fe2my4m{padding-bottom:20px;}", ".f1ekdpwm{width:8.484px;}", ".f83vc9z{height:8.484px;}", ".f1kmc0fn{width:11.312px;}", ".fb6lvc5{height:11.312px;}", ".f1euv43f{position:absolute;}", ".f1u2r49w{background-color:inherit;}", ".fd7fpy0{visibility:hidden;}", ".f1bsuimh{z-index:-1;}", '.f1wl9k8s::before{content:"";}', ".f1wkw4r9::before{visibility:visible;}", ".f1j7ml58::before{position:absolute;}", ".fyl8oag::before{box-sizing:border-box;}", ".frdoeuz::before{width:inherit;}", ".fb81m9q::before{height:inherit;}", ".f1ljr5q2::before{background-color:inherit;}", ".fyfemzf::before{border-right-width:1px;}", ".focyt6c::before{border-right-style:solid;}", ".fnhxbxj::before{border-right-color:var(--colorTransparentStroke);}", ".fdw6hkg::before{border-bottom-width:1px;}", ".f11yjt3y::before{border-bottom-style:solid;}", ".f1172wan::before{border-bottom-color:var(--colorTransparentStroke);}", ".f9e5op9::before{border-bottom-right-radius:var(--borderRadiusSmall);}", ".f112wvtl::before{border-bottom-left-radius:var(--borderRadiusSmall);}", ".ftj5xct::before{-webkit-transform:rotate(var(--angle)) translate(0, 50%) rotate(45deg);-moz-transform:rotate(var(--angle)) translate(0, 50%) rotate(45deg);-ms-transform:rotate(var(--angle)) translate(0, 50%) rotate(45deg);transform:rotate(var(--angle)) translate(0, 50%) rotate(45deg);}", ".fyavhwi::before{-webkit-transform:rotate(var(--angle)) translate(0, 50%) rotate(-45deg);-moz-transform:rotate(var(--angle)) translate(0, 50%) rotate(-45deg);-ms-transform:rotate(var(--angle)) translate(0, 50%) rotate(-45deg);transform:rotate(var(--angle)) translate(0, 50%) rotate(-45deg);}", '[data-popper-placement^="top"] .f1773hnp{bottom:-1px;}', '[data-popper-placement^="top"] .f1n8855c{--angle:0;}', '[data-popper-placement^="right"] .f1v7783n{left:-1px;}', '[data-popper-placement^="right"] .fsw6im5{--angle:90deg;}', '[data-popper-placement^="bottom"] .fh2hsk5{top:-1px;}', '[data-popper-placement^="bottom"] .f159pzir{--angle:180deg;}', '[data-popper-placement^="left"] .f11yvu4{right:-1px;}', '[data-popper-placement^="left"] .fm1ycve{--angle:270deg;}']
});
var usePopoverSurfaceStyles_unstable = (state) => {
  const styles = useStyles9();
  state.root.className = mergeClasses(popoverSurfaceClassNames.root, styles.root, state.size === "small" && styles.smallPadding, state.size === "medium" && styles.mediumPadding, state.size === "large" && styles.largePadding, state.appearance === "inverted" && styles.inverted, state.appearance === "brand" && styles.brand, state.root.className);
  state.arrowClassName = mergeClasses(styles.arrow, state.size === "small" ? styles.smallArrow : styles.mediumLargeArrow);
  return state;
};

// node_modules/@fluentui/react-popover/lib/components/PopoverSurface/PopoverSurface.js
var PopoverSurface = React89.forwardRef((props, ref) => {
  const state = usePopoverSurface_unstable(props, ref);
  usePopoverSurfaceStyles_unstable(state);
  const {
    usePopoverSurfaceStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderPopoverSurface_unstable(state);
});
PopoverSurface.displayName = "PopoverSurface";

// node_modules/@fluentui/react-popover/lib/components/Popover/constants.js
var popoverSurfaceBorderRadius = 4;

// node_modules/@fluentui/react-popover/lib/components/Popover/usePopover.js
var usePopover_unstable = (props) => {
  const [contextTarget, setContextTarget] = usePositioningMouseTarget();
  const initialState = {
    size: "medium",
    contextTarget,
    setContextTarget,
    ...props
  };
  const children = React90.Children.toArray(props.children);
  if (true) {
    if (children.length === 0) {
      console.warn("Popover must contain at least one child");
    }
    if (children.length > 2) {
      console.warn("Popover must contain at most two children");
    }
  }
  let popoverTrigger = void 0;
  let popoverSurface = void 0;
  if (children.length === 2) {
    popoverTrigger = children[0];
    popoverSurface = children[1];
  } else if (children.length === 1) {
    popoverSurface = children[0];
  }
  const [open, setOpenState] = useOpenState(initialState);
  const setOpenTimeoutRef = React90.useRef(0);
  const setOpen = useEventCallback((e, shouldOpen) => {
    clearTimeout(setOpenTimeoutRef.current);
    if (!(e instanceof Event) && e.persist) {
      e.persist();
    }
    if (e.type === "mouseleave") {
      var _props_mouseLeaveDelay;
      setOpenTimeoutRef.current = setTimeout(() => {
        setOpenState(e, shouldOpen);
      }, (_props_mouseLeaveDelay = props.mouseLeaveDelay) !== null && _props_mouseLeaveDelay !== void 0 ? _props_mouseLeaveDelay : 500);
    } else {
      setOpenState(e, shouldOpen);
    }
  });
  React90.useEffect(() => {
    return () => {
      clearTimeout(setOpenTimeoutRef.current);
    };
  }, []);
  const toggleOpen = React90.useCallback((e) => {
    setOpen(e, !open);
  }, [setOpen, open]);
  const positioningRefs = usePopoverRefs(initialState);
  const {
    targetDocument
  } = useFluent();
  useOnClickOutside({
    contains: elementContains,
    element: targetDocument,
    callback: (ev) => setOpen(ev, false),
    refs: [positioningRefs.triggerRef, positioningRefs.contentRef],
    disabled: !open
  });
  const closeOnScroll = initialState.openOnContext || initialState.closeOnScroll;
  useOnScrollOutside({
    contains: elementContains,
    element: targetDocument,
    callback: (ev) => setOpen(ev, false),
    refs: [positioningRefs.triggerRef, positioningRefs.contentRef],
    disabled: !open || !closeOnScroll
  });
  const {
    findFirstFocusable
  } = useFocusFinders();
  React90.useEffect(() => {
    if (props.unstable_disableAutoFocus) {
      return;
    }
    if (open && positioningRefs.contentRef.current) {
      var _positioningRefs_contentRef_current_getAttribute;
      const containerTabIndex = (_positioningRefs_contentRef_current_getAttribute = positioningRefs.contentRef.current.getAttribute("tabIndex")) !== null && _positioningRefs_contentRef_current_getAttribute !== void 0 ? _positioningRefs_contentRef_current_getAttribute : void 0;
      const firstFocusable = isNaN(containerTabIndex) ? findFirstFocusable(positioningRefs.contentRef.current) : positioningRefs.contentRef.current;
      firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();
    }
  }, [findFirstFocusable, open, positioningRefs.contentRef, props.unstable_disableAutoFocus]);
  var _props_inline;
  return {
    ...initialState,
    ...positioningRefs,
    popoverTrigger,
    popoverSurface,
    open,
    setOpen,
    toggleOpen,
    setContextTarget,
    contextTarget,
    inline: (_props_inline = props.inline) !== null && _props_inline !== void 0 ? _props_inline : false
  };
};
function useOpenState(state) {
  const onOpenChange = useEventCallback((e, data) => {
    var _state_onOpenChange;
    return (_state_onOpenChange = state.onOpenChange) === null || _state_onOpenChange === void 0 ? void 0 : _state_onOpenChange.call(state, e, data);
  });
  const [open, setOpenState] = useControllableState({
    state: state.open,
    defaultState: state.defaultOpen,
    initialState: false
  });
  state.open = open !== void 0 ? open : state.open;
  const setContextTarget = state.setContextTarget;
  const setOpen = React90.useCallback((e, shouldOpen) => {
    if (shouldOpen && e.type === "contextmenu") {
      setContextTarget(e);
    }
    if (!shouldOpen) {
      setContextTarget(void 0);
    }
    setOpenState(shouldOpen);
    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(e, {
      open: shouldOpen
    });
  }, [setOpenState, onOpenChange, setContextTarget]);
  return [open, setOpen];
}
function usePopoverRefs(state) {
  const positioningOptions = {
    position: "above",
    align: "center",
    arrowPadding: 2 * popoverSurfaceBorderRadius,
    target: state.openOnContext ? state.contextTarget : void 0,
    ...resolvePositioningShorthand(state.positioning)
  };
  if (positioningOptions.coverTarget) {
    state.withArrow = false;
  }
  if (state.withArrow) {
    positioningOptions.offset = mergeArrowOffset(positioningOptions.offset, arrowHeights[state.size]);
  }
  const {
    targetRef: triggerRef,
    containerRef: contentRef,
    arrowRef
  } = usePositioning(positioningOptions);
  return {
    triggerRef,
    contentRef,
    arrowRef
  };
}

// node_modules/@fluentui/react-popover/lib/components/Popover/renderPopover.js
var React91 = __toESM(require_react());
var renderPopover_unstable = (state) => {
  const {
    appearance,
    arrowRef,
    contentRef,
    inline: inline2,
    mountNode,
    open,
    openOnContext,
    openOnHover,
    setOpen,
    size: size2,
    toggleOpen,
    trapFocus,
    triggerRef,
    withArrow,
    inertTrapFocus
  } = state;
  return React91.createElement(PopoverContext.Provider, {
    value: {
      appearance,
      arrowRef,
      contentRef,
      inline: inline2,
      mountNode,
      open,
      openOnContext,
      openOnHover,
      setOpen,
      toggleOpen,
      triggerRef,
      size: size2,
      trapFocus,
      inertTrapFocus,
      withArrow
    }
  }, state.popoverTrigger, state.open && state.popoverSurface);
};

// node_modules/@fluentui/react-popover/lib/components/Popover/Popover.js
var Popover = (props) => {
  const state = usePopover_unstable(props);
  return renderPopover_unstable(state);
};
Popover.displayName = "Popover";

// node_modules/@fluentui/react-popover/lib/components/Popover/Popover.types.js
var React93 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/PopoverTrigger.js
var React95 = __toESM(require_react());

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/usePopoverTrigger.js
var React94 = __toESM(require_react());
var usePopoverTrigger_unstable = (props) => {
  const {
    children,
    disableButtonEnhancement = false
  } = props;
  const child = getTriggerChild(children);
  const open = usePopoverContext_unstable((context) => context.open);
  const setOpen = usePopoverContext_unstable((context) => context.setOpen);
  const toggleOpen = usePopoverContext_unstable((context) => context.toggleOpen);
  const triggerRef = usePopoverContext_unstable((context) => context.triggerRef);
  const openOnHover = usePopoverContext_unstable((context) => context.openOnHover);
  const openOnContext = usePopoverContext_unstable((context) => context.openOnContext);
  const {
    triggerAttributes
  } = useModalAttributes();
  const onContextMenu = (e) => {
    if (openOnContext) {
      e.preventDefault();
      setOpen(e, true);
    }
  };
  const onClick = (e) => {
    if (!openOnContext) {
      toggleOpen(e);
    }
  };
  const onKeyDown = (e) => {
    if (e.key === Escape && open) {
      setOpen(e, false);
      e.stopPropagation();
    }
  };
  const onMouseEnter = (e) => {
    if (openOnHover) {
      setOpen(e, true);
    }
  };
  const onMouseLeave = (e) => {
    if (openOnHover) {
      setOpen(e, false);
    }
  };
  const contextMenuProps = {
    ...triggerAttributes,
    "aria-expanded": `${open}`,
    ...child === null || child === void 0 ? void 0 : child.props,
    onMouseEnter: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseEnter, onMouseEnter)),
    onMouseLeave: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseLeave, onMouseLeave)),
    onContextMenu: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onContextMenu, onContextMenu)),
    ref: useMergedRefs(triggerRef, child === null || child === void 0 ? void 0 : child.ref)
  };
  const triggerChildProps = {
    ...contextMenuProps,
    onClick: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onClick, onClick)),
    onKeyDown: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onKeyDown, onKeyDown))
  };
  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", triggerChildProps);
  return {
    children: applyTriggerPropsToChildren(props.children, useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", openOnContext ? contextMenuProps : disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps))
  };
};

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/renderPopoverTrigger.js
var renderPopoverTrigger_unstable = (state) => {
  return state.children;
};

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/PopoverTrigger.js
var PopoverTrigger = (props) => {
  const state = usePopoverTrigger_unstable(props);
  return renderPopoverTrigger_unstable(state);
};
PopoverTrigger.displayName = "PopoverTrigger";
PopoverTrigger.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-popover/lib/components/PopoverTrigger/PopoverTrigger.types.js
var React96 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/renderAvatarGroupPopover.js
var renderAvatarGroupPopover_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React97.createElement(slots.root, slotProps.root, React97.createElement(PopoverTrigger, {
    disableButtonEnhancement: true
  }, React97.createElement(slots.tooltip, slotProps.tooltip, React97.createElement(slots.triggerButton, slotProps.triggerButton))), React97.createElement(slots.popoverSurface, slotProps.popoverSurface, React97.createElement(AvatarGroupProvider, {
    value: contextValues.avatarGroup
  }, React97.createElement(slots.content, slotProps.content))));
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/useAvatarGroupPopoverContextValues.js
var useAvatarGroupPopoverContextValues = (state) => {
  const avatarGroup = {
    isOverflow: true,
    size: 24
  };
  return {
    avatarGroup
  };
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/useAvatarGroupPopover.js
var React102 = __toESM(require_react());

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/Tooltip.js
var React100 = __toESM(require_react());

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/useTooltip.js
var React98 = __toESM(require_react());

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/private/constants.js
var arrowHeight = 6;
var tooltipBorderRadius = 4;

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/useTooltip.js
var useTooltip_unstable = (props) => {
  var _child_props, _child_props1, _child_props2, _child_props3;
  const context = useTooltipVisibility();
  const isServerSideRender = useIsSSR();
  const {
    targetDocument
  } = useFluent();
  const [setDelayTimeout, clearDelayTimeout] = useTimeout();
  const {
    appearance = "normal",
    children,
    content,
    withArrow = false,
    positioning = "above",
    onVisibleChange,
    relationship,
    showDelay = 250,
    hideDelay = 250,
    mountNode
  } = props;
  const [visible, setVisibleInternal] = useControllableState({
    state: props.visible,
    initialState: false
  });
  const setVisible = React98.useCallback((newVisible, ev) => {
    clearDelayTimeout();
    setVisibleInternal((oldVisible) => {
      if (newVisible !== oldVisible) {
        onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(ev, {
          visible: newVisible
        });
      }
      return newVisible;
    });
  }, [clearDelayTimeout, setVisibleInternal, onVisibleChange]);
  const state = {
    withArrow,
    positioning,
    showDelay,
    hideDelay,
    relationship,
    visible,
    shouldRenderTooltip: visible,
    appearance,
    mountNode,
    // Slots
    components: {
      content: "div"
    },
    content: resolveShorthand(content, {
      defaultProps: {
        role: "tooltip"
      },
      required: true
    })
  };
  state.content.id = useId2("tooltip-", state.content.id);
  const positioningOptions = {
    enabled: state.visible,
    arrowPadding: 2 * tooltipBorderRadius,
    position: "above",
    align: "center",
    offset: 4,
    ...resolvePositioningShorthand(state.positioning)
  };
  if (state.withArrow) {
    positioningOptions.offset = mergeArrowOffset(positioningOptions.offset, arrowHeight);
  }
  const {
    targetRef,
    containerRef,
    arrowRef
  } = usePositioning(positioningOptions);
  state.content.ref = useMergedRefs(state.content.ref, containerRef);
  state.arrowRef = arrowRef;
  useIsomorphicLayoutEffect(() => {
    if (visible) {
      var _context_visibleTooltip;
      const thisTooltip = {
        hide: () => setVisible(false)
      };
      (_context_visibleTooltip = context.visibleTooltip) === null || _context_visibleTooltip === void 0 ? void 0 : _context_visibleTooltip.hide();
      context.visibleTooltip = thisTooltip;
      const onDocumentKeyDown = (ev) => {
        if (ev.key === Escape) {
          thisTooltip.hide();
          ev.stopPropagation();
        }
      };
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("keydown", onDocumentKeyDown, {
        // As this event is added at targeted document,
        // we need to capture the event to be sure keydown handling from tooltip happens first
        capture: true
      });
      return () => {
        if (context.visibleTooltip === thisTooltip) {
          context.visibleTooltip = void 0;
        }
        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("keydown", onDocumentKeyDown, {
          capture: true
        });
      };
    }
  }, [context, targetDocument, visible, setVisible]);
  const ignoreNextFocusEventRef = React98.useRef(false);
  const onEnterTrigger = React98.useCallback((ev) => {
    if (ev.type === "focus" && ignoreNextFocusEventRef.current) {
      ignoreNextFocusEventRef.current = false;
      return;
    }
    const delay = context.visibleTooltip ? 0 : state.showDelay;
    setDelayTimeout(() => {
      setVisible(true, ev);
    }, delay);
    ev.persist();
  }, [setDelayTimeout, setVisible, state.showDelay, context]);
  const onLeaveTrigger = React98.useCallback((ev) => {
    let delay = state.hideDelay;
    if (ev.type === "blur") {
      delay = 0;
      ignoreNextFocusEventRef.current = (targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement) === ev.target;
    }
    setDelayTimeout(() => {
      setVisible(false, ev);
    }, delay);
    ev.persist();
  }, [setDelayTimeout, setVisible, state.hideDelay, targetDocument]);
  state.content.onPointerEnter = mergeCallbacks(state.content.onPointerEnter, clearDelayTimeout);
  state.content.onPointerLeave = mergeCallbacks(state.content.onPointerLeave, onLeaveTrigger);
  state.content.onFocus = mergeCallbacks(state.content.onFocus, clearDelayTimeout);
  state.content.onBlur = mergeCallbacks(state.content.onBlur, onLeaveTrigger);
  const child = getTriggerChild(children);
  const triggerAriaProps = {};
  if (relationship === "label") {
    if (typeof state.content.children === "string") {
      triggerAriaProps["aria-label"] = state.content.children;
    } else {
      triggerAriaProps["aria-labelledby"] = state.content.id;
      state.shouldRenderTooltip = true;
    }
  } else if (relationship === "description") {
    triggerAriaProps["aria-describedby"] = state.content.id;
    state.shouldRenderTooltip = true;
  }
  if (isServerSideRender) {
    state.shouldRenderTooltip = false;
  }
  const childTargetRef = useMergedRefs(child === null || child === void 0 ? void 0 : child.ref, targetRef);
  state.children = applyTriggerPropsToChildren(children, {
    ...triggerAriaProps,
    ...child === null || child === void 0 ? void 0 : child.props,
    // If the target prop is not provided, attach targetRef to the trigger element's ref prop
    ref: positioningOptions.target === void 0 ? childTargetRef : child === null || child === void 0 ? void 0 : child.ref,
    onPointerEnter: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : (_child_props = child.props) === null || _child_props === void 0 ? void 0 : _child_props.onPointerEnter, onEnterTrigger)),
    onPointerLeave: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : (_child_props1 = child.props) === null || _child_props1 === void 0 ? void 0 : _child_props1.onPointerLeave, onLeaveTrigger)),
    onFocus: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : (_child_props2 = child.props) === null || _child_props2 === void 0 ? void 0 : _child_props2.onFocus, onEnterTrigger)),
    onBlur: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : (_child_props3 = child.props) === null || _child_props3 === void 0 ? void 0 : _child_props3.onBlur, onLeaveTrigger))
  });
  return state;
};

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/renderTooltip.js
var React99 = __toESM(require_react());
var renderTooltip_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React99.createElement(React99.Fragment, null, state.children, state.shouldRenderTooltip && React99.createElement(Portal, {
    mountNode: state.mountNode
  }, React99.createElement(slots.content, slotProps.content, state.withArrow && React99.createElement("div", {
    ref: state.arrowRef,
    className: state.arrowClassName
  }), state.content.children)));
};

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/useTooltipStyles.js
var tooltipClassNames = {
  content: "fui-Tooltip__content"
};
var useStyles10 = __styles2({
  root: {
    mc9l5x: "fjseox",
    B7ck84d: "f1ewtqcl",
    B2u0y6b: "f132xexn",
    Bceei9c: "f158kwzp",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bg96gwp: "fwrc4pm",
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    B4j52fo: "f5ogflp",
    Bekrc4i: ["f1hqa2wf", "finvdd3"],
    Bn0qgzm: "f1f09k3d",
    ibv6hh: ["finvdd3", "f1hqa2wf"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    z8tnut: "f10ra9hq",
    z189sj: ["fd9xhir", "f1jlaasf"],
    Byoj8tv: "f1d7kygh",
    uwmqm3: ["f1jlaasf", "fd9xhir"],
    De3pzq: "fxugw4r",
    sj55zd: "f19n0e5",
    Bhu2qc9: "fxeb0a7"
  },
  visible: {
    mc9l5x: "ftgm304"
  },
  inverted: {
    De3pzq: "fg3r6xk",
    sj55zd: "fonrgv7"
  },
  arrow: {
    qhf8xq: "f1euv43f",
    De3pzq: "f1u2r49w",
    Bcdw1i0: "fd7fpy0",
    Bj3rh1h: "f1bsuimh",
    a9b677: "f1ekdpwm",
    Bqenvij: "f83vc9z",
    Ftih45: "f1wl9k8s",
    B1puzpu: "f1wkw4r9",
    Brfgrao: "f1j7ml58",
    Bcvre1j: "fyl8oag",
    Ccq8qp: "frdoeuz",
    Baz25je: "fb81m9q",
    cmx5o7: "f1ljr5q2",
    B4f6apu: "fyfemzf",
    m598lv: "focyt6c",
    Bk5zm6e: "fnhxbxj",
    y0oebl: "fdw6hkg",
    qa3bma: "f11yjt3y",
    Bqjgrrk: "f1172wan",
    Budzafs: ["f9e5op9", "f112wvtl"],
    Hv9wc6: ["ftj5xct", "fyavhwi"],
    hl6cv3: "f1773hnp",
    Bh2vraf: "f1n8855c",
    yayu3t: "f1v7783n",
    wedwtw: "fsw6im5",
    rhl9o9: "fh2hsk5",
    Bu8t5uz: "f159pzir",
    B6q6orb: "f11yvu4",
    Bwwlvwl: "fm1ycve"
  }
}, {
  d: [".fjseox{display:none;}", ".f1ewtqcl{box-sizing:border-box;}", ".f132xexn{max-width:240px;}", ".f158kwzp{cursor:default;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f5ogflp{border-top-width:1px;}", ".f1hqa2wf{border-right-width:1px;}", ".finvdd3{border-left-width:1px;}", ".f1f09k3d{border-bottom-width:1px;}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".f10ra9hq{padding-top:4px;}", ".fd9xhir{padding-right:11px;}", ".f1jlaasf{padding-left:11px;}", ".f1d7kygh{padding-bottom:6px;}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fxeb0a7{-webkit-filter:drop-shadow(0 0 2px var(--colorNeutralShadowAmbient)) drop-shadow(0 4px 8px var(--colorNeutralShadowKey));filter:drop-shadow(0 0 2px var(--colorNeutralShadowAmbient)) drop-shadow(0 4px 8px var(--colorNeutralShadowKey));}", ".ftgm304{display:block;}", ".fg3r6xk{background-color:var(--colorNeutralBackgroundStatic);}", ".fonrgv7{color:var(--colorNeutralForegroundStaticInverted);}", ".f1euv43f{position:absolute;}", ".f1u2r49w{background-color:inherit;}", ".fd7fpy0{visibility:hidden;}", ".f1bsuimh{z-index:-1;}", ".f1ekdpwm{width:8.484px;}", ".f83vc9z{height:8.484px;}", '.f1wl9k8s::before{content:"";}', ".f1wkw4r9::before{visibility:visible;}", ".f1j7ml58::before{position:absolute;}", ".fyl8oag::before{box-sizing:border-box;}", ".frdoeuz::before{width:inherit;}", ".fb81m9q::before{height:inherit;}", ".f1ljr5q2::before{background-color:inherit;}", ".fyfemzf::before{border-right-width:1px;}", ".focyt6c::before{border-right-style:solid;}", ".fnhxbxj::before{border-right-color:var(--colorTransparentStroke);}", ".fdw6hkg::before{border-bottom-width:1px;}", ".f11yjt3y::before{border-bottom-style:solid;}", ".f1172wan::before{border-bottom-color:var(--colorTransparentStroke);}", ".f9e5op9::before{border-bottom-right-radius:var(--borderRadiusSmall);}", ".f112wvtl::before{border-bottom-left-radius:var(--borderRadiusSmall);}", ".ftj5xct::before{-webkit-transform:rotate(var(--angle)) translate(0, 50%) rotate(45deg);-moz-transform:rotate(var(--angle)) translate(0, 50%) rotate(45deg);-ms-transform:rotate(var(--angle)) translate(0, 50%) rotate(45deg);transform:rotate(var(--angle)) translate(0, 50%) rotate(45deg);}", ".fyavhwi::before{-webkit-transform:rotate(var(--angle)) translate(0, 50%) rotate(-45deg);-moz-transform:rotate(var(--angle)) translate(0, 50%) rotate(-45deg);-ms-transform:rotate(var(--angle)) translate(0, 50%) rotate(-45deg);transform:rotate(var(--angle)) translate(0, 50%) rotate(-45deg);}", '[data-popper-placement^="top"] .f1773hnp{bottom:-1px;}', '[data-popper-placement^="top"] .f1n8855c{--angle:0;}', '[data-popper-placement^="right"] .f1v7783n{left:-1px;}', '[data-popper-placement^="right"] .fsw6im5{--angle:90deg;}', '[data-popper-placement^="bottom"] .fh2hsk5{top:-1px;}', '[data-popper-placement^="bottom"] .f159pzir{--angle:180deg;}', '[data-popper-placement^="left"] .f11yvu4{right:-1px;}', '[data-popper-placement^="left"] .fm1ycve{--angle:270deg;}']
});
var useTooltipStyles_unstable = (state) => {
  const styles = useStyles10();
  state.content.className = mergeClasses(tooltipClassNames.content, styles.root, state.appearance === "inverted" && styles.inverted, state.visible && styles.visible, state.content.className);
  state.arrowClassName = styles.arrow;
  return state;
};

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/Tooltip.js
var Tooltip = (props) => {
  const state = useTooltip_unstable(props);
  useTooltipStyles_unstable(state);
  const {
    useTooltipStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTooltip_unstable(state);
};
Tooltip.displayName = "Tooltip";
Tooltip.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-tooltip/lib/components/Tooltip/Tooltip.types.js
var React101 = __toESM(require_react());

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/useAvatarGroupPopover.js
var useAvatarGroupPopover_unstable = (props) => {
  var _useAvatarGroupContext_unstable;
  const size2 = (_useAvatarGroupContext_unstable = useAvatarGroupContext_unstable((ctx) => ctx.size)) !== null && _useAvatarGroupContext_unstable !== void 0 ? _useAvatarGroupContext_unstable : defaultAvatarGroupSize;
  const layout = useAvatarGroupContext_unstable((ctx) => ctx.layout);
  const {
    indicator = size2 < 24 ? "icon" : "count",
    count = React102.Children.count(props.children),
    children,
    ...restOfProps
  } = props;
  const [popoverOpen, setPopoverOpen] = useControllableState({
    state: props.open,
    defaultState: props.defaultOpen,
    initialState: false
  });
  const handleOnPopoverChange = (e, data) => {
    var _restOfProps_onOpenChange;
    (_restOfProps_onOpenChange = restOfProps.onOpenChange) === null || _restOfProps_onOpenChange === void 0 ? void 0 : _restOfProps_onOpenChange.call(restOfProps, e, data);
    setPopoverOpen(data.open);
  };
  let triggerButtonChildren;
  if (layout === "pie") {
    triggerButtonChildren = null;
  } else if (indicator === "icon") {
    triggerButtonChildren = React102.createElement(MoreHorizontalRegular, null);
  } else {
    triggerButtonChildren = count > 99 ? "99+" : `+${count}`;
  }
  return {
    count,
    indicator,
    layout,
    popoverOpen,
    size: size2,
    components: {
      root: Popover,
      triggerButton: "button",
      content: "ul",
      popoverSurface: PopoverSurface,
      tooltip: Tooltip
    },
    root: {
      // Popover expects a child for its children. The children are added in the renderAvatarGroupPopover.
      children: React102.createElement(React102.Fragment, null),
      size: "small",
      trapFocus: true,
      ...restOfProps,
      open: popoverOpen,
      onOpenChange: handleOnPopoverChange
    },
    triggerButton: resolveShorthand(props.triggerButton, {
      required: true,
      defaultProps: {
        children: triggerButtonChildren,
        type: "button"
      }
    }),
    content: resolveShorthand(props.content, {
      required: true,
      defaultProps: {
        children,
        role: "list"
      }
    }),
    popoverSurface: resolveShorthand(props.popoverSurface, {
      required: true,
      defaultProps: {
        "aria-label": "Overflow",
        tabIndex: 0
      }
    }),
    tooltip: resolveShorthand(props.tooltip, {
      required: true,
      defaultProps: {
        content: "View more people.",
        relationship: "label"
      }
    })
  };
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/useAvatarGroupPopoverStyles.js
var avatarGroupPopoverClassNames = {
  root: "fui-AvatarGroupPopover",
  content: "fui-AvatarGroupPopover__content",
  popoverSurface: "fui-AvatarGroupPopover__popoverSurface",
  tooltip: "fui-AvatarGroupPopover__tooltip",
  triggerButton: "fui-AvatarGroupPopover__triggerButton"
};
var useContentStyles = __styles2({
  base: {
    dclx09: "ftrb29c",
    B6of3ja: "f1hu3pq6",
    t21cq0: ["f11qmguv", "f1tyq0we"],
    jrapky: "f19f4twv",
    Frg6f3: ["f1tyq0we", "f11qmguv"],
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"]
  }
}, {
  d: [".ftrb29c{list-style-type:none;}", ".f1hu3pq6{margin-top:0;}", ".f11qmguv{margin-right:0;}", ".f1tyq0we{margin-left:0;}", ".f19f4twv{margin-bottom:0;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}"]
});
var usePopoverSurfaceStyles = __styles2({
  base: {
    Bxyxcbc: "fopcw2o",
    sshi5w: "f1n5o1gx",
    B68tc82: "f1p9o1ba",
    Bmxbyg5: "fqkkaap",
    z8tnut: "f1kwiid1",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f5b47ha",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    a9b677: "f13dwy2t"
  }
}, {
  d: [".fopcw2o{max-height:220px;}", ".f1n5o1gx{min-height:80px;}", ".f1p9o1ba{overflow-x:hidden;}", ".fqkkaap{overflow-y:scroll;}", ".f1kwiid1{padding-top:var(--spacingVerticalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f5b47ha{padding-bottom:var(--spacingVerticalS);}", ".f13dwy2t{width:220px;}"]
});
var useTriggerButtonStyles = __styles2({
  base: {
    mc9l5x: "ftuwxu6",
    qhf8xq: "f10pi13n",
    Bnnss6s: "fi64zpg",
    Brf1p80: "f4d9j23",
    Bt984gj: "f122n59",
    sj55zd: "f19n0e5",
    De3pzq: "fxugw4r",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    Bbmb7ep: ["f8fbkgy", "f1nfllo7"],
    Beyfa6y: ["f1nfllo7", "f8fbkgy"],
    B7oj6ja: ["f1djnp8u", "f1s8kh49"],
    Btl43ni: ["f1s8kh49", "f1djnp8u"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    Bjwas2f: "fw33nwi",
    Bn1d65q: ["f1ptkjjm", "fmzzjfk"],
    Bxeuatn: "f15j0dln",
    n51gp8: ["fmzzjfk", "f1ptkjjm"]
  },
  pie: {
    De3pzq: "f1c21dwh",
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    sj55zd: "f44pa96"
  },
  focusIndicator: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bbcte9g: "fhqs6ru",
    Bn40d3w: ["f14qhy8p", "f12lscv2"],
    i2cumq: "f1p9w1qi",
    lbo84a: ["f12lscv2", "f14qhy8p"],
    B5gfjzb: "ff4w5z6",
    u5e7qz: ["f1slf1ze", "f33ndkz"],
    Bbjhlyh: "fsap1ud",
    mqozju: ["f33ndkz", "f1slf1ze"],
    B8q5s1w: "f17t0x8g",
    Bci5o5g: ["f194v5ow", "fk7jm04"],
    n8qw10: "f1qgg65p",
    Bdrgwmp: ["fk7jm04", "f194v5ow"]
  },
  states: {
    Bi91k9c: "feu1g3u",
    Jwef8y: "f1knas48",
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "f1xlaoq0",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    lj723h: "f1g4hkjv",
    ecr2s2: "fb40n2d",
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fumykes",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  selected: {
    sj55zd: "f14nttnl",
    De3pzq: "f1nfm20t",
    g2u3we: "f1ly1fcm",
    h3c5rm: ["fi8bssc", "fj6btzu"],
    B9xav0g: "f1s9tnsa",
    zhjwy3: ["fj6btzu", "fi8bssc"]
  },
  icon12: {
    Be2twd7: "f1ugzwwg"
  },
  icon16: {
    Be2twd7: "f4ybsrx"
  },
  icon20: {
    Be2twd7: "fe5j1ua"
  },
  icon24: {
    Be2twd7: "f1rt2boy"
  },
  icon28: {
    Be2twd7: "f24l1pt"
  },
  icon32: {
    Be2twd7: "ffl51b"
  },
  icon48: {
    Be2twd7: "f18m8u13"
  },
  caption2Strong: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f13mqy1h",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fcpl73t"
  },
  caption1Strong: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fwrc4pm"
  },
  body1Strong: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1i3iumi"
  },
  subtitle2: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  subtitle1: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1pp30po",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f106mvju"
  },
  title3: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1x0m3f5",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fb86gi6"
  },
  borderThin: {
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"]
  },
  borderThick: {
    B4j52fo: "f18zi460",
    Bekrc4i: ["f1wpluaz", "fsfsuhs"],
    Bn0qgzm: "fmklw6v",
    ibv6hh: ["fsfsuhs", "f1wpluaz"]
  },
  borderThicker: {
    B4j52fo: "fgx37oo",
    Bekrc4i: ["f130t4y6", "f1efpmoh"],
    Bn0qgzm: "fv51ejd",
    ibv6hh: ["f1efpmoh", "f130t4y6"]
  },
  borderThickest: {
    B4j52fo: "fwn6jck",
    Bekrc4i: ["figl7jc", "f1g0iy8l"],
    Bn0qgzm: "f1b8shu7",
    ibv6hh: ["f1g0iy8l", "figl7jc"]
  }
}, {
  d: [".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".f10pi13n{position:relative;}", ".fi64zpg{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}", ".f4d9j23{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", ".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}", ".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".f44pa96{color:transparent;}", ".fhqs6ru[data-fui-focus-visible]{border-top-width:var(--strokeWidthThick);}", ".f14qhy8p[data-fui-focus-visible]{border-right-width:var(--strokeWidthThick);}", ".f12lscv2[data-fui-focus-visible]{border-left-width:var(--strokeWidthThick);}", ".f1p9w1qi[data-fui-focus-visible]{border-bottom-width:var(--strokeWidthThick);}", ".ff4w5z6[data-fui-focus-visible]{border-top-style:solid;}", ".f1slf1ze[data-fui-focus-visible]{border-right-style:solid;}", ".f33ndkz[data-fui-focus-visible]{border-left-style:solid;}", ".fsap1ud[data-fui-focus-visible]{border-bottom-style:solid;}", ".f17t0x8g[data-fui-focus-visible]{border-top-color:var(--colorStrokeFocus2);}", ".f194v5ow[data-fui-focus-visible]{border-right-color:var(--colorStrokeFocus2);}", ".fk7jm04[data-fui-focus-visible]{border-left-color:var(--colorStrokeFocus2);}", ".f1qgg65p[data-fui-focus-visible]{border-bottom-color:var(--colorStrokeFocus2);}", ".f14nttnl{color:var(--colorNeutralForeground1Selected);}", ".f1nfm20t{background-color:var(--colorNeutralBackground1Selected);}", ".f1ly1fcm{border-top-color:var(--colorNeutralStroke1Selected);}", ".fi8bssc{border-right-color:var(--colorNeutralStroke1Selected);}", ".fj6btzu{border-left-color:var(--colorNeutralStroke1Selected);}", ".f1s9tnsa{border-bottom-color:var(--colorNeutralStroke1Selected);}", ".f1ugzwwg{font-size:12px;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f24l1pt{font-size:28px;}", ".ffl51b{font-size:32px;}", ".f18m8u13{font-size:48px;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fcpl73t{line-height:var(--lineHeightBase100);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f106mvju{line-height:var(--lineHeightBase500);}", ".f1x0m3f5{font-size:var(--fontSizeBase600);}", ".fb86gi6{line-height:var(--lineHeightBase600);}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".f18zi460{border-top-width:var(--strokeWidthThick);}", ".f1wpluaz{border-right-width:var(--strokeWidthThick);}", ".fsfsuhs{border-left-width:var(--strokeWidthThick);}", ".fmklw6v{border-bottom-width:var(--strokeWidthThick);}", ".fgx37oo{border-top-width:var(--strokeWidthThicker);}", ".f130t4y6{border-right-width:var(--strokeWidthThicker);}", ".f1efpmoh{border-left-width:var(--strokeWidthThicker);}", ".fv51ejd{border-bottom-width:var(--strokeWidthThicker);}", ".fwn6jck{border-top-width:var(--strokeWidthThickest);}", ".figl7jc{border-right-width:var(--strokeWidthThickest);}", ".f1g0iy8l{border-left-width:var(--strokeWidthThickest);}", ".f1b8shu7{border-bottom-width:var(--strokeWidthThickest);}"],
  m: [["@media (forced-colors: active){.fw33nwi{border-top-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ptkjjm{border-right-color:CanvasText;}.fmzzjfk{border-left-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f15j0dln{border-bottom-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fmzzjfk{border-left-color:CanvasText;}.f1ptkjjm{border-right-color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }]],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  h: [".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".f1xlaoq0:hover{border-bottom-color:var(--colorNeutralStroke1Hover);}"],
  a: [".f1g4hkjv:active{color:var(--colorNeutralForeground1Pressed);}", ".fb40n2d:active{background-color:var(--colorNeutralBackground1Pressed);}", ".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fumykes:active{border-bottom-color:var(--colorNeutralStroke1Pressed);}"]
});
var useAvatarGroupPopoverStyles_unstable = (state) => {
  const {
    indicator,
    size: size2,
    layout,
    popoverOpen
  } = state;
  const sizeStyles = useSizeStyles();
  const triggerButtonStyles = useTriggerButtonStyles();
  const contentStyles = useContentStyles();
  const popoverSurfaceStyles = usePopoverSurfaceStyles();
  const groupChildClassName = useGroupChildClassName(layout, size2);
  const triggerButtonClasses = [];
  if (size2 < 36) {
    triggerButtonClasses.push(triggerButtonStyles.borderThin);
  } else if (size2 < 56) {
    triggerButtonClasses.push(triggerButtonStyles.borderThick);
  } else if (size2 < 72) {
    triggerButtonClasses.push(triggerButtonStyles.borderThicker);
  } else {
    triggerButtonClasses.push(triggerButtonStyles.borderThickest);
  }
  if (indicator === "count") {
    if (size2 <= 24) {
      triggerButtonClasses.push(triggerButtonStyles.caption2Strong);
    } else if (size2 <= 28) {
      triggerButtonClasses.push(triggerButtonStyles.caption1Strong);
    } else if (size2 <= 40) {
      triggerButtonClasses.push(triggerButtonStyles.body1Strong);
    } else if (size2 <= 56) {
      triggerButtonClasses.push(triggerButtonStyles.subtitle2);
    } else if (size2 <= 96) {
      triggerButtonClasses.push(triggerButtonStyles.subtitle1);
    } else {
      triggerButtonClasses.push(triggerButtonStyles.title3);
    }
  } else {
    if (size2 <= 16) {
      triggerButtonClasses.push(triggerButtonStyles.icon12);
    } else if (size2 <= 24) {
      triggerButtonClasses.push(triggerButtonStyles.icon16);
    } else if (size2 <= 40) {
      triggerButtonClasses.push(triggerButtonStyles.icon20);
    } else if (size2 <= 48) {
      triggerButtonClasses.push(triggerButtonStyles.icon24);
    } else if (size2 <= 56) {
      triggerButtonClasses.push(triggerButtonStyles.icon28);
    } else if (size2 <= 72) {
      triggerButtonClasses.push(triggerButtonStyles.icon32);
    } else {
      triggerButtonClasses.push(triggerButtonStyles.icon48);
    }
  }
  state.triggerButton.className = mergeClasses(avatarGroupPopoverClassNames.triggerButton, groupChildClassName, sizeStyles[size2], triggerButtonStyles.base, layout === "pie" && triggerButtonStyles.pie, triggerButtonStyles.focusIndicator, layout !== "pie" && triggerButtonStyles.states, layout !== "pie" && popoverOpen && triggerButtonStyles.selected, ...triggerButtonClasses, state.triggerButton.className);
  state.content.className = mergeClasses(avatarGroupPopoverClassNames.content, contentStyles.base, state.content.className);
  state.popoverSurface.className = mergeClasses(avatarGroupPopoverClassNames.popoverSurface, popoverSurfaceStyles.base, state.popoverSurface.className);
  return state;
};

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/AvatarGroupPopover.js
var AvatarGroupPopover = (props) => {
  const state = useAvatarGroupPopover_unstable(props);
  const contextValues = useAvatarGroupPopoverContextValues(state);
  useAvatarGroupPopoverStyles_unstable(state);
  const {
    useAvatarGroupPopoverStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderAvatarGroupPopover_unstable(state, contextValues);
};
AvatarGroupPopover.displayName = "AvatarGroupPopover";

// node_modules/@fluentui/react-avatar/lib/components/AvatarGroupPopover/AvatarGroupPopover.types.js
var React104 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/Button/Button.js
var React108 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/Button/renderButton.js
var React105 = __toESM(require_react());
var renderButton_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  const {
    iconOnly,
    iconPosition
  } = state;
  return React105.createElement(slots.root, slotProps.root, iconPosition !== "after" && slots.icon && React105.createElement(slots.icon, slotProps.icon), !iconOnly && state.root.children, iconPosition === "after" && slots.icon && React105.createElement(slots.icon, slotProps.icon));
};

// node_modules/@fluentui/react-button/lib/components/Button/useButton.js
var React107 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/contexts/ButtonContext.js
var React106 = __toESM(require_react());
var buttonContext = React106.createContext(void 0);
var buttonContextDefaultValue = {};
var ButtonContextProvider = buttonContext.Provider;
var _React_useContext3;
var useButtonContext = () => (_React_useContext3 = React106.useContext(buttonContext)) !== null && _React_useContext3 !== void 0 ? _React_useContext3 : buttonContextDefaultValue;

// node_modules/@fluentui/react-button/lib/components/Button/useButton.js
var useButton_unstable = (props, ref) => {
  const {
    size: contextSize
  } = useButtonContext();
  const {
    appearance = "secondary",
    as = "button",
    disabled = false,
    disabledFocusable = false,
    icon,
    iconPosition = "before",
    shape = "rounded",
    size: size2 = contextSize !== null && contextSize !== void 0 ? contextSize : "medium"
  } = props;
  const iconShorthand = resolveShorthand(icon);
  return {
    // Props passed at the top-level
    appearance,
    disabled,
    disabledFocusable,
    iconPosition,
    shape,
    size: size2,
    // State calculated from a set of props
    iconOnly: Boolean((iconShorthand === null || iconShorthand === void 0 ? void 0 : iconShorthand.children) && !props.children),
    // Slots definition
    components: {
      root: "button",
      icon: "span"
    },
    root: getNativeElementProps(as, useARIAButtonShorthand(props, {
      required: true,
      defaultProps: {
        ref,
        type: "button"
      }
    })),
    icon: iconShorthand
  };
};

// node_modules/@fluentui/react-button/lib/components/Button/useButtonStyles.js
var buttonClassNames = {
  root: "fui-Button",
  icon: "fui-Button__icon"
};
var useRootBaseClassName = __resetStyles("rsawnvh", "r1eny37h", [".rsawnvh{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;box-sizing:border-box;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;text-decoration-line:none;vertical-align:middle;margin:0;overflow:hidden;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);font-family:var(--fontFamilyBase);outline-style:none;padding:5px var(--spacingHorizontalM);min-width:96px;border-radius:var(--borderRadiusMedium);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase300);transition-duration:var(--durationFaster);transition-property:background,border,color;transition-timing-function:var(--curveEasyEase);}", ".rsawnvh:hover{background-color:var(--colorNeutralBackground1Hover);border-color:var(--colorNeutralStroke1Hover);color:var(--colorNeutralForeground1Hover);cursor:pointer;}", ".rsawnvh:hover .fui-Icon-filled{display:inline;}", ".rsawnvh:hover .fui-Icon-regular{display:none;}", ".rsawnvh:hover:active{background-color:var(--colorNeutralBackground1Pressed);border-color:var(--colorNeutralStroke1Pressed);color:var(--colorNeutralForeground1Pressed);outline-style:none;}", ".rsawnvh:hover:active .fui-Icon-filled{display:inline;}", ".rsawnvh:hover:active .fui-Icon-regular{display:none;}", "@media screen and (prefers-reduced-motion: reduce){.rsawnvh{transition-duration:0.01ms;}}", "@media (forced-colors: active){.rsawnvh:focus{border-color:ButtonText;}.rsawnvh:hover{background-color:HighlightText;border-color:Highlight;color:Highlight;forced-color-adjust:none;}.rsawnvh:hover:active{background-color:HighlightText;border-color:Highlight;color:Highlight;forced-color-adjust:none;}}", ".rsawnvh:focus{outline-style:none;}", ".rsawnvh:focus-visible{outline-style:none;}", ".rsawnvh[data-fui-focus-visible]{border-color:var(--colorTransparentStroke);border-radius:var(--borderRadiusMedium);outline:var(--strokeWidthThick) solid var(--colorTransparentStroke);box-shadow:var(--shadow4),0 0 0 2px var(--colorStrokeFocus2);z-index:1;}", ".r1eny37h{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;box-sizing:border-box;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;text-decoration-line:none;vertical-align:middle;margin:0;overflow:hidden;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);border:var(--strokeWidthThin) solid var(--colorNeutralStroke1);font-family:var(--fontFamilyBase);outline-style:none;padding:5px var(--spacingHorizontalM);min-width:96px;border-radius:var(--borderRadiusMedium);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase300);transition-duration:var(--durationFaster);transition-property:background,border,color;transition-timing-function:var(--curveEasyEase);}", ".r1eny37h:hover{background-color:var(--colorNeutralBackground1Hover);border-color:var(--colorNeutralStroke1Hover);color:var(--colorNeutralForeground1Hover);cursor:pointer;}", ".r1eny37h:hover .fui-Icon-filled{display:inline;}", ".r1eny37h:hover .fui-Icon-regular{display:none;}", ".r1eny37h:hover:active{background-color:var(--colorNeutralBackground1Pressed);border-color:var(--colorNeutralStroke1Pressed);color:var(--colorNeutralForeground1Pressed);outline-style:none;}", ".r1eny37h:hover:active .fui-Icon-filled{display:inline;}", ".r1eny37h:hover:active .fui-Icon-regular{display:none;}", "@media screen and (prefers-reduced-motion: reduce){.r1eny37h{transition-duration:0.01ms;}}", "@media (forced-colors: active){.r1eny37h:focus{border-color:ButtonText;}.r1eny37h:hover{background-color:HighlightText;border-color:Highlight;color:Highlight;forced-color-adjust:none;}.r1eny37h:hover:active{background-color:HighlightText;border-color:Highlight;color:Highlight;forced-color-adjust:none;}}", ".r1eny37h:focus{outline-style:none;}", ".r1eny37h:focus-visible{outline-style:none;}", ".r1eny37h[data-fui-focus-visible]{border-color:var(--colorTransparentStroke);border-radius:var(--borderRadiusMedium);outline:var(--strokeWidthThick) solid var(--colorTransparentStroke);box-shadow:var(--shadow4),0 0 0 2px var(--colorStrokeFocus2);z-index:1;}"]);
var useIconBaseClassName = __resetStyles("rywnvv2", null, [".rywnvv2{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;font-size:20px;height:20px;width:20px;--fui-Button__icon--spacing:var(--spacingHorizontalSNudge);}"]);
var useRootStyles3 = __styles2({
  outline: {
    De3pzq: "f1c21dwh",
    Jwef8y: "fjxutwb",
    iro3zm: "fwiml72"
  },
  primary: {
    De3pzq: "ffp7eso",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "f1phragk",
    Jwef8y: "f15wkkf3",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "f1rq72xc",
    iro3zm: "fnp9lpt",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1d6v5y2",
    Bsw6fvg: "f1rirnrt",
    Bjwas2f: "f1uu00uk",
    Bn1d65q: ["fkvaka8", "f9a0qzu"],
    Bxeuatn: "f1ux7til",
    n51gp8: ["f9a0qzu", "fkvaka8"],
    Bbusuzp: "f1lkg8j3",
    ycbfsm: "fkc42ay",
    Bqrx1nm: "fq7113v",
    pgvf35: "ff1wgvm",
    Bh7lczh: ["fiob0tu", "f1x4h75k"],
    dpv3f4: "f1j6scgf",
    Bpnjhaq: ["f1x4h75k", "fiob0tu"],
    ze5xyy: "f4xjyn1",
    g2kj27: "fbgcvur",
    Bf756sw: "f1ks1yx8",
    Bow2dr7: ["f1o6qegi", "fmxjhhp"],
    Bvhedfk: "fcnxywj",
    Gye4lf: ["fmxjhhp", "f1o6qegi"],
    pc6evw: "f9ddjv3"
  },
  secondary: {},
  subtle: {
    De3pzq: "fhovq9v",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "fkfq4zb",
    Jwef8y: "f1t94bn6",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "fnwyq0v",
    Bbdnnc7: "fy5bs14",
    iro3zm: "fsv2rcd",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1omzyqd",
    x3br3k: "fj8yq94"
  },
  transparent: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "fkfq4zb",
    Jwef8y: "fjxutwb",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "f139oj5f",
    iro3zm: "fwiml72",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1fg1p5m"
  },
  circular: {
    Bbmb7ep: ["f8fbkgy", "f1nfllo7"],
    Beyfa6y: ["f1nfllo7", "f8fbkgy"],
    B7oj6ja: ["f1djnp8u", "f1s8kh49"],
    Btl43ni: ["f1s8kh49", "f1djnp8u"]
  },
  rounded: {},
  square: {
    Bbmb7ep: ["fzi6hpg", "fyowgf4"],
    Beyfa6y: ["fyowgf4", "fzi6hpg"],
    B7oj6ja: ["f3fg2lr", "f13av6d4"],
    Btl43ni: ["f13av6d4", "f3fg2lr"]
  },
  small: {
    Bf4jedk: "fh7ncta",
    z8tnut: "f1khb0e9",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f1jnq6q7",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    Bbmb7ep: ["fclariu", "fyjfh2l"],
    Beyfa6y: ["fyjfh2l", "fclariu"],
    B7oj6ja: ["f11xeu6h", "f1knf8zw"],
    Btl43ni: ["f1knf8zw", "f11xeu6h"],
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  smallWithIcon: {
    Byoj8tv: "f1brlhvm",
    z8tnut: "f1sl3k7w"
  },
  medium: {},
  large: {
    Bf4jedk: "f14es27b",
    z8tnut: "fp9bwmr",
    z189sj: ["fjodcmx", "fhx4nu"],
    Byoj8tv: "f150uoa4",
    uwmqm3: ["fhx4nu", "fjodcmx"],
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  largeWithIcon: {
    Byoj8tv: "fy7v416",
    z8tnut: "f1a1bwwz"
  }
}, {
  d: [".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".ffp7eso{background-color:var(--colorBrandBackground);}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}", ".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}", ".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}", ".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}", ".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}", ".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}", ".fh7ncta{min-width:64px;}", ".f1khb0e9{padding-top:3px;}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1jnq6q7{padding-bottom:3px;}", ".fclariu{border-bottom-right-radius:3px;}", ".fyjfh2l{border-bottom-left-radius:3px;}", ".f11xeu6h{border-top-right-radius:3px;}", ".f1knf8zw{border-top-left-radius:3px;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1brlhvm{padding-bottom:1px;}", ".f1sl3k7w{padding-top:1px;}", ".f14es27b{min-width:96px;}", ".fp9bwmr{padding-top:8px;}", ".fjodcmx{padding-right:var(--spacingHorizontalL);}", ".fhx4nu{padding-left:var(--spacingHorizontalL);}", ".f150uoa4{padding-bottom:8px;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fy7v416{padding-bottom:7px;}", ".f1a1bwwz{padding-top:7px;}"],
  h: [".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".fwiml72:hover:active{background-color:var(--colorTransparentBackgroundPressed);}", ".f15wkkf3:hover{background-color:var(--colorBrandBackgroundHover);}", ".f1s2uweq:hover{border-top-color:transparent;}", ".fr80ssc:hover{border-right-color:transparent;}", ".fecsdlb:hover{border-left-color:transparent;}", ".f1ukrpxl:hover{border-bottom-color:transparent;}", ".f1rq72xc:hover{color:var(--colorNeutralForegroundOnBrand);}", ".fnp9lpt:hover:active{background-color:var(--colorBrandBackgroundPressed);}", ".f1h0usnq:hover:active{border-top-color:transparent;}", ".fs4ktlq:hover:active{border-right-color:transparent;}", ".fx2bmrt:hover:active{border-left-color:transparent;}", ".f16h9ulv:hover:active{border-bottom-color:transparent;}", ".f1d6v5y2:hover:active{color:var(--colorNeutralForegroundOnBrand);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".fy5bs14:hover .fui-Button__icon{color:var(--colorNeutralForeground2BrandHover);}", ".fsv2rcd:hover:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1omzyqd:hover:active{color:var(--colorNeutralForeground2Pressed);}", ".fj8yq94:hover:active .fui-Button__icon{color:var(--colorNeutralForeground2BrandPressed);}", ".f139oj5f:hover{color:var(--colorNeutralForeground2BrandHover);}", ".f1fg1p5m:hover:active{color:var(--colorNeutralForeground2BrandPressed);}"],
  m: [["@media (forced-colors: active){.f1rirnrt{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1uu00uk{border-top-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkvaka8{border-right-color:HighlightText;}.f9a0qzu{border-left-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ux7til{border-bottom-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9a0qzu{border-left-color:HighlightText;}.fkvaka8{border-right-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lkg8j3{color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkc42ay{forced-color-adjust:none;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fq7113v:hover{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.ff1wgvm:hover{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fiob0tu:hover{border-right-color:Highlight;}.f1x4h75k:hover{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1j6scgf:hover{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1x4h75k:hover{border-left-color:Highlight;}.fiob0tu:hover{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f4xjyn1:hover{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fbgcvur:hover:active{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ks1yx8:hover:active{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1o6qegi:hover:active{border-right-color:Highlight;}.fmxjhhp:hover:active{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fcnxywj:hover:active{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fmxjhhp:hover:active{border-left-color:Highlight;}.f1o6qegi:hover:active{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9ddjv3:hover:active{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootDisabledStyles = __styles2({
  base: {
    De3pzq: "f1bg9a2p",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    Jwef8y: "f1falr9n",
    Bgoe8wy: "f12mpcsy",
    Bwzppfd: ["f1gwvigk", "f18rmfxp"],
    oetu4i: "f1jnshp0",
    gg5e9n: ["f18rmfxp", "f1gwvigk"],
    Bi91k9c: "fvgxktp",
    eoavqd: "fphbwmw",
    Bk3fhr4: "f19vpps7",
    Bmfj8id: "fv5swzo",
    iro3zm: "f1t6o4dc",
    b661bw: "f10ztigi",
    Bk6r4ia: ["f1ft5sdu", "f1gzf82w"],
    B9zn80p: "f12zbtn2",
    Bpld233: ["f1gzf82w", "f1ft5sdu"],
    B2d53fq: "fcvwxyo",
    c3iz72: "f8w4c43",
    em6i61: "f1ol4fw6",
    vm6p8p: "f1q1lw4e"
  },
  highContrast: {
    Bsw6fvg: "f4lkoma",
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"],
    Bbusuzp: "f1dcs8yz",
    G867l3: "fjwq6ea",
    gdbnj: ["f1lr3nhc", "f1mbxvi6"],
    mxns5l: "fn5gmvv",
    o3nasb: ["f1mbxvi6", "f1lr3nhc"],
    Bqrx1nm: "f1vmkb5g",
    pgvf35: "f53ppgq",
    Bh7lczh: ["f1663y11", "f80fkiy"],
    dpv3f4: "f18v5270",
    Bpnjhaq: ["f80fkiy", "f1663y11"],
    ze5xyy: "f1kc2mi9",
    g2kj27: "f1y0svfh",
    Bf756sw: "fihuait",
    Bow2dr7: ["fnxhupq", "fyd6l6x"],
    Bvhedfk: "fx507ft",
    Gye4lf: ["fyd6l6x", "fnxhupq"],
    pc6evw: "fb3rf2x"
  },
  outline: {
    De3pzq: "f1c21dwh",
    Jwef8y: "f9ql6rf",
    iro3zm: "f3h1zc4"
  },
  primary: {
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  },
  secondary: {},
  subtle: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Jwef8y: "f9ql6rf",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    iro3zm: "f3h1zc4",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  },
  transparent: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Jwef8y: "f9ql6rf",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    iro3zm: "f3h1zc4",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  }
}, {
  d: [".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}"],
  h: [".f1falr9n:hover{background-color:var(--colorNeutralBackgroundDisabled);}", ".f12mpcsy:hover{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1gwvigk:hover{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f18rmfxp:hover{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f1jnshp0:hover{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}", ".fphbwmw:hover{cursor:not-allowed;}", ".f19vpps7:hover .fui-Icon-filled{display:none;}", ".fv5swzo:hover .fui-Icon-regular{display:inline;}", ".f1t6o4dc:hover:active{background-color:var(--colorNeutralBackgroundDisabled);}", ".f10ztigi:hover:active{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1ft5sdu:hover:active{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f1gzf82w:hover:active{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f12zbtn2:hover:active{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fcvwxyo:hover:active{color:var(--colorNeutralForegroundDisabled);}", ".f8w4c43:hover:active{cursor:not-allowed;}", ".f1ol4fw6:hover:active .fui-Icon-filled{display:none;}", ".f1q1lw4e:hover:active .fui-Icon-regular{display:inline;}", ".f9ql6rf:hover{background-color:var(--colorTransparentBackground);}", ".f3h1zc4:hover:active{background-color:var(--colorTransparentBackground);}", ".f1s2uweq:hover{border-top-color:transparent;}", ".fr80ssc:hover{border-right-color:transparent;}", ".fecsdlb:hover{border-left-color:transparent;}", ".f1ukrpxl:hover{border-bottom-color:transparent;}", ".f1h0usnq:hover:active{border-top-color:transparent;}", ".fs4ktlq:hover:active{border-right-color:transparent;}", ".fx2bmrt:hover:active{border-left-color:transparent;}", ".f16h9ulv:hover:active{border-bottom-color:transparent;}"],
  m: [["@media (forced-colors: active){.f4lkoma{background-color:ButtonFace;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rvyvqg{border-right-color:GrayText;}.f14g86mu{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fjwq6ea:focus{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lr3nhc:focus{border-right-color:GrayText;}.f1mbxvi6:focus{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fn5gmvv:focus{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1mbxvi6:focus{border-left-color:GrayText;}.f1lr3nhc:focus{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1vmkb5g:hover{background-color:ButtonFace;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f53ppgq:hover{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1663y11:hover{border-right-color:GrayText;}.f80fkiy:hover{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f18v5270:hover{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f80fkiy:hover{border-left-color:GrayText;}.f1663y11:hover{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1kc2mi9:hover{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1y0svfh:hover:active{background-color:ButtonFace;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fihuait:hover:active{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fnxhupq:hover:active{border-right-color:GrayText;}.fyd6l6x:hover:active{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fx507ft:hover:active{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fyd6l6x:hover:active{border-left-color:GrayText;}.fnxhupq:hover:active{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fb3rf2x:hover:active{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootFocusStyles = __styles2({
  circular: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    kdpuga: ["fanj13w", "f1gou5sz"],
    Bw81rd7: ["f1gou5sz", "fanj13w"],
    B6xbmo0: ["fulf6x3", "foeb2x"],
    dm238s: ["foeb2x", "fulf6x3"]
  },
  rounded: {},
  square: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    kdpuga: ["f1ndz5i7", "f1co4qro"],
    Bw81rd7: ["f1co4qro", "f1ndz5i7"],
    B6xbmo0: ["f146y5a9", "f1k2ftg"],
    dm238s: ["f1k2ftg", "f146y5a9"]
  },
  primary: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f15my96h",
    Bci5o5g: ["f8yq1e5", "f59w28j"],
    n8qw10: "f1mze7uc",
    Bdrgwmp: ["f59w28j", "f8yq1e5"],
    j6ew2k: "ftbnf46"
  },
  small: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    kdpuga: ["fg3gtdo", "fwii5mg"],
    Bw81rd7: ["fwii5mg", "fg3gtdo"],
    B6xbmo0: ["f1palphq", "f12nxie7"],
    dm238s: ["f12nxie7", "f1palphq"]
  },
  medium: {},
  large: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    kdpuga: ["ft3lys4", "f1la4x2g"],
    Bw81rd7: ["f1la4x2g", "ft3lys4"],
    B6xbmo0: ["f156y0zm", "fakimq4"],
    dm238s: ["fakimq4", "f156y0zm"]
  }
}, {
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  d: [".fanj13w[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f1gou5sz[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusCircular);}", ".fulf6x3[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusCircular);}", ".foeb2x[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusCircular);}", ".f1ndz5i7[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusNone);}", ".f1co4qro[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusNone);}", ".f146y5a9[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusNone);}", ".f1k2ftg[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusNone);}", ".f15my96h[data-fui-focus-visible]{border-top-color:var(--colorNeutralForegroundOnBrand);}", ".f8yq1e5[data-fui-focus-visible]{border-right-color:var(--colorNeutralForegroundOnBrand);}", ".f59w28j[data-fui-focus-visible]{border-left-color:var(--colorNeutralForegroundOnBrand);}", ".f1mze7uc[data-fui-focus-visible]{border-bottom-color:var(--colorNeutralForegroundOnBrand);}", ".ftbnf46[data-fui-focus-visible]{box-shadow:var(--shadow2),0 0 0 2px var(--colorStrokeFocus2);}", ".fg3gtdo[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusSmall);}", ".fwii5mg[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusSmall);}", ".f1palphq[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusSmall);}", ".f12nxie7[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusSmall);}", ".ft3lys4[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusLarge);}", ".f1la4x2g[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusLarge);}", ".f156y0zm[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusLarge);}", ".fakimq4[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusLarge);}"]
});
var useRootIconOnlyStyles = __styles2({
  small: {
    z8tnut: "f1sl3k7w",
    z189sj: ["f136y8j8", "f10xn8zz"],
    Byoj8tv: "f1brlhvm",
    uwmqm3: ["f10xn8zz", "f136y8j8"],
    Bf4jedk: "f17fgpbq",
    B2u0y6b: "f1jt17bm"
  },
  medium: {
    z8tnut: "f1sbtcvk",
    z189sj: ["fwiuce9", "f15vdbe4"],
    Byoj8tv: "fdghr9",
    uwmqm3: ["f15vdbe4", "fwiuce9"],
    Bf4jedk: "fwbmr0d",
    B2u0y6b: "f44c6la"
  },
  large: {
    z8tnut: "f1a1bwwz",
    z189sj: ["f18k1jr3", "f1rtp3s9"],
    Byoj8tv: "fy7v416",
    uwmqm3: ["f1rtp3s9", "f18k1jr3"],
    Bf4jedk: "f12clzc2",
    B2u0y6b: "fjy1crr"
  }
}, {
  d: [".f1sl3k7w{padding-top:1px;}", ".f136y8j8{padding-right:1px;}", ".f10xn8zz{padding-left:1px;}", ".f1brlhvm{padding-bottom:1px;}", ".f17fgpbq{min-width:24px;}", ".f1jt17bm{max-width:24px;}", ".f1sbtcvk{padding-top:5px;}", ".fwiuce9{padding-right:5px;}", ".f15vdbe4{padding-left:5px;}", ".fdghr9{padding-bottom:5px;}", ".fwbmr0d{min-width:32px;}", ".f44c6la{max-width:32px;}", ".f1a1bwwz{padding-top:7px;}", ".f18k1jr3{padding-right:7px;}", ".f1rtp3s9{padding-left:7px;}", ".fy7v416{padding-bottom:7px;}", ".f12clzc2{min-width:40px;}", ".fjy1crr{max-width:40px;}"]
});
var useIconStyles2 = __styles2({
  small: {
    Be2twd7: "fe5j1ua",
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3",
    Bqrlyyl: "fbaiahx"
  },
  medium: {},
  large: {
    Be2twd7: "f1rt2boy",
    Bqenvij: "frvgh55",
    a9b677: "fq4mcun",
    Bqrlyyl: "f1exjqw5"
  },
  before: {
    t21cq0: ["f1nizpg2", "f1a695kz"]
  },
  after: {
    Frg6f3: ["f1a695kz", "f1nizpg2"]
  }
}, {
  d: [".fe5j1ua{font-size:20px;}", ".fjamq6b{height:20px;}", ".f64fuq3{width:20px;}", ".fbaiahx{--fui-Button__icon--spacing:var(--spacingHorizontalXS);}", ".f1rt2boy{font-size:24px;}", ".frvgh55{height:24px;}", ".fq4mcun{width:24px;}", ".f1exjqw5{--fui-Button__icon--spacing:var(--spacingHorizontalSNudge);}", ".f1nizpg2{margin-right:var(--fui-Button__icon--spacing);}", ".f1a695kz{margin-left:var(--fui-Button__icon--spacing);}"]
});
var useButtonStyles_unstable = (state) => {
  const rootBaseClassName = useRootBaseClassName();
  const iconBaseClassName = useIconBaseClassName();
  const rootStyles = useRootStyles3();
  const rootDisabledStyles = useRootDisabledStyles();
  const rootFocusStyles = useRootFocusStyles();
  const rootIconOnlyStyles = useRootIconOnlyStyles();
  const iconStyles = useIconStyles2();
  const {
    appearance,
    disabled,
    disabledFocusable,
    icon,
    iconOnly,
    iconPosition,
    shape,
    size: size2
  } = state;
  state.root.className = mergeClasses(
    buttonClassNames.root,
    rootBaseClassName,
    appearance && rootStyles[appearance],
    rootStyles[size2],
    icon && size2 === "small" && rootStyles.smallWithIcon,
    icon && size2 === "large" && rootStyles.largeWithIcon,
    rootStyles[shape],
    // Disabled styles
    (disabled || disabledFocusable) && rootDisabledStyles.base,
    (disabled || disabledFocusable) && rootDisabledStyles.highContrast,
    appearance && (disabled || disabledFocusable) && rootDisabledStyles[appearance],
    // Focus styles
    appearance === "primary" && rootFocusStyles.primary,
    rootFocusStyles[size2],
    rootFocusStyles[shape],
    // Icon-only styles
    iconOnly && rootIconOnlyStyles[size2],
    // User provided class name
    state.root.className
  );
  if (state.icon) {
    state.icon.className = mergeClasses(buttonClassNames.icon, iconBaseClassName, state.root.children !== void 0 && state.root.children !== null && iconStyles[iconPosition], iconStyles[size2], state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-button/lib/components/Button/Button.js
var Button = React108.forwardRef((props, ref) => {
  const state = useButton_unstable(props, ref);
  useButtonStyles_unstable(state);
  const {
    useButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderButton_unstable(state);
});
Button.displayName = "Button";

// node_modules/@fluentui/react-button/lib/components/CompoundButton/CompoundButton.js
var React111 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/CompoundButton/renderCompoundButton.js
var React109 = __toESM(require_react());
var renderCompoundButton_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  const {
    iconOnly,
    iconPosition
  } = state;
  return React109.createElement(slots.root, slotProps.root, iconPosition !== "after" && slots.icon && React109.createElement(slots.icon, slotProps.icon), !iconOnly && React109.createElement(slots.contentContainer, slotProps.contentContainer, slotProps.root.children, slots.secondaryContent && React109.createElement(slots.secondaryContent, slotProps.secondaryContent)), iconPosition === "after" && slots.icon && React109.createElement(slots.icon, slotProps.icon));
};

// node_modules/@fluentui/react-button/lib/components/CompoundButton/useCompoundButton.js
var React110 = __toESM(require_react());
var useCompoundButton_unstable = ({
  contentContainer,
  secondaryContent,
  ...props
}, ref) => {
  var _state_icon, _state_secondaryContent;
  const state = {
    // Button state
    ...useButton_unstable(props, ref),
    // Slots definition
    components: {
      root: "button",
      icon: "span",
      contentContainer: "span",
      secondaryContent: "span"
    },
    contentContainer: resolveShorthand(contentContainer, {
      required: true
    }),
    secondaryContent: resolveShorthand(secondaryContent)
  };
  state.iconOnly = Boolean(((_state_icon = state.icon) === null || _state_icon === void 0 ? void 0 : _state_icon.children) && !props.children && !((_state_secondaryContent = state.secondaryContent) === null || _state_secondaryContent === void 0 ? void 0 : _state_secondaryContent.children));
  return state;
};

// node_modules/@fluentui/react-button/lib/components/CompoundButton/useCompoundButtonStyles.js
var compoundButtonClassNames = {
  root: "fui-CompoundButton",
  icon: "fui-CompoundButton__icon",
  contentContainer: "fui-CompoundButton__contentContainer",
  secondaryContent: "fui-CompoundButton__secondaryContent"
};
var useRootStyles4 = __styles2({
  base: {
    Bqenvij: "f11ysow2",
    J657lq: "f1um431h",
    Jlnjib: "fte7hqw",
    Bc29nj9: "f1yh8ef3"
  },
  highContrast: {
    pu7qz5: "fi3u9nm",
    B10010i: "f1tdgb9w"
  },
  outline: {},
  primary: {
    J657lq: "foe7gw6",
    Jlnjib: "fvxlz81",
    Bc29nj9: "f1c2mdy",
    B8ia98v: "f1r39r2s"
  },
  secondary: {},
  subtle: {
    J657lq: "f1um431h",
    Jlnjib: "fte7hqw",
    Bc29nj9: "f1yh8ef3"
  },
  transparent: {
    J657lq: "f1um431h",
    Jlnjib: "f1wn9xqz",
    Bc29nj9: "f1a8q4d0"
  },
  small: {
    z8tnut: "f17mpqex",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f1quwm26",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi"
  },
  medium: {
    z8tnut: "fbtff6s",
    z189sj: ["fw5db7e", "f1uw59to"],
    Byoj8tv: "flw3t2g",
    uwmqm3: ["f1uw59to", "fw5db7e"],
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    z8tnut: "fm4bm3s",
    z189sj: ["fjodcmx", "fhx4nu"],
    Byoj8tv: "fdt8xvx",
    uwmqm3: ["fhx4nu", "fjodcmx"],
    Be2twd7: "fod5ikn",
    Bg96gwp: "faaz57k"
  },
  disabled: {
    J657lq: "f1rlv8bf",
    Jlnjib: "fd1dbtm",
    Bc29nj9: "f1vqmdmi"
  },
  disabledHighContrast: {
    B8ia98v: "f1csacz4",
    pu7qz5: "f1s5tkfe",
    B10010i: "fs0rda3"
  }
}, {
  d: [".f11ysow2{height:auto;}", ".f1um431h .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2);}", ".foe7gw6 .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundOnBrand);}", ".f17mpqex{padding-top:var(--spacingHorizontalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1quwm26{padding-bottom:var(--spacingHorizontalMNudge);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fbtff6s{padding-top:14px;}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".flw3t2g{padding-bottom:var(--spacingHorizontalL);}", ".fm4bm3s{padding-top:18px;}", ".fjodcmx{padding-right:var(--spacingHorizontalL);}", ".fhx4nu{padding-left:var(--spacingHorizontalL);}", ".fdt8xvx{padding-bottom:var(--spacingHorizontalXL);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1rlv8bf .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundDisabled);}"],
  h: [".fte7hqw:hover .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2Hover);}", ".f1yh8ef3:hover:active .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2Pressed);}", ".fvxlz81:hover .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundOnBrand);}", ".f1c2mdy:hover:active .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundOnBrand);}", ".f1wn9xqz:hover .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2BrandHover);}", ".f1a8q4d0:hover:active .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForeground2BrandPressed);}", ".fd1dbtm:hover .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundDisabled);}", ".f1vqmdmi:hover:active .fui-CompoundButton__secondaryContent{color:var(--colorNeutralForegroundDisabled);}"],
  m: [["@media (forced-colors: active){.fi3u9nm:hover .fui-CompoundButton__secondaryContent{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1tdgb9w:hover:active .fui-CompoundButton__secondaryContent{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1r39r2s .fui-CompoundButton__secondaryContent{color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1csacz4 .fui-CompoundButton__secondaryContent{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1s5tkfe:hover .fui-CompoundButton__secondaryContent{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fs0rda3:hover:active .fui-CompoundButton__secondaryContent{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useRootIconOnlyStyles2 = __styles2({
  small: {
    z8tnut: "f1x4af0m",
    z189sj: ["f7x41pl", "fruq291"],
    Byoj8tv: "fd55psn",
    uwmqm3: ["fruq291", "f7x41pl"],
    B2u0y6b: "ft5vyj6",
    Bf4jedk: "f17suaiq"
  },
  medium: {
    z8tnut: "f16k8034",
    z189sj: ["fdw0yi8", "fk8j09s"],
    Byoj8tv: "f1angvds",
    uwmqm3: ["fk8j09s", "fdw0yi8"],
    B2u0y6b: "fdczgix",
    Bf4jedk: "fjdcg9m"
  },
  large: {
    z8tnut: "f17mpqex",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "fdvome7",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    B2u0y6b: "fww51uw",
    Bf4jedk: "f1qhsl2h"
  }
}, {
  d: [".f1x4af0m{padding-top:var(--spacingHorizontalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".fd55psn{padding-bottom:var(--spacingHorizontalXS);}", ".ft5vyj6{max-width:48px;}", ".f17suaiq{min-width:48px;}", ".f16k8034{padding-top:var(--spacingHorizontalSNudge);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".f1angvds{padding-bottom:var(--spacingHorizontalSNudge);}", ".fdczgix{max-width:52px;}", ".fjdcg9m{min-width:52px;}", ".f17mpqex{padding-top:var(--spacingHorizontalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".fdvome7{padding-bottom:var(--spacingHorizontalS);}", ".fww51uw{max-width:56px;}", ".f1qhsl2h{min-width:56px;}"]
});
var useIconStyles3 = __styles2({
  base: {
    Be2twd7: "fndrnj9",
    Bqenvij: "fbhnoac",
    a9b677: "feqmc2u"
  },
  before: {
    t21cq0: ["fkujibs", "f199hnxi"]
  },
  after: {
    Frg6f3: ["f199hnxi", "fkujibs"]
  }
}, {
  d: [".fndrnj9{font-size:40px;}", ".fbhnoac{height:40px;}", ".feqmc2u{width:40px;}", ".fkujibs{margin-right:var(--spacingHorizontalM);}", ".f199hnxi{margin-left:var(--spacingHorizontalM);}"]
});
var useContentContainerStyles = __styles2({
  base: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    fsow6f: ["f1o700av", "fes3tcz"]
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}"]
});
var useSecondaryContentStyles = __styles2({
  base: {
    Bg96gwp: "flkuc6h",
    Bhrd7zp: "figsok6"
  },
  small: {
    Be2twd7: "fy9rknc"
  },
  medium: {
    Be2twd7: "fy9rknc"
  },
  large: {
    Be2twd7: "fkhj508"
  }
}, {
  d: [".flkuc6h{line-height:100%;}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fkhj508{font-size:var(--fontSizeBase300);}"]
});
var useCompoundButtonStyles_unstable = (state) => {
  const rootStyles = useRootStyles4();
  const rootIconOnlyStyles = useRootIconOnlyStyles2();
  const iconStyles = useIconStyles3();
  const contentContainerStyles = useContentContainerStyles();
  const secondaryContentStyles = useSecondaryContentStyles();
  const {
    appearance,
    disabled,
    disabledFocusable,
    iconOnly,
    iconPosition,
    size: size2
  } = state;
  state.root.className = mergeClasses(
    compoundButtonClassNames.root,
    // Root styles
    rootStyles.base,
    rootStyles.highContrast,
    appearance && rootStyles[appearance],
    rootStyles[size2],
    // Disabled styles
    (disabled || disabledFocusable) && rootStyles.disabled,
    (disabled || disabledFocusable) && rootStyles.disabledHighContrast,
    // Icon-only styles
    iconOnly && rootIconOnlyStyles[size2],
    // User provided class name
    state.root.className
  );
  state.contentContainer.className = mergeClasses(compoundButtonClassNames.contentContainer, contentContainerStyles.base, state.contentContainer.className);
  if (state.icon) {
    state.icon.className = mergeClasses(compoundButtonClassNames.icon, iconStyles.base, state.root.children !== void 0 && state.root.children !== null && iconStyles[iconPosition], state.icon.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(compoundButtonClassNames.secondaryContent, secondaryContentStyles.base, secondaryContentStyles[size2], state.secondaryContent.className);
  }
  useButtonStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-button/lib/components/CompoundButton/CompoundButton.js
var CompoundButton = React111.forwardRef((props, ref) => {
  const state = useCompoundButton_unstable(props, ref);
  useCompoundButtonStyles_unstable(state);
  const {
    useCompoundButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderCompoundButton_unstable(state);
});
CompoundButton.displayName = "CompoundButton";

// node_modules/@fluentui/react-button/lib/components/MenuButton/MenuButton.js
var React114 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/MenuButton/renderMenuButton.js
var React112 = __toESM(require_react());
var renderMenuButton_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  const {
    icon,
    iconOnly
  } = state;
  return React112.createElement(slots.root, slotProps.root, slots.icon && React112.createElement(slots.icon, slotProps.icon), !iconOnly && slotProps.root.children, (!iconOnly || !(icon === null || icon === void 0 ? void 0 : icon.children)) && slots.menuIcon && React112.createElement(slots.menuIcon, slotProps.menuIcon));
};

// node_modules/@fluentui/react-button/lib/components/MenuButton/useMenuButton.js
var React113 = __toESM(require_react());
var useMenuButton_unstable = ({
  menuIcon,
  ...props
}, ref) => {
  const buttonState = useButton_unstable(props, ref);
  var _props_ariaexpanded;
  buttonState.root["aria-expanded"] = (_props_ariaexpanded = props["aria-expanded"]) !== null && _props_ariaexpanded !== void 0 ? _props_ariaexpanded : false;
  return {
    // Button state
    ...buttonState,
    // State calculated from a set of props
    iconOnly: Boolean(!props.children),
    // Slots definition
    components: {
      root: "button",
      icon: "span",
      menuIcon: "span"
    },
    menuIcon: resolveShorthand(menuIcon, {
      defaultProps: {
        children: React113.createElement(ChevronDownRegular, null)
      },
      required: true
    })
  };
};

// node_modules/@fluentui/react-button/lib/components/MenuButton/useMenuButtonStyles.js
var menuButtonClassNames = {
  root: "fui-MenuButton",
  icon: "fui-MenuButton__icon",
  menuIcon: "fui-MenuButton__menuIcon"
};
var useRootExpandedStyles = __styles2({
  base: {
    D0sxk3: "fxoiby5",
    t6yez3: "f15q0o9g"
  },
  outline: {
    g2u3we: "f1ly1fcm",
    h3c5rm: ["fi8bssc", "fj6btzu"],
    B9xav0g: "f1s9tnsa",
    zhjwy3: ["fj6btzu", "fi8bssc"],
    B4j52fo: "fgx37oo",
    Bekrc4i: ["f130t4y6", "f1efpmoh"],
    Bn0qgzm: "fv51ejd",
    ibv6hh: ["f1efpmoh", "f130t4y6"],
    sj55zd: "f14nttnl"
  },
  primary: {
    De3pzq: "f8w4g0q"
  },
  secondary: {
    De3pzq: "f1nfm20t",
    g2u3we: "f1ly1fcm",
    h3c5rm: ["fi8bssc", "fj6btzu"],
    B9xav0g: "f1s9tnsa",
    zhjwy3: ["fj6btzu", "fi8bssc"],
    sj55zd: "f14nttnl"
  },
  subtle: {
    De3pzq: "fq5gl1p",
    sj55zd: "f1eryozh"
  },
  transparent: {
    De3pzq: "f1q9pm1r",
    sj55zd: "f1qj7y59"
  }
}, {
  d: [".fxoiby5 .fui-Icon-filled{display:inline;}", ".f15q0o9g .fui-Icon-regular{display:none;}", ".f1ly1fcm{border-top-color:var(--colorNeutralStroke1Selected);}", ".fi8bssc{border-right-color:var(--colorNeutralStroke1Selected);}", ".fj6btzu{border-left-color:var(--colorNeutralStroke1Selected);}", ".f1s9tnsa{border-bottom-color:var(--colorNeutralStroke1Selected);}", ".fgx37oo{border-top-width:var(--strokeWidthThicker);}", ".f130t4y6{border-right-width:var(--strokeWidthThicker);}", ".f1efpmoh{border-left-width:var(--strokeWidthThicker);}", ".fv51ejd{border-bottom-width:var(--strokeWidthThicker);}", ".f14nttnl{color:var(--colorNeutralForeground1Selected);}", ".f8w4g0q{background-color:var(--colorBrandBackgroundSelected);}", ".f1nfm20t{background-color:var(--colorNeutralBackground1Selected);}", ".fq5gl1p{background-color:var(--colorSubtleBackgroundSelected);}", ".f1eryozh{color:var(--colorNeutralForeground2Selected);}", ".f1q9pm1r{background-color:var(--colorTransparentBackgroundSelected);}", ".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}"]
});
var useIconExpandedStyles = __styles2({
  outline: {
    sj55zd: "f14nttnl"
  },
  primary: {},
  secondary: {
    sj55zd: "f14nttnl"
  },
  subtle: {
    sj55zd: "f1qj7y59"
  },
  transparent: {
    sj55zd: "f1qj7y59"
  }
}, {
  d: [".f14nttnl{color:var(--colorNeutralForeground1Selected);}", ".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}"]
});
var useMenuIconStyles = __styles2({
  base: {
    Bg96gwp: "fez10in"
  },
  small: {
    Be2twd7: "f1ugzwwg",
    Bqenvij: "fvblgha",
    Bg96gwp: "fwrc4pm",
    a9b677: "frx94fk"
  },
  medium: {
    Be2twd7: "f1ugzwwg",
    Bqenvij: "fvblgha",
    Bg96gwp: "fwrc4pm",
    a9b677: "frx94fk"
  },
  large: {
    Be2twd7: "f4ybsrx",
    Bqenvij: "fd461yt",
    Bg96gwp: "faaz57k",
    a9b677: "fjw5fx7"
  },
  notIconOnly: {
    Frg6f3: ["fbyavb5", "fm0x6gh"]
  }
}, {
  d: [".fez10in{line-height:0;}", ".f1ugzwwg{font-size:12px;}", ".fvblgha{height:12px;}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".frx94fk{width:12px;}", ".f4ybsrx{font-size:16px;}", ".fd461yt{height:16px;}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fjw5fx7{width:16px;}", ".fbyavb5{margin-left:var(--spacingHorizontalXS);}", ".fm0x6gh{margin-right:var(--spacingHorizontalXS);}"]
});
var useMenuButtonStyles_unstable = (state) => {
  const rootExpandedStyles = useRootExpandedStyles();
  const iconExpandedStyles = useIconExpandedStyles();
  const menuIconStyles = useMenuIconStyles();
  state.root.className = mergeClasses(menuButtonClassNames.root, state.root["aria-expanded"] && rootExpandedStyles.base, state.root["aria-expanded"] && rootExpandedStyles[state.appearance], state.root.className);
  if (state.icon) {
    state.icon.className = mergeClasses(menuButtonClassNames.icon, state.root["aria-expanded"] && iconExpandedStyles[state.appearance], state.icon.className);
  }
  if (state.menuIcon) {
    state.menuIcon.className = mergeClasses(menuButtonClassNames.menuIcon, menuIconStyles.base, menuIconStyles[state.size], !state.iconOnly && menuIconStyles.notIconOnly, state.menuIcon.className);
  }
  useButtonStyles_unstable({
    ...state,
    iconPosition: "before"
  });
  return state;
};

// node_modules/@fluentui/react-button/lib/components/MenuButton/MenuButton.js
var MenuButton = React114.forwardRef((props, ref) => {
  const state = useMenuButton_unstable(props, ref);
  useMenuButtonStyles_unstable(state);
  const {
    useMenuButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuButton_unstable(state);
});
MenuButton.displayName = "MenuButton";

// node_modules/@fluentui/react-button/lib/components/SplitButton/SplitButton.js
var React117 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/SplitButton/renderSplitButton.js
var React115 = __toESM(require_react());
var renderSplitButton_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React115.createElement(slots.root, slotProps.root, slots.primaryActionButton && React115.createElement(slots.primaryActionButton, slotProps.primaryActionButton), slots.menuButton && React115.createElement(slots.menuButton, slotProps.menuButton));
};

// node_modules/@fluentui/react-button/lib/components/SplitButton/useSplitButton.js
var React116 = __toESM(require_react());
var useSplitButton_unstable = (props, ref) => {
  const {
    appearance = "secondary",
    children,
    disabled = false,
    disabledFocusable = false,
    icon,
    iconPosition = "before",
    menuButton,
    menuIcon,
    primaryActionButton,
    shape = "rounded",
    size: size2 = "medium"
  } = props;
  const baseId = useId2("splitButton-");
  const menuButtonShorthand = resolveShorthand(menuButton, {
    defaultProps: {
      appearance,
      disabled,
      disabledFocusable,
      menuIcon,
      shape,
      size: size2
    },
    required: true
  });
  const primaryActionButtonShorthand = resolveShorthand(primaryActionButton, {
    defaultProps: {
      appearance,
      children,
      disabled,
      disabledFocusable,
      icon,
      iconPosition,
      id: baseId + "__primaryActionButton",
      shape,
      size: size2
    },
    required: true
  });
  if (menuButtonShorthand && primaryActionButtonShorthand && !menuButtonShorthand["aria-label"] && !menuButtonShorthand["aria-labelledby"]) {
    menuButtonShorthand["aria-labelledby"] = primaryActionButtonShorthand.id;
  }
  return {
    // Props passed at the top-level
    appearance,
    disabled,
    disabledFocusable,
    iconPosition,
    shape,
    size: size2,
    // Slots definition
    components: {
      root: "div",
      menuButton: MenuButton,
      primaryActionButton: Button
    },
    root: getNativeElementProps("div", {
      ref,
      ...props
    }),
    menuButton: menuButtonShorthand,
    primaryActionButton: primaryActionButtonShorthand
  };
};

// node_modules/@fluentui/react-button/lib/components/SplitButton/useSplitButtonStyles.js
var splitButtonClassNames = {
  root: "fui-SplitButton",
  menuButton: "fui-SplitButton__menuButton",
  primaryActionButton: "fui-SplitButton__primaryActionButton"
};
var useFocusStyles = __styles2({
  primaryActionButton: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B6xbmo0: ["f1x37qnr", "f1um7c6d"],
    kdpuga: ["fn4c73s", "f6pwzcr"]
  },
  menuButton: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    lbo84a: ["frrbwxo", "f1rgcpbv"],
    dm238s: ["f1um7c6d", "f1x37qnr"],
    Bw81rd7: ["f6pwzcr", "fn4c73s"]
  }
}, {
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  d: [".f1x37qnr[data-fui-focus-visible]{border-top-right-radius:0;}", ".f1um7c6d[data-fui-focus-visible]{border-top-left-radius:0;}", ".fn4c73s[data-fui-focus-visible]{border-bottom-right-radius:0;}", ".f6pwzcr[data-fui-focus-visible]{border-bottom-left-radius:0;}", ".frrbwxo[data-fui-focus-visible]{border-left-width:0;}", ".f1rgcpbv[data-fui-focus-visible]{border-right-width:0;}"]
});
var useRootStyles5 = __styles2({
  base: {
    mc9l5x: "ftuwxu6",
    Brf1p80: "fsxf2b5",
    qhf8xq: "f10pi13n",
    ha4doy: "fmrv4ls",
    kn2xc0: ["f14uur2j", "fc1btbj"],
    Bs76p8a: ["fye5tvs", "fc597qq"],
    cuxpm9: ["f1e8brtx", "fr36rk3"],
    Biffepf: ["fxp12j1", "f1m6nt2y"],
    Defnvf: ["fr7y8no", "f1dn0c6m"],
    z0pv9t: "f1hvqvul"
  },
  outline: {},
  primary: {
    B1l9wao: ["f117mkrt", "f6ic349"],
    lcnrd8: ["f10mpf6u", "f1bt8jlh"],
    Brbpp8k: ["f1c28ih9", "fku5vw4"],
    Bcsxniv: ["ff0tx2l", "fnrj3rw"],
    tl7e51: ["f3jppgx", "f1m2s8ie"],
    mba178: ["f96h41g", "fdxf0pi"]
  },
  secondary: {},
  subtle: {
    B1l9wao: ["fbw67pg", "fcas6k2"],
    lcnrd8: ["fn44ryq", "fwhhltr"],
    Brbpp8k: ["f1xppm0p", "fkfp127"]
  },
  transparent: {
    B1l9wao: ["fbw67pg", "fcas6k2"],
    lcnrd8: ["fn44ryq", "fwhhltr"],
    Brbpp8k: ["f1xppm0p", "fkfp127"]
  },
  circular: {},
  rounded: {},
  square: {},
  disabled: {
    B1l9wao: ["f10xrnr8", "f15nylwb"],
    lcnrd8: ["f11fwhjz", "f18vtcsx"],
    Brbpp8k: ["f31btwb", "fzgm9gq"]
  },
  disabledHighContrast: {
    Bcsxniv: ["fj2q5vi", "f13tct40"],
    tl7e51: ["fb2mzc7", "f179dhpp"],
    mba178: ["f1ma39qa", "f1nzpdru"]
  }
}, {
  d: [".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".fsxf2b5{-webkit-box-pack:stretch;-ms-flex-pack:stretch;-webkit-justify-content:stretch;justify-content:stretch;}", ".f10pi13n{position:relative;}", ".fmrv4ls{vertical-align:middle;}", ".f14uur2j .fui-SplitButton__primaryActionButton{border-top-right-radius:0;}", ".fc1btbj .fui-SplitButton__primaryActionButton{border-top-left-radius:0;}", ".fye5tvs .fui-SplitButton__primaryActionButton{border-bottom-right-radius:0;}", ".fc597qq .fui-SplitButton__primaryActionButton{border-bottom-left-radius:0;}", ".f1e8brtx .fui-SplitButton__menuButton{border-left-width:0;}", ".fr36rk3 .fui-SplitButton__menuButton{border-right-width:0;}", ".fxp12j1 .fui-SplitButton__menuButton{border-top-left-radius:0;}", ".f1m6nt2y .fui-SplitButton__menuButton{border-top-right-radius:0;}", ".fr7y8no .fui-SplitButton__menuButton{border-bottom-left-radius:0;}", ".f1dn0c6m .fui-SplitButton__menuButton{border-bottom-right-radius:0;}", ".f1hvqvul .fui-SplitButton__menuButton{min-width:0;}", ".f117mkrt .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralForegroundOnBrand);}", ".f6ic349 .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralForegroundOnBrand);}", ".fbw67pg .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStroke1);}", ".fcas6k2 .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStroke1);}", ".f10xrnr8 .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f15nylwb .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeDisabled);}"],
  h: [".f10mpf6u:hover .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralForegroundOnBrand);}", ".f1bt8jlh:hover .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralForegroundOnBrand);}", ".f1c28ih9:hover:active .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralForegroundOnBrand);}", ".fku5vw4:hover:active .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralForegroundOnBrand);}", ".fn44ryq:hover .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStroke1Hover);}", ".fwhhltr:hover .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStroke1Hover);}", ".f1xppm0p:hover:active .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStroke1Pressed);}", ".fkfp127:hover:active .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f11fwhjz:hover .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f18vtcsx:hover .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f31btwb:hover:active .fui-SplitButton__primaryActionButton{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fzgm9gq:hover:active .fui-SplitButton__primaryActionButton{border-left-color:var(--colorNeutralStrokeDisabled);}"],
  m: [["@media (forced-colors: active){.ff0tx2l .fui-SplitButton__primaryActionButton{border-right-color:HighlightText;}.fnrj3rw .fui-SplitButton__primaryActionButton{border-left-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f3jppgx:hover .fui-SplitButton__primaryActionButton{border-right-color:Highlight;}.f1m2s8ie:hover .fui-SplitButton__primaryActionButton{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f96h41g:hover:active .fui-SplitButton__primaryActionButton{border-right-color:Highlight;}.fdxf0pi:hover:active .fui-SplitButton__primaryActionButton{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fj2q5vi .fui-SplitButton__primaryActionButton{border-right-color:GrayText;}.f13tct40 .fui-SplitButton__primaryActionButton{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fb2mzc7:hover .fui-SplitButton__primaryActionButton{border-right-color:GrayText;}.f179dhpp:hover .fui-SplitButton__primaryActionButton{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ma39qa:hover:active .fui-SplitButton__primaryActionButton{border-right-color:GrayText;}.f1nzpdru:hover:active .fui-SplitButton__primaryActionButton{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useSplitButtonStyles_unstable = (state) => {
  const rootStyles = useRootStyles5();
  const focusStyles = useFocusStyles();
  const {
    appearance,
    disabled,
    disabledFocusable
  } = state;
  state.root.className = mergeClasses(splitButtonClassNames.root, rootStyles.base, appearance && rootStyles[appearance], (disabled || disabledFocusable) && rootStyles.disabled, (disabled || disabledFocusable) && rootStyles.disabledHighContrast, state.root.className);
  if (state.menuButton) {
    state.menuButton.className = mergeClasses(splitButtonClassNames.menuButton, focusStyles.menuButton, state.menuButton.className);
  }
  if (state.primaryActionButton) {
    state.primaryActionButton.className = mergeClasses(splitButtonClassNames.primaryActionButton, focusStyles.primaryActionButton, state.primaryActionButton.className);
  }
  return state;
};

// node_modules/@fluentui/react-button/lib/components/SplitButton/SplitButton.js
var SplitButton = React117.forwardRef((props, ref) => {
  const state = useSplitButton_unstable(props, ref);
  useSplitButtonStyles_unstable(state);
  const {
    useSplitButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderSplitButton_unstable(state);
});
SplitButton.displayName = "SplitButton";

// node_modules/@fluentui/react-button/lib/components/ToggleButton/ToggleButton.js
var React120 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/components/ToggleButton/useToggleButton.js
var React119 = __toESM(require_react());

// node_modules/@fluentui/react-button/lib/utils/useToggleState.js
var React118 = __toESM(require_react());
function useToggleState(props, state) {
  const {
    checked,
    defaultChecked,
    disabled,
    disabledFocusable
  } = props;
  const {
    onClick,
    role
  } = state.root;
  const [checkedValue, setCheckedValue] = useControllableState({
    state: checked,
    defaultState: defaultChecked,
    initialState: false
  });
  const isCheckboxTypeRole = role === "menuitemcheckbox" || role === "checkbox";
  const onToggleClick = React118.useCallback((ev) => {
    if (!disabled && !disabledFocusable) {
      if (ev.defaultPrevented) {
        return;
      }
      setCheckedValue(!checkedValue);
    }
  }, [checkedValue, disabled, disabledFocusable, setCheckedValue]);
  return {
    ...state,
    checked: checkedValue,
    root: {
      ...state.root,
      [isCheckboxTypeRole ? "aria-checked" : "aria-pressed"]: checkedValue,
      onClick: useEventCallback(mergeCallbacks(onClick, onToggleClick))
    }
  };
}

// node_modules/@fluentui/react-button/lib/components/ToggleButton/useToggleButton.js
var useToggleButton_unstable = (props, ref) => {
  const buttonState = useButton_unstable(props, ref);
  return useToggleState(props, buttonState);
};

// node_modules/@fluentui/react-button/lib/components/ToggleButton/useToggleButtonStyles.js
var toggleButtonClassNames = {
  root: "fui-ToggleButton",
  icon: "fui-ToggleButton__icon"
};
var useRootCheckedStyles = __styles2({
  base: {
    De3pzq: "f1nfm20t",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    sj55zd: "f14nttnl",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    D0sxk3: "fxoiby5",
    t6yez3: "f15q0o9g",
    Jwef8y: "f1knas48",
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "f1xlaoq0",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    Bi91k9c: "feu1g3u",
    iro3zm: "f141de4g",
    b661bw: "f11v6sdu",
    Bk6r4ia: ["f9yn8i4", "f1ajwf28"],
    B9zn80p: "f1uwu36w",
    Bpld233: ["f1ajwf28", "f9yn8i4"],
    B2d53fq: "f9olfzr"
  },
  highContrast: {
    Bsw6fvg: "f1rirnrt",
    Bjwas2f: "f132fbg1",
    Bn1d65q: ["f1ene5x0", "fzbc999"],
    Bxeuatn: "f6jgcol",
    n51gp8: ["fzbc999", "f1ene5x0"],
    Bbusuzp: "f1lkg8j3",
    ycbfsm: "fkc42ay",
    Bqrx1nm: "fq7113v",
    pgvf35: "ff1wgvm",
    Bh7lczh: ["fiob0tu", "f1x4h75k"],
    dpv3f4: "f1j6scgf",
    Bpnjhaq: ["f1x4h75k", "fiob0tu"],
    ze5xyy: "f4xjyn1",
    g2kj27: "fbgcvur",
    Bf756sw: "f1ks1yx8",
    Bow2dr7: ["f1o6qegi", "fmxjhhp"],
    Bvhedfk: "fcnxywj",
    Gye4lf: ["fmxjhhp", "f1o6qegi"],
    pc6evw: "f9ddjv3",
    Btyszwp: "f1j4zkqc",
    B8jyv7h: ["f1ug3svw", "f10xfdm4"],
    l9kbep: "f4xlnbu",
    By5cl00: ["f10xfdm4", "f1ug3svw"],
    abbn9y: "f1jhcl7q",
    Bw5jppy: ["fokje0w", "fpctg2v"],
    B0tp99d: "f1yfuj62",
    B55dcl7: ["fpctg2v", "fokje0w"],
    G867l3: "fk75khc",
    gdbnj: ["f90nk7n", "f16eiqta"],
    mxns5l: "fnz8tm1",
    o3nasb: ["f16eiqta", "f90nk7n"],
    B7d2ofm: "fkom8lu"
  },
  outline: {
    De3pzq: "f1q9pm1r",
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    B4j52fo: "fgx37oo",
    Bekrc4i: ["f130t4y6", "f1efpmoh"],
    Bn0qgzm: "fv51ejd",
    ibv6hh: ["f1efpmoh", "f130t4y6"],
    Jwef8y: "fjxutwb",
    iro3zm: "fwiml72",
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "fcaw57c",
    Bci5o5g: ["fpwd27e", "f1999bjr"],
    n8qw10: "f1hi52o4",
    Bdrgwmp: ["f1999bjr", "fpwd27e"]
  },
  primary: {
    De3pzq: "f8w4g0q",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "f1phragk",
    Jwef8y: "f15wkkf3",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "f1rq72xc",
    iro3zm: "fnp9lpt",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1d6v5y2"
  },
  secondary: {},
  subtle: {
    De3pzq: "fq5gl1p",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "f1eryozh",
    Jwef8y: "f1t94bn6",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "fnwyq0v",
    iro3zm: "fsv2rcd",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1omzyqd"
  },
  transparent: {
    De3pzq: "f1q9pm1r",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    sj55zd: "f1qj7y59",
    Jwef8y: "fjxutwb",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    Bi91k9c: "f139oj5f",
    iro3zm: "fwiml72",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"],
    B2d53fq: "f1fg1p5m"
  }
}, {
  d: [".f1nfm20t{background-color:var(--colorNeutralBackground1Selected);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", ".f14nttnl{color:var(--colorNeutralForeground1Selected);}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".fxoiby5 .fui-Icon-filled{display:inline;}", ".f15q0o9g .fui-Icon-regular{display:none;}", ".f1q9pm1r{background-color:var(--colorTransparentBackgroundSelected);}", ".fgx37oo{border-top-width:var(--strokeWidthThicker);}", ".f130t4y6{border-right-width:var(--strokeWidthThicker);}", ".f1efpmoh{border-left-width:var(--strokeWidthThicker);}", ".fv51ejd{border-bottom-width:var(--strokeWidthThicker);}", ".fcaw57c[data-fui-focus-visible]{border-top-color:var(--colorNeutralStroke1);}", ".fpwd27e[data-fui-focus-visible]{border-right-color:var(--colorNeutralStroke1);}", ".f1999bjr[data-fui-focus-visible]{border-left-color:var(--colorNeutralStroke1);}", ".f1hi52o4[data-fui-focus-visible]{border-bottom-color:var(--colorNeutralStroke1);}", ".f8w4g0q{background-color:var(--colorBrandBackgroundSelected);}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".f1phragk{color:var(--colorNeutralForegroundOnBrand);}", ".fq5gl1p{background-color:var(--colorSubtleBackgroundSelected);}", ".f1eryozh{color:var(--colorNeutralForeground2Selected);}", ".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}"],
  h: [".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".f1xlaoq0:hover{border-bottom-color:var(--colorNeutralStroke1Hover);}", ".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".f141de4g:hover:active{background-color:var(--colorNeutralBackground1Pressed);}", ".f11v6sdu:hover:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f9yn8i4:hover:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f1ajwf28:hover:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f1uwu36w:hover:active{border-bottom-color:var(--colorNeutralStroke1Pressed);}", ".f9olfzr:hover:active{color:var(--colorNeutralForeground1Pressed);}", ".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".fwiml72:hover:active{background-color:var(--colorTransparentBackgroundPressed);}", ".f15wkkf3:hover{background-color:var(--colorBrandBackgroundHover);}", ".f1s2uweq:hover{border-top-color:transparent;}", ".fr80ssc:hover{border-right-color:transparent;}", ".fecsdlb:hover{border-left-color:transparent;}", ".f1ukrpxl:hover{border-bottom-color:transparent;}", ".f1rq72xc:hover{color:var(--colorNeutralForegroundOnBrand);}", ".fnp9lpt:hover:active{background-color:var(--colorBrandBackgroundPressed);}", ".f1h0usnq:hover:active{border-top-color:transparent;}", ".fs4ktlq:hover:active{border-right-color:transparent;}", ".fx2bmrt:hover:active{border-left-color:transparent;}", ".f16h9ulv:hover:active{border-bottom-color:transparent;}", ".f1d6v5y2:hover:active{color:var(--colorNeutralForegroundOnBrand);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".fsv2rcd:hover:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1omzyqd:hover:active{color:var(--colorNeutralForeground2Pressed);}", ".f139oj5f:hover{color:var(--colorNeutralForeground2BrandHover);}", ".f1fg1p5m:hover:active{color:var(--colorNeutralForeground2BrandPressed);}"],
  m: [["@media (forced-colors: active){.f1rirnrt{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f132fbg1{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ene5x0{border-right-color:Highlight;}.fzbc999{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f6jgcol{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fzbc999{border-left-color:Highlight;}.f1ene5x0{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lkg8j3{color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkc42ay{forced-color-adjust:none;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fq7113v:hover{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.ff1wgvm:hover{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fiob0tu:hover{border-right-color:Highlight;}.f1x4h75k:hover{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1j6scgf:hover{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1x4h75k:hover{border-left-color:Highlight;}.fiob0tu:hover{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f4xjyn1:hover{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fbgcvur:hover:active{background-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ks1yx8:hover:active{border-top-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1o6qegi:hover:active{border-right-color:Highlight;}.fmxjhhp:hover:active{border-left-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fcnxywj:hover:active{border-bottom-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fmxjhhp:hover:active{border-left-color:Highlight;}.f1o6qegi:hover:active{border-right-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9ddjv3:hover:active{color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1j4zkqc:focus{border-top-width:1px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ug3svw:focus{border-right-width:1px;}.f10xfdm4:focus{border-left-width:1px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f4xlnbu:focus{border-bottom-width:1px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f10xfdm4:focus{border-left-width:1px;}.f1ug3svw:focus{border-right-width:1px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1jhcl7q:focus{border-top-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fokje0w:focus{border-right-style:solid;}.fpctg2v:focus{border-left-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1yfuj62:focus{border-bottom-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fpctg2v:focus{border-left-style:solid;}.fokje0w:focus{border-right-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fk75khc:focus{border-top-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f90nk7n:focus{border-right-color:HighlightText;}.f16eiqta:focus{border-left-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fnz8tm1:focus{border-bottom-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f16eiqta:focus{border-left-color:HighlightText;}.f90nk7n:focus{border-right-color:HighlightText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkom8lu:focus{outline-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"]
});
var useRootDisabledStyles2 = __styles2({
  base: {
    De3pzq: "f1bg9a2p",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    sj55zd: "f1s2aq7o",
    Jwef8y: "f1falr9n",
    Bgoe8wy: "f12mpcsy",
    Bwzppfd: ["f1gwvigk", "f18rmfxp"],
    oetu4i: "f1jnshp0",
    gg5e9n: ["f18rmfxp", "f1gwvigk"],
    Bi91k9c: "fvgxktp",
    iro3zm: "f1t6o4dc",
    b661bw: "f10ztigi",
    Bk6r4ia: ["f1ft5sdu", "f1gzf82w"],
    B9zn80p: "f12zbtn2",
    Bpld233: ["f1gzf82w", "f1ft5sdu"],
    B2d53fq: "fcvwxyo"
  },
  outline: {},
  primary: {
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  },
  secondary: {},
  subtle: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Jwef8y: "fjxutwb",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    iro3zm: "fwiml72",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  },
  transparent: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Jwef8y: "fjxutwb",
    Bgoe8wy: "f1s2uweq",
    Bwzppfd: ["fr80ssc", "fecsdlb"],
    oetu4i: "f1ukrpxl",
    gg5e9n: ["fecsdlb", "fr80ssc"],
    iro3zm: "fwiml72",
    b661bw: "f1h0usnq",
    Bk6r4ia: ["fs4ktlq", "fx2bmrt"],
    B9zn80p: "f16h9ulv",
    Bpld233: ["fx2bmrt", "fs4ktlq"]
  }
}, {
  d: [".f1bg9a2p{background-color:var(--colorNeutralBackgroundDisabled);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}"],
  h: [".f1falr9n:hover{background-color:var(--colorNeutralBackgroundDisabled);}", ".f12mpcsy:hover{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1gwvigk:hover{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f18rmfxp:hover{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f1jnshp0:hover{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}", ".f1t6o4dc:hover:active{background-color:var(--colorNeutralBackgroundDisabled);}", ".f10ztigi:hover:active{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1ft5sdu:hover:active{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f1gzf82w:hover:active{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f12zbtn2:hover:active{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fcvwxyo:hover:active{color:var(--colorNeutralForegroundDisabled);}", ".f1s2uweq:hover{border-top-color:transparent;}", ".fr80ssc:hover{border-right-color:transparent;}", ".fecsdlb:hover{border-left-color:transparent;}", ".f1ukrpxl:hover{border-bottom-color:transparent;}", ".f1h0usnq:hover:active{border-top-color:transparent;}", ".fs4ktlq:hover:active{border-right-color:transparent;}", ".fx2bmrt:hover:active{border-left-color:transparent;}", ".f16h9ulv:hover:active{border-bottom-color:transparent;}", ".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".fwiml72:hover:active{background-color:var(--colorTransparentBackgroundPressed);}"]
});
var useIconCheckedStyles = __styles2({
  subtleOrTransparent: {
    sj55zd: "f1qj7y59"
  }
}, {
  d: [".f1qj7y59{color:var(--colorNeutralForeground2BrandSelected);}"]
});
var usePrimaryHighContrastStyles = __styles2({
  base: {
    Bsw6fvg: "f4lkoma",
    Bjwas2f: "f1bauw5b",
    Bn1d65q: ["fbpknfk", "fedl69w"],
    Bxeuatn: "f15s25nd",
    n51gp8: ["fedl69w", "fbpknfk"],
    Bbusuzp: "f1e4kh5",
    ycbfsm: "fg4l7m0"
  },
  disabled: {
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"],
    Bbusuzp: "f1dcs8yz",
    G867l3: "fjwq6ea",
    gdbnj: ["f1lr3nhc", "f1mbxvi6"],
    mxns5l: "fn5gmvv",
    o3nasb: ["f1mbxvi6", "f1lr3nhc"]
  }
}, {
  m: [["@media (forced-colors: active){.f4lkoma{background-color:ButtonFace;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1bauw5b{border-top-color:ButtonBorder;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fbpknfk{border-right-color:ButtonBorder;}.fedl69w{border-left-color:ButtonBorder;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f15s25nd{border-bottom-color:ButtonBorder;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fedl69w{border-left-color:ButtonBorder;}.fbpknfk{border-right-color:ButtonBorder;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1e4kh5{color:ButtonText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fg4l7m0{forced-color-adjust:auto;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rvyvqg{border-right-color:GrayText;}.f14g86mu{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fjwq6ea:focus{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lr3nhc:focus{border-right-color:GrayText;}.f1mbxvi6:focus{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fn5gmvv:focus{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1mbxvi6:focus{border-left-color:GrayText;}.f1lr3nhc:focus{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useToggleButtonStyles_unstable = (state) => {
  const rootCheckedStyles = useRootCheckedStyles();
  const rootDisabledStyles = useRootDisabledStyles2();
  const iconCheckedStyles = useIconCheckedStyles();
  const primaryHighContrastStyles = usePrimaryHighContrastStyles();
  const {
    appearance,
    checked,
    disabled,
    disabledFocusable
  } = state;
  state.root.className = mergeClasses(
    toggleButtonClassNames.root,
    // Primary high contrast styles
    appearance === "primary" && primaryHighContrastStyles.base,
    appearance === "primary" && (disabled || disabledFocusable) && primaryHighContrastStyles.disabled,
    // Checked styles
    checked && rootCheckedStyles.base,
    checked && rootCheckedStyles.highContrast,
    appearance && checked && rootCheckedStyles[appearance],
    // Disabled styles
    (disabled || disabledFocusable) && rootDisabledStyles.base,
    appearance && (disabled || disabledFocusable) && rootDisabledStyles[appearance],
    // User provided class name
    state.root.className
  );
  if (state.icon) {
    state.icon.className = mergeClasses(toggleButtonClassNames.icon, (appearance === "subtle" || appearance === "transparent") && iconCheckedStyles.subtleOrTransparent, state.icon.className);
  }
  useButtonStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-button/lib/components/ToggleButton/ToggleButton.js
var ToggleButton = React120.forwardRef((props, ref) => {
  const state = useToggleButton_unstable(props, ref);
  useToggleButtonStyles_unstable(state);
  const {
    useToggleButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderButton_unstable(state);
});
ToggleButton.displayName = "ToggleButton";

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/Checkbox.js
var React126 = __toESM(require_react());

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/useCheckbox.js
var React124 = __toESM(require_react());

// node_modules/@fluentui/react-label/lib/components/Label/Label.js
var React123 = __toESM(require_react());

// node_modules/@fluentui/react-label/lib/components/Label/useLabel.js
var React121 = __toESM(require_react());
var useLabel_unstable = (props, ref) => {
  const {
    disabled = false,
    required = false,
    weight = "regular",
    size: size2 = "medium"
  } = props;
  return {
    disabled,
    required: resolveShorthand(required === true ? "*" : required || void 0, {
      defaultProps: {
        "aria-hidden": "true"
      }
    }),
    weight,
    size: size2,
    components: {
      root: "label",
      required: "span"
    },
    root: getNativeElementProps("label", {
      ref,
      ...props
    })
  };
};

// node_modules/@fluentui/react-label/lib/components/Label/renderLabel.js
var React122 = __toESM(require_react());
var renderLabel_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React122.createElement(slots.root, slotProps.root, state.root.children, slots.required && React122.createElement(slots.required, slotProps.required));
};

// node_modules/@fluentui/react-label/lib/components/Label/useLabelStyles.js
var labelClassNames = {
  root: "fui-Label",
  required: "fui-Label__required"
};
var useStyles11 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    sj55zd: "f19n0e5"
  },
  disabled: {
    sj55zd: "f1s2aq7o"
  },
  required: {
    sj55zd: "f1whyuy6",
    uwmqm3: ["fycuoez", "f8wuabp"]
  },
  requiredDisabled: {
    sj55zd: "f1s2aq7o"
  },
  small: {
    Be2twd7: "fy9rknc",
    Bg96gwp: "fwrc4pm"
  },
  medium: {
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    Be2twd7: "fod5ikn",
    Bg96gwp: "faaz57k",
    Bhrd7zp: "fl43uef"
  },
  semibold: {
    Bhrd7zp: "fl43uef"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f1whyuy6{color:var(--colorPaletteRedForeground3);}", ".fycuoez{padding-left:4px;}", ".f8wuabp{padding-right:4px;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}"]
});
var useLabelStyles_unstable = (state) => {
  const styles = useStyles11();
  state.root.className = mergeClasses(labelClassNames.root, styles.root, state.disabled && styles.disabled, styles[state.size], state.weight === "semibold" && styles.semibold, state.root.className);
  if (state.required) {
    state.required.className = mergeClasses(labelClassNames.required, styles.required, state.disabled && styles.requiredDisabled, state.required.className);
  }
  return state;
};

// node_modules/@fluentui/react-label/lib/components/Label/Label.js
var Label = React123.forwardRef((props, ref) => {
  const state = useLabel_unstable(props, ref);
  useLabelStyles_unstable(state);
  const {
    useLabelStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderLabel_unstable(state);
});
Label.displayName = "Label";

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/useCheckbox.js
var useCheckbox_unstable = (props, ref) => {
  const {
    disabled = false,
    required,
    shape = "square",
    size: size2 = "medium",
    labelPosition = "after",
    onChange
  } = props;
  const [checked, setChecked] = useControllableState({
    defaultState: props.defaultChecked,
    state: props.checked,
    initialState: false
  });
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: ["checked", "defaultChecked", "size", "onChange"]
  });
  const mixed = checked === "mixed";
  const id = useId2("checkbox-", nativeProps.primary.id);
  let checkmarkIcon;
  if (mixed) {
    if (shape === "circular") {
      checkmarkIcon = React124.createElement(CircleFilled, null);
    } else {
      checkmarkIcon = size2 === "large" ? React124.createElement(Square16Filled, null) : React124.createElement(Square12Filled, null);
    }
  } else if (checked) {
    checkmarkIcon = size2 === "large" ? React124.createElement(Checkmark16Filled, null) : React124.createElement(Checkmark12Filled, null);
  }
  const state = {
    shape,
    checked,
    disabled,
    size: size2,
    labelPosition,
    components: {
      root: "span",
      input: "input",
      indicator: "div",
      label: Label
    },
    root: resolveShorthand(props.root, {
      required: true,
      defaultProps: {
        ref: useFocusWithin(),
        ...nativeProps.root
      }
    }),
    input: resolveShorthand(props.input, {
      required: true,
      defaultProps: {
        type: "checkbox",
        id,
        ref,
        checked: checked === true,
        ...nativeProps.primary
      }
    }),
    label: resolveShorthand(props.label, {
      required: false,
      defaultProps: {
        htmlFor: id,
        disabled,
        required,
        size: "medium"
      }
    }),
    indicator: resolveShorthand(props.indicator, {
      required: true,
      defaultProps: {
        "aria-hidden": true,
        children: checkmarkIcon
      }
    })
  };
  state.input.onChange = useEventCallback((ev) => {
    const val = ev.currentTarget.indeterminate ? "mixed" : ev.currentTarget.checked;
    onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
      checked: val
    });
    setChecked(val);
  });
  const inputRef = useMergedRefs(state.input.ref);
  state.input.ref = inputRef;
  useIsomorphicLayoutEffect(() => {
    if (inputRef.current) {
      inputRef.current.indeterminate = mixed;
    }
  }, [inputRef, mixed]);
  return state;
};

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/renderCheckbox.js
var React125 = __toESM(require_react());
var renderCheckbox_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React125.createElement(slots.root, slotProps.root, React125.createElement(slots.input, slotProps.input), state.labelPosition === "before" && slots.label && React125.createElement(slots.label, slotProps.label), React125.createElement(slots.indicator, slotProps.indicator), state.labelPosition === "after" && slots.label && React125.createElement(slots.label, slotProps.label));
};

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/useCheckboxStyles.js
var checkboxClassNames = {
  root: "fui-Checkbox",
  label: "fui-Checkbox__label",
  input: "fui-Checkbox__input",
  indicator: "fui-Checkbox__indicator"
};
var useRootBaseClassName2 = __resetStyles("ripp6we", "r1b86e4p", [".ripp6we{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;color:var(--colorNeutralForeground3);}", ".ripp6we:focus{outline-style:none;}", ".ripp6we:focus-visible{outline-style:none;}", ".ripp6we[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.ripp6we[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:2px;border-right-width:2px;border-bottom-width:2px;border-left-width:2px;border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;left:-2px;right:-2px;}', ".r1b86e4p{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;color:var(--colorNeutralForeground3);}", ".r1b86e4p:focus{outline-style:none;}", ".r1b86e4p:focus-visible{outline-style:none;}", ".r1b86e4p[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.r1b86e4p[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:2px;border-left-width:2px;border-bottom-width:2px;border-right-width:2px;border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;right:-2px;left:-2px;}']);
var useRootStyles6 = __styles2({
  unchecked: {
    Bi91k9c: "f3p8bqa",
    ns3gzv: "ffqb913",
    n5iecx: ["f42z0vd", "f1j37kh1"],
    Bq2lx2j: "f10v6cc1",
    Bv7p3up: ["f1j37kh1", "f42z0vd"],
    lj723h: "f1r2dosr",
    B6u2zzw: "f1oarbgq",
    Be5wueo: ["fo8gord", "f18ci1af"],
    Cgwcxn: "fviagcr",
    Btnvhkj: ["f18ci1af", "fo8gord"]
  },
  checked: {
    sj55zd: "f19n0e5",
    Bvs3sgl: "f5opsb9",
    opw9sb: "fpaw01r",
    C5wppx: "f1gqj827",
    B32epof: ["fub94a2", "f13mj44e"],
    Bphahg7: "f1qq5vh1",
    Jctw66: ["f13mj44e", "fub94a2"],
    Bq0zqd5: "f5x9vvn",
    ns3gzv: "fub8hyy",
    n5iecx: ["fffzknn", "f172bh4s"],
    Bq2lx2j: "f6tipb1",
    Bv7p3up: ["f172bh4s", "fffzknn"],
    Bgesukf: "f8adco2",
    B6u2zzw: "f1lepnt8",
    Be5wueo: ["f80ygm0", "frrkusm"],
    Cgwcxn: "f1gg953z",
    Btnvhkj: ["frrkusm", "f80ygm0"]
  },
  mixed: {
    sj55zd: "f19n0e5",
    C5wppx: "f12fgbth",
    B32epof: ["f171e6fm", "fttsnhr"],
    Bphahg7: "f1fyk1ks",
    Jctw66: ["fttsnhr", "f171e6fm"],
    opw9sb: "fvvg2h8",
    ns3gzv: "f1nlwys0",
    n5iecx: ["f1bhstg2", "f6tsdgz"],
    Bq2lx2j: "fqxbw9v",
    Bv7p3up: ["f6tsdgz", "f1bhstg2"],
    cc1l3s: "f1r38qqt",
    B6u2zzw: "f12q3i2l",
    Be5wueo: ["f9g1hxu", "f1o4ic5t"],
    Cgwcxn: "f1c3thm1",
    Btnvhkj: ["f1o4ic5t", "f9g1hxu"],
    km5s60: "ffd07pq"
  },
  disabled: {
    Bceei9c: "f158kwzp",
    sj55zd: "f1s2aq7o",
    C5wppx: "fgiuqeu",
    B32epof: ["f1q4sfkt", "f71co73"],
    Bphahg7: "f1u7lsiy",
    Jctw66: ["f71co73", "f1q4sfkt"],
    opw9sb: "f3vxa14",
    Bbusuzp: "f1dcs8yz",
    B7bxudy: "f1lmtjkn"
  }
}, {
  h: [".f3p8bqa:hover{color:var(--colorNeutralForeground2);}", ".ffqb913:hover>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeAccessibleHover);}", ".f42z0vd:hover>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeAccessibleHover);}", ".f1j37kh1:hover>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeAccessibleHover);}", ".f10v6cc1:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeAccessibleHover);}", ".f5x9vvn:hover>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackgroundHover);}", ".fub8hyy:hover>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackgroundHover);}", ".fffzknn:hover>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackgroundHover);}", ".f172bh4s:hover>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackgroundHover);}", ".f6tipb1:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackgroundHover);}", ".f1nlwys0:hover>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStrokeHover);}", ".f1bhstg2:hover>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStrokeHover);}", ".f6tsdgz:hover>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStrokeHover);}", ".fqxbw9v:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStrokeHover);}", ".f1r38qqt:hover>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1Hover);}"],
  a: [".f1r2dosr:active{color:var(--colorNeutralForeground1);}", ".f1oarbgq:active>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeAccessiblePressed);}", ".fo8gord:active>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeAccessiblePressed);}", ".f18ci1af:active>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeAccessiblePressed);}", ".fviagcr:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeAccessiblePressed);}", ".f8adco2:active>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);}", ".f1lepnt8:active>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackgroundPressed);}", ".f80ygm0:active>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackgroundPressed);}", ".frrkusm:active>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackgroundPressed);}", ".f1gg953z:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackgroundPressed);}", ".f12q3i2l:active>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStrokePressed);}", ".f9g1hxu:active>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStrokePressed);}", ".f1o4ic5t:active>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStrokePressed);}", ".f1c3thm1:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".ffd07pq:active>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1Pressed);}"],
  d: [".f19n0e5{color:var(--colorNeutralForeground1);}", ".f5opsb9>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackground);}", ".fpaw01r>.fui-Checkbox__indicator{color:var(--colorNeutralForegroundInverted);}", ".f1gqj827>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackground);}", ".fub94a2>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackground);}", ".f13mj44e>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackground);}", ".f1qq5vh1>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackground);}", ".f12fgbth>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStroke);}", ".f171e6fm>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStroke);}", ".fttsnhr>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStroke);}", ".f1fyk1ks>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStroke);}", ".fvvg2h8>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1);}", ".f158kwzp{cursor:default;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fgiuqeu>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1q4sfkt>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeDisabled);}", ".f71co73>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f1u7lsiy>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f3vxa14>.fui-Checkbox__indicator{color:var(--colorNeutralForegroundDisabled);}"],
  m: [["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lmtjkn>.fui-Checkbox__indicator{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useInputBaseClassName = __resetStyles("ruo9svu", null, [".ruo9svu{box-sizing:border-box;cursor:inherit;height:100%;margin:0;opacity:0;position:absolute;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));}"]);
var useInputStyles = __styles2({
  before: {
    j35jbq: ["f1e31b4d", "f1vgc2s3"]
  },
  after: {
    oyh7mz: ["f1vgc2s3", "f1e31b4d"]
  },
  large: {
    a9b677: "f1mq5jt6"
  }
}, {
  d: [".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".f1mq5jt6{width:calc(20px + 2 * var(--spacingHorizontalS));}"]
});
var useIndicatorBaseClassName = __resetStyles("rrh91wr", null, [".rrh91wr{-webkit-align-self:flex-start;-ms-flex-item-align:flex-start;align-self:flex-start;box-sizing:border-box;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;overflow:hidden;border:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);border-radius:var(--borderRadiusSmall);margin:var(--spacingVerticalS) var(--spacingHorizontalS);fill:currentColor;pointer-events:none;font-size:12px;height:16px;width:16px;}"]);
var useIndicatorStyles = __styles2({
  large: {
    Be2twd7: "f4ybsrx",
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3"
  },
  circular: {
    Bbmb7ep: ["f8fbkgy", "f1nfllo7"],
    Beyfa6y: ["f1nfllo7", "f8fbkgy"],
    B7oj6ja: ["f1djnp8u", "f1s8kh49"],
    Btl43ni: ["f1s8kh49", "f1djnp8u"]
  }
}, {
  d: [".f4ybsrx{font-size:16px;}", ".fjamq6b{height:20px;}", ".f64fuq3{width:20px;}", ".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}", ".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}"]
});
var useLabelStyles = __styles2({
  base: {
    qb2dma: "f7nlbp4",
    sj55zd: "f1ym3bx4",
    Bceei9c: "fpo1scq",
    z8tnut: "f1kwiid1",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f5b47ha",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"]
  },
  before: {
    z189sj: ["f7x41pl", "fruq291"]
  },
  after: {
    uwmqm3: ["fruq291", "f7x41pl"]
  },
  medium: {
    B6of3ja: "fjzwpt6",
    jrapky: "fh6j2fo"
  },
  large: {
    B6of3ja: "f1xlvstr",
    jrapky: "f49ad5g"
  }
}, {
  d: [".f7nlbp4{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;}", ".f1ym3bx4{color:inherit;}", ".fpo1scq{cursor:inherit;}", ".f1kwiid1{padding-top:var(--spacingVerticalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f5b47ha{padding-bottom:var(--spacingVerticalS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".fjzwpt6{margin-top:calc((16px - var(--lineHeightBase300)) / 2);}", ".fh6j2fo{margin-bottom:calc((16px - var(--lineHeightBase300)) / 2);}", ".f1xlvstr{margin-top:calc((20px - var(--lineHeightBase300)) / 2);}", ".f49ad5g{margin-bottom:calc((20px - var(--lineHeightBase300)) / 2);}"]
});
var useCheckboxStyles_unstable = (state) => {
  const {
    checked,
    disabled,
    labelPosition,
    shape,
    size: size2
  } = state;
  const rootBaseClassName = useRootBaseClassName2();
  const rootStyles = useRootStyles6();
  state.root.className = mergeClasses(checkboxClassNames.root, rootBaseClassName, disabled ? rootStyles.disabled : checked === "mixed" ? rootStyles.mixed : checked ? rootStyles.checked : rootStyles.unchecked, state.root.className);
  const inputBaseClassName = useInputBaseClassName();
  const inputStyles = useInputStyles();
  state.input.className = mergeClasses(checkboxClassNames.input, inputBaseClassName, size2 === "large" && inputStyles.large, inputStyles[labelPosition], state.input.className);
  const indicatorBaseClassName = useIndicatorBaseClassName();
  const indicatorStyles = useIndicatorStyles();
  if (state.indicator) {
    state.indicator.className = mergeClasses(checkboxClassNames.indicator, indicatorBaseClassName, size2 === "large" && indicatorStyles.large, shape === "circular" && indicatorStyles.circular, state.indicator.className);
  }
  const labelStyles = useLabelStyles();
  if (state.label) {
    state.label.className = mergeClasses(checkboxClassNames.label, labelStyles.base, labelStyles[size2], labelStyles[labelPosition], state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/Checkbox.js
var Checkbox = React126.forwardRef((props, ref) => {
  const state = useCheckbox_unstable(props, ref);
  useCheckboxStyles_unstable(state);
  const {
    useAccordionHeaderStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderCheckbox_unstable(state);
});
Checkbox.displayName = "Checkbox";

// node_modules/@fluentui/react-checkbox/lib/components/Checkbox/Checkbox.types.js
var React127 = __toESM(require_react());

// node_modules/@fluentui/react-field/lib/components/Field/Field.types.js
var React128 = __toESM(require_react());

// node_modules/@fluentui/react-field/lib/components/Field/Field.js
var React131 = __toESM(require_react());

// node_modules/@fluentui/react-field/lib/components/Field/renderField.js
var React129 = __toESM(require_react());
var renderField_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React129.createElement(slots.root, slotProps.root, slots.label && React129.createElement(slots.label, slotProps.label), slotProps.root.children, slots.validationMessage && React129.createElement(slots.validationMessage, slotProps.validationMessage, slots.validationMessageIcon && React129.createElement(slots.validationMessageIcon, slotProps.validationMessageIcon), slotProps.validationMessage.children), slots.hint && React129.createElement(slots.hint, slotProps.hint));
};

// node_modules/@fluentui/react-field/lib/components/Field/useField.js
var React130 = __toESM(require_react());
var _controlProps;
var _arialabelledby;
var _controlProps1;
var _controlProps2;
var _ariainvalid;
var _controlProps3;
var _ariarequired;
var validationMessageIcons = {
  error: React130.createElement(ErrorCircle12Filled, null),
  warning: React130.createElement(Warning12Filled, null),
  success: React130.createElement(CheckmarkCircle12Filled, null),
  none: void 0
};
var useField_unstable = (props, ref) => {
  const {
    children,
    orientation = "vertical",
    required,
    validationState = props.validationMessage ? "error" : "none",
    size: size2
  } = props;
  const baseId = useId2("field-");
  const root = getNativeElementProps(
    "div",
    {
      ...props,
      ref
    },
    /*excludedPropNames:*/
    ["children"]
  );
  const label = resolveShorthand(props.label, {
    defaultProps: {
      id: baseId + "__label",
      required,
      size: size2
    }
  });
  const validationMessage = resolveShorthand(props.validationMessage, {
    defaultProps: {
      id: baseId + "__validationMessage",
      role: validationState === "error" ? "alert" : void 0
    }
  });
  const hint = resolveShorthand(props.hint, {
    defaultProps: {
      id: baseId + "__hint"
    }
  });
  const defaultIcon = validationMessageIcons[validationState];
  const validationMessageIcon = resolveShorthand(props.validationMessageIcon, {
    required: !!defaultIcon,
    defaultProps: {
      children: defaultIcon
    }
  });
  const controlProps = React130.isValidElement(children) ? {
    ...children.props
  } : {};
  if (label) {
    var _;
    (_ = (_controlProps = controlProps)[_arialabelledby = "aria-labelledby"]) !== null && _ !== void 0 ? _ : _controlProps[_arialabelledby] = label.id;
    if (!label.htmlFor) {
      var _id;
      (_id = (_controlProps1 = controlProps).id) !== null && _id !== void 0 ? _id : _controlProps1.id = baseId + "__control";
      label.htmlFor = controlProps.id;
    }
  }
  if (validationMessage || hint) {
    controlProps["aria-describedby"] = [validationMessage === null || validationMessage === void 0 ? void 0 : validationMessage.id, hint === null || hint === void 0 ? void 0 : hint.id, controlProps["aria-describedby"]].filter(Boolean).join(" ");
  }
  if (validationState === "error") {
    var _1;
    (_1 = (_controlProps2 = controlProps)[_ariainvalid = "aria-invalid"]) !== null && _1 !== void 0 ? _1 : _controlProps2[_ariainvalid] = true;
  }
  if (required) {
    var _2;
    (_2 = (_controlProps3 = controlProps)[_ariarequired = "aria-required"]) !== null && _2 !== void 0 ? _2 : _controlProps3[_ariarequired] = true;
  }
  if (React130.isValidElement(children)) {
    root.children = React130.cloneElement(children, controlProps);
  } else if (typeof children === "function") {
    root.children = children(controlProps);
  }
  return {
    orientation,
    validationState,
    components: {
      root: "div",
      label: Label,
      validationMessage: "div",
      validationMessageIcon: "span",
      hint: "div"
    },
    root,
    label,
    validationMessageIcon,
    validationMessage,
    hint
  };
};

// node_modules/@fluentui/react-field/lib/components/Field/useFieldStyles.js
var fieldClassNames = {
  root: `fui-Field`,
  label: `fui-Field__label`,
  validationMessage: `fui-Field__validationMessage`,
  validationMessageIcon: `fui-Field__validationMessageIcon`,
  hint: `fui-Field__hint`
};
var useRootStyles7 = __styles2({
  base: {
    mc9l5x: "f13qh94s"
  },
  horizontal: {
    Budl1dq: "f2wwaib",
    wkccdc: "f1645dqt"
  },
  horizontalNoLabel: {
    uwmqm3: ["f15jqgz8", "fggqkej"],
    Budl1dq: "f1c2z91y"
  }
}, {
  d: [".f13qh94s{display:grid;}", ".f2wwaib{grid-template-columns:33% 1fr;}", ".f1645dqt{grid-template-rows:auto auto auto 1fr;}", ".f15jqgz8{padding-left:33%;}", ".fggqkej{padding-right:33%;}", ".f1c2z91y{grid-template-columns:1fr;}"]
});
var useLabelStyles2 = __styles2({
  base: {
    z8tnut: "fclwglc",
    Byoj8tv: "fywfov9"
  },
  large: {
    z8tnut: "f1sl3k7w",
    Byoj8tv: "f1brlhvm"
  },
  vertical: {
    jrapky: "fyacil5"
  },
  verticalLarge: {
    jrapky: "f8l5zjj"
  },
  horizontal: {
    t21cq0: ["fkujibs", "f199hnxi"],
    Ijaq50: "f16hsg94",
    nk6f5a: "f1nzqi2z"
  }
}, {
  d: [".fclwglc{padding-top:var(--spacingVerticalXXS);}", ".fywfov9{padding-bottom:var(--spacingVerticalXXS);}", ".f1sl3k7w{padding-top:1px;}", ".f1brlhvm{padding-bottom:1px;}", ".fyacil5{margin-bottom:var(--spacingVerticalXXS);}", ".f8l5zjj{margin-bottom:var(--spacingVerticalXS);}", ".fkujibs{margin-right:var(--spacingHorizontalM);}", ".f199hnxi{margin-left:var(--spacingHorizontalM);}", ".f16hsg94{grid-row-start:1;}", ".f1nzqi2z{grid-row-end:-1;}"]
});
var useSecondaryTextBaseClassName = __resetStyles("r5c4z9l", null, [".r5c4z9l{margin-top:var(--spacingVerticalXXS);color:var(--colorNeutralForeground3);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);}"]);
var useSecondaryTextStyles = __styles2({
  error: {
    sj55zd: "f1hcrxcs"
  },
  withIcon: {
    uwmqm3: ["frawy03", "fg4c52"]
  }
}, {
  d: [".f1hcrxcs{color:var(--colorPaletteRedForeground1);}", ".frawy03{padding-left:calc(12px + var(--spacingHorizontalXS));}", ".fg4c52{padding-right:calc(12px + var(--spacingHorizontalXS));}"]
});
var useValidationMessageIconBaseClassName = __resetStyles("ra7h1uk", "r1rh6bd7", [".ra7h1uk{display:inline-block;font-size:12px;margin-left:calc(-12px - var(--spacingHorizontalXS));margin-right:var(--spacingHorizontalXS);line-height:0;vertical-align:-1px;}", ".r1rh6bd7{display:inline-block;font-size:12px;margin-right:calc(-12px - var(--spacingHorizontalXS));margin-left:var(--spacingHorizontalXS);line-height:0;vertical-align:-1px;}"]);
var useValidationMessageIconStyles = __styles2({
  error: {
    sj55zd: "f1hcrxcs"
  },
  warning: {
    sj55zd: "f1k5f75o"
  },
  success: {
    sj55zd: "ffmvakt"
  }
}, {
  d: [".f1hcrxcs{color:var(--colorPaletteRedForeground1);}", ".f1k5f75o{color:var(--colorPaletteDarkOrangeForeground1);}", ".ffmvakt{color:var(--colorPaletteGreenForeground1);}"]
});
var useFieldStyles_unstable = (state) => {
  const {
    validationState
  } = state;
  const horizontal = state.orientation === "horizontal";
  const rootStyles = useRootStyles7();
  state.root.className = mergeClasses(fieldClassNames.root, rootStyles.base, horizontal && rootStyles.horizontal, horizontal && !state.label && rootStyles.horizontalNoLabel, state.root.className);
  const labelStyles = useLabelStyles2();
  if (state.label) {
    state.label.className = mergeClasses(fieldClassNames.label, labelStyles.base, horizontal && labelStyles.horizontal, !horizontal && labelStyles.vertical, state.label.size === "large" && labelStyles.large, !horizontal && state.label.size === "large" && labelStyles.verticalLarge, state.label.className);
  }
  const validationMessageIconBaseClassName = useValidationMessageIconBaseClassName();
  const validationMessageIconStyles = useValidationMessageIconStyles();
  if (state.validationMessageIcon) {
    state.validationMessageIcon.className = mergeClasses(fieldClassNames.validationMessageIcon, validationMessageIconBaseClassName, validationState !== "none" && validationMessageIconStyles[validationState], state.validationMessageIcon.className);
  }
  const secondaryTextBaseClassName = useSecondaryTextBaseClassName();
  const secondaryTextStyles = useSecondaryTextStyles();
  if (state.validationMessage) {
    state.validationMessage.className = mergeClasses(fieldClassNames.validationMessage, secondaryTextBaseClassName, validationState === "error" && secondaryTextStyles.error, !!state.validationMessageIcon && secondaryTextStyles.withIcon, state.validationMessage.className);
  }
  if (state.hint) {
    state.hint.className = mergeClasses(fieldClassNames.hint, secondaryTextBaseClassName, state.hint.className);
  }
};

// node_modules/@fluentui/react-field/lib/components/Field/Field.js
var Field = React131.forwardRef((props, ref) => {
  const state = useField_unstable(props, ref);
  useFieldStyles_unstable(state);
  return renderField_unstable(state);
});
Field.displayName = "Field";

// node_modules/@fluentui/react-field/lib/util/makeDeprecatedField.js
var React132 = __toESM(require_react());
function getPartitionedFieldProps(props) {
  const {
    className,
    control,
    hint,
    label,
    orientation,
    required,
    root,
    size: size2,
    style,
    validationMessage,
    validationMessageIcon,
    validationState = "none",
    ...restOfProps
  } = props;
  return [{
    className,
    hint,
    label,
    orientation,
    required,
    size: size2,
    style,
    validationMessage,
    validationMessageIcon,
    validationState,
    ...root
  }, {
    required,
    size: size2,
    ...restOfProps,
    ...control
  }];
}
function makeDeprecatedField(Control2, options = {}) {
  const {
    mapProps = (props) => props,
    displayName = `${Control2.displayName}Field`
  } = options;
  const DeprecatedField = React132.forwardRef((props, ref) => {
    const [fieldProps, controlProps] = getPartitionedFieldProps(mapProps(props));
    return React132.createElement(Field, fieldProps, React132.createElement(Control2, {
      ...controlProps,
      ref
    }));
  });
  DeprecatedField.displayName = displayName;
  return DeprecatedField;
}
var getDeprecatedFieldClassNames = (controlRootClassName) => ({
  ...fieldClassNames,
  control: controlRootClassName
});

// node_modules/@fluentui/react-checkbox/lib/components/CheckboxField/CheckboxField.js
var checkboxFieldClassNames = getDeprecatedFieldClassNames(checkboxClassNames.root);
var CheckboxField = makeDeprecatedField(Checkbox, {
  mapProps: (props) => ({
    ...props,
    label: props.fieldLabel,
    required: void 0,
    control: {
      ...props.control,
      required: props.required,
      label: props.label
    }
  })
});

// node_modules/@fluentui/react-combobox/lib/contexts/ComboboxContext.js
var ComboboxContext = createContext10({
  activeOption: void 0,
  appearance: "outline",
  focusVisible: false,
  open: false,
  registerOption() {
    return () => void 0;
  },
  selectedOptions: [],
  selectOption() {
  },
  setActiveOption() {
  },
  setOpen() {
  },
  size: "medium"
});
var ComboboxProvider = ComboboxContext.Provider;

// node_modules/@fluentui/react-combobox/lib/contexts/ListboxContext.js
var ListboxContext = createContext10({
  activeOption: void 0,
  focusVisible: false,
  multiselect: false,
  registerOption() {
    return () => void 0;
  },
  selectedOptions: [],
  selectOption() {
  },
  setActiveOption() {
  }
});
var ListboxProvider = ListboxContext.Provider;

// node_modules/@fluentui/react-combobox/lib/contexts/useComboboxContextValues.js
function useComboboxContextValues(state) {
  const {
    activeOption,
    appearance,
    focusVisible,
    open,
    registerOption,
    selectedOptions,
    selectOption,
    setActiveOption,
    setOpen,
    size: size2
  } = state;
  const combobox = {
    activeOption,
    appearance,
    focusVisible,
    open,
    registerOption,
    selectedOptions,
    selectOption,
    setActiveOption,
    setOpen,
    size: size2
  };
  return {
    combobox
  };
}

// node_modules/@fluentui/react-combobox/lib/contexts/useListboxContextValues.js
function useListboxContextValues(state) {
  const hasComboboxContext = useHasParentContext(ComboboxContext);
  const {
    activeOption,
    focusVisible,
    multiselect,
    registerOption,
    selectedOptions,
    selectOption,
    setActiveOption
  } = state;
  const comboboxRegisterOption = useContextSelector(ComboboxContext, (ctx) => ctx.registerOption);
  const registerOptionValue = hasComboboxContext ? comboboxRegisterOption : registerOption;
  const listbox = {
    activeOption,
    focusVisible,
    multiselect,
    registerOption: registerOptionValue,
    selectedOptions,
    selectOption,
    setActiveOption
  };
  return {
    listbox
  };
}

// node_modules/@fluentui/react-combobox/lib/components/Listbox/Listbox.js
var React138 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Listbox/useListbox.js
var React136 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/utils/dropdownKeyActions.js
var React133 = __toESM(require_react());
function getDropdownActionFromKey(e, options = {}) {
  const {
    open = true,
    multiselect = false
  } = options;
  const code = e.key;
  const {
    altKey,
    ctrlKey,
    key,
    metaKey
  } = e;
  if (key.length === 1 && code !== Space && !altKey && !ctrlKey && !metaKey) {
    return "Type";
  }
  if (!open) {
    if (code === ArrowDown || code === ArrowUp || code === Enter || code === Space) {
      return "Open";
    }
    return "None";
  }
  if (code === ArrowUp && altKey || code === Enter || !multiselect && code === Space) {
    return "CloseSelect";
  }
  if (multiselect && code === Space) {
    return "Select";
  }
  if (code === Escape) {
    return "Close";
  }
  if (code === ArrowDown) {
    return "Next";
  }
  if (code === ArrowUp) {
    return "Previous";
  }
  if (code === Home) {
    return "First";
  }
  if (code === End) {
    return "Last";
  }
  if (code === PageUp) {
    return "PageUp";
  }
  if (code === PageDown) {
    return "PageDown";
  }
  if (code === Tab) {
    return "Tab";
  }
  return "None";
}
function getIndexFromAction(action, currentIndex, maxIndex) {
  switch (action) {
    case "Next":
      return Math.min(maxIndex, currentIndex + 1);
      break;
    case "Previous":
      return Math.max(0, currentIndex - 1);
    case "First":
      return 0;
    case "Last":
      return maxIndex;
    case "PageDown":
      return Math.min(maxIndex, currentIndex + 10);
    case "PageUp":
      return Math.max(0, currentIndex - 10);
    default:
      return currentIndex;
  }
}

// node_modules/@fluentui/react-combobox/lib/utils/useOptionCollection.js
var React134 = __toESM(require_react());
var useOptionCollection = () => {
  const nodes = React134.useRef([]);
  const collectionAPI = React134.useMemo(() => {
    const getCount = () => nodes.current.length;
    const getOptionAtIndex = (index) => {
      var _nodes_current_index;
      return (_nodes_current_index = nodes.current[index]) === null || _nodes_current_index === void 0 ? void 0 : _nodes_current_index.option;
    };
    const getIndexOfId = (id) => nodes.current.findIndex((node) => node.option.id === id);
    const getOptionById = (id) => {
      const item = nodes.current.find((node) => node.option.id === id);
      return item === null || item === void 0 ? void 0 : item.option;
    };
    const getOptionsMatchingText = (matcher) => {
      return nodes.current.filter((node) => matcher(node.option.text)).map((node) => node.option);
    };
    const getOptionsMatchingValue = (matcher) => {
      return nodes.current.filter((node) => matcher(node.option.value)).map((node) => node.option);
    };
    return {
      getCount,
      getOptionAtIndex,
      getIndexOfId,
      getOptionById,
      getOptionsMatchingText,
      getOptionsMatchingValue
    };
  }, []);
  const registerOption = React134.useCallback((option, element) => {
    var _nodes_current_index;
    const index = nodes.current.findIndex((node) => {
      if (!node.element || !element) {
        return false;
      }
      if (node.option.id === option.id) {
        return true;
      }
      return node.element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING;
    });
    if (((_nodes_current_index = nodes.current[index]) === null || _nodes_current_index === void 0 ? void 0 : _nodes_current_index.option.id) !== option.id) {
      const newItem = {
        element,
        option
      };
      if (index === -1) {
        nodes.current = [...nodes.current, newItem];
      } else {
        nodes.current.splice(index, 0, newItem);
      }
    }
    return () => {
      nodes.current = nodes.current.filter((node) => node.option.id !== option.id);
    };
  }, []);
  return {
    ...collectionAPI,
    options: nodes.current.map((node) => node.option),
    registerOption
  };
};

// node_modules/@fluentui/react-combobox/lib/utils/useScrollOptionsIntoView.js
var React135 = __toESM(require_react());
function useScrollOptionsIntoView(state) {
  const {
    activeOption
  } = state;
  const scrollContainerRef = React135.useRef(null);
  React135.useEffect(() => {
    if (scrollContainerRef.current && activeOption && canUseDOM()) {
      const activeOptionElement = scrollContainerRef.current.querySelector(`#${activeOption.id}`);
      if (!activeOptionElement) {
        return;
      }
      const {
        offsetHeight,
        offsetTop
      } = activeOptionElement;
      const {
        offsetHeight: parentOffsetHeight,
        scrollTop
      } = scrollContainerRef.current;
      const isAbove = offsetTop < scrollTop;
      const isBelow = offsetTop + offsetHeight > scrollTop + parentOffsetHeight;
      const buffer = 2;
      if (isAbove) {
        scrollContainerRef.current.scrollTo(0, offsetTop - buffer);
      } else if (isBelow) {
        scrollContainerRef.current.scrollTo(0, offsetTop - parentOffsetHeight + offsetHeight + buffer);
      }
    }
  }, [activeOption]);
  return scrollContainerRef;
}

// node_modules/@fluentui/react-combobox/lib/utils/useSelection.js
var import_react32 = __toESM(require_react());
var useSelection = (props) => {
  const {
    defaultSelectedOptions,
    multiselect,
    onOptionSelect
  } = props;
  const [selectedOptions, setSelectedOptions] = useControllableState({
    state: props.selectedOptions,
    defaultState: defaultSelectedOptions,
    initialState: []
  });
  const selectOption = (0, import_react32.useCallback)((event, option) => {
    if (option.disabled) {
      return;
    }
    let newSelection = [option.value];
    if (multiselect) {
      const selectedIndex = selectedOptions.findIndex((o) => o === option.value);
      if (selectedIndex > -1) {
        newSelection = [...selectedOptions.slice(0, selectedIndex), ...selectedOptions.slice(selectedIndex + 1)];
      } else {
        newSelection = [...selectedOptions, option.value];
      }
    }
    setSelectedOptions(newSelection);
    onOptionSelect === null || onOptionSelect === void 0 ? void 0 : onOptionSelect(event, {
      optionValue: option.value,
      optionText: option.text,
      selectedOptions: newSelection
    });
  }, [onOptionSelect, multiselect, selectedOptions, setSelectedOptions]);
  const clearSelection = (event) => {
    setSelectedOptions([]);
    onOptionSelect === null || onOptionSelect === void 0 ? void 0 : onOptionSelect(event, {
      optionValue: void 0,
      optionText: void 0,
      selectedOptions: []
    });
  };
  return {
    clearSelection,
    selectOption,
    selectedOptions
  };
};

// node_modules/@fluentui/react-combobox/lib/components/Listbox/useListbox.js
var useListbox_unstable = (props, ref) => {
  const {
    multiselect
  } = props;
  const optionCollection = useOptionCollection();
  const {
    getCount,
    getOptionAtIndex,
    getIndexOfId
  } = optionCollection;
  const {
    clearSelection,
    selectedOptions,
    selectOption
  } = useSelection(props);
  const [activeOption, setActiveOption] = React136.useState();
  const [focusVisible, setFocusVisible] = React136.useState(false);
  const onKeyDown = (event) => {
    const action = getDropdownActionFromKey(event, {
      open: true
    });
    const maxIndex = getCount() - 1;
    const activeIndex = activeOption ? getIndexOfId(activeOption.id) : -1;
    let newIndex = activeIndex;
    switch (action) {
      case "Select":
      case "CloseSelect":
        activeOption && selectOption(event, activeOption);
        break;
      default:
        newIndex = getIndexFromAction(action, activeIndex, maxIndex);
    }
    if (newIndex !== activeIndex) {
      event.preventDefault();
      setActiveOption(getOptionAtIndex(newIndex));
      setFocusVisible(true);
    }
  };
  const onMouseOver = (event) => {
    setFocusVisible(false);
  };
  const hasComboboxContext = useHasParentContext(ComboboxContext);
  const comboboxActiveOption = useContextSelector(ComboboxContext, (ctx) => ctx.activeOption);
  const comboboxFocusVisible = useContextSelector(ComboboxContext, (ctx) => ctx.focusVisible);
  const comboboxSelectedOptions = useContextSelector(ComboboxContext, (ctx) => ctx.selectedOptions);
  const comboboxSelectOption = useContextSelector(ComboboxContext, (ctx) => ctx.selectOption);
  const comboboxSetActiveOption = useContextSelector(ComboboxContext, (ctx) => ctx.setActiveOption);
  const optionContextValues = hasComboboxContext ? {
    activeOption: comboboxActiveOption,
    focusVisible: comboboxFocusVisible,
    selectedOptions: comboboxSelectedOptions,
    selectOption: comboboxSelectOption,
    setActiveOption: comboboxSetActiveOption
  } : {
    activeOption,
    focusVisible,
    selectedOptions,
    selectOption,
    setActiveOption
  };
  const state = {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      role: multiselect ? "menu" : "listbox",
      "aria-activedescendant": hasComboboxContext ? void 0 : activeOption === null || activeOption === void 0 ? void 0 : activeOption.id,
      "aria-multiselectable": multiselect,
      tabIndex: 0,
      ...props
    }),
    multiselect,
    clearSelection,
    ...optionCollection,
    ...optionContextValues
  };
  const scrollContainerRef = useScrollOptionsIntoView(state);
  state.root.ref = useMergedRefs(state.root.ref, scrollContainerRef);
  state.root.onKeyDown = useEventCallback(mergeCallbacks(state.root.onKeyDown, onKeyDown));
  state.root.onMouseOver = useEventCallback(mergeCallbacks(state.root.onMouseOver, onMouseOver));
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Listbox/renderListbox.js
var React137 = __toESM(require_react());
var renderListbox_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React137.createElement(ListboxContext.Provider, {
    value: contextValues.listbox
  }, React137.createElement(slots.root, slotProps.root));
};

// node_modules/@fluentui/react-combobox/lib/components/Listbox/useListboxStyles.js
var listboxClassNames = {
  root: "fui-Listbox"
};
var useStyles12 = __styles2({
  root: {
    De3pzq: "fxugw4r",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    Bf4jedk: "f3hsy1e",
    Bmxbyg5: "f5zp4f",
    Bpd4iqm: "fpvhumw",
    oeaueh: "f1yog68k",
    Bw0xxkn: "f13sgyd8",
    z8tnut: "f1x4af0m",
    z189sj: ["f7x41pl", "fruq291"],
    Byoj8tv: "fd55psn",
    uwmqm3: ["fruq291", "f7x41pl"],
    Belr9w4: "fiut8dr"
  }
}, {
  d: [".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f1ewtqcl{box-sizing:border-box;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".f3hsy1e{min-width:160px;}", ".f5zp4f{overflow-y:auto;}", ".fpvhumw{outline-width:1px;}", ".f1yog68k{outline-style:solid;}", ".f13sgyd8{outline-color:var(--colorTransparentStroke);}", ".f1x4af0m{padding-top:var(--spacingHorizontalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".fd55psn{padding-bottom:var(--spacingHorizontalXS);}", ".fiut8dr{row-gap:var(--spacingHorizontalXXS);}"]
});
var useListboxStyles_unstable = (state) => {
  const styles = useStyles12();
  state.root.className = mergeClasses(listboxClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Listbox/Listbox.js
var Listbox = React138.forwardRef((props, ref) => {
  const state = useListbox_unstable(props, ref);
  const contextValues = useListboxContextValues(state);
  useListboxStyles_unstable(state);
  const {
    useListboxStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderListbox_unstable(state, contextValues);
});
Listbox.displayName = "Listbox";

// node_modules/@fluentui/react-combobox/lib/components/Option/Option.js
var React141 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Option/useOption.js
var React139 = __toESM(require_react());
function getTextString(text, children) {
  if (text !== void 0) {
    return text;
  }
  let textString = "";
  let hasNonStringChild = false;
  React139.Children.forEach(children, (child) => {
    if (typeof child === "string") {
      textString += child;
    } else {
      hasNonStringChild = true;
    }
  });
  if (hasNonStringChild) {
    console.warn("Provide a `text` prop to Option components when they contain non-string children.");
  }
  return textString;
}
var useOption_unstable = (props, ref) => {
  const {
    children,
    disabled,
    text,
    value
  } = props;
  const optionRef = React139.useRef(null);
  const optionText = getTextString(text, children);
  const optionValue = value !== null && value !== void 0 ? value : optionText;
  const id = useId2("fluent-option", props.id);
  const optionData = React139.useMemo(() => ({
    id,
    disabled,
    text: optionText,
    value: optionValue
  }), [id, disabled, optionText, optionValue]);
  const focusVisible = useContextSelector(ListboxContext, (ctx) => ctx.focusVisible);
  const multiselect = useContextSelector(ListboxContext, (ctx) => ctx.multiselect);
  const registerOption = useContextSelector(ListboxContext, (ctx) => ctx.registerOption);
  const selected = useContextSelector(ListboxContext, (ctx) => {
    const selectedOptions = ctx.selectedOptions;
    return !!optionValue && !!selectedOptions.find((o) => o === optionValue);
  });
  const selectOption = useContextSelector(ListboxContext, (ctx) => ctx.selectOption);
  const setActiveOption = useContextSelector(ListboxContext, (ctx) => ctx.setActiveOption);
  const setOpen = useContextSelector(ComboboxContext, (ctx) => ctx.setOpen);
  const active = useContextSelector(ListboxContext, (ctx) => {
    var _ctx_activeOption, _ctx_activeOption1;
    return ((_ctx_activeOption = ctx.activeOption) === null || _ctx_activeOption === void 0 ? void 0 : _ctx_activeOption.id) !== void 0 && ((_ctx_activeOption1 = ctx.activeOption) === null || _ctx_activeOption1 === void 0 ? void 0 : _ctx_activeOption1.id) === id;
  });
  let CheckIcon = React139.createElement(CheckmarkFilled, null);
  if (multiselect) {
    CheckIcon = selected ? React139.createElement(Checkmark12Filled, null) : "";
  }
  const onClick = (event) => {
    var _props_onClick;
    if (disabled) {
      event.preventDefault();
      return;
    }
    setActiveOption(optionData);
    if (!multiselect) {
      setOpen === null || setOpen === void 0 ? void 0 : setOpen(event, false);
    }
    selectOption(event, optionData);
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);
  };
  React139.useEffect(() => {
    if (id && optionRef.current) {
      return registerOption(optionData, optionRef.current);
    }
  }, [id, optionData, registerOption]);
  const semanticProps = multiselect ? {
    role: "menuitemcheckbox",
    "aria-checked": selected
  } : {
    role: "option",
    "aria-selected": selected
  };
  return {
    components: {
      root: "div",
      checkIcon: "span"
    },
    root: getNativeElementProps("div", {
      ref: useMergedRefs(ref, optionRef),
      "aria-disabled": disabled ? "true" : void 0,
      id,
      ...semanticProps,
      ...props,
      onClick
    }),
    checkIcon: resolveShorthand(props.checkIcon, {
      required: true,
      defaultProps: {
        "aria-hidden": "true",
        children: CheckIcon
      }
    }),
    active,
    disabled,
    focusVisible,
    multiselect,
    selected
  };
};

// node_modules/@fluentui/react-combobox/lib/components/Option/renderOption.js
var React140 = __toESM(require_react());
var renderOption_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React140.createElement(slots.root, slotProps.root, React140.createElement(slots.checkIcon, slotProps.checkIcon), slotProps.root.children);
};

// node_modules/@fluentui/react-combobox/lib/components/Option/useOptionStyles.js
var optionClassNames = {
  root: "fui-Option",
  checkIcon: "fui-Option__checkIcon"
};
var useStyles13 = __styles2({
  root: {
    Bt984gj: "f122n59",
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    sj55zd: "f19n0e5",
    i8kkvl: "f1ufnopg",
    Bceei9c: "f1k6fduh",
    mc9l5x: "f22iagw",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi",
    z8tnut: "fp2oml8",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f1tdddsa",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    qhf8xq: "f10pi13n",
    Jwef8y: "f1knas48",
    ecr2s2: "fb40n2d"
  },
  active: {
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    B80jsxd: "f1nwj1ja",
    t2ki1e: "ffmd2fr",
    Bm2nyyq: "f8rth92",
    Barhvk9: ["flthirb", "ftkbnf5"],
    Bw17bha: "f1lh990p",
    vfts7: ["ftkbnf5", "flthirb"],
    xrcqlc: "fc9v8v1",
    Ihftqj: ["f1mwfetb", "f18mat8f"],
    Bcgy8vk: "f1cb6c3",
    Bhxzhr1: ["f18mat8f", "f1mwfetb"],
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    Bl18szs: ["f1pix4dl", "f13nd1z4"],
    B4j8arr: ["f13nd1z4", "f1pix4dl"],
    B0n5ga8: "f1qw5sz7",
    s924m2: ["f19va7ni", "f1a9v3mw"],
    B1q35kw: "fkkziue",
    Gp14am: ["f1a9v3mw", "f19va7ni"],
    bn5sak: "f1a97anr",
    By385i5: "f5226zp",
    Eqx8gd: ["fa2bdqt", "fei6g0k"],
    B1piin3: ["fei6g0k", "fa2bdqt"]
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Jwef8y: "f9ql6rf",
    ecr2s2: "fgj9um3",
    Bbusuzp: "f1dcs8yz"
  },
  selected: {},
  checkIcon: {
    Be2twd7: "fod5ikn",
    Frg6f3: ["f18b9hdq", "fn6qj8t"],
    t21cq0: ["f1xk557c", "f1h9en5y"],
    Bcdw1i0: "fd7fpy0",
    Bo70h7d: "fvc9v3g"
  },
  selectedCheck: {
    Bcdw1i0: "f1022m68"
  },
  multiselectCheck: {
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fq0vr37",
    h3c5rm: ["f1byw159", "f11cr0be"],
    B9xav0g: "f1c1zstj",
    zhjwy3: ["f11cr0be", "f1byw159"],
    Bbmb7ep: ["f1g3puop", "fi2rrw2"],
    Beyfa6y: ["fi2rrw2", "f1g3puop"],
    B7oj6ja: ["f1rstyi9", "f1s4nn1u"],
    Btl43ni: ["f1s4nn1u", "f1rstyi9"],
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Brf1p80: "f4d9j23",
    Bkfmm31: "f1w9h62z",
    Be2twd7: "f1ugzwwg",
    Bqenvij: "fd461yt",
    a9b677: "fjw5fx7",
    Bcdw1i0: "f1022m68"
  },
  selectedMultiselectCheck: {
    De3pzq: "ftywsgz",
    sj55zd: "fqpbvvt",
    g2u3we: "f3xi7mh",
    h3c5rm: ["ftovhe4", "f1wczvin"],
    B9xav0g: "f68vbr6",
    zhjwy3: ["f1wczvin", "ftovhe4"]
  },
  checkDisabled: {
    sj55zd: "f1s2aq7o",
    Bbusuzp: "f1dcs8yz"
  }
}, {
  d: [".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1ufnopg{-webkit-column-gap:var(--spacingHorizontalXS);column-gap:var(--spacingHorizontalXS);}", ".f1k6fduh{cursor:pointer;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fp2oml8{padding-top:var(--spacingVerticalSNudge);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1tdddsa{padding-bottom:var(--spacingVerticalSNudge);}", ".f10pi13n{position:relative;}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1nwj1ja::after{pointer-events:none;}", ".ffmd2fr::after{z-index:1;}", ".f8rth92::after{border-top-style:solid;}", ".flthirb::after{border-right-style:solid;}", ".ftkbnf5::after{border-left-style:solid;}", ".f1lh990p::after{border-bottom-style:solid;}", ".fc9v8v1::after{border-top-width:2px;}", ".f1mwfetb::after{border-right-width:2px;}", ".f18mat8f::after{border-left-width:2px;}", ".f1cb6c3::after{border-bottom-width:2px;}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1pix4dl::after{border-top-right-radius:var(--borderRadiusMedium);}", ".f13nd1z4::after{border-top-left-radius:var(--borderRadiusMedium);}", ".f1qw5sz7::after{border-top-color:var(--colorStrokeFocus2);}", ".f19va7ni::after{border-right-color:var(--colorStrokeFocus2);}", ".f1a9v3mw::after{border-left-color:var(--colorStrokeFocus2);}", ".fkkziue::after{border-bottom-color:var(--colorStrokeFocus2);}", ".f1a97anr::after{top:-2px;}", ".f5226zp::after{bottom:-2px;}", ".fa2bdqt::after{left:-2px;}", ".fei6g0k::after{right:-2px;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".f18b9hdq{margin-left:calc(var(--spacingHorizontalXXS) * -1);}", ".fn6qj8t{margin-right:calc(var(--spacingHorizontalXXS) * -1);}", ".f1xk557c{margin-right:var(--spacingHorizontalXXS);}", ".f1h9en5y{margin-left:var(--spacingHorizontalXXS);}", ".fd7fpy0{visibility:hidden;}", ".fvc9v3g svg{display:block;}", ".f1022m68{visibility:visible;}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".fq0vr37{border-top-color:var(--colorNeutralStrokeAccessible);}", ".f1byw159{border-right-color:var(--colorNeutralStrokeAccessible);}", ".f11cr0be{border-left-color:var(--colorNeutralStrokeAccessible);}", ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".f1g3puop{border-bottom-right-radius:var(--borderRadiusSmall);}", ".fi2rrw2{border-bottom-left-radius:var(--borderRadiusSmall);}", ".f1rstyi9{border-top-right-radius:var(--borderRadiusSmall);}", ".f1s4nn1u{border-top-left-radius:var(--borderRadiusSmall);}", ".f1ewtqcl{box-sizing:border-box;}", ".f4d9j23{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;}", ".f1w9h62z{fill:currentColor;}", ".f1ugzwwg{font-size:12px;}", ".fd461yt{height:16px;}", ".fjw5fx7{width:16px;}", ".ftywsgz{background-color:var(--colorCompoundBrandBackground);}", ".fqpbvvt{color:var(--colorNeutralForegroundInverted);}", ".f3xi7mh{border-top-color:var(--colorCompoundBrandBackground);}", ".ftovhe4{border-right-color:var(--colorCompoundBrandBackground);}", ".f1wczvin{border-left-color:var(--colorCompoundBrandBackground);}", ".f68vbr6{border-bottom-color:var(--colorCompoundBrandBackground);}"],
  h: [".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".f9ql6rf:hover{background-color:var(--colorTransparentBackground);}"],
  a: [".fb40n2d:active{background-color:var(--colorNeutralBackground1Pressed);}", ".fgj9um3:active{background-color:var(--colorTransparentBackground);}"],
  m: [["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useOptionStyles_unstable = (state) => {
  const {
    active,
    disabled,
    focusVisible,
    multiselect,
    selected
  } = state;
  const styles = useStyles13();
  state.root.className = mergeClasses(optionClassNames.root, styles.root, active && focusVisible && styles.active, disabled && styles.disabled, selected && styles.selected, state.root.className);
  if (state.checkIcon) {
    state.checkIcon.className = mergeClasses(optionClassNames.checkIcon, styles.checkIcon, state.checkIcon.className, multiselect && styles.multiselectCheck, selected && styles.selectedCheck, selected && multiselect && styles.selectedMultiselectCheck, disabled && styles.checkDisabled);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Option/Option.js
var Option = React141.forwardRef((props, ref) => {
  const state = useOption_unstable(props, ref);
  useOptionStyles_unstable(state);
  const {
    useOptionStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderOption_unstable(state);
});
Option.displayName = "Option";

// node_modules/@fluentui/react-combobox/lib/components/Option/Option.types.js
var React142 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Combobox/Combobox.js
var React147 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Combobox/useCombobox.js
var React145 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/utils/useComboboxBaseState.js
var React143 = __toESM(require_react());
var useComboboxBaseState = (props) => {
  const {
    appearance = "outline",
    children,
    editable = false,
    inlinePopup = false,
    multiselect,
    onOpenChange,
    size: size2 = "medium"
  } = props;
  const optionCollection = useOptionCollection();
  const {
    getOptionAtIndex,
    getOptionsMatchingValue
  } = optionCollection;
  const [activeOption, setActiveOption] = React143.useState();
  const [focusVisible, setFocusVisible] = React143.useState(false);
  const [hasFocus, setHasFocus] = React143.useState(false);
  const ignoreNextBlur = React143.useRef(false);
  const selectionState = useSelection(props);
  const {
    selectedOptions
  } = selectionState;
  const isFirstMount = useFirstMount();
  const [controllableValue, setValue] = useControllableState({
    state: props.value,
    initialState: void 0
  });
  const value = React143.useMemo(() => {
    if (controllableValue !== void 0) {
      return controllableValue;
    }
    if (isFirstMount && props.defaultValue !== void 0) {
      return props.defaultValue;
    }
    const selectedOptionsText = getOptionsMatchingValue((optionValue) => {
      return selectedOptions.includes(optionValue);
    }).map((option) => option.text);
    if (multiselect) {
      return editable ? "" : selectedOptionsText.join(", ");
    }
    return selectedOptionsText[0];
  }, [controllableValue, editable, getOptionsMatchingValue, multiselect, props.defaultValue, selectedOptions]);
  const [open, setOpenState] = useControllableState({
    state: props.open,
    defaultState: props.defaultOpen,
    initialState: false
  });
  const setOpen = React143.useCallback((event, newState) => {
    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(event, {
      open: newState
    });
    setOpenState(newState);
  }, [onOpenChange, setOpenState]);
  React143.useEffect(() => {
    if (open && !activeOption) {
      if (!multiselect && selectedOptions.length > 0) {
        const selectedOption = getOptionsMatchingValue((v) => v === selectedOptions[0]).pop();
        selectedOption && setActiveOption(selectedOption);
      } else {
        setActiveOption(getOptionAtIndex(0));
      }
    } else if (!open) {
      setActiveOption(void 0);
    }
  }, [open, children]);
  return {
    ...optionCollection,
    ...selectionState,
    activeOption,
    appearance,
    focusVisible,
    hasFocus,
    ignoreNextBlur,
    inlinePopup,
    open,
    setActiveOption,
    setFocusVisible,
    setHasFocus,
    setOpen,
    setValue,
    size: size2,
    value
  };
};

// node_modules/@fluentui/react-combobox/lib/utils/useComboboxPopup.js
function useComboboxPopup(props, triggerShorthand, listboxShorthand) {
  const {
    positioning
  } = props;
  const popperOptions = {
    position: "below",
    align: "start",
    offset: {
      crossAxis: 0,
      mainAxis: 2
    },
    ...resolvePositioningShorthand(positioning)
  };
  const {
    targetRef,
    containerRef
  } = usePositioning(popperOptions);
  const listboxRef = useMergedRefs(listboxShorthand === null || listboxShorthand === void 0 ? void 0 : listboxShorthand.ref, containerRef);
  const listbox = listboxShorthand && {
    ...listboxShorthand,
    ref: listboxRef
  };
  return [{
    ...triggerShorthand,
    ref: useMergedRefs(triggerShorthand === null || triggerShorthand === void 0 ? void 0 : triggerShorthand.ref, targetRef)
  }, listbox];
}

// node_modules/@fluentui/react-combobox/lib/utils/useTriggerListboxSlots.js
var React144 = __toESM(require_react());
function useTriggerListboxSlots(props, state, ref, triggerSlot, listboxSlot) {
  const {
    multiselect
  } = props;
  const {
    activeOption,
    getCount,
    getIndexOfId,
    getOptionAtIndex,
    ignoreNextBlur,
    open,
    selectOption,
    setActiveOption,
    setFocusVisible,
    setHasFocus,
    setOpen
  } = state;
  const triggerRef = React144.useRef(null);
  const listboxId = useId2("fluent-listbox", listboxSlot === null || listboxSlot === void 0 ? void 0 : listboxSlot.id);
  const listbox = listboxSlot && {
    id: listboxId,
    multiselect,
    tabIndex: void 0,
    ...listboxSlot
  };
  const trigger = {
    "aria-expanded": open,
    "aria-activedescendant": open ? activeOption === null || activeOption === void 0 ? void 0 : activeOption.id : void 0,
    role: "combobox",
    ...triggerSlot,
    // explicitly type the ref as an intersection here to prevent type errors
    // since the `children` prop has mutually incompatible types between input/button
    // functionally both ref and triggerRef will always be the same element type
    ref: useMergedRefs(ref, triggerSlot === null || triggerSlot === void 0 ? void 0 : triggerSlot.ref, triggerRef)
  };
  const listboxOnClick = useEventCallback(mergeCallbacks((event) => {
    var _triggerRef_current;
    (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
  }, listbox === null || listbox === void 0 ? void 0 : listbox.onClick));
  const listboxOnMouseOver = useEventCallback(mergeCallbacks((event) => {
    setFocusVisible(false);
  }, listbox === null || listbox === void 0 ? void 0 : listbox.onMouseOver));
  const listboxOnMouseDown = useEventCallback(mergeCallbacks((event) => {
    ignoreNextBlur.current = true;
  }, listbox === null || listbox === void 0 ? void 0 : listbox.onMouseDown));
  if (listbox) {
    listbox.onClick = listboxOnClick;
    listbox.onMouseOver = listboxOnMouseOver;
    listbox.onMouseDown = listboxOnMouseDown;
  }
  trigger.onBlur = mergeCallbacks((event) => {
    if (!ignoreNextBlur.current) {
      setOpen(event, false);
    }
    ignoreNextBlur.current = false;
    setHasFocus(false);
  }, trigger.onBlur);
  trigger.onClick = mergeCallbacks((event) => {
    setOpen(event, !open);
  }, trigger.onClick);
  trigger.onFocus = mergeCallbacks((event) => {
    setHasFocus(true);
  }, trigger.onFocus);
  trigger.onKeyDown = mergeCallbacks((event) => {
    const action = getDropdownActionFromKey(event, {
      open,
      multiselect
    });
    const maxIndex = getCount() - 1;
    const activeIndex = activeOption ? getIndexOfId(activeOption.id) : -1;
    let newIndex = activeIndex;
    switch (action) {
      case "Open":
        event.preventDefault();
        setFocusVisible(true);
        setOpen(event, true);
        break;
      case "Close":
        event.stopPropagation();
        event.preventDefault();
        setOpen(event, false);
        break;
      case "CloseSelect":
        !multiselect && !(activeOption === null || activeOption === void 0 ? void 0 : activeOption.disabled) && setOpen(event, false);
      case "Select":
        activeOption && selectOption(event, activeOption);
        event.preventDefault();
        break;
      case "Tab":
        !multiselect && activeOption && selectOption(event, activeOption);
        break;
      default:
        newIndex = getIndexFromAction(action, activeIndex, maxIndex);
    }
    if (newIndex !== activeIndex) {
      event.preventDefault();
      setActiveOption(getOptionAtIndex(newIndex));
      setFocusVisible(true);
    }
  }, trigger.onKeyDown);
  trigger.onMouseOver = mergeCallbacks((event) => {
    setFocusVisible(false);
  }, trigger.onMouseOver);
  return [trigger, listbox];
}

// node_modules/@fluentui/react-combobox/lib/components/Combobox/useCombobox.js
var useCombobox_unstable = (props, ref) => {
  var _props_input;
  const baseState = useComboboxBaseState({
    ...props,
    editable: true
  });
  const {
    activeOption,
    clearSelection,
    getIndexOfId,
    getOptionsMatchingText,
    hasFocus,
    open,
    selectOption,
    selectedOptions,
    setActiveOption,
    setFocusVisible,
    setOpen,
    setValue,
    value
  } = baseState;
  const {
    disabled,
    freeform,
    inlinePopup,
    multiselect
  } = props;
  const comboId = useId2("combobox-");
  const {
    primary: triggerNativeProps,
    root: rootNativeProps
  } = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: ["children", "size"]
  });
  const rootRef = React145.useRef(null);
  const triggerRef = React145.useRef(null);
  const [hideActiveDescendant, setHideActiveDescendant] = React145.useState(false);
  const [popupDimensions, setPopupDimensions] = React145.useState();
  React145.useEffect(() => {
    if (open) {
      var _rootRef_current;
      const width = `${(_rootRef_current = rootRef.current) === null || _rootRef_current === void 0 ? void 0 : _rootRef_current.clientWidth}px`;
      if (width !== (popupDimensions === null || popupDimensions === void 0 ? void 0 : popupDimensions.width)) {
        setPopupDimensions({
          width
        });
      }
    }
  }, [open, popupDimensions]);
  const getOptionFromInput = (inputValue) => {
    const searchString = inputValue === null || inputValue === void 0 ? void 0 : inputValue.trim().toLowerCase();
    if (!searchString || searchString.length === 0) {
      return;
    }
    const matcher = (optionText) => optionText.toLowerCase().indexOf(searchString) === 0;
    const matches = getOptionsMatchingText(matcher);
    if (matches.length > 1 && activeOption) {
      const startIndex = getIndexOfId(activeOption.id);
      const nextMatch = matches.find((option) => getIndexOfId(option.id) >= startIndex);
      return nextMatch !== null && nextMatch !== void 0 ? nextMatch : matches[0];
    }
    var _matches_;
    return (_matches_ = matches[0]) !== null && _matches_ !== void 0 ? _matches_ : void 0;
  };
  baseState.selectOption = (ev, option) => {
    setValue(void 0);
    selectOption(ev, option);
  };
  const onTriggerBlur = (ev) => {
    if (!baseState.open && !freeform) {
      if (value && activeOption && value.trim().toLowerCase() === (activeOption === null || activeOption === void 0 ? void 0 : activeOption.text.toLowerCase())) {
        baseState.selectOption(ev, activeOption);
      }
      setValue(void 0);
    }
  };
  baseState.setOpen = (ev, newState) => {
    if (disabled) {
      return;
    }
    if (!newState && !freeform) {
      setValue(void 0);
    }
    setOpen(ev, newState);
  };
  const onTriggerChange = (ev) => {
    const inputValue = ev.target.value;
    baseState.setValue(inputValue);
    const matchingOption = getOptionFromInput(inputValue);
    setActiveOption(matchingOption);
    setFocusVisible(true);
    if (!multiselect && selectedOptions.length === 1 && (inputValue.length < 1 || !matchingOption)) {
      clearSelection(ev);
    }
  };
  const onTriggerKeyDown = (ev) => {
    if (!open && getDropdownActionFromKey(ev) === "Type") {
      baseState.setOpen(ev, true);
    }
    if (ev.key === ArrowLeft || ev.key === ArrowRight) {
      setHideActiveDescendant(true);
    } else {
      setHideActiveDescendant(false);
    }
  };
  let triggerSlot;
  let listboxSlot;
  triggerSlot = resolveShorthand(props.input, {
    required: true,
    defaultProps: {
      ref: useMergedRefs((_props_input = props.input) === null || _props_input === void 0 ? void 0 : _props_input.ref, triggerRef),
      type: "text",
      value: value !== null && value !== void 0 ? value : "",
      ...triggerNativeProps
    }
  });
  triggerSlot.onChange = mergeCallbacks(triggerSlot.onChange, onTriggerChange);
  triggerSlot.onBlur = mergeCallbacks(triggerSlot.onBlur, onTriggerBlur);
  triggerSlot.onKeyDown = mergeCallbacks(triggerSlot.onKeyDown, onTriggerKeyDown);
  listboxSlot = open || hasFocus ? resolveShorthand(props.listbox, {
    required: true,
    defaultProps: {
      children: props.children,
      style: popupDimensions
    }
  }) : void 0;
  [triggerSlot, listboxSlot] = useComboboxPopup(props, triggerSlot, listboxSlot);
  [triggerSlot, listboxSlot] = useTriggerListboxSlots(props, baseState, ref, triggerSlot, listboxSlot);
  if (hideActiveDescendant) {
    triggerSlot["aria-activedescendant"] = void 0;
  }
  const state = {
    components: {
      root: "div",
      input: "input",
      expandIcon: "span",
      listbox: Listbox
    },
    root: resolveShorthand(props.root, {
      required: true,
      defaultProps: {
        "aria-owns": !inlinePopup ? listboxSlot === null || listboxSlot === void 0 ? void 0 : listboxSlot.id : void 0,
        ...rootNativeProps
      }
    }),
    input: triggerSlot,
    listbox: listboxSlot,
    expandIcon: resolveShorthand(props.expandIcon, {
      required: true,
      defaultProps: {
        "aria-expanded": open,
        children: React145.createElement(ChevronDownRegular, null),
        role: "button"
      }
    }),
    ...baseState
  };
  state.root.ref = useMergedRefs(state.root.ref, rootRef);
  const {
    onMouseDown: onIconMouseDown,
    onClick: onIconClick
  } = state.expandIcon || {};
  const onExpandIconMouseDown = useEventCallback(mergeCallbacks(onIconMouseDown, () => {
    if (open) {
      baseState.ignoreNextBlur.current = true;
    }
  }));
  const onExpandIconClick = useEventCallback(mergeCallbacks(onIconClick, (event) => {
    var _triggerRef_current;
    state.setOpen(event, !state.open);
    (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
    setFocusVisible(false);
  }));
  if (state.expandIcon) {
    state.expandIcon.onMouseDown = onExpandIconMouseDown;
    state.expandIcon.onClick = onExpandIconClick;
    const hasExpandLabel = state.expandIcon["aria-label"] || state.expandIcon["aria-labelledby"];
    const defaultOpenString = "Open";
    if (!hasExpandLabel) {
      if (props["aria-labelledby"]) {
        var _state_expandIcon_id;
        const chevronId = (_state_expandIcon_id = state.expandIcon.id) !== null && _state_expandIcon_id !== void 0 ? _state_expandIcon_id : `${comboId}-chevron`;
        const chevronLabelledBy = `${chevronId} ${state.input["aria-labelledby"]}`;
        state.expandIcon["aria-label"] = defaultOpenString;
        state.expandIcon.id = chevronId;
        state.expandIcon["aria-labelledby"] = chevronLabelledBy;
      } else if (props["aria-label"]) {
        state.expandIcon["aria-label"] = `${defaultOpenString} ${props["aria-label"]}`;
      } else {
        state.expandIcon["aria-label"] = defaultOpenString;
      }
    }
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Combobox/renderCombobox.js
var React146 = __toESM(require_react());
var renderCombobox_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React146.createElement(slots.root, slotProps.root, React146.createElement(ComboboxContext.Provider, {
    value: contextValues.combobox
  }, React146.createElement(slots.input, slotProps.input), slots.expandIcon && React146.createElement(slots.expandIcon, slotProps.expandIcon), slots.listbox && (state.inlinePopup ? React146.createElement(slots.listbox, slotProps.listbox) : React146.createElement(Portal, null, React146.createElement(slots.listbox, slotProps.listbox)))));
};

// node_modules/@fluentui/react-combobox/lib/components/Combobox/useComboboxStyles.js
var comboboxClassNames = {
  root: "fui-Combobox",
  input: "fui-Combobox__input",
  expandIcon: "fui-Combobox__expandIcon",
  listbox: "fui-Combobox__listbox"
};
var useStyles14 = __styles2({
  root: {
    Bt984gj: "f122n59",
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    B7ck84d: "f1ewtqcl",
    i8kkvl: "f14mj54c",
    mc9l5x: "fwk3njj",
    Budl1dq: "fz17x9o",
    Brf1p80: "f1869bpl",
    Bf4jedk: "f1exfvgq",
    qhf8xq: "f10pi13n",
    Bbr2w1p: "f14a1fxs",
    Bduesf4: "f3e99gv",
    Bpq79vn: "fhljsf7",
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    Eqx8gd: ["f1a7op3", "f1cjjd47"],
    By385i5: "f1gboi2j",
    B1piin3: ["f1cjjd47", "f1a7op3"],
    Dlnsje: "f145g4dw",
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    Bcgy8vk: "f14pi962",
    Bw17bha: "f1lh990p",
    B1q35kw: "f1jc6hxc",
    Gjdm7m: "f13evtba",
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o",
    Bercvud: "f1ibeo51"
  },
  listbox: {
    E5pizo: "f1hg901r",
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    Bxyxcbc: "fmmk62d"
  },
  listboxCollapsed: {
    mc9l5x: "fjseox"
  },
  small: {
    z189sj: ["fdw0yi8", "fk8j09s"]
  },
  medium: {
    z189sj: ["f11gcy0p", "f1ng84yb"]
  },
  large: {
    i8kkvl: "f1rjii52",
    z189sj: ["fw5db7e", "f1uw59to"]
  },
  outline: {
    De3pzq: "fxugw4r",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1c1zstj",
    zhjwy3: ["f1lxtadh", "f1akhkt"]
  },
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "flmw63s",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fqhmt4z",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    Bn0qgzm: "f1vxd6vx",
    oivjwe: "fg706s2",
    B9xav0g: "f1c1zstj",
    Bbmb7ep: ["f1krrbdw", "f1deotkl"],
    Beyfa6y: ["f1deotkl", "f1krrbdw"],
    B7oj6ja: ["f10ostut", "f1ozlkrg"],
    Btl43ni: ["f1ozlkrg", "f10ostut"]
  },
  "filled-lighter": {
    De3pzq: "fxugw4r",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"]
  },
  "filled-darker": {
    De3pzq: "f16xq7d1",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"]
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  invalidUnderline: {
    hhx65j: "f1fgmyf4"
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  }
}, {
  d: [".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f1ewtqcl{box-sizing:border-box;}", ".f14mj54c{-webkit-column-gap:var(--spacingHorizontalXXS);column-gap:var(--spacingHorizontalXXS);}", ".fwk3njj{display:inline-grid;}", ".fz17x9o{grid-template-columns:1fr auto;}", ".f1869bpl{-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;}", ".f1exfvgq{min-width:250px;}", ".f10pi13n{position:relative;}", ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1a7op3::after{left:-1px;}", ".f1cjjd47::after{right:-1px;}", ".f1gboi2j::after{bottom:-1px;}", ".f145g4dw::after{height:max(2px, var(--borderRadiusMedium));}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f14pi962::after{border-bottom-width:var(--strokeWidthThick);}", ".f1lh990p::after{border-bottom-style:solid;}", ".f1jc6hxc::after{border-bottom-color:var(--colorCompoundBrandStroke);}", ".f13evtba::after{-webkit-clip-path:inset(calc(100% - 2px) 0 0 0);clip-path:inset(calc(100% - 2px) 0 0 0);}", ".f1yk9hq::after{-webkit-transform:scaleX(0);-moz-transform:scaleX(0);-ms-transform:scaleX(0);transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}", ".f1hg901r{box-shadow:var(--shadow16);}", ".fmmk62d{max-height:80vh;}", ".fjseox{display:none;}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}", ".f1rjii52{-webkit-column-gap:var(--spacingHorizontalSNudge);column-gap:var(--spacingHorizontalSNudge);}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1krrbdw{border-bottom-right-radius:0;}", ".f1deotkl{border-bottom-left-radius:0;}", ".f10ostut{border-top-right-radius:0;}", ".f1ozlkrg{border-top-left-radius:0;}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}"],
  w: [".f14a1fxs:focus-within{outline-width:2px;}", ".f3e99gv:focus-within{outline-style:solid;}", ".fhljsf7:focus-within{outline-color:transparent;}", ".fjw5xc1:focus-within::after{-webkit-transform:scaleX(1);-moz-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}", ".f1ibeo51:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rvyvqg{border-right-color:GrayText;}.f14g86mu{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".flmw63s:hover{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  a: [".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fqhmt4z:active{border-bottom-color:var(--colorNeutralStrokeAccessible);}"]
});
var useInputStyles2 = __styles2({
  input: {
    De3pzq: "f1c21dwh",
    B4j52fo: "fre7gi1",
    Bekrc4i: ["f1358rze", "f1rvrf73"],
    Bn0qgzm: "fqdk4by",
    ibv6hh: ["f1rvrf73", "f1358rze"],
    sj55zd: "f19n0e5",
    Bahqtrf: "fk6fouc",
    Brovlpu: "ftqa4ok",
    yvdlaj: "fwyc1cq",
    B3o7kgh: "f13ta7ih"
  },
  small: {
    Bqenvij: "f50nw0v",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1xile11", "fqznh8f"]
  },
  medium: {
    Bqenvij: "f1tvdnth",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1e60jzv", "f135dnwl"]
  },
  large: {
    Bqenvij: "f1ihhdec",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["fnphzt9", "flt1dlf"]
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    De3pzq: "f1c21dwh",
    Bceei9c: "fdrzuqr",
    yvdlaj: "fahhnxm"
  }
}, {
  d: [".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fre7gi1{border-top-width:0;}", ".f1358rze{border-right-width:0;}", ".f1rvrf73{border-left-width:0;}", ".fqdk4by{border-bottom-width:0;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fwyc1cq::-webkit-input-placeholder{color:var(--colorNeutralForeground4);}", ".fwyc1cq::-moz-placeholder{color:var(--colorNeutralForeground4);}", ".f13ta7ih::-webkit-input-placeholder{opacity:1;}", ".f13ta7ih::-moz-placeholder{opacity:1;}", ".f50nw0v{height:22px;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".f1xile11{padding-left:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".fqznh8f{padding-right:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".f1tvdnth{height:30px;}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1e60jzv{padding-left:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f135dnwl{padding-right:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f1ihhdec{height:38px;}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fnphzt9{padding-left:calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", ".flt1dlf{padding-right:calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".fahhnxm::-webkit-input-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".fahhnxm::-moz-placeholder{color:var(--colorNeutralForegroundDisabled);}"],
  f: [".ftqa4ok:focus{outline-style:none;}"]
});
var useIconStyles4 = __styles2({
  icon: {
    B7ck84d: "f1ewtqcl",
    sj55zd: "fxkbij4",
    Bceei9c: "f1k6fduh",
    mc9l5x: "ftgm304",
    Be2twd7: "f1pp30po",
    Bo70h7d: "fvc9v3g"
  },
  small: {
    Be2twd7: "f4ybsrx",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  medium: {
    Be2twd7: "fe5j1ua",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  large: {
    Be2twd7: "f1rt2boy",
    Frg6f3: ["f1t5qyk5", "f1ikr372"]
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr"
  }
}, {
  d: [".f1ewtqcl{box-sizing:border-box;}", ".fxkbij4{color:var(--colorNeutralStrokeAccessible);}", ".f1k6fduh{cursor:pointer;}", ".ftgm304{display:block;}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".fvc9v3g svg{display:block;}", ".f4ybsrx{font-size:16px;}", ".f1h9en5y{margin-left:var(--spacingHorizontalXXS);}", ".f1xk557c{margin-right:var(--spacingHorizontalXXS);}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f1t5qyk5{margin-left:var(--spacingHorizontalSNudge);}", ".f1ikr372{margin-right:var(--spacingHorizontalSNudge);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}"]
});
var useComboboxStyles_unstable = (state) => {
  const {
    appearance,
    open,
    size: size2
  } = state;
  const invalid = `${state.input["aria-invalid"]}` === "true";
  const disabled = state.input.disabled;
  const styles = useStyles14();
  const iconStyles = useIconStyles4();
  const inputStyles = useInputStyles2();
  state.root.className = mergeClasses(comboboxClassNames.root, styles.root, styles[appearance], styles[size2], !disabled && appearance === "outline" && styles.outlineInteractive, invalid && appearance !== "underline" && styles.invalid, invalid && appearance === "underline" && styles.invalidUnderline, disabled && styles.disabled, state.root.className);
  state.input.className = mergeClasses(comboboxClassNames.input, inputStyles.input, inputStyles[size2], disabled && inputStyles.disabled, state.input.className);
  if (state.listbox) {
    state.listbox.className = mergeClasses(comboboxClassNames.listbox, styles.listbox, !open && styles.listboxCollapsed, state.listbox.className);
  }
  if (state.expandIcon) {
    state.expandIcon.className = mergeClasses(comboboxClassNames.expandIcon, iconStyles.icon, iconStyles[size2], disabled && iconStyles.disabled, state.expandIcon.className);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Combobox/Combobox.js
var Combobox = React147.forwardRef((props, ref) => {
  const state = useCombobox_unstable(props, ref);
  const contextValues = useComboboxContextValues(state);
  useComboboxStyles_unstable(state);
  const {
    useComboboxStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderCombobox_unstable(state, contextValues);
});
Combobox.displayName = "Combobox";

// node_modules/@fluentui/react-combobox/lib/components/Combobox/Combobox.types.js
var React148 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/Dropdown.js
var React151 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/useDropdown.js
var React149 = __toESM(require_react());
var useDropdown_unstable = (props, ref) => {
  const baseState = useComboboxBaseState(props);
  const {
    activeOption,
    getIndexOfId,
    getOptionsMatchingText,
    open,
    setActiveOption,
    setFocusVisible,
    setOpen
  } = baseState;
  const {
    primary: triggerNativeProps,
    root: rootNativeProps
  } = getPartitionedNativeProps({
    props,
    primarySlotTagName: "button",
    excludedPropNames: ["children"]
  });
  const rootRef = React149.useRef(null);
  const [popupWidth, setPopupWidth] = React149.useState();
  React149.useEffect(() => {
    var _rootRef_current;
    const width = open ? `${(_rootRef_current = rootRef.current) === null || _rootRef_current === void 0 ? void 0 : _rootRef_current.clientWidth}px` : void 0;
    setPopupWidth(width);
  }, [open]);
  const searchString = React149.useRef("");
  const [setKeyTimeout, clearKeyTimeout] = useTimeout();
  const getNextMatchingOption = () => {
    let matcher = (optionText) => optionText.toLowerCase().indexOf(searchString.current) === 0;
    let matches = getOptionsMatchingText(matcher);
    let startIndex = activeOption ? getIndexOfId(activeOption.id) : 0;
    if (open && searchString.current.length === 1) {
      startIndex++;
    }
    if (!matches.length) {
      const letters = searchString.current.split("");
      const allSameLetter = letters.length && letters.every((letter) => letter === letters[0]);
      if (allSameLetter) {
        startIndex++;
        matcher = (optionText) => optionText.toLowerCase().indexOf(letters[0]) === 0;
        matches = getOptionsMatchingText(matcher);
      }
    }
    if (matches.length > 1 && activeOption) {
      const nextMatch = matches.find((option) => getIndexOfId(option.id) >= startIndex);
      return nextMatch !== null && nextMatch !== void 0 ? nextMatch : matches[0];
    }
    var _matches_;
    return (_matches_ = matches[0]) !== null && _matches_ !== void 0 ? _matches_ : void 0;
  };
  const onTriggerKeyDown = (ev) => {
    clearKeyTimeout();
    if (getDropdownActionFromKey(ev) === "Type") {
      searchString.current += ev.key.toLowerCase();
      setKeyTimeout(() => {
        searchString.current = "";
      }, 500);
      !open && setOpen(ev, true);
      const nextOption = getNextMatchingOption();
      setActiveOption(nextOption);
      setFocusVisible(true);
    }
  };
  let triggerSlot;
  let listboxSlot;
  triggerSlot = resolveShorthand(props.button, {
    required: true,
    defaultProps: {
      type: "button",
      children: baseState.value || props.placeholder,
      ...triggerNativeProps
    }
  });
  triggerSlot.onKeyDown = mergeCallbacks(onTriggerKeyDown, triggerSlot.onKeyDown);
  listboxSlot = baseState.open || baseState.hasFocus ? resolveShorthand(props.listbox, {
    required: true,
    defaultProps: {
      children: props.children,
      style: {
        width: popupWidth
      }
    }
  }) : void 0;
  [triggerSlot, listboxSlot] = useComboboxPopup(props, triggerSlot, listboxSlot);
  [triggerSlot, listboxSlot] = useTriggerListboxSlots(props, baseState, ref, triggerSlot, listboxSlot);
  const state = {
    components: {
      root: "div",
      button: "button",
      expandIcon: "span",
      listbox: Listbox
    },
    root: resolveShorthand(props.root, {
      required: true,
      defaultProps: {
        "aria-owns": !props.inlinePopup ? listboxSlot === null || listboxSlot === void 0 ? void 0 : listboxSlot.id : void 0,
        children: props.children,
        ...rootNativeProps
      }
    }),
    button: triggerSlot,
    listbox: listboxSlot,
    expandIcon: resolveShorthand(props.expandIcon, {
      required: true,
      defaultProps: {
        children: React149.createElement(ChevronDownRegular, null)
      }
    }),
    placeholderVisible: !baseState.value && !!props.placeholder,
    ...baseState
  };
  state.root.ref = useMergedRefs(state.root.ref, rootRef);
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/renderDropdown.js
var React150 = __toESM(require_react());
var renderDropdown_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React150.createElement(slots.root, slotProps.root, React150.createElement(ComboboxContext.Provider, {
    value: contextValues.combobox
  }, React150.createElement(slots.button, slotProps.button, slotProps.button.children, slots.expandIcon && React150.createElement(slots.expandIcon, slotProps.expandIcon)), slots.listbox && (state.inlinePopup ? React150.createElement(slots.listbox, slotProps.listbox) : React150.createElement(Portal, null, React150.createElement(slots.listbox, slotProps.listbox)))));
};

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/useDropdownStyles.js
var dropdownClassNames = {
  root: "fui-Dropdown",
  button: "fui-Dropdown__button",
  expandIcon: "fui-Dropdown__expandIcon",
  listbox: "fui-Dropdown__listbox"
};
var useStyles15 = __styles2({
  root: {
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f14t3ns0",
    Bf4jedk: "f1exfvgq",
    qhf8xq: "f10pi13n",
    Bbr2w1p: "f14a1fxs",
    Bduesf4: "f3e99gv",
    Bpq79vn: "fhljsf7",
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    Eqx8gd: ["f1a7op3", "f1cjjd47"],
    By385i5: "f1gboi2j",
    B1piin3: ["f1cjjd47", "f1a7op3"],
    Dlnsje: "ffyw7fx",
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    Bcgy8vk: "f14pi962",
    Bw17bha: "f1lh990p",
    B1q35kw: "f1jc6hxc",
    Gjdm7m: "f13evtba",
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o",
    Bercvud: "f1ibeo51"
  },
  listbox: {
    E5pizo: "f1hg901r",
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    Bxyxcbc: "fmmk62d"
  },
  listboxCollapsed: {
    mc9l5x: "fjseox"
  },
  button: {
    Bt984gj: "f122n59",
    De3pzq: "f1c21dwh",
    B4j52fo: "fre7gi1",
    Bekrc4i: ["f1358rze", "f1rvrf73"],
    Bn0qgzm: "fqdk4by",
    ibv6hh: ["f1rvrf73", "f1358rze"],
    B7ck84d: "f1ewtqcl",
    sj55zd: "f19n0e5",
    i8kkvl: "f14mj54c",
    Bceei9c: "f1k6fduh",
    mc9l5x: "f13qh94s",
    Bahqtrf: "fk6fouc",
    Budl1dq: "f12nh0o2",
    Brf1p80: "f1869bpl",
    fsow6f: ["f1o700av", "fes3tcz"],
    a9b677: "fly5x3f",
    Brovlpu: "ftqa4ok"
  },
  placeholder: {
    sj55zd: "fxc4j92"
  },
  small: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    z8tnut: "f1khb0e9",
    z189sj: ["fdw0yi8", "fk8j09s"],
    Byoj8tv: "f1jnq6q7",
    uwmqm3: ["f1xile11", "fqznh8f"]
  },
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    z8tnut: "f1sbtcvk",
    z189sj: ["f11gcy0p", "f1ng84yb"],
    Byoj8tv: "fdghr9",
    uwmqm3: ["f1e60jzv", "f135dnwl"]
  },
  large: {
    i8kkvl: "f1rjii52",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k",
    z8tnut: "f1a1bwwz",
    z189sj: ["fw5db7e", "f1uw59to"],
    Byoj8tv: "fy7v416",
    uwmqm3: ["fnphzt9", "flt1dlf"]
  },
  outline: {
    De3pzq: "fxugw4r",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1c1zstj",
    zhjwy3: ["f1lxtadh", "f1akhkt"]
  },
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "flmw63s",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fqhmt4z",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    Bn0qgzm: "f1vxd6vx",
    oivjwe: "fg706s2",
    B9xav0g: "f1c1zstj",
    Bbmb7ep: ["f1krrbdw", "f1deotkl"],
    Beyfa6y: ["f1deotkl", "f1krrbdw"],
    B7oj6ja: ["f10ostut", "f1ozlkrg"],
    Btl43ni: ["f1ozlkrg", "f10ostut"]
  },
  "filled-lighter": {
    De3pzq: "fxugw4r",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"]
  },
  "filled-darker": {
    De3pzq: "f16xq7d1",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"]
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  invalidUnderline: {
    hhx65j: "f1fgmyf4"
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  },
  disabledText: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr"
  }
}, {
  d: [".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f1ewtqcl{box-sizing:border-box;}", ".f14t3ns0{display:inline-block;}", ".f1exfvgq{min-width:250px;}", ".f10pi13n{position:relative;}", ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1a7op3::after{left:-1px;}", ".f1cjjd47::after{right:-1px;}", ".f1gboi2j::after{bottom:-1px;}", ".ffyw7fx::after{height:max(var(--strokeWidthThick), var(--borderRadiusMedium));}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f14pi962::after{border-bottom-width:var(--strokeWidthThick);}", ".f1lh990p::after{border-bottom-style:solid;}", ".f1jc6hxc::after{border-bottom-color:var(--colorCompoundBrandStroke);}", ".f13evtba::after{-webkit-clip-path:inset(calc(100% - 2px) 0 0 0);clip-path:inset(calc(100% - 2px) 0 0 0);}", ".f1yk9hq::after{-webkit-transform:scaleX(0);-moz-transform:scaleX(0);-ms-transform:scaleX(0);transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}", ".f1hg901r{box-shadow:var(--shadow16);}", ".fmmk62d{max-height:80vh;}", ".fjseox{display:none;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fre7gi1{border-top-width:0;}", ".f1358rze{border-right-width:0;}", ".f1rvrf73{border-left-width:0;}", ".fqdk4by{border-bottom-width:0;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f14mj54c{-webkit-column-gap:var(--spacingHorizontalXXS);column-gap:var(--spacingHorizontalXXS);}", ".f1k6fduh{cursor:pointer;}", ".f13qh94s{display:grid;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f12nh0o2{grid-template-columns:[content] 1fr [icon] auto [end];}", ".f1869bpl{-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;}", ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}", ".fly5x3f{width:100%;}", ".fxc4j92{color:var(--colorNeutralForeground4);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1khb0e9{padding-top:3px;}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".f1jnq6q7{padding-bottom:3px;}", ".f1xile11{padding-left:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".fqznh8f{padding-right:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1sbtcvk{padding-top:5px;}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}", ".fdghr9{padding-bottom:5px;}", ".f1e60jzv{padding-left:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f135dnwl{padding-right:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f1rjii52{-webkit-column-gap:var(--spacingHorizontalSNudge);column-gap:var(--spacingHorizontalSNudge);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1a1bwwz{padding-top:7px;}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".fy7v416{padding-bottom:7px;}", ".fnphzt9{padding-left:calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", ".flt1dlf{padding-right:calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".f1krrbdw{border-bottom-right-radius:0;}", ".f1deotkl{border-bottom-left-radius:0;}", ".f10ostut{border-top-right-radius:0;}", ".f1ozlkrg{border-top-left-radius:0;}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}"],
  w: [".f14a1fxs:focus-within{outline-width:2px;}", ".f3e99gv:focus-within{outline-style:solid;}", ".fhljsf7:focus-within{outline-color:transparent;}", ".fjw5xc1:focus-within::after{-webkit-transform:scaleX(1);-moz-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}", ".f1ibeo51:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rvyvqg{border-right-color:GrayText;}.f14g86mu{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".flmw63s:hover{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  a: [".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fqhmt4z:active{border-bottom-color:var(--colorNeutralStrokeAccessible);}"]
});
var useIconStyles5 = __styles2({
  icon: {
    B7ck84d: "f1ewtqcl",
    sj55zd: "fxkbij4",
    mc9l5x: "ftgm304",
    Be2twd7: "f1pp30po",
    Br312pm: "f12w6cgp",
    Bw0ie65: "f8bv1bt",
    Bo70h7d: "fvc9v3g"
  },
  small: {
    Be2twd7: "f4ybsrx",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  medium: {
    Be2twd7: "fe5j1ua",
    Frg6f3: ["f1h9en5y", "f1xk557c"]
  },
  large: {
    Be2twd7: "f1rt2boy",
    Frg6f3: ["f1t5qyk5", "f1ikr372"]
  },
  disabled: {
    sj55zd: "f1s2aq7o"
  }
}, {
  d: [".f1ewtqcl{box-sizing:border-box;}", ".fxkbij4{color:var(--colorNeutralStrokeAccessible);}", ".ftgm304{display:block;}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f12w6cgp{grid-column-start:icon;}", ".f8bv1bt{grid-column-end:end;}", ".fvc9v3g svg{display:block;}", ".f4ybsrx{font-size:16px;}", ".f1h9en5y{margin-left:var(--spacingHorizontalXXS);}", ".f1xk557c{margin-right:var(--spacingHorizontalXXS);}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".f1t5qyk5{margin-left:var(--spacingHorizontalSNudge);}", ".f1ikr372{margin-right:var(--spacingHorizontalSNudge);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}"]
});
var useDropdownStyles_unstable = (state) => {
  const {
    appearance,
    open,
    placeholderVisible,
    size: size2
  } = state;
  const invalid = `${state.button["aria-invalid"]}` === "true";
  const disabled = state.button.disabled;
  const styles = useStyles15();
  const iconStyles = useIconStyles5();
  state.root.className = mergeClasses(dropdownClassNames.root, styles.root, styles[appearance], !disabled && appearance === "outline" && styles.outlineInteractive, invalid && appearance !== "underline" && styles.invalid, invalid && appearance === "underline" && styles.invalidUnderline, disabled && styles.disabled, state.root.className);
  state.button.className = mergeClasses(dropdownClassNames.button, styles.button, styles[size2], placeholderVisible && styles.placeholder, disabled && styles.disabledText, state.button.className);
  if (state.listbox) {
    state.listbox.className = mergeClasses(dropdownClassNames.listbox, styles.listbox, !open && styles.listboxCollapsed, state.listbox.className);
  }
  if (state.expandIcon) {
    state.expandIcon.className = mergeClasses(dropdownClassNames.expandIcon, iconStyles.icon, iconStyles[size2], disabled && iconStyles.disabled, state.expandIcon.className);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/Dropdown/Dropdown.js
var Dropdown = React151.forwardRef((props, ref) => {
  const state = useDropdown_unstable(props, ref);
  const contextValues = useComboboxContextValues(state);
  useDropdownStyles_unstable(state);
  const {
    useDropdownStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDropdown_unstable(state, contextValues);
});
Dropdown.displayName = "Dropdown";

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/OptionGroup.js
var React154 = __toESM(require_react());

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/useOptionGroup.js
var React152 = __toESM(require_react());
var useOptionGroup_unstable = (props, ref) => {
  const labelId = useId2("group-label");
  const {
    label
  } = props;
  return {
    components: {
      root: "div",
      label: "span"
    },
    root: getNativeElementProps("div", {
      ref,
      role: "group",
      "aria-labelledby": label ? labelId : void 0,
      ...props
    }),
    label: resolveShorthand(label, {
      defaultProps: {
        id: labelId,
        role: "presentation"
      }
    })
  };
};

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/renderOptionGroup.js
var React153 = __toESM(require_react());
var renderOptionGroup_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React153.createElement(slots.root, slotProps.root, slots.label && React153.createElement(slots.label, slotProps.label, slotProps.label.children), slotProps.root.children);
};

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/useOptionGroupStyles.js
var optionGroupClassNames = {
  root: "fui-OptionGroup",
  label: "fui-OptionGroup__label"
};
var useStyles16 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    Belr9w4: "fiut8dr",
    B8lkq7l: "f1xxzjds",
    Gwp8xu: "fu19d3i",
    H93o2g: "flylvvz",
    eii1in: "f1ug5m11",
    om0q45: "f5642y",
    Hl9o3s: "ffdf81h",
    Bi9x0x4: "flgyru6",
    B0i58d9: ["f1fjgumo", "f1sgo0dv"],
    sl1c2c: "fwsdxdw",
    z4hxbw: ["f1sgo0dv", "f1fjgumo"]
  },
  label: {
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    sj55zd: "f11d4kpn",
    mc9l5x: "ftgm304",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fwrc4pm",
    z8tnut: "f17mpqex",
    z189sj: ["fdw0yi8", "fk8j09s"],
    Byoj8tv: "fdvome7",
    uwmqm3: ["fk8j09s", "fdw0yi8"]
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".fiut8dr{row-gap:var(--spacingHorizontalXXS);}", '.f1xxzjds:not(:last-child)::after{content:"";}', ".fu19d3i:not(:last-child)::after{border-bottom-width:var(--strokeWidthThin);}", ".flylvvz:not(:last-child)::after{border-bottom-style:solid;}", ".f1ug5m11:not(:last-child)::after{border-bottom-color:var(--colorNeutralStroke2);}", ".f5642y:not(:last-child)::after{display:block;}", ".ffdf81h:not(:last-child)::after{padding-bottom:var(--spacingHorizontalXS);}", ".flgyru6:not(:last-child)::after{margin-top:0;}", ".f1fjgumo:not(:last-child)::after{margin-right:calc(var(--spacingHorizontalXS) * -1);}", ".f1sgo0dv:not(:last-child)::after{margin-left:calc(var(--spacingHorizontalXS) * -1);}", ".fwsdxdw:not(:last-child)::after{margin-bottom:var(--spacingVerticalXS);}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".ftgm304{display:block;}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f17mpqex{padding-top:var(--spacingHorizontalS);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".fdvome7{padding-bottom:var(--spacingHorizontalS);}"]
});
var useOptionGroupStyles_unstable = (state) => {
  const styles = useStyles16();
  state.root.className = mergeClasses(optionGroupClassNames.root, styles.root, state.root.className);
  if (state.label) {
    state.label.className = mergeClasses(optionGroupClassNames.label, styles.label, state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-combobox/lib/components/OptionGroup/OptionGroup.js
var OptionGroup = React154.forwardRef((props, ref) => {
  const state = useOptionGroup_unstable(props, ref);
  useOptionGroupStyles_unstable(state);
  const {
    useOptionGroupStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderOptionGroup_unstable(state);
});
OptionGroup.displayName = "OptionGroup";

// node_modules/@fluentui/react-combobox/lib/components/ComboboxField/ComboboxField.js
var comboboxFieldClassNames = getDeprecatedFieldClassNames(comboboxClassNames.root);
var ComboboxField = makeDeprecatedField(Combobox);

// node_modules/@fluentui/react-divider/lib/components/Divider/Divider.js
var React157 = __toESM(require_react());

// node_modules/@fluentui/react-divider/lib/components/Divider/renderDivider.js
var React155 = __toESM(require_react());
var renderDivider_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React155.createElement(slots.root, slotProps.root, slotProps.root.children !== void 0 && React155.createElement(slots.wrapper, slotProps.wrapper, slotProps.root.children));
};

// node_modules/@fluentui/react-divider/lib/components/Divider/useDivider.js
var React156 = __toESM(require_react());
var useDivider_unstable = (props, ref) => {
  const {
    alignContent = "center",
    appearance = "default",
    inset = false,
    vertical = false,
    wrapper
  } = props;
  const dividerId = useId2("divider-");
  return {
    // Props passed at the top-level
    alignContent,
    appearance,
    inset,
    vertical,
    // Slots definition
    components: {
      root: "div",
      wrapper: "div"
    },
    root: getNativeElementProps("div", {
      role: "separator",
      "aria-orientation": vertical ? "vertical" : "horizontal",
      "aria-labelledby": props.children ? dividerId : void 0,
      ...props,
      ref
    }),
    wrapper: resolveShorthand(wrapper, {
      required: true,
      defaultProps: {
        id: dividerId,
        children: props.children
      }
    })
  };
};

// node_modules/@fluentui/react-divider/lib/components/Divider/useDividerStyles.js
var dividerClassNames = {
  root: "fui-Divider",
  wrapper: "fui-Divider__wrapper"
};
var useBaseStyles = __styles2({
  base: {
    Bt984gj: "f122n59",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    Bh6795r: "fqerorx",
    qhf8xq: "f10pi13n",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    fsow6f: "f17mccla",
    Bcvre1j: "fyl8oag",
    Br0sdwz: "f16vkdww",
    Bn78ew0: "fhsnbul",
    li1rpt: "f1gw3sf2",
    ap17g6: "f1ly5f7u",
    B771hl4: "f1s3tz6t"
  },
  childless: {
    susq4k: "f1kyqvp9",
    Bicfajf: ["fzynn9s", "f1z0ukd1"],
    jwcpgy: ["fekrn8e", "ftdg338"],
    B4rk6o: "fesgyo"
  },
  start: {
    Bsft5z2: "f13zj6fq"
  },
  center: {
    Ftih45: "f1wl9k8s",
    Bsft5z2: "f13zj6fq"
  },
  end: {
    Ftih45: "f1wl9k8s"
  },
  brand: {
    sj55zd: "f16muhyy",
    Bq4z7u6: "fcbuu2a",
    Bk5zm6e: ["f1wdw2dr", "f1ttio3w"],
    Bqjgrrk: "f1582fpk",
    Bm6vgfq: ["f1ttio3w", "f1wdw2dr"],
    B0n5ga8: "f1ahrvm8",
    s924m2: ["f1cd3wbc", "f17hbk9y"],
    B1q35kw: "fvrapl0",
    Gp14am: ["f17hbk9y", "f1cd3wbc"]
  },
  "default": {
    sj55zd: "fkfq4zb",
    Bq4z7u6: "f1vccso1",
    Bk5zm6e: ["f1geml7w", "fjml6kk"],
    Bqjgrrk: "f1r7kh1m",
    Bm6vgfq: ["fjml6kk", "f1geml7w"],
    B0n5ga8: "f16j7guv",
    s924m2: ["fx01ahm", "fj1a37q"],
    B1q35kw: "fl8d8yv",
    Gp14am: ["fj1a37q", "fx01ahm"]
  },
  subtle: {
    sj55zd: "fkfq4zb",
    Bq4z7u6: "f5g06un",
    Bk5zm6e: ["f13sxdku", "f1n015lb"],
    Bqjgrrk: "f1x6bl8t",
    Bm6vgfq: ["f1n015lb", "f13sxdku"],
    B0n5ga8: "fvod1wy",
    s924m2: ["fwslg65", "flk0e17"],
    B1q35kw: "f103fvts",
    Gp14am: ["flk0e17", "fwslg65"]
  },
  strong: {
    sj55zd: "fkfq4zb",
    Bq4z7u6: "f10tv6oz",
    Bk5zm6e: ["f16xp3sf", "f1seuxxq"],
    Bqjgrrk: "fwrmqbx",
    Bm6vgfq: ["f1seuxxq", "f16xp3sf"],
    B0n5ga8: "ft83z1f",
    s924m2: ["f1g4150c", "f192dr6e"],
    B1q35kw: "f1qnawh6",
    Gp14am: ["f192dr6e", "f1g4150c"]
  }
}, {
  d: [".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f1ewtqcl{box-sizing:border-box;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f1063pyq{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f10pi13n{position:relative;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f17mccla{text-align:center;}", ".fyl8oag::before{box-sizing:border-box;}", ".f16vkdww::before{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".fhsnbul::before{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1gw3sf2::after{box-sizing:border-box;}", ".f1ly5f7u::after{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f1s3tz6t::after{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1kyqvp9::before{margin-bottom:0;}", ".fzynn9s::before{margin-right:0;}", ".f1z0ukd1::before{margin-left:0;}", ".fekrn8e::after{margin-left:0;}", ".ftdg338::after{margin-right:0;}", ".fesgyo::after{margin-top:0;}", '.f13zj6fq::after{content:"";}', '.f1wl9k8s::before{content:"";}', ".f16muhyy{color:var(--colorBrandForeground1);}", ".fcbuu2a::before{border-top-color:var(--colorBrandStroke1);}", ".f1wdw2dr::before{border-right-color:var(--colorBrandStroke1);}", ".f1ttio3w::before{border-left-color:var(--colorBrandStroke1);}", ".f1582fpk::before{border-bottom-color:var(--colorBrandStroke1);}", ".f1ahrvm8::after{border-top-color:var(--colorBrandStroke1);}", ".f1cd3wbc::after{border-right-color:var(--colorBrandStroke1);}", ".f17hbk9y::after{border-left-color:var(--colorBrandStroke1);}", ".fvrapl0::after{border-bottom-color:var(--colorBrandStroke1);}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".f1vccso1::before{border-top-color:var(--colorNeutralStroke2);}", ".f1geml7w::before{border-right-color:var(--colorNeutralStroke2);}", ".fjml6kk::before{border-left-color:var(--colorNeutralStroke2);}", ".f1r7kh1m::before{border-bottom-color:var(--colorNeutralStroke2);}", ".f16j7guv::after{border-top-color:var(--colorNeutralStroke2);}", ".fx01ahm::after{border-right-color:var(--colorNeutralStroke2);}", ".fj1a37q::after{border-left-color:var(--colorNeutralStroke2);}", ".fl8d8yv::after{border-bottom-color:var(--colorNeutralStroke2);}", ".f5g06un::before{border-top-color:var(--colorNeutralStroke3);}", ".f13sxdku::before{border-right-color:var(--colorNeutralStroke3);}", ".f1n015lb::before{border-left-color:var(--colorNeutralStroke3);}", ".f1x6bl8t::before{border-bottom-color:var(--colorNeutralStroke3);}", ".fvod1wy::after{border-top-color:var(--colorNeutralStroke3);}", ".fwslg65::after{border-right-color:var(--colorNeutralStroke3);}", ".flk0e17::after{border-left-color:var(--colorNeutralStroke3);}", ".f103fvts::after{border-bottom-color:var(--colorNeutralStroke3);}", ".f10tv6oz::before{border-top-color:var(--colorNeutralStroke1);}", ".f16xp3sf::before{border-right-color:var(--colorNeutralStroke1);}", ".f1seuxxq::before{border-left-color:var(--colorNeutralStroke1);}", ".fwrmqbx::before{border-bottom-color:var(--colorNeutralStroke1);}", ".ft83z1f::after{border-top-color:var(--colorNeutralStroke1);}", ".f1g4150c::after{border-right-color:var(--colorNeutralStroke1);}", ".f192dr6e::after{border-left-color:var(--colorNeutralStroke1);}", ".f1qnawh6::after{border-bottom-color:var(--colorNeutralStroke1);}"]
});
var useHorizontalStyles = __styles2({
  base: {
    a9b677: "fly5x3f",
    Bdkvgpv: "f163fonl",
    B0qfbqy: "f51yk4v",
    pbipgd: "f13rof3u",
    Bm2nyyq: "f8rth92",
    xrcqlc: "f6czdpx",
    i5u598: "f1iyka9k"
  },
  inset: {
    uwmqm3: ["fjlbh76", "f11qrl6u"],
    z189sj: ["f11qrl6u", "fjlbh76"]
  },
  start: {
    Ftih45: "f1wl9k8s",
    Bicfajf: ["f1ojjlep", "fk1kexq"],
    Bxwl2t9: "f1he2m4d",
    jwcpgy: ["f12w1bnb", "f1558wlj"]
  },
  center: {
    Bicfajf: ["f1ojjlep", "fk1kexq"],
    jwcpgy: ["f12w1bnb", "f1558wlj"]
  },
  end: {
    Bicfajf: ["f1ojjlep", "fk1kexq"],
    Bsft5z2: "f13zj6fq",
    jwcpgy: ["f12w1bnb", "f1558wlj"],
    Iy66sp: "f1ayce8x"
  }
}, {
  d: [".fly5x3f{width:100%;}", ".f163fonl::before{border-top-style:solid;}", ".f51yk4v::before{border-top-width:var(--strokeWidthThin);}", ".f13rof3u::before{min-width:8px;}", ".f8rth92::after{border-top-style:solid;}", ".f6czdpx::after{border-top-width:var(--strokeWidthThin);}", ".f1iyka9k::after{min-width:8px;}", ".fjlbh76{padding-left:12px;}", ".f11qrl6u{padding-right:12px;}", '.f1wl9k8s::before{content:"";}', ".f1ojjlep::before{margin-right:12px;}", ".fk1kexq::before{margin-left:12px;}", ".f1he2m4d::before{max-width:8px;}", ".f12w1bnb::after{margin-left:12px;}", ".f1558wlj::after{margin-right:12px;}", '.f13zj6fq::after{content:"";}', ".f1ayce8x::after{max-width:8px;}"]
});
var useVerticalStyles = __styles2({
  base: {
    Beiy3e4: "f1vx9l62",
    sshi5w: "f16gbxbe",
    m598lv: ["f1yq6w5o", "f1jpmc5p"],
    B4f6apu: ["f9sc749", "f1x8pvcy"],
    zkzzav: "fhkwbjy",
    Barhvk9: ["flthirb", "ftkbnf5"],
    Ihftqj: ["f13hvwk3", "f1en4csx"],
    Bde111x: "f19onpk6"
  },
  inset: {
    B6of3ja: "f1xdg43u",
    jrapky: "f1jlhsmd"
  },
  withChildren: {
    sshi5w: "f1tjaq3g"
  },
  start: {
    Ftih45: "f1wl9k8s",
    susq4k: "fg2pwug",
    Bbdr6tz: "fkjtzyi",
    B4rk6o: "f8vk40g"
  },
  center: {
    susq4k: "fg2pwug",
    B4rk6o: "f8vk40g"
  },
  end: {
    susq4k: "fg2pwug",
    Bsft5z2: "f13zj6fq",
    B4rk6o: "f8vk40g",
    gn64ia: "fqg5mu5"
  }
}, {
  d: [".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".f16gbxbe{min-height:20px;}", ".f1yq6w5o::before{border-right-style:solid;}", ".f1jpmc5p::before{border-left-style:solid;}", ".f9sc749::before{border-right-width:var(--strokeWidthThin);}", ".f1x8pvcy::before{border-left-width:var(--strokeWidthThin);}", ".fhkwbjy::before{min-height:8px;}", ".flthirb::after{border-right-style:solid;}", ".ftkbnf5::after{border-left-style:solid;}", ".f13hvwk3::after{border-right-width:var(--strokeWidthThin);}", ".f1en4csx::after{border-left-width:var(--strokeWidthThin);}", ".f19onpk6::after{min-height:8px;}", ".f1xdg43u{margin-top:12px;}", ".f1jlhsmd{margin-bottom:12px;}", ".f1tjaq3g{min-height:84px;}", '.f1wl9k8s::before{content:"";}', ".fg2pwug::before{margin-bottom:12px;}", ".fkjtzyi::before{max-height:8px;}", ".f8vk40g::after{margin-top:12px;}", '.f13zj6fq::after{content:"";}', ".fqg5mu5::after{max-height:8px;}"]
});
var useDividerStyles_unstable = (state) => {
  const baseStyles = useBaseStyles();
  const horizontalStyles = useHorizontalStyles();
  const verticalStyles = useVerticalStyles();
  const {
    alignContent,
    appearance,
    inset,
    vertical
  } = state;
  state.root.className = mergeClasses(
    dividerClassNames.root,
    // Base styles
    baseStyles.base,
    baseStyles[alignContent],
    appearance && baseStyles[appearance],
    // Horizontal styles
    !vertical && horizontalStyles.base,
    !vertical && inset && horizontalStyles.inset,
    !vertical && horizontalStyles[alignContent],
    // Vertical styles
    vertical && verticalStyles.base,
    vertical && inset && verticalStyles.inset,
    vertical && verticalStyles[alignContent],
    vertical && state.root.children !== void 0 && verticalStyles.withChildren,
    // Childless styles
    state.root.children === void 0 && baseStyles.childless,
    // User provided class name
    state.root.className
  );
  if (state.wrapper) {
    state.wrapper.className = mergeClasses(dividerClassNames.wrapper, state.wrapper.className);
  }
  return state;
};

// node_modules/@fluentui/react-divider/lib/components/Divider/Divider.js
var Divider = React157.forwardRef((props, ref) => {
  const state = useDivider_unstable(props, ref);
  useDividerStyles_unstable(state);
  const {
    useDividerStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDivider_unstable(state);
});
Divider.displayName = "Divider";

// node_modules/@fluentui/react-input/lib/components/Input/Input.js
var React160 = __toESM(require_react());

// node_modules/@fluentui/react-input/lib/components/Input/useInput.js
var React158 = __toESM(require_react());
var useInput_unstable = (props, ref) => {
  const overrides = useOverrides();
  var _overrides_inputDefaultAppearance;
  const {
    size: size2 = "medium",
    appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : "outline",
    onChange
  } = props;
  if (appearance === "filled-darker-shadow" || appearance === "filled-lighter-shadow") {
    console.error("The 'filled-darker-shadow' and 'filled-lighter-shadow' appearances are deprecated and will be removed in the future.");
  }
  const [value, setValue] = useControllableState({
    state: props.value,
    defaultState: props.defaultValue,
    initialState: ""
  });
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: ["size", "onChange", "value", "defaultValue"]
  });
  const state = {
    size: size2,
    appearance,
    components: {
      root: "span",
      input: "input",
      contentBefore: "span",
      contentAfter: "span"
    },
    input: resolveShorthand(props.input, {
      required: true,
      defaultProps: {
        type: "text",
        ref,
        ...nativeProps.primary
      }
    }),
    contentAfter: resolveShorthand(props.contentAfter),
    contentBefore: resolveShorthand(props.contentBefore),
    root: resolveShorthand(props.root, {
      required: true,
      defaultProps: nativeProps.root
    })
  };
  state.input.value = value;
  state.input.onChange = useEventCallback((ev) => {
    const newValue = ev.target.value;
    onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
      value: newValue
    });
    setValue(newValue);
  });
  return state;
};

// node_modules/@fluentui/react-input/lib/components/Input/renderInput.js
var React159 = __toESM(require_react());
var renderInput_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React159.createElement(slots.root, slotProps.root, slots.contentBefore && React159.createElement(slots.contentBefore, slotProps.contentBefore), React159.createElement(slots.input, slotProps.input), slots.contentAfter && React159.createElement(slots.contentAfter, slotProps.contentAfter));
};

// node_modules/@fluentui/react-input/lib/components/Input/useInputStyles.js
var inputClassNames = {
  root: "fui-Input",
  input: "fui-Input__input",
  contentBefore: "fui-Input__contentBefore",
  contentAfter: "fui-Input__contentAfter"
};
var useRootClassName4 = __resetStyles("r1jtohuq", "rl1z2p5", [".r1jtohuq{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;gap:var(--spacingHorizontalXXS);border-radius:var(--borderRadiusMedium);position:relative;box-sizing:border-box;min-height:32px;padding:0 var(--spacingHorizontalMNudge);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);background-color:var(--colorNeutralBackground1);border:1px solid var(--colorNeutralStroke1);border-bottom-color:var(--colorNeutralStrokeAccessible);}", '.r1jtohuq::after{box-sizing:border-box;content:"";position:absolute;left:-1px;bottom:-1px;right:-1px;height:max(2px, var(--borderRadiusMedium));border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-bottom:2px solid var(--colorCompoundBrandStroke);-webkit-clip-path:inset(calc(100% - 2px) 0 0 0);clip-path:inset(calc(100% - 2px) 0 0 0);-webkit-transform:scaleX(0);-moz-transform:scaleX(0);-ms-transform:scaleX(0);transform:scaleX(0);transition-property:transform;transition-duration:var(--durationUltraFast);transition-delay:var(--curveAccelerateMid);}', "@media screen and (prefers-reduced-motion: reduce){.r1jtohuq::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", ".r1jtohuq:focus-within::after{-webkit-transform:scaleX(1);-moz-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1);transition-property:transform;transition-duration:var(--durationNormal);transition-delay:var(--curveDecelerateMid);}", "@media screen and (prefers-reduced-motion: reduce){.r1jtohuq:focus-within::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", ".r1jtohuq:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".r1jtohuq:focus-within{outline:2px solid transparent;}", ".rl1z2p5{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;gap:var(--spacingHorizontalXXS);border-radius:var(--borderRadiusMedium);position:relative;box-sizing:border-box;min-height:32px;padding:0 var(--spacingHorizontalMNudge);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);background-color:var(--colorNeutralBackground1);border:1px solid var(--colorNeutralStroke1);border-bottom-color:var(--colorNeutralStrokeAccessible);}", '.rl1z2p5::after{box-sizing:border-box;content:"";position:absolute;right:-1px;bottom:-1px;left:-1px;height:max(2px, var(--borderRadiusMedium));border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-bottom:2px solid var(--colorCompoundBrandStroke);-webkit-clip-path:inset(calc(100% - 2px) 0 0 0);clip-path:inset(calc(100% - 2px) 0 0 0);-webkit-transform:scaleX(0);-moz-transform:scaleX(0);-ms-transform:scaleX(0);transform:scaleX(0);transition-property:transform;transition-duration:var(--durationUltraFast);transition-delay:var(--curveAccelerateMid);}', "@media screen and (prefers-reduced-motion: reduce){.rl1z2p5::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", ".rl1z2p5:focus-within::after{-webkit-transform:scaleX(1);-moz-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1);transition-property:transform;transition-duration:var(--durationNormal);transition-delay:var(--curveDecelerateMid);}", "@media screen and (prefers-reduced-motion: reduce){.rl1z2p5:focus-within::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", ".rl1z2p5:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".rl1z2p5:focus-within{outline:2px solid transparent;}"]);
var useRootStyles8 = __styles2({
  small: {
    sshi5w: "f1pha7fy",
    uwmqm3: ["fk8j09s", "fdw0yi8"],
    z189sj: ["fdw0yi8", "fk8j09s"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  medium: {},
  large: {
    sshi5w: "f1w5jphr",
    uwmqm3: ["f1uw59to", "fw5db7e"],
    z189sj: ["fw5db7e", "f1uw59to"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k",
    i8kkvl: "f1rjii52",
    Belr9w4: "f1r7g2jn"
  },
  outline: {},
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "f1l4zc64",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    Drbcw7: "f8vnjqi",
    udz0bu: ["fz1etlk", "f1hc16gm"],
    Be8ivqh: "f1klwx88",
    ofdepl: ["f1hc16gm", "fz1etlk"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    Bbmb7ep: ["f1krrbdw", "f1deotkl"],
    Beyfa6y: ["f1deotkl", "f1krrbdw"],
    B7oj6ja: ["f10ostut", "f1ozlkrg"],
    Btl43ni: ["f1ozlkrg", "f10ostut"],
    icvyot: "f1ern45e",
    vrafjx: ["f1n71otn", "f1deefiw"],
    wvpqe5: ["f1deefiw", "f1n71otn"],
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    B1piin3: ["f15yvnhg", "f1n6gb5g"]
  },
  underlineInteractive: {
    oetu4i: "f1l4zc64",
    Be8ivqh: "f1klwx88",
    B3778ie: ["f1nf3wye", "feulmo5"],
    d9w3h3: ["feulmo5", "f1nf3wye"],
    Bl18szs: ["f18vqdqu", "f53nyzz"],
    B4j8arr: ["f53nyzz", "f18vqdqu"]
  },
  filled: {
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"]
  },
  filledInteractive: {
    q7v0qe: "ftmjh5b",
    kmh5ft: ["f17blpuu", "fsrcdbj"],
    nagaa4: "f1tpwn32",
    B1yhkcb: ["fsrcdbj", "f17blpuu"]
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  "filled-darker": {
    De3pzq: "f16xq7d1"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r"
  },
  "filled-darker-shadow": {
    De3pzq: "f16xq7d1",
    E5pizo: "fyed02w"
  },
  "filled-lighter-shadow": {
    De3pzq: "fxugw4r",
    E5pizo: "fyed02w"
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"],
    Bsft5z2: "fhr9occ",
    Bduesf4: "f99w1ws"
  }
}, {
  d: [".f1pha7fy{min-height:24px;}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1w5jphr{min-height:40px;}", ".f1uw59to{padding-left:var(--spacingHorizontalM);}", ".fw5db7e{padding-right:var(--spacingHorizontalM);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1rjii52{-webkit-column-gap:var(--spacingHorizontalSNudge);column-gap:var(--spacingHorizontalSNudge);}", ".f1r7g2jn{row-gap:var(--spacingHorizontalSNudge);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1krrbdw{border-bottom-right-radius:0;}", ".f1deotkl{border-bottom-left-radius:0;}", ".f10ostut{border-top-right-radius:0;}", ".f1ozlkrg{border-top-left-radius:0;}", ".f1ern45e{border-top-style:none;}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1n6gb5g::after{left:0;}", ".f15yvnhg::after{right:0;}", ".f1nf3wye::after{border-bottom-right-radius:0;}", ".feulmo5::after{border-bottom-left-radius:0;}", ".f18vqdqu::after{border-top-right-radius:0;}", ".f53nyzz::after{border-top-left-radius:0;}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}", ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".fyed02w{box-shadow:var(--shadow2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".fhr9occ::after{content:unset;}"],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".f1l4zc64:hover{border-bottom-color:var(--colorNeutralStrokeAccessibleHover);}", ".ftmjh5b:hover,.ftmjh5b:focus-within{border-top-color:var(--colorTransparentStrokeInteractive);}", ".f17blpuu:hover,.f17blpuu:focus-within{border-right-color:var(--colorTransparentStrokeInteractive);}", ".fsrcdbj:hover,.fsrcdbj:focus-within{border-left-color:var(--colorTransparentStrokeInteractive);}", ".f1tpwn32:hover,.f1tpwn32:focus-within{border-bottom-color:var(--colorTransparentStrokeInteractive);}"],
  a: [".f8vnjqi:active,.f8vnjqi:focus-within{border-top-color:var(--colorNeutralStroke1Pressed);}", ".fz1etlk:active,.fz1etlk:focus-within{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f1hc16gm:active,.f1hc16gm:focus-within{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f1klwx88:active,.f1klwx88:focus-within{border-bottom-color:var(--colorNeutralStrokeAccessiblePressed);}"],
  m: [["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rvyvqg{border-right-color:GrayText;}.f14g86mu{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  w: [".f99w1ws:focus-within{outline-style:none;}"]
});
var useInputClassName = __resetStyles("rvp2gzh", null, [".rvp2gzh{box-sizing:border-box;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;min-width:0;border-style:none;padding:0 var(--spacingHorizontalXXS);color:var(--colorNeutralForeground1);background-color:transparent;outline-style:none;font-family:inherit;font-size:inherit;font-weight:inherit;line-height:inherit;}", ".rvp2gzh::-webkit-input-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".rvp2gzh::-moz-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".rvp2gzh:-ms-input-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".rvp2gzh::placeholder{color:var(--colorNeutralForeground4);opacity:1;}"]);
var useInputElementStyles = __styles2({
  large: {
    uwmqm3: ["fk8j09s", "fdw0yi8"],
    z189sj: ["fdw0yi8", "fk8j09s"]
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    De3pzq: "f1c21dwh",
    Bceei9c: "fdrzuqr",
    yvdlaj: "fahhnxm"
  }
}, {
  d: [".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fdrzuqr{cursor:not-allowed;}", ".fahhnxm::-webkit-input-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".fahhnxm::-moz-placeholder{color:var(--colorNeutralForegroundDisabled);}"]
});
var useContentClassName = __resetStyles("r1572tok", null, [".r1572tok{box-sizing:border-box;color:var(--colorNeutralForeground3);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".r1572tok>svg{font-size:20px;}"]);
var useContentStyles2 = __styles2({
  disabled: {
    sj55zd: "f1s2aq7o"
  },
  small: {
    kwki1k: "f3u2cy0"
  },
  medium: {},
  large: {
    kwki1k: "fa420co"
  }
}, {
  d: [".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f3u2cy0>svg{font-size:16px;}", ".fa420co>svg{font-size:24px;}"]
});
var useInputStyles_unstable = (state) => {
  const {
    size: size2,
    appearance
  } = state;
  const disabled = state.input.disabled;
  const invalid = `${state.input["aria-invalid"]}` === "true";
  const filled = appearance.startsWith("filled");
  const rootStyles = useRootStyles8();
  const inputStyles = useInputElementStyles();
  const contentStyles = useContentStyles2();
  state.root.className = mergeClasses(inputClassNames.root, useRootClassName4(), rootStyles[size2], rootStyles[appearance], !disabled && appearance === "outline" && rootStyles.outlineInteractive, !disabled && appearance === "underline" && rootStyles.underlineInteractive, !disabled && filled && rootStyles.filledInteractive, filled && rootStyles.filled, !disabled && invalid && rootStyles.invalid, disabled && rootStyles.disabled, state.root.className);
  state.input.className = mergeClasses(inputClassNames.input, useInputClassName(), size2 === "large" && inputStyles.large, disabled && inputStyles.disabled, state.input.className);
  const contentClasses = [useContentClassName(), disabled && contentStyles.disabled, contentStyles[size2]];
  if (state.contentBefore) {
    state.contentBefore.className = mergeClasses(inputClassNames.contentBefore, ...contentClasses, state.contentBefore.className);
  }
  if (state.contentAfter) {
    state.contentAfter.className = mergeClasses(inputClassNames.contentAfter, ...contentClasses, state.contentAfter.className);
  }
  return state;
};

// node_modules/@fluentui/react-input/lib/components/Input/Input.js
var Input = React160.forwardRef((props, ref) => {
  const state = useInput_unstable(props, ref);
  useInputStyles_unstable(state);
  const {
    useInputStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderInput_unstable(state);
});
Input.displayName = "Input";

// node_modules/@fluentui/react-input/lib/components/Input/Input.types.js
var React161 = __toESM(require_react());

// node_modules/@fluentui/react-input/lib/components/InputField/InputField.js
var inputFieldClassNames = getDeprecatedFieldClassNames(inputClassNames.root);
var InputField = makeDeprecatedField(Input);

// node_modules/@fluentui/react-image/lib/components/Image/Image.js
var React164 = __toESM(require_react());

// node_modules/@fluentui/react-image/lib/components/Image/renderImage.js
var React162 = __toESM(require_react());
var renderImage_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React162.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-image/lib/components/Image/useImage.js
var React163 = __toESM(require_react());
var useImage_unstable = (props, ref) => {
  const {
    bordered = false,
    fit = "default",
    block = false,
    shape = "square",
    shadow = false
  } = props;
  const state = {
    bordered,
    fit,
    block,
    shape,
    shadow,
    components: {
      root: "img"
    },
    root: getNativeElementProps("img", {
      ref,
      ...props
    })
  };
  return state;
};

// node_modules/@fluentui/react-image/lib/components/Image/useImageStyles.js
var imageClassNames = {
  root: "fui-Image"
};
var useStyles17 = __styles2({
  base: {
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1aperda",
    zhjwy3: ["f1lxtadh", "f1akhkt"],
    Bbmb7ep: ["fzi6hpg", "fyowgf4"],
    Beyfa6y: ["fyowgf4", "fzi6hpg"],
    B7oj6ja: ["f3fg2lr", "f13av6d4"],
    Btl43ni: ["f13av6d4", "f3fg2lr"],
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f14t3ns0"
  },
  bordered: {
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"]
  },
  circular: {
    Bbmb7ep: ["f8fbkgy", "f1nfllo7"],
    Beyfa6y: ["f1nfllo7", "f8fbkgy"],
    B7oj6ja: ["f1djnp8u", "f1s8kh49"],
    Btl43ni: ["f1s8kh49", "f1djnp8u"]
  },
  rounded: {
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"]
  },
  square: {},
  shadow: {
    E5pizo: "f1whvlc6"
  },
  center: {
    st4lth: "f1plgu50",
    Ermj5k: "f14xojzb",
    Bqenvij: "f1l02sjl",
    a9b677: "fly5x3f"
  },
  contain: {
    st4lth: "f1kle4es",
    Ermj5k: "f14xojzb",
    Bqenvij: "f1l02sjl",
    a9b677: "fly5x3f"
  },
  "default": {},
  cover: {
    st4lth: "f1ps3kmd",
    Ermj5k: "f14xojzb",
    Bqenvij: "f1l02sjl",
    a9b677: "fly5x3f"
  },
  none: {
    st4lth: "f1plgu50",
    Ermj5k: ["f13uwng7", "fjmyj0p"],
    Bqenvij: "f1l02sjl",
    a9b677: "fly5x3f"
  },
  block: {
    a9b677: "fly5x3f"
  }
}, {
  d: [".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1aperda{border-bottom-color:var(--colorNeutralStroke1);}", ".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}", ".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}", ".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}", ".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}", ".f1ewtqcl{box-sizing:border-box;}", ".f14t3ns0{display:inline-block;}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}", ".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f1whvlc6{box-shadow:var(--shadow4);}", ".f1plgu50{object-fit:none;}", ".f14xojzb{object-position:center;}", ".f1l02sjl{height:100%;}", ".fly5x3f{width:100%;}", ".f1kle4es{object-fit:contain;}", ".f1ps3kmd{object-fit:cover;}", ".f13uwng7{object-position:left top;}", ".fjmyj0p{object-position:right top;}"]
});
var useImageStyles_unstable = (state) => {
  const styles = useStyles17();
  state.root.className = mergeClasses(imageClassNames.root, styles.base, state.block && styles.block, state.bordered && styles.bordered, state.shadow && styles.shadow, styles[state.fit], styles[state.shape], state.root.className);
};

// node_modules/@fluentui/react-image/lib/components/Image/Image.js
var Image = React164.forwardRef((props, ref) => {
  const state = useImage_unstable(props, ref);
  useImageStyles_unstable(state);
  const {
    useImageStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderImage_unstable(state);
});
Image.displayName = "Image";

// node_modules/@fluentui/react-link/lib/components/Link/Link.js
var React168 = __toESM(require_react());

// node_modules/@fluentui/react-link/lib/components/Link/useLink.js
var React166 = __toESM(require_react());

// node_modules/@fluentui/react-link/lib/components/Link/useLinkState.js
var React165 = __toESM(require_react());
var useLinkState_unstable = (state) => {
  const {
    disabled,
    disabledFocusable
  } = state;
  const {
    onClick,
    onKeyDown,
    role,
    tabIndex,
    type
  } = state.root;
  if (state.root.as === "a") {
    state.root.href = disabled ? void 0 : state.root.href;
    state.root.tabIndex = tabIndex !== null && tabIndex !== void 0 ? tabIndex : disabled && !disabledFocusable ? void 0 : 0;
    if (disabled || disabledFocusable) {
      state.root.role = role || "link";
    }
  } else {
    state.root.type = type || "button";
  }
  state.root.onClick = (ev) => {
    if (disabled || disabledFocusable) {
      ev.preventDefault();
    } else {
      onClick === null || onClick === void 0 ? void 0 : onClick(ev);
    }
  };
  state.root.onKeyDown = (ev) => {
    if ((disabled || disabledFocusable) && (ev.key === Enter || ev.key === Space)) {
      ev.preventDefault();
      ev.stopPropagation();
    } else {
      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(ev);
    }
  };
  state.disabled = disabled || disabledFocusable;
  state.root["aria-disabled"] = disabled || disabledFocusable || void 0;
  if (state.root.as === "button") {
    state.root.disabled = disabled && !disabledFocusable;
  }
  return state;
};

// node_modules/@fluentui/react-link/lib/components/Link/useLink.js
var useLink_unstable = (props, ref) => {
  const {
    appearance = "default",
    disabled = false,
    disabledFocusable = false,
    inline: inline2 = false
  } = props;
  const as = props.as || (props.href ? "a" : "button");
  const type = as === "button" ? "button" : void 0;
  const state = {
    // Props passed at the top-level
    appearance,
    disabled,
    disabledFocusable,
    inline: inline2,
    // Slots definition
    components: {
      root: "a"
    },
    root: getNativeElementProps(as, {
      ref,
      type,
      ...props,
      as
    })
  };
  useLinkState_unstable(state);
  return state;
};

// node_modules/@fluentui/react-link/lib/components/Link/useLinkStyles.js
var linkClassNames = {
  root: "fui-Link"
};
var useStyles18 = __styles2({
  focusIndicator: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bttzg6e: "fhgqx19",
    B3uz8dt: "f1olyrje",
    B6ihwck: "f1p93eir"
  },
  root: {
    De3pzq: "f3rmtva",
    B7ck84d: "f1ewtqcl",
    sj55zd: "fyind8e",
    Bceei9c: "f1k6fduh",
    mc9l5x: "f1w7gpdv",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    B6of3ja: "f1hu3pq6",
    t21cq0: ["f11qmguv", "f1tyq0we"],
    jrapky: "f19f4twv",
    Frg6f3: ["f1tyq0we", "f11qmguv"],
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    B68tc82: "fqv5qza",
    Bmxbyg5: "f1vmzxwi",
    fsow6f: ["f1o700av", "fes3tcz"],
    w71qe1: "f1iuv45f",
    Bkioxbp: "f1cmlufx",
    ygn44y: "f9n3di6",
    famaaq: "f1ids18y",
    Bde5pd6: "f1tx3yz7",
    Bi91k9c: "f1deo86v",
    i089h6: "f1eh06m1",
    lj723h: "f1iescvh"
  },
  button: {
    icvyot: "f1ern45e",
    vrafjx: ["f1n71otn", "f1deefiw"],
    oivjwe: "f1h8hb77",
    wvpqe5: ["f1deefiw", "f1n71otn"]
  },
  href: {
    Be2twd7: "fjoy568"
  },
  subtle: {
    sj55zd: "fkfq4zb",
    Bde5pd6: "f1tx3yz7",
    Bi91k9c: "fnwyq0v",
    i089h6: "f1eh06m1",
    lj723h: "flvvhsy"
  },
  inline: {
    w71qe1: "f13mvf36"
  },
  disabled: {
    w71qe1: "f1iuv45f",
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    Bde5pd6: "fbnuktb",
    Bi91k9c: "fvgxktp",
    i089h6: "fljg2da",
    lj723h: "f19wldhg"
  }
}, {
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  d: [".fhgqx19[data-fui-focus-visible]{text-decoration-color:var(--colorStrokeFocus2);}", ".f1olyrje[data-fui-focus-visible]{text-decoration-line:underline;}", ".f1p93eir[data-fui-focus-visible]{text-decoration-style:double;}", ".f3rmtva{background-color:transparent;}", ".f1ewtqcl{box-sizing:border-box;}", ".fyind8e{color:var(--colorBrandForegroundLink);}", ".f1k6fduh{cursor:pointer;}", ".f1w7gpdv{display:inline;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1hu3pq6{margin-top:0;}", ".f11qmguv{margin-right:0;}", ".f1tyq0we{margin-left:0;}", ".f19f4twv{margin-bottom:0;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".fqv5qza{overflow-x:inherit;}", ".f1vmzxwi{overflow-y:inherit;}", ".f1o700av{text-align:left;}", ".fes3tcz{text-align:right;}", ".f1iuv45f{text-decoration-line:none;}", ".f1cmlufx{text-decoration-thickness:var(--strokeWidthThin);}", ".f9n3di6{text-overflow:inherit;}", ".f1ids18y{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;}", ".f1ern45e{border-top-style:none;}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1h8hb77{border-bottom-style:none;}", ".fjoy568{font-size:inherit;}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".f13mvf36{text-decoration-line:underline;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}"],
  h: [".f1tx3yz7:hover{text-decoration-line:underline;}", ".f1deo86v:hover{color:var(--colorBrandForegroundLinkHover);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".fbnuktb:hover{text-decoration-line:none;}", ".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}"],
  a: [".f1eh06m1:active{text-decoration-line:underline;}", ".f1iescvh:active{color:var(--colorBrandForegroundLinkPressed);}", ".flvvhsy:active{color:var(--colorNeutralForeground2Pressed);}", ".fljg2da:active{text-decoration-line:none;}", ".f19wldhg:active{color:var(--colorNeutralForegroundDisabled);}"]
});
var useLinkStyles_unstable = (state) => {
  const styles = useStyles18();
  const {
    appearance,
    disabled,
    inline: inline2,
    root
  } = state;
  state.root.className = mergeClasses(linkClassNames.root, styles.root, styles.focusIndicator, root.as === "a" && root.href && styles.href, root.as === "button" && styles.button, appearance === "subtle" && styles.subtle, inline2 && styles.inline, disabled && styles.disabled, state.root.className);
  return state;
};

// node_modules/@fluentui/react-link/lib/components/Link/renderLink.js
var React167 = __toESM(require_react());
var renderLink_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React167.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-link/lib/components/Link/Link.js
var Link2 = React168.forwardRef((props, ref) => {
  const state = useLink_unstable(props, ref);
  useLinkStyles_unstable(state);
  return renderLink_unstable(state);
});
Link2.displayName = "Link";

// node_modules/@fluentui/react-menu/lib/contexts/menuContext.js
var React169 = __toESM(require_react());
var MenuContext = createContext10(void 0);
var menuContextDefaultValue = {
  open: false,
  setOpen: () => false,
  checkedValues: {},
  onCheckedValueChange: () => null,
  isSubmenu: false,
  triggerRef: {
    current: null
  },
  menuPopoverRef: {
    current: null
  },
  mountNode: null,
  triggerId: "",
  openOnContext: false,
  openOnHover: false,
  hasIcons: false,
  hasCheckmarks: false,
  inline: false,
  persistOnItemClick: false
};
var MenuProvider = MenuContext.Provider;
var useMenuContext_unstable = (selector) => useContextSelector(MenuContext, (ctx = menuContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-menu/lib/contexts/menuTriggerContext.js
var React170 = __toESM(require_react());
var MenuTriggerContext = React170.createContext(void 0);
var menuTriggerContextDefaultValue = false;
var MenuTriggerContextProvider = MenuTriggerContext.Provider;
var _React_useContext4;
var useMenuTriggerContext_unstable = () => (_React_useContext4 = React170.useContext(MenuTriggerContext)) !== null && _React_useContext4 !== void 0 ? _React_useContext4 : menuTriggerContextDefaultValue;

// node_modules/@fluentui/react-menu/lib/contexts/menuGroupContext.js
var React171 = __toESM(require_react());
var MenuGroupContext = React171.createContext(void 0);
var menuGroupContextDefaultValue = {
  headerId: ""
};
var MenuGroupContextProvider = MenuGroupContext.Provider;
var _React_useContext5;
var useMenuGroupContext_unstable = () => (_React_useContext5 = React171.useContext(MenuGroupContext)) !== null && _React_useContext5 !== void 0 ? _React_useContext5 : menuGroupContextDefaultValue;

// node_modules/@fluentui/react-menu/lib/contexts/menuListContext.js
var React172 = __toESM(require_react());
var MenuListContext = createContext10(void 0);
var menuListContextDefaultValue = {
  checkedValues: {},
  setFocusByFirstCharacter: () => null,
  toggleCheckbox: () => null,
  selectRadio: () => null,
  hasIcons: false,
  hasCheckmarks: false
};
var MenuListProvider = MenuListContext.Provider;
var useMenuListContext_unstable = (selector) => useContextSelector(MenuListContext, (ctx = menuListContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-menu/lib/components/Menu/Menu.js
var React176 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/Menu/useMenu.js
var React174 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/utils/useOnMenuEnter.js
var React173 = __toESM(require_react());
var MENU_ENTER_EVENT = "fuimenuenter";
var useOnMenuMouseEnter = (options) => {
  const {
    refs,
    callback,
    element,
    disabled
  } = options;
  const listener = useEventCallback((ev) => {
    const popoverRef = refs[0];
    const someMenuPopover = ev.target;
    var _popoverRef_current;
    const isOutsidePopover = !elementContains((_popoverRef_current = popoverRef.current) !== null && _popoverRef_current !== void 0 ? _popoverRef_current : null, someMenuPopover);
    if (isOutsidePopover && !disabled) {
      callback(ev);
    }
  });
  React173.useEffect(() => {
    if (element == null) {
      return;
    }
    if (!disabled) {
      element.addEventListener(MENU_ENTER_EVENT, listener);
    }
    return () => {
      element.removeEventListener(MENU_ENTER_EVENT, listener);
    };
  }, [listener, element, disabled]);
};
var dispatchMenuEnterEvent = (el, nativeEvent) => {
  el.dispatchEvent(new CustomEvent(MENU_ENTER_EVENT, {
    bubbles: true,
    detail: {
      nativeEvent
    }
  }));
};

// node_modules/@fluentui/react-menu/lib/utils/useIsSubmenu.js
function useIsSubmenu() {
  const menuContextValue = useMenuContext_unstable((context) => context.isSubmenu);
  const hasMenuListContext = useHasParentContext(MenuListContext);
  return menuContextValue || hasMenuListContext;
}

// node_modules/@fluentui/react-menu/lib/components/Menu/useMenu.js
var submenuFallbackPositions = ["after", "after-bottom", "before-top", "before", "before-bottom", "above"];
var useMenu_unstable = (props) => {
  const isSubmenu = useIsSubmenu();
  const {
    hoverDelay = 500,
    inline: inline2 = false,
    hasCheckmarks = false,
    hasIcons = false,
    closeOnScroll = false,
    openOnContext = false,
    persistOnItemClick = false,
    openOnHover = isSubmenu,
    defaultCheckedValues,
    mountNode = null
  } = props;
  const triggerId = useId2("menu");
  const [contextTarget, setContextTarget] = usePositioningMouseTarget();
  const positioningState = {
    position: isSubmenu ? "after" : "below",
    align: isSubmenu ? "top" : "start",
    target: props.openOnContext ? contextTarget : void 0,
    fallbackPositions: isSubmenu ? submenuFallbackPositions : void 0,
    ...resolvePositioningShorthand(props.positioning)
  };
  const children = React174.Children.toArray(props.children);
  if (true) {
    if (children.length === 0) {
      console.warn("Menu must contain at least one child");
    }
    if (children.length > 2) {
      console.warn("Menu must contain at most two children");
    }
  }
  let menuTrigger = void 0;
  let menuPopover = void 0;
  if (children.length === 2) {
    menuTrigger = children[0];
    menuPopover = children[1];
  } else if (children.length === 1) {
    menuPopover = children[0];
  }
  const {
    targetRef: triggerRef,
    containerRef: menuPopoverRef
  } = usePositioning(positioningState);
  const [open, setOpen] = useMenuOpenState({
    hoverDelay,
    isSubmenu,
    setContextTarget,
    closeOnScroll,
    menuPopoverRef,
    triggerRef,
    open: props.open,
    defaultOpen: props.defaultOpen,
    onOpenChange: props.onOpenChange,
    openOnContext
  });
  const [checkedValues, onCheckedValueChange] = useMenuSelectableState({
    checkedValues: props.checkedValues,
    defaultCheckedValues,
    onCheckedValueChange: props.onCheckedValueChange
  });
  return {
    inline: inline2,
    hoverDelay,
    triggerId,
    isSubmenu,
    openOnHover,
    contextTarget,
    setContextTarget,
    hasCheckmarks,
    hasIcons,
    closeOnScroll,
    menuTrigger,
    menuPopover,
    mountNode,
    triggerRef,
    menuPopoverRef,
    components: {},
    openOnContext,
    open,
    setOpen,
    checkedValues,
    onCheckedValueChange,
    persistOnItemClick
  };
};
var useMenuSelectableState = (props) => {
  const [checkedValues, setCheckedValues] = useControllableState({
    state: props.checkedValues,
    defaultState: props.defaultCheckedValues,
    initialState: {}
  });
  const onCheckedValueChange = useEventCallback((e, {
    name,
    checkedItems
  }) => {
    var _props_onCheckedValueChange;
    (_props_onCheckedValueChange = props.onCheckedValueChange) === null || _props_onCheckedValueChange === void 0 ? void 0 : _props_onCheckedValueChange.call(props, e, {
      name,
      checkedItems
    });
    setCheckedValues((currentValue) => ({
      ...currentValue,
      [name]: checkedItems
    }));
  });
  return [checkedValues, onCheckedValueChange];
};
var useMenuOpenState = (state) => {
  const {
    targetDocument
  } = useFluent();
  const parentSetOpen = useMenuContext_unstable((context) => context.setOpen);
  const onOpenChange = useEventCallback((e, data) => {
    var _state_onOpenChange;
    return (_state_onOpenChange = state.onOpenChange) === null || _state_onOpenChange === void 0 ? void 0 : _state_onOpenChange.call(state, e, data);
  });
  const shouldHandleCloseRef = React174.useRef(false);
  const setOpenTimeout = React174.useRef(0);
  const enteringTriggerRef = React174.useRef(false);
  const [open, setOpenState] = useControllableState({
    state: state.open,
    defaultState: state.defaultOpen,
    initialState: false
  });
  const trySetOpen = useEventCallback((e, data) => {
    const event = e instanceof CustomEvent && e.type === MENU_ENTER_EVENT ? e.detail.nativeEvent : e;
    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(event, {
      ...data
    });
    if (data.open && e.type === "contextmenu") {
      state.setContextTarget(e);
    }
    if (!data.open) {
      state.setContextTarget(void 0);
      shouldHandleCloseRef.current = true;
    }
    if (data.bubble) {
      parentSetOpen(e, {
        ...data
      });
    }
    setOpenState(data.open);
  });
  const setOpen = useEventCallback((e, data) => {
    clearTimeout(setOpenTimeout.current);
    if (!(e instanceof Event) && e.persist) {
      e.persist();
    }
    if (e.type === "mouseleave" || e.type === "mouseenter" || e.type === "mousemove" || e.type === MENU_ENTER_EVENT) {
      var _state_triggerRef_current;
      if ((_state_triggerRef_current = state.triggerRef.current) === null || _state_triggerRef_current === void 0 ? void 0 : _state_triggerRef_current.contains(e.target)) {
        enteringTriggerRef.current = e.type === "mouseenter" || e.type === "mousemove";
      }
      setOpenTimeout.current = setTimeout(() => trySetOpen(e, data), state.hoverDelay);
    } else {
      trySetOpen(e, data);
    }
  });
  useOnClickOutside({
    contains: elementContains,
    disabled: !open,
    element: targetDocument,
    refs: [state.menuPopoverRef, !state.openOnContext && state.triggerRef].filter(Boolean),
    callback: (event) => setOpen(event, {
      open: false,
      type: "clickOutside",
      event
    })
  });
  const closeOnScroll = state.openOnContext || state.closeOnScroll;
  useOnScrollOutside({
    contains: elementContains,
    element: targetDocument,
    callback: (event) => setOpen(event, {
      open: false,
      type: "scrollOutside",
      event
    }),
    refs: [state.menuPopoverRef, !state.openOnContext && state.triggerRef].filter(Boolean),
    disabled: !open || !closeOnScroll
  });
  useOnMenuMouseEnter({
    element: targetDocument,
    callback: (event) => {
      if (!enteringTriggerRef.current) {
        setOpen(event, {
          open: false,
          type: "menuMouseEnter",
          event
        });
      }
    },
    disabled: !open,
    refs: [state.menuPopoverRef]
  });
  React174.useEffect(() => {
    return () => {
      clearTimeout(setOpenTimeout.current);
    };
  }, []);
  const {
    findFirstFocusable
  } = useFocusFinders();
  const focusFirst = React174.useCallback(() => {
    const firstFocusable = findFirstFocusable(state.menuPopoverRef.current);
    firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();
  }, [findFirstFocusable, state.menuPopoverRef]);
  React174.useEffect(() => {
    if (open) {
      focusFirst();
    } else {
      if (shouldHandleCloseRef.current) {
        var _state_triggerRef_current;
        (_state_triggerRef_current = state.triggerRef.current) === null || _state_triggerRef_current === void 0 ? void 0 : _state_triggerRef_current.focus();
      }
    }
    shouldHandleCloseRef.current = false;
  }, [state.triggerRef, state.isSubmenu, open, focusFirst]);
  return [open, setOpen];
};

// node_modules/@fluentui/react-menu/lib/components/Menu/useMenuContextValues.js
function useMenuContextValues_unstable(state) {
  const {
    checkedValues,
    hasCheckmarks,
    hasIcons,
    inline: inline2,
    isSubmenu,
    menuPopoverRef,
    mountNode,
    onCheckedValueChange,
    open,
    openOnContext,
    openOnHover,
    persistOnItemClick,
    setOpen,
    triggerId,
    triggerRef
  } = state;
  const menu = {
    checkedValues,
    hasCheckmarks,
    hasIcons,
    inline: inline2,
    isSubmenu,
    menuPopoverRef,
    mountNode,
    onCheckedValueChange,
    open,
    openOnContext,
    openOnHover,
    persistOnItemClick,
    setOpen,
    triggerId,
    triggerRef
  };
  return {
    menu
  };
}

// node_modules/@fluentui/react-menu/lib/components/Menu/renderMenu.js
var React175 = __toESM(require_react());
var renderMenu_unstable = (state, contextValues) => {
  return React175.createElement(MenuProvider, {
    value: contextValues.menu
  }, state.menuTrigger, state.open && state.menuPopover);
};

// node_modules/@fluentui/react-menu/lib/components/Menu/Menu.js
var Menu = (props) => {
  const state = useMenu_unstable(props);
  const contextValues = useMenuContextValues_unstable(state);
  return renderMenu_unstable(state, contextValues);
};
Menu.displayName = "Menu";

// node_modules/@fluentui/react-menu/lib/components/Menu/Menu.types.js
var React177 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/MenuDivider.js
var React180 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/useMenuDivider.js
var React178 = __toESM(require_react());
var useMenuDivider_unstable = (props, ref) => {
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      role: "presentation",
      "aria-hidden": true,
      ...props,
      ref
    })
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/useMenuDividerStyles.js
var menuDividerClassNames = {
  root: "fui-MenuDivider"
};
var useStyles19 = __styles2({
  root: {
    B6of3ja: "fvjh0tl",
    t21cq0: ["f1rnx978", "f1q7jvqi"],
    jrapky: "fd1gkq",
    Frg6f3: ["f1q7jvqi", "f1rnx978"],
    a9b677: "f14z66ap",
    Bn0qgzm: "f1vxd6vx",
    oivjwe: "fg706s2",
    B9xav0g: "frpde29"
  }
}, {
  d: [".fvjh0tl{margin-top:4px;}", ".f1rnx978{margin-right:-5px;}", ".f1q7jvqi{margin-left:-5px;}", ".fd1gkq{margin-bottom:4px;}", ".f14z66ap{width:auto;}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".fg706s2{border-bottom-style:solid;}", ".frpde29{border-bottom-color:var(--colorNeutralStroke2);}"]
});
var useMenuDividerStyles_unstable = (state) => {
  const styles = useStyles19();
  state.root.className = mergeClasses(menuDividerClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/renderMenuDivider.js
var React179 = __toESM(require_react());
var renderMenuDivider_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React179.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-menu/lib/components/MenuDivider/MenuDivider.js
var MenuDivider = React180.forwardRef((props, ref) => {
  const state = useMenuDivider_unstable(props, ref);
  useMenuDividerStyles_unstable(state);
  const {
    useMenuDividerStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuDivider_unstable(state);
});
MenuDivider.displayName = "MenuDivider";

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/MenuGroup.js
var React184 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/useMenuGroup.js
var React181 = __toESM(require_react());
function useMenuGroup_unstable(props, ref) {
  const headerId = useId2("menu-group");
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      "aria-labelledby": headerId,
      role: "group",
      ...props
    }),
    headerId
  };
}

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/renderMenuGroup.js
var React182 = __toESM(require_react());
var renderMenuGroup_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React182.createElement(MenuGroupContextProvider, {
    value: contextValues.menuGroup
  }, React182.createElement(slots.root, slotProps.root));
};

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/useMenuGroupContextValues.js
var React183 = __toESM(require_react());
function useMenuGroupContextValues_unstable(state) {
  const {
    headerId
  } = state;
  const menuGroup = React183.useMemo(() => ({
    headerId
  }), [headerId]);
  return {
    menuGroup
  };
}

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/useMenuGroupStyles.js
var menuGroupClassNames = {
  root: "fui-MenuGroup"
};
var useMenuGroupStyles_unstable = (state) => {
  state.root.className = mergeClasses(menuGroupClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuGroup/MenuGroup.js
var MenuGroup = React184.forwardRef((props, ref) => {
  const state = useMenuGroup_unstable(props, ref);
  const contextValues = useMenuGroupContextValues_unstable(state);
  useMenuGroupStyles_unstable(state);
  const {
    useMenuGroupStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuGroup_unstable(state, contextValues);
});
MenuGroup.displayName = "MenuGroup";

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/MenuGroupHeader.js
var React187 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/useMenuGroupHeader.js
var React185 = __toESM(require_react());
function useMenuGroupHeader_unstable(props, ref) {
  const {
    headerId: id
  } = useMenuGroupContext_unstable();
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      id,
      ...props
    })
  };
}

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/useMenuGroupHeaderStyles.js
var menuGroupHeaderClassNames = {
  root: "fui-MenuGroupHeader"
};
var useStyles20 = __styles2({
  root: {
    Be2twd7: "fy9rknc",
    sj55zd: "f11d4kpn",
    uwmqm3: ["fjlbh76", "f11qrl6u"],
    z189sj: ["f11qrl6u", "fjlbh76"],
    Bhrd7zp: "fl43uef",
    Bqenvij: "f1d2rq10",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59"
  }
}, {
  d: [".fy9rknc{font-size:var(--fontSizeBase200);}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".fjlbh76{padding-left:12px;}", ".f11qrl6u{padding-right:12px;}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f1d2rq10{height:32px;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}"]
});
var useMenuGroupHeaderStyles_unstable = (state) => {
  const styles = useStyles20();
  state.root.className = mergeClasses(menuGroupHeaderClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/renderMenuGroupHeader.js
var React186 = __toESM(require_react());
var renderMenuGroupHeader_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React186.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-menu/lib/components/MenuGroupHeader/MenuGroupHeader.js
var MenuGroupHeader = React187.forwardRef((props, ref) => {
  const state = useMenuGroupHeader_unstable(props, ref);
  useMenuGroupHeaderStyles_unstable(state);
  const {
    useMenuGroupHeaderStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuGroupHeader_unstable(state);
});
MenuGroupHeader.displayName = "MenuGroupHeader";

// node_modules/@fluentui/react-menu/lib/components/MenuItem/MenuItem.js
var React192 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItem/useMenuItem.js
var React189 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItem/useCharacterSearch.js
var React188 = __toESM(require_react());
var useCharacterSearch = (state, ref) => {
  const setFocusByFirstCharacter = useMenuListContext_unstable((context) => context.setFocusByFirstCharacter);
  const {
    onKeyDown: originalOnKeyDown
  } = state.root;
  state.root.onKeyDown = (e) => {
    var _e_key;
    originalOnKeyDown === null || originalOnKeyDown === void 0 ? void 0 : originalOnKeyDown(e);
    if (((_e_key = e.key) === null || _e_key === void 0 ? void 0 : _e_key.length) > 1) {
      return;
    }
    if (ref.current) {
      setFocusByFirstCharacter === null || setFocusByFirstCharacter === void 0 ? void 0 : setFocusByFirstCharacter(e, ref.current);
    }
  };
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItem/useMenuItem.js
var ChevronRightIcon = bundleIcon_default(ChevronRightFilled, ChevronRightRegular);
var ChevronLeftIcon = bundleIcon_default(ChevronLeftFilled, ChevronLeftRegular);
var useMenuItem_unstable = (props, ref) => {
  const isSubmenuTrigger = useMenuTriggerContext_unstable();
  const persistOnClickContext = useMenuContext_unstable((context) => context.persistOnItemClick);
  const {
    as = "div",
    disabled = false,
    hasSubmenu = isSubmenuTrigger,
    persistOnClick = persistOnClickContext
  } = props;
  const hasIcons = useMenuListContext_unstable((context) => context.hasIcons);
  const hasCheckmarks = useMenuListContext_unstable((context) => context.hasCheckmarks);
  const setOpen = useMenuContext_unstable((context) => context.setOpen);
  const {
    dir
  } = useFluent();
  const innerRef = React189.useRef(null);
  const dismissedWithKeyboardRef = React189.useRef(false);
  const state = {
    hasSubmenu,
    disabled,
    persistOnClick,
    components: {
      root: "div",
      icon: "span",
      checkmark: "span",
      submenuIndicator: "span",
      content: "span",
      secondaryContent: "span"
    },
    root: getNativeElementProps(as, useARIAButtonProps(as, {
      role: "menuitem",
      ...props,
      disabled: false,
      disabledFocusable: disabled,
      ref: useMergedRefs(ref, innerRef),
      onKeyDown: useEventCallback((event) => {
        var _props_onKeyDown;
        (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);
        if (!event.isDefaultPrevented() && (event.key === Space || event.key === Enter)) {
          dismissedWithKeyboardRef.current = true;
        }
      }),
      onMouseEnter: useEventCallback((event) => {
        var _innerRef_current, _props_onMouseEnter;
        (_innerRef_current = innerRef.current) === null || _innerRef_current === void 0 ? void 0 : _innerRef_current.focus();
        (_props_onMouseEnter = props.onMouseEnter) === null || _props_onMouseEnter === void 0 ? void 0 : _props_onMouseEnter.call(props, event);
      }),
      onClick: useEventCallback((event) => {
        var _props_onClick;
        if (!hasSubmenu && !persistOnClick) {
          setOpen(event, {
            open: false,
            keyboard: dismissedWithKeyboardRef.current,
            bubble: true,
            type: "menuItemClick",
            event
          });
          dismissedWithKeyboardRef.current = false;
        }
        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);
      })
    })),
    icon: resolveShorthand(props.icon, {
      required: hasIcons
    }),
    checkmark: resolveShorthand(props.checkmark, {
      required: hasCheckmarks
    }),
    submenuIndicator: resolveShorthand(props.submenuIndicator, {
      required: hasSubmenu,
      defaultProps: {
        children: dir === "ltr" ? React189.createElement(ChevronRightIcon, null) : React189.createElement(ChevronLeftIcon, null)
      }
    }),
    content: resolveShorthand(props.content, {
      required: !!props.children,
      defaultProps: {
        children: props.children
      }
    }),
    secondaryContent: resolveShorthand(props.secondaryContent)
  };
  useCharacterSearch(state, innerRef);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItem/renderMenuItem.js
var React190 = __toESM(require_react());
var renderMenuItem_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React190.createElement(slots.root, slotProps.root, slots.checkmark && React190.createElement(slots.checkmark, slotProps.checkmark), slots.icon && React190.createElement(slots.icon, slotProps.icon), slots.content && React190.createElement(slots.content, slotProps.content), slots.secondaryContent && React190.createElement(slots.secondaryContent, slotProps.secondaryContent), slots.submenuIndicator && React190.createElement(slots.submenuIndicator, slotProps.submenuIndicator));
};

// node_modules/@fluentui/react-menu/lib/selectable/useCheckmarkStyles.js
var useStyles21 = __styles2({
  root: {
    a9b677: "fjw5fx7",
    Bqenvij: "fd461yt",
    Bcdw1i0: "fd7fpy0"
  },
  rootChecked: {
    Bcdw1i0: "f1022m68"
  }
}, {
  d: [".fjw5fx7{width:16px;}", ".fd461yt{height:16px;}", ".fd7fpy0{visibility:hidden;}", ".f1022m68{visibility:visible;}"]
});
var useCheckmarkStyles_unstable = (state) => {
  const styles = useStyles21();
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(styles.root, state.checked && styles.rootChecked, state.checkmark.className);
  }
};

// node_modules/@fluentui/react-menu/lib/selectable/types.js
var React191 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItem/useMenuItemStyles.js
var menuItemClassNames = {
  root: "fui-MenuItem",
  icon: "fui-MenuItem__icon",
  checkmark: "fui-MenuItem__checkmark",
  submenuIndicator: "fui-MenuItem__submenuIndicator",
  content: "fui-MenuItem__content",
  secondaryContent: "fui-MenuItem__secondaryContent"
};
var useStyles22 = __styles2({
  focusIndicator: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bm4h7ae: "f15bsgw9",
    B7ys5i9: "f14e48fq",
    Busjfv9: "f18yb2kv",
    Bhk32uz: "fd6o370",
    Bf4ptjt: "fh1cnn4",
    kclons: ["fy7oxxb", "f184ne2d"],
    Bhdgwq3: "fpukqih",
    Blkhhs4: ["f184ne2d", "fy7oxxb"],
    Bqtpl0w: "frrh606",
    clg4pj: ["f1v5zibi", "fo2hd23"],
    hgwjuy: "ful5kiu",
    Bonggc9: ["fo2hd23", "f1v5zibi"],
    B1tsrr9: ["f1jqcqds", "ftffrms"],
    Dah5zi: ["ftffrms", "f1jqcqds"],
    Bkh64rk: ["f2e7qr6", "fsr1zz6"],
    qqdqy8: ["fsr1zz6", "f2e7qr6"],
    B6dhp37: "f1dvezut",
    i03rao: ["fd0oaoj", "f1cwg4i8"],
    Boxcth7: "fjvm52t",
    Bsom6fd: ["f1cwg4i8", "fd0oaoj"],
    J0r882: "fdiulkx",
    Bjwuhne: "f1yalx80",
    Ghsupd: ["fq22d5a", "f1jw7pan"],
    Bule8hv: ["f1jw7pan", "fq22d5a"]
  },
  root: {
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    qhf8xq: "f10pi13n",
    sj55zd: "fkfq4zb",
    De3pzq: "fxugw4r",
    z189sj: ["f81rol6", "frdkuqy"],
    uwmqm3: ["frdkuqy", "f81rol6"],
    Bqenvij: "f1d2rq10",
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Be2twd7: "fkhj508",
    Bceei9c: "f1k6fduh",
    i8kkvl: "f1q8lukm",
    Belr9w4: "f1ma2n7n",
    Jwef8y: "f1knas48",
    Bi91k9c: "fnwyq0v",
    Bk3fhr4: "ft1hn21",
    Bmfj8id: "fuxngvv",
    Bg7n49j: "fp258yr",
    famaaq: "f1xqy1su"
  },
  content: {
    uwmqm3: ["f161knb0", "f12huiiw"],
    z189sj: ["f12huiiw", "f161knb0"],
    De3pzq: "f3rmtva",
    Bh6795r: "fqerorx"
  },
  secondaryContent: {
    uwmqm3: ["f161knb0", "f12huiiw"],
    z189sj: ["f12huiiw", "f161knb0"],
    sj55zd: "f11d4kpn",
    Bi91k9c: "f1jp5ecu",
    t0hwav: "fc1cou1"
  },
  icon: {
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b",
    Be2twd7: "fe5j1ua",
    Bg96gwp: "fez10in",
    Bt984gj: "f122n59",
    mc9l5x: "ftuwxu6",
    Brf1p80: "f4d9j23"
  },
  submenuIndicator: {
    a9b677: "f64fuq3",
    Bqenvij: "fjamq6b",
    Be2twd7: "fe5j1ua",
    Bg96gwp: "fez10in",
    Bt984gj: "f122n59",
    mc9l5x: "ftuwxu6",
    Brf1p80: "f4d9j23"
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Bi91k9c: "fvgxktp",
    Bk3fhr4: "f19vpps7",
    Bmfj8id: "fv5swzo",
    Bg7n49j: "f1q1x1ba",
    t0hwav: "ft33916",
    Bbusuzp: "f1dcs8yz",
    ze5xyy: "f1kc2mi9",
    Bctn1xl: "fk56vqo",
    Bh6z0a4: "f1ikwg0d"
  }
}, {
  f: [".ftqa4ok:focus{outline-style:none;}", ".fc1cou1:focus{color:var(--colorNeutralForeground3Hover);}", ".ft33916:focus{color:var(--colorNeutralForegroundDisabled);}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  d: [".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", '.f15bsgw9[data-fui-focus-visible]::after{content:"";}', ".f14e48fq[data-fui-focus-visible]::after{position:absolute;}", ".f18yb2kv[data-fui-focus-visible]::after{pointer-events:none;}", ".fd6o370[data-fui-focus-visible]::after{z-index:1;}", ".fh1cnn4[data-fui-focus-visible]::after{border-top-style:solid;}", ".fy7oxxb[data-fui-focus-visible]::after{border-right-style:solid;}", ".f184ne2d[data-fui-focus-visible]::after{border-left-style:solid;}", ".fpukqih[data-fui-focus-visible]::after{border-bottom-style:solid;}", ".frrh606[data-fui-focus-visible]::after{border-top-width:2px;}", ".f1v5zibi[data-fui-focus-visible]::after{border-right-width:2px;}", ".fo2hd23[data-fui-focus-visible]::after{border-left-width:2px;}", ".ful5kiu[data-fui-focus-visible]::after{border-bottom-width:2px;}", ".f1jqcqds[data-fui-focus-visible]::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".ftffrms[data-fui-focus-visible]::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f2e7qr6[data-fui-focus-visible]::after{border-top-right-radius:var(--borderRadiusMedium);}", ".fsr1zz6[data-fui-focus-visible]::after{border-top-left-radius:var(--borderRadiusMedium);}", ".f1dvezut[data-fui-focus-visible]::after{border-top-color:var(--colorStrokeFocus2);}", ".fd0oaoj[data-fui-focus-visible]::after{border-right-color:var(--colorStrokeFocus2);}", ".f1cwg4i8[data-fui-focus-visible]::after{border-left-color:var(--colorStrokeFocus2);}", ".fjvm52t[data-fui-focus-visible]::after{border-bottom-color:var(--colorStrokeFocus2);}", ".fdiulkx[data-fui-focus-visible]::after{top:-2px;}", ".f1yalx80[data-fui-focus-visible]::after{bottom:-2px;}", ".fq22d5a[data-fui-focus-visible]::after{left:-2px;}", ".f1jw7pan[data-fui-focus-visible]::after{right:-2px;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f10pi13n{position:relative;}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f81rol6{padding-right:10px;}", ".frdkuqy{padding-left:10px;}", ".f1d2rq10{height:32px;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1k6fduh{cursor:pointer;}", ".f1q8lukm{-webkit-column-gap:4px;column-gap:4px;}", ".f1ma2n7n{row-gap:4px;}", ".f1xqy1su{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}", ".f161knb0{padding-left:2px;}", ".f12huiiw{padding-right:2px;}", ".f3rmtva{background-color:transparent;}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f64fuq3{width:20px;}", ".fjamq6b{height:20px;}", ".fe5j1ua{font-size:20px;}", ".fez10in{line-height:0;}", ".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".f4d9j23{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}"],
  h: [".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".fnwyq0v:hover{color:var(--colorNeutralForeground2Hover);}", ".ft1hn21:hover .fui-Icon-filled{display:inline;}", ".fuxngvv:hover .fui-Icon-regular{display:none;}", ".fp258yr:hover .fui-MenuItem__icon{color:var(--colorNeutralForeground2BrandSelected);}", ".f1jp5ecu:hover{color:var(--colorNeutralForeground3Hover);}", ".fvgxktp:hover{color:var(--colorNeutralForegroundDisabled);}", ".f19vpps7:hover .fui-Icon-filled{display:none;}", ".fv5swzo:hover .fui-Icon-regular{display:inline;}", ".f1q1x1ba:hover .fui-MenuItem__icon{color:var(--colorNeutralForegroundDisabled);}"],
  m: [["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1kc2mi9:hover{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fk56vqo:hover .fui-MenuItem__icon{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1ikwg0d:focus{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useMenuItemStyles_unstable = (state) => {
  const styles = useStyles22();
  state.root.className = mergeClasses(menuItemClassNames.root, styles.root, styles.focusIndicator, state.disabled && styles.disabled, state.root.className);
  if (state.content) {
    state.content.className = mergeClasses(menuItemClassNames.content, styles.content, state.content.className);
  }
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(menuItemClassNames.checkmark, state.checkmark.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(menuItemClassNames.secondaryContent, !state.disabled && styles.secondaryContent, state.secondaryContent.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(menuItemClassNames.icon, styles.icon, state.icon.className);
  }
  if (state.submenuIndicator) {
    state.submenuIndicator.className = mergeClasses(menuItemClassNames.submenuIndicator, styles.submenuIndicator, state.submenuIndicator.className);
  }
  useCheckmarkStyles_unstable(state);
};

// node_modules/@fluentui/react-menu/lib/components/MenuItem/MenuItem.js
var MenuItem = React192.forwardRef((props, ref) => {
  const state = useMenuItem_unstable(props, ref);
  useMenuItemStyles_unstable(state);
  const {
    useMenuItemStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuItem_unstable(state);
});
MenuItem.displayName = "MenuItem";

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/MenuItemCheckbox.js
var React195 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/useMenuItemCheckbox.js
var React193 = __toESM(require_react());
var useMenuItemCheckbox_unstable = (props, ref) => {
  const toggleCheckbox = useMenuListContext_unstable((context) => context.toggleCheckbox);
  const {
    name,
    value
  } = props;
  const checked = useMenuListContext_unstable((context) => {
    var _context_checkedValues;
    const checkedItems = ((_context_checkedValues = context.checkedValues) === null || _context_checkedValues === void 0 ? void 0 : _context_checkedValues[name]) || [];
    return checkedItems.indexOf(value) !== -1;
  });
  const state = {
    ...useMenuItem_unstable({
      role: "menuitemcheckbox",
      persistOnClick: true,
      ...props,
      "aria-checked": checked,
      checkmark: resolveShorthand(props.checkmark, {
        defaultProps: {
          children: React193.createElement(Checkmark16Filled, null)
        },
        required: true
      }),
      onClick: (e) => {
        var _props_onClick;
        toggleCheckbox === null || toggleCheckbox === void 0 ? void 0 : toggleCheckbox(e, name, value, checked);
        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
      }
    }, ref),
    name,
    value,
    checked
  };
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/renderMenuItemCheckbox.js
var React194 = __toESM(require_react());
var renderMenuItemCheckbox_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React194.createElement(slots.root, slotProps.root, slots.checkmark && React194.createElement(slots.checkmark, slotProps.checkmark), slots.icon && React194.createElement(slots.icon, slotProps.icon), slots.content && React194.createElement(slots.content, slotProps.content), slots.secondaryContent && React194.createElement(slots.secondaryContent, slotProps.secondaryContent));
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/useMenuItemCheckboxStyles.js
var menuItemCheckboxClassNames = {
  root: "fui-MenuItemCheckbox",
  icon: "fui-MenuItemCheckbox__icon",
  checkmark: "fui-MenuItemCheckbox__checkmark",
  content: "fui-MenuItemCheckbox__content",
  secondaryContent: "fui-MenuItemCheckbox__secondaryContent"
};
var useMenuItemCheckboxStyles_unstable = (state) => {
  state.root.className = mergeClasses(menuItemCheckboxClassNames.root, state.root.className);
  if (state.content) {
    state.content.className = mergeClasses(menuItemCheckboxClassNames.content, state.content.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(menuItemCheckboxClassNames.secondaryContent, state.secondaryContent.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(menuItemCheckboxClassNames.icon, state.icon.className);
  }
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(menuItemCheckboxClassNames.checkmark, state.checkmark.className);
  }
  useMenuItemStyles_unstable(state);
  useCheckmarkStyles_unstable(state);
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemCheckbox/MenuItemCheckbox.js
var MenuItemCheckbox = React195.forwardRef((props, ref) => {
  const state = useMenuItemCheckbox_unstable(props, ref);
  useMenuItemCheckboxStyles_unstable(state);
  const {
    useMenuItemCheckboxStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuItemCheckbox_unstable(state);
});
MenuItemCheckbox.displayName = "MenuItemCheckbox";

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/MenuItemRadio.js
var React198 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/useMenuItemRadio.js
var React196 = __toESM(require_react());
var useMenuItemRadio_unstable = (props, ref) => {
  const {
    name,
    value
  } = props;
  const checked = useMenuListContext_unstable((context) => {
    var _context_checkedValues;
    const checkedItems = ((_context_checkedValues = context.checkedValues) === null || _context_checkedValues === void 0 ? void 0 : _context_checkedValues[name]) || [];
    return checkedItems.indexOf(value) !== -1;
  });
  const selectRadio = useMenuListContext_unstable((context) => context.selectRadio);
  return {
    ...useMenuItem_unstable({
      ...props,
      role: "menuitemradio",
      "aria-checked": checked,
      checkmark: resolveShorthand(props.checkmark, {
        defaultProps: {
          children: React196.createElement(Checkmark16Filled, null)
        },
        required: true
      }),
      onClick: (e) => {
        var _props_onClick;
        selectRadio === null || selectRadio === void 0 ? void 0 : selectRadio(e, name, value, checked);
        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
      }
    }, ref),
    checked,
    name,
    value
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/renderMenuItemRadio.js
var React197 = __toESM(require_react());
var renderMenuItemRadio_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React197.createElement(slots.root, slotProps.root, slots.checkmark && React197.createElement(slots.checkmark, slotProps.checkmark), slots.icon && React197.createElement(slots.icon, slotProps.icon), slots.content && React197.createElement(slots.content, slotProps.content), slots.secondaryContent && React197.createElement(slots.secondaryContent, slotProps.secondaryContent));
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/useMenuItemRadioStyles.js
var menuItemRadioClassNames = {
  root: "fui-MenuItemRadio",
  icon: "fui-MenuItemRadio__icon",
  checkmark: "fui-MenuItemRadio__checkmark",
  content: "fui-MenuItemRadio__content",
  secondaryContent: "fui-MenuItemRadio__secondaryContent"
};
var useMenuItemRadioStyles_unstable = (state) => {
  state.root.className = mergeClasses(menuItemRadioClassNames.root, state.root.className);
  if (state.content) {
    state.content.className = mergeClasses(menuItemRadioClassNames.content, state.content.className);
  }
  if (state.secondaryContent) {
    state.secondaryContent.className = mergeClasses(menuItemRadioClassNames.secondaryContent, state.secondaryContent.className);
  }
  if (state.icon) {
    state.icon.className = mergeClasses(menuItemRadioClassNames.icon, state.icon.className);
  }
  if (state.checkmark) {
    state.checkmark.className = mergeClasses(menuItemRadioClassNames.checkmark, state.checkmark.className);
  }
  useMenuItemStyles_unstable(state);
  useCheckmarkStyles_unstable(state);
};

// node_modules/@fluentui/react-menu/lib/components/MenuItemRadio/MenuItemRadio.js
var MenuItemRadio = React198.forwardRef((props, ref) => {
  const state = useMenuItemRadio_unstable(props, ref);
  useMenuItemRadioStyles_unstable(state);
  const {
    useMenuItemRadioStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuItemRadio_unstable(state);
});
MenuItemRadio.displayName = "MenuItemRadio";

// node_modules/@fluentui/react-menu/lib/components/MenuList/MenuList.js
var React201 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuList/useMenuList.js
var React199 = __toESM(require_react());
var useMenuList_unstable = (props, ref) => {
  const {
    findAllFocusable
  } = useFocusFinders();
  const menuContext = useMenuContextSelectors();
  const hasMenuContext = useHasParentContext(MenuContext);
  const focusAttributes = useArrowNavigationGroup({
    circular: true,
    ignoreDefaultKeydown: {
      Tab: hasMenuContext
    }
  });
  if (usingPropsAndMenuContext(props, menuContext, hasMenuContext)) {
    console.warn("You are using both MenuList and Menu props, we recommend you to use Menu props when available");
  }
  const innerRef = React199.useRef(null);
  const setFocusByFirstCharacter = React199.useCallback((e, itemEl) => {
    const acceptedRoles = ["menuitem", "menuitemcheckbox", "menuitemradio"];
    if (!innerRef.current) {
      return;
    }
    const menuItems = findAllFocusable(innerRef.current, (el) => el.hasAttribute("role") && acceptedRoles.indexOf(el.getAttribute("role")) !== -1);
    let startIndex = menuItems.indexOf(itemEl) + 1;
    if (startIndex === menuItems.length) {
      startIndex = 0;
    }
    const firstChars = menuItems.map((menuItem) => {
      var _menuItem_textContent;
      return (_menuItem_textContent = menuItem.textContent) === null || _menuItem_textContent === void 0 ? void 0 : _menuItem_textContent.charAt(0).toLowerCase();
    });
    const char = e.key.toLowerCase();
    const getIndexFirstChars = (start, firstChar) => {
      for (let i = start; i < firstChars.length; i++) {
        if (char === firstChars[i]) {
          return i;
        }
      }
      return -1;
    };
    let index = getIndexFirstChars(startIndex, char);
    if (index === -1) {
      index = getIndexFirstChars(0, char);
    }
    if (index > -1) {
      menuItems[index].focus();
    }
  }, [findAllFocusable]);
  var _props_checkedValues;
  const [checkedValues, setCheckedValues] = useControllableState({
    state: (_props_checkedValues = props.checkedValues) !== null && _props_checkedValues !== void 0 ? _props_checkedValues : hasMenuContext ? menuContext.checkedValues : void 0,
    defaultState: props.defaultCheckedValues,
    initialState: {}
  });
  var _props_onCheckedValueChange;
  const handleCheckedValueChange = (_props_onCheckedValueChange = props.onCheckedValueChange) !== null && _props_onCheckedValueChange !== void 0 ? _props_onCheckedValueChange : hasMenuContext ? menuContext.onCheckedValueChange : void 0;
  const toggleCheckbox = useEventCallback((e, name, value, checked) => {
    const checkedItems = (checkedValues === null || checkedValues === void 0 ? void 0 : checkedValues[name]) || [];
    const newCheckedItems = [...checkedItems];
    if (checked) {
      newCheckedItems.splice(newCheckedItems.indexOf(value), 1);
    } else {
      newCheckedItems.push(value);
    }
    handleCheckedValueChange === null || handleCheckedValueChange === void 0 ? void 0 : handleCheckedValueChange(e, {
      name,
      checkedItems: newCheckedItems
    });
    setCheckedValues((s) => ({
      ...s,
      [name]: newCheckedItems
    }));
  });
  const selectRadio = useEventCallback((e, name, value) => {
    const newCheckedItems = [value];
    setCheckedValues((s) => ({
      ...s,
      [name]: newCheckedItems
    }));
    handleCheckedValueChange === null || handleCheckedValueChange === void 0 ? void 0 : handleCheckedValueChange(e, {
      name,
      checkedItems: newCheckedItems
    });
  });
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref: useMergedRefs(ref, innerRef),
      role: "menu",
      "aria-labelledby": menuContext.triggerId,
      ...focusAttributes,
      ...props
    }),
    hasIcons: menuContext.hasIcons || false,
    hasCheckmarks: menuContext.hasCheckmarks || false,
    checkedValues,
    setFocusByFirstCharacter,
    selectRadio,
    toggleCheckbox
  };
};
var useMenuContextSelectors = () => {
  const checkedValues = useMenuContext_unstable((context) => context.checkedValues);
  const onCheckedValueChange = useMenuContext_unstable((context) => context.onCheckedValueChange);
  const triggerId = useMenuContext_unstable((context) => context.triggerId);
  const hasIcons = useMenuContext_unstable((context) => context.hasIcons);
  const hasCheckmarks = useMenuContext_unstable((context) => context.hasCheckmarks);
  return {
    checkedValues,
    onCheckedValueChange,
    triggerId,
    hasIcons,
    hasCheckmarks
  };
};
var usingPropsAndMenuContext = (props, contextValue, hasMenuContext) => {
  let isUsingPropsAndContext = false;
  for (const val in contextValue) {
    if (props[val]) {
      isUsingPropsAndContext = true;
    }
  }
  return hasMenuContext && isUsingPropsAndContext;
};

// node_modules/@fluentui/react-menu/lib/components/MenuList/renderMenuList.js
var React200 = __toESM(require_react());
var renderMenuList_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React200.createElement(MenuListProvider, {
    value: contextValues.menuList
  }, React200.createElement(slots.root, slotProps.root));
};

// node_modules/@fluentui/react-menu/lib/components/MenuList/useMenuListContextValues.js
function useMenuListContextValues_unstable(state) {
  const {
    checkedValues,
    hasCheckmarks,
    hasIcons,
    selectRadio,
    setFocusByFirstCharacter,
    toggleCheckbox
  } = state;
  const menuList = {
    checkedValues,
    hasCheckmarks,
    hasIcons,
    selectRadio,
    setFocusByFirstCharacter,
    toggleCheckbox
  };
  return {
    menuList
  };
}

// node_modules/@fluentui/react-menu/lib/components/MenuList/useMenuListStyles.js
var menuListClassNames = {
  root: "fui-MenuList"
};
var useStyles23 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62",
    i8kkvl: "f16mnhsx",
    Belr9w4: "fbi42co"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".f16mnhsx{-webkit-column-gap:2px;column-gap:2px;}", ".fbi42co{row-gap:2px;}"]
});
var useMenuListStyles_unstable = (state) => {
  const styles = useStyles23();
  state.root.className = mergeClasses(menuListClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuList/MenuList.js
var MenuList = React201.forwardRef((props, ref) => {
  const state = useMenuList_unstable(props, ref);
  const contextValues = useMenuListContextValues_unstable(state);
  useMenuListStyles_unstable(state);
  const {
    useMenuListStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuList_unstable(state, contextValues);
});
MenuList.displayName = "MenuList";

// node_modules/@fluentui/react-menu/lib/components/MenuList/MenuList.types.js
var React202 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/MenuPopover.js
var React205 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/useMenuPopover.js
var React203 = __toESM(require_react());
var useMenuPopover_unstable = (props, ref) => {
  const popoverRef = useMenuContext_unstable((context) => context.menuPopoverRef);
  const setOpen = useMenuContext_unstable((context) => context.setOpen);
  const open = useMenuContext_unstable((context) => context.open);
  const openOnHover = useMenuContext_unstable((context) => context.openOnHover);
  const isSubmenu = useIsSubmenu();
  const canDispatchCustomEventRef = React203.useRef(true);
  const throttleDispatchTimerRef = React203.useRef(0);
  const {
    dir
  } = useFluent();
  const CloseArrowKey = dir === "ltr" ? ArrowLeft : ArrowRight;
  const mouseOverListenerCallbackRef = React203.useCallback((node) => {
    if (node) {
      node.addEventListener("mouseover", (e) => {
        if (canDispatchCustomEventRef.current) {
          canDispatchCustomEventRef.current = false;
          dispatchMenuEnterEvent(popoverRef.current, e);
          throttleDispatchTimerRef.current = setTimeout(() => canDispatchCustomEventRef.current = true, 250);
        }
      });
    }
  }, [popoverRef, throttleDispatchTimerRef]);
  React203.useEffect(() => {
    () => clearTimeout(throttleDispatchTimerRef.current);
  }, []);
  var _useMenuContext_unstable;
  const inline2 = (_useMenuContext_unstable = useMenuContext_unstable((context) => context.inline)) !== null && _useMenuContext_unstable !== void 0 ? _useMenuContext_unstable : false;
  const mountNode = useMenuContext_unstable((context) => context.mountNode);
  const rootProps = getNativeElementProps("div", {
    role: "presentation",
    ...props,
    ref: useMergedRefs(ref, popoverRef, mouseOverListenerCallbackRef)
  });
  const {
    onMouseEnter: onMouseEnterOriginal,
    onKeyDown: onKeyDownOriginal
  } = rootProps;
  rootProps.onMouseEnter = useEventCallback((event) => {
    if (openOnHover) {
      setOpen(event, {
        open: true,
        keyboard: false,
        type: "menuPopoverMouseEnter",
        event
      });
    }
    onMouseEnterOriginal === null || onMouseEnterOriginal === void 0 ? void 0 : onMouseEnterOriginal(event);
  });
  rootProps.onKeyDown = useEventCallback((event) => {
    const key = event.key;
    if (key === Escape || isSubmenu && key === CloseArrowKey) {
      var _popoverRef_current;
      if (open && ((_popoverRef_current = popoverRef.current) === null || _popoverRef_current === void 0 ? void 0 : _popoverRef_current.contains(event.target))) {
        setOpen(event, {
          open: false,
          keyboard: true,
          type: "menuPopoverKeyDown",
          event
        });
        event.stopPropagation();
      }
    }
    if (key === Tab) {
      setOpen(event, {
        open: false,
        keyboard: true,
        type: "menuPopoverKeyDown",
        event
      });
    }
    onKeyDownOriginal === null || onKeyDownOriginal === void 0 ? void 0 : onKeyDownOriginal(event);
  });
  return {
    inline: inline2,
    mountNode,
    components: {
      root: "div"
    },
    root: rootProps
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/useMenuPopoverStyles.js
var menuPopoverClassNames = {
  root: "fui-MenuPopover"
};
var useStyles24 = __styles2({
  root: {
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    De3pzq: "fxugw4r",
    sj55zd: "f19n0e5",
    Bf4jedk: "fkqu4gx",
    B2u0y6b: "f1kaai3v",
    a9b677: "f1ahpp82",
    E5pizo: "f1hg901r",
    z8tnut: "f10ra9hq",
    z189sj: ["f8wuabp", "fycuoez"],
    Byoj8tv: "f1y2xyjm",
    uwmqm3: ["fycuoez", "f8wuabp"],
    B4j52fo: "f5ogflp",
    Bekrc4i: ["f1hqa2wf", "finvdd3"],
    Bn0qgzm: "f1f09k3d",
    ibv6hh: ["finvdd3", "f1hqa2wf"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fkqu4gx{min-width:128px;}", ".f1kaai3v{max-width:300px;}", ".f1ahpp82{width:-webkit-max-content;width:-moz-max-content;width:max-content;}", ".f1hg901r{box-shadow:var(--shadow16);}", ".f10ra9hq{padding-top:4px;}", ".f8wuabp{padding-right:4px;}", ".fycuoez{padding-left:4px;}", ".f1y2xyjm{padding-bottom:4px;}", ".f5ogflp{border-top-width:1px;}", ".f1hqa2wf{border-right-width:1px;}", ".finvdd3{border-left-width:1px;}", ".f1f09k3d{border-bottom-width:1px;}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var useMenuPopoverStyles_unstable = (state) => {
  const styles = useStyles24();
  state.root.className = mergeClasses(menuPopoverClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/renderMenuPopover.js
var React204 = __toESM(require_react());
var renderMenuPopover_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  if (state.inline) {
    return React204.createElement(slots.root, slotProps.root);
  }
  return React204.createElement(Portal, {
    mountNode: state.mountNode
  }, React204.createElement(slots.root, slotProps.root));
};

// node_modules/@fluentui/react-menu/lib/components/MenuPopover/MenuPopover.js
var MenuPopover = React205.forwardRef((props, ref) => {
  const state = useMenuPopover_unstable(props, ref);
  useMenuPopoverStyles_unstable(state);
  const {
    useMenuPopoverStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuPopover_unstable(state);
});
MenuPopover.displayName = "MenuPopover";

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/MenuSplitGroup.js
var React208 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/useMenuSplitGroup.js
var React206 = __toESM(require_react());
var useMenuSplitGroup_unstable = (props, ref) => {
  const innerRef = React206.useRef();
  const {
    dir,
    targetDocument
  } = useFluent();
  const nextArrowKey = getRTLSafeKey(ArrowRight, dir);
  const prevArrowKey = getRTLSafeKey(ArrowLeft, dir);
  const {
    findNextFocusable,
    findPrevFocusable
  } = useFocusFinders();
  const onKeyDown = React206.useCallback((e) => {
    var _innerRef_current;
    const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
    if (!activeElement) {
      return;
    }
    if (!((_innerRef_current = innerRef.current) === null || _innerRef_current === void 0 ? void 0 : _innerRef_current.contains(activeElement))) {
      return;
    }
    if (e.key === nextArrowKey) {
      const next = findNextFocusable(activeElement, {
        container: innerRef.current
      });
      next === null || next === void 0 ? void 0 : next.focus();
    }
    if (e.key === prevArrowKey) {
      const prev = findPrevFocusable(activeElement, {
        container: innerRef.current
      });
      prev === null || prev === void 0 ? void 0 : prev.focus();
    }
  }, [findNextFocusable, findPrevFocusable, targetDocument, nextArrowKey, prevArrowKey]);
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      role: "group",
      ref: useMergedRefs(ref, innerRef),
      onKeyDown,
      ...props
    })
  };
};

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/renderMenuSplitGroup.js
var React207 = __toESM(require_react());
var renderMenuSplitGroup_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React207.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/useMenuSplitGroupStyles.js
var menuSplitGroupClassNames = {
  root: "fui-MenuSplitGroup"
};
var useStyles25 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    u7v6m2: "f168awwq",
    Bo1wru1: ["f1om2jlk", "fcyhg04"],
    Bhkyaub: ["fgqgg70", "fqo1hry"],
    J9ixe0: ["fh1zedf", "f1auaj6e"],
    rj29m3: ["fokbbcd", "f1xlvh9o"],
    B2knx3v: "f1mf2v5d",
    Bl7aesu: "fi8lk9b",
    e82tai: "f1tc32yi",
    Bnkcs84: "f1kve8m0"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f168awwq>.fui-MenuItem:nth-child(1){width:100%;}", ".f1om2jlk>.fui-MenuItem:nth-child(2){border-top-left-radius:0;}", ".fcyhg04>.fui-MenuItem:nth-child(2){border-top-right-radius:0;}", ".fgqgg70>.fui-MenuItem:nth-child(2){border-bottom-left-radius:0;}", ".fqo1hry>.fui-MenuItem:nth-child(2){border-bottom-right-radius:0;}", ".fh1zedf>.fui-MenuItem:nth-child(2){padding-left:0;}", ".f1auaj6e>.fui-MenuItem:nth-child(2){padding-right:0;}", ".fokbbcd>.fui-MenuItem:nth-child(2){margin-left:auto;}", ".f1xlvh9o>.fui-MenuItem:nth-child(2){margin-right:auto;}", '.f1mf2v5d>.fui-MenuItem:nth-child(2)::before{content:"";}', ".fi8lk9b>.fui-MenuItem:nth-child(2)::before{width:var(--strokeWidthThin);}", ".f1tc32yi>.fui-MenuItem:nth-child(2)::before{height:24px;}", ".f1kve8m0>.fui-MenuItem:nth-child(2)::before{background-color:var(--colorNeutralStroke1);}"]
});
var useMenuSplitGroupStyles_unstable = (state) => {
  const styles = useStyles25();
  state.root.className = mergeClasses(menuSplitGroupClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-menu/lib/components/MenuSplitGroup/MenuSplitGroup.js
var MenuSplitGroup = React208.forwardRef((props, ref) => {
  const state = useMenuSplitGroup_unstable(props, ref);
  useMenuSplitGroupStyles_unstable(state);
  const {
    useMenuSplitGroupStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderMenuSplitGroup_unstable(state);
});
MenuSplitGroup.displayName = "MenuSplitGroup";

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/MenuTrigger.js
var React212 = __toESM(require_react());

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/useMenuTrigger.js
var React209 = __toESM(require_react());
var useMenuTrigger_unstable = (props) => {
  const {
    children,
    disableButtonEnhancement = false
  } = props;
  const triggerRef = useMenuContext_unstable((context) => context.triggerRef);
  const menuPopoverRef = useMenuContext_unstable((context) => context.menuPopoverRef);
  const setOpen = useMenuContext_unstable((context) => context.setOpen);
  const open = useMenuContext_unstable((context) => context.open);
  const triggerId = useMenuContext_unstable((context) => context.triggerId);
  const openOnHover = useMenuContext_unstable((context) => context.openOnHover);
  const openOnContext = useMenuContext_unstable((context) => context.openOnContext);
  const isSubmenu = useIsSubmenu();
  const {
    findFirstFocusable
  } = useFocusFinders();
  const focusFirst = React209.useCallback(() => {
    const firstFocusable = findFirstFocusable(menuPopoverRef.current);
    firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();
  }, [findFirstFocusable, menuPopoverRef]);
  const openedWithKeyboardRef = React209.useRef(false);
  const hasMouseMoved = React209.useRef(false);
  const {
    dir
  } = useFluent();
  const OpenArrowKey = dir === "ltr" ? ArrowRight : ArrowLeft;
  const child = getTriggerChild(children);
  const onContextMenu = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (openOnContext) {
      event.preventDefault();
      setOpen(event, {
        open: true,
        keyboard: false,
        type: "menuTriggerContextMenu",
        event
      });
    }
  };
  const onClick = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (!openOnContext) {
      setOpen(event, {
        open: !open,
        keyboard: openedWithKeyboardRef.current,
        type: "menuTriggerClick",
        event
      });
      openedWithKeyboardRef.current = false;
    }
  };
  const onKeyDown = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    const key = event.key;
    if (!openOnContext && (isSubmenu && key === OpenArrowKey || !isSubmenu && key === ArrowDown)) {
      setOpen(event, {
        open: true,
        keyboard: true,
        type: "menuTriggerKeyDown",
        event
      });
    }
    if (key === Escape && !isSubmenu) {
      setOpen(event, {
        open: false,
        keyboard: true,
        type: "menuTriggerKeyDown",
        event
      });
    }
    if (open && key === OpenArrowKey && isSubmenu) {
      focusFirst();
    }
  };
  const onMouseEnter = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (openOnHover && hasMouseMoved.current) {
      setOpen(event, {
        open: true,
        keyboard: false,
        type: "menuTriggerMouseEnter",
        event
      });
    }
  };
  const onMouseMove = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (openOnHover && !hasMouseMoved.current) {
      setOpen(event, {
        open: true,
        keyboard: false,
        type: "menuTriggerMouseMove",
        event
      });
      hasMouseMoved.current = true;
    }
  };
  const onMouseLeave = (event) => {
    if (isTargetDisabled(event)) {
      return;
    }
    if (openOnHover) {
      setOpen(event, {
        open: false,
        keyboard: false,
        type: "menuTriggerMouseLeave",
        event
      });
    }
  };
  const contextMenuProps = {
    id: triggerId,
    ...child === null || child === void 0 ? void 0 : child.props,
    ref: useMergedRefs(triggerRef, child === null || child === void 0 ? void 0 : child.ref),
    onMouseEnter: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseEnter, onMouseEnter)),
    onMouseLeave: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseLeave, onMouseLeave)),
    onContextMenu: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onContextMenu, onContextMenu)),
    onMouseMove: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseMove, onMouseMove))
  };
  const triggerChildProps = {
    "aria-haspopup": "menu",
    "aria-expanded": !open && !isSubmenu ? void 0 : open,
    ...contextMenuProps,
    onClick: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onClick, onClick)),
    onKeyDown: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onKeyDown, onKeyDown))
  };
  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", triggerChildProps);
  return {
    isSubmenu,
    children: applyTriggerPropsToChildren(children, openOnContext ? contextMenuProps : disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)
  };
};
var isTargetDisabled = (event) => {
  const isDisabled = (el) => el.hasAttribute("disabled") || el.hasAttribute("aria-disabled") && el.getAttribute("aria-disabled") === "true";
  if (isHTMLElement(event.target) && isDisabled(event.target)) {
    return true;
  }
  return isHTMLElement(event.currentTarget) && isDisabled(event.currentTarget);
};

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/renderMenuTrigger.js
var React211 = __toESM(require_react());
var renderMenuTrigger_unstable = (state) => {
  return React211.createElement(MenuTriggerContextProvider, {
    value: state.isSubmenu
  }, state.children);
};

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/MenuTrigger.js
var MenuTrigger = (props) => {
  const state = useMenuTrigger_unstable(props);
  return renderMenuTrigger_unstable(state);
};
MenuTrigger.displayName = "MenuTrigger";
MenuTrigger.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-menu/lib/components/MenuTrigger/MenuTrigger.types.js
var React213 = __toESM(require_react());

// node_modules/@fluentui/react-persona/lib/components/Persona/Persona.js
var React216 = __toESM(require_react());

// node_modules/@fluentui/react-persona/lib/components/Persona/renderPersona.js
var React214 = __toESM(require_react());
var renderPersona_unstable = (state) => {
  const {
    presenceOnly,
    textPosition
  } = state;
  const {
    slots,
    slotProps
  } = getSlots(state);
  const coin = presenceOnly ? slots.presence && React214.createElement(slots.presence, slotProps.presence) : slots.avatar && React214.createElement(slots.avatar, slotProps.avatar);
  return React214.createElement(slots.root, slotProps.root, (textPosition === "after" || textPosition === "below") && coin, slots.primaryText && React214.createElement(slots.primaryText, slotProps.primaryText), slots.secondaryText && React214.createElement(slots.secondaryText, slotProps.secondaryText), slots.tertiaryText && React214.createElement(slots.tertiaryText, slotProps.tertiaryText), slots.quaternaryText && React214.createElement(slots.quaternaryText, slotProps.quaternaryText), textPosition === "before" && coin);
};

// node_modules/@fluentui/react-persona/lib/components/Persona/usePersona.js
var React215 = __toESM(require_react());
var usePersona_unstable = (props, ref) => {
  const {
    name,
    presenceOnly = false,
    size: size2 = "medium",
    textAlignment = "start",
    textPosition = "after"
  } = props;
  const primaryText = resolveShorthand(props.primaryText, {
    required: true,
    defaultProps: {
      children: name
    }
  });
  const secondaryText = resolveShorthand(props.secondaryText);
  const tertiaryText = resolveShorthand(props.tertiaryText);
  const quaternaryText = resolveShorthand(props.quaternaryText);
  const numTextLines = [primaryText, secondaryText, tertiaryText, quaternaryText].filter(Boolean).length;
  return {
    numTextLines,
    presenceOnly,
    size: size2,
    textAlignment,
    textPosition,
    components: {
      root: "div",
      avatar: Avatar,
      presence: PresenceBadge,
      primaryText: "span",
      secondaryText: "span",
      tertiaryText: "span",
      quaternaryText: "span"
    },
    root: getNativeElementProps(
      "div",
      {
        ...props,
        ref
      },
      /* excludedPropNames */
      ["name"]
    ),
    avatar: !presenceOnly ? resolveShorthand(props.avatar, {
      required: true,
      defaultProps: {
        name,
        badge: props.presence,
        size: avatarSizes[size2]
      }
    }) : void 0,
    presence: presenceOnly ? resolveShorthand(props.presence, {
      defaultProps: {
        size: presenceSizes[size2]
      }
    }) : void 0,
    primaryText,
    secondaryText,
    tertiaryText,
    quaternaryText
  };
};
var presenceSizes = {
  "extra-small": "tiny",
  small: "extra-small",
  medium: "small",
  large: "medium",
  "extra-large": "large",
  huge: "large"
};
var avatarSizes = {
  "extra-small": 20,
  small: 28,
  medium: 32,
  large: 36,
  "extra-large": 40,
  huge: 56
};

// node_modules/@fluentui/react-persona/lib/components/Persona/usePersonaStyles.js
var personaClassNames = {
  root: "fui-Persona",
  avatar: "fui-Persona__avatar",
  presence: "fui-Persona__presence",
  primaryText: "fui-Persona__primaryText",
  secondaryText: "fui-Persona__secondaryText",
  tertiaryText: "fui-Persona__tertiaryText",
  quaternaryText: "fui-Persona__quaternaryText"
};
var useRootClassName5 = __resetStyles("rlroi9i", null, [".rlroi9i{display:inline-grid;grid-auto-rows:max-content;grid-auto-flow:column;justify-items:start;grid-template-columns:max-content [middle] auto;}"]);
var useStyles26 = __styles2({
  beforeAfterCenter: {
    wkccdc: "f1iantul"
  },
  after: {},
  before: {
    B7hvi0a: "f1tll2w5",
    Budl1dq: "ffvkwdr"
  },
  below: {
    Bxotwcr: "f1nkeedh",
    B7hvi0a: "f1oiokrs",
    Budl1dq: "f1emgwh2"
  },
  media: {
    Ijaq50: "f1hek2iy"
  },
  mediaBeforeAfterCenter: {
    Ijaq50: "fa4dipu"
  },
  start: {
    qb2dma: "f9h729m"
  },
  center: {
    qb2dma: "f7nlbp4"
  },
  afterAlignToPrimary: {
    qb2dma: "f7nlbp4",
    Ijaq50: "f1rnkkuc",
    Bw0ie65: "f1warjpf"
  },
  beforeAlignToPrimary: {
    qb2dma: "f7nlbp4",
    Ijaq50: "f1rnkkuc",
    Br312pm: "fwu52yu"
  },
  secondLineSpacing: {
    B6of3ja: "f1ryq6si"
  },
  primary: {
    Ijaq50: "f1q3ipgb"
  },
  secondary: {
    Ijaq50: "f3drtdk"
  },
  tertiary: {
    Ijaq50: "fa1o6s1"
  },
  quaternary: {
    Ijaq50: "f1tuwaia"
  }
}, {
  d: [".f1iantul{grid-template-rows:1fr [primary] max-content [secondary] max-content [tertiary] max-content [quaternary] max-content 1fr;}", ".f1tll2w5{justify-items:end;}", ".ffvkwdr{grid-template-columns:auto [middle] max-content;}", ".f1nkeedh{grid-auto-flow:unset;}", ".f1oiokrs{justify-items:center;}", ".f1emgwh2{grid-template-columns:unset;}", ".f1hek2iy{grid-row-start:span 5;}", ".fa4dipu{grid-row-start:span 6;}", ".f9h729m{-webkit-align-self:start;-ms-flex-item-align:start;align-self:start;}", ".f7nlbp4{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;}", ".f1rnkkuc{grid-row-start:unset;}", ".f1warjpf{grid-column-end:middle;}", ".fwu52yu{grid-column-start:middle;}", ".f1ryq6si{margin-top:-2px;}", ".f1q3ipgb{grid-row-start:primary;}", ".f3drtdk{grid-row-start:secondary;}", ".fa1o6s1{grid-row-start:tertiary;}", ".f1tuwaia{grid-row-start:quaternary;}"]
});
var useAvatarSpacingStyles = __styles2({
  "extra-small": {
    Bs1gm4r: "f1e48tse"
  },
  small: {
    Bs1gm4r: "f18q9vkd"
  },
  medium: {
    Bs1gm4r: "f18q9vkd"
  },
  large: {
    Bs1gm4r: "fx34bi6"
  },
  "extra-large": {
    Bs1gm4r: "fx34bi6"
  },
  huge: {
    Bs1gm4r: "f1o96qtm"
  },
  after: {
    t21cq0: ["f103ycu4", "f1tao51"]
  },
  below: {
    jrapky: "fbo7acy"
  },
  before: {
    Frg6f3: ["f1tao51", "f103ycu4"]
  }
}, {
  d: [".f1e48tse{--fui-Persona__avatar--spacing:var(--spacingHorizontalSNudge);}", ".f18q9vkd{--fui-Persona__avatar--spacing:var(--spacingHorizontalS);}", ".fx34bi6{--fui-Persona__avatar--spacing:var(--spacingHorizontalMNudge);}", ".f1o96qtm{--fui-Persona__avatar--spacing:var(--spacingHorizontalM);}", ".f103ycu4{margin-right:var(--fui-Persona__avatar--spacing);}", ".f1tao51{margin-left:var(--fui-Persona__avatar--spacing);}", ".fbo7acy{margin-bottom:var(--fui-Persona__avatar--spacing);}"]
});
var usePresenceSpacingStyles = __styles2({
  small: {
    Bs1gm4r: "f1e48tse"
  }
}, {
  d: [".f1e48tse{--fui-Persona__avatar--spacing:var(--spacingHorizontalSNudge);}"]
});
var usePersonaStyles_unstable = (state) => {
  const {
    presenceOnly,
    size: size2,
    textAlignment,
    textPosition
  } = state;
  const alignToPrimary = presenceOnly && textAlignment === "start" && size2 !== "extra-large" && size2 !== "huge";
  const alignBeforeAfterCenter = textPosition !== "below" && textAlignment === "center";
  const {
    primaryTextClassName,
    optionalTextClassName
  } = useTextClassNames(state, alignToPrimary);
  const rootClassName = useRootClassName5();
  const styles = useStyles26();
  const avatarSpacingStyles = useAvatarSpacingStyles();
  const presenceSpacingStyles = {
    ...avatarSpacingStyles,
    ...usePresenceSpacingStyles()
  };
  state.root.className = mergeClasses(personaClassNames.root, rootClassName, alignBeforeAfterCenter && styles.beforeAfterCenter, styles[textPosition], state.root.className);
  if (state.avatar) {
    state.avatar.className = mergeClasses(personaClassNames.avatar, textPosition !== "below" && styles.media, alignBeforeAfterCenter && styles.mediaBeforeAfterCenter, styles[textAlignment], avatarSpacingStyles[size2], avatarSpacingStyles[textPosition], state.avatar.className);
  }
  if (state.presence) {
    state.presence.className = mergeClasses(personaClassNames.presence, textPosition !== "below" && styles.media, alignBeforeAfterCenter && styles.mediaBeforeAfterCenter, styles[textAlignment], presenceSpacingStyles[size2], presenceSpacingStyles[textPosition], textPosition === "after" && alignToPrimary && styles.afterAlignToPrimary, textPosition === "before" && alignToPrimary && styles.beforeAlignToPrimary, state.presence.className);
  }
  if (state.primaryText) {
    state.primaryText.className = mergeClasses(personaClassNames.primaryText, alignBeforeAfterCenter && styles.primary, primaryTextClassName, state.primaryText.className);
  }
  if (state.secondaryText) {
    state.secondaryText.className = mergeClasses(personaClassNames.secondaryText, alignBeforeAfterCenter && styles.secondary, optionalTextClassName, styles.secondLineSpacing, state.secondaryText.className);
  }
  if (state.tertiaryText) {
    state.tertiaryText.className = mergeClasses(personaClassNames.tertiaryText, alignBeforeAfterCenter && styles.tertiary, optionalTextClassName, state.tertiaryText.className);
  }
  if (state.quaternaryText) {
    state.quaternaryText.className = mergeClasses(personaClassNames.quaternaryText, alignBeforeAfterCenter && styles.quaternary, optionalTextClassName, state.quaternaryText.className);
  }
  return state;
};
var usePrimaryTextBaseClassName = __resetStyles("rvj41k9", null, [".rvj41k9{display:block;color:var(--colorNeutralForeground1);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);}"]);
var useOptionalTextBaseClassName = __resetStyles("rp1pf9e", null, [".rp1pf9e{display:block;color:var(--colorNeutralForeground2);font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);}"]);
var useTextStyles = __styles2({
  beforeAlignToPrimary: {
    Bw0ie65: "f1warjpf"
  },
  afterAlignToPrimary: {
    Br312pm: "fwu52yu"
  },
  body1: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  caption1: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  subtitle2: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".f1warjpf{grid-column-end:middle;}", ".fwu52yu{grid-column-start:middle;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});
var useTextClassNames = (state, alignToPrimary) => {
  const {
    presenceOnly,
    size: size2,
    textPosition
  } = state;
  const primaryTextBaseClassName = usePrimaryTextBaseClassName();
  const optionalTextBaseClassName = useOptionalTextBaseClassName();
  const textStyles = useTextStyles();
  let primaryTextSize;
  let alignToPrimaryClassName;
  if (presenceOnly) {
    if (size2 === "extra-small") {
      primaryTextSize = state.numTextLines <= 1 && textStyles.caption1;
    } else if (size2 === "extra-large" || size2 === "huge") {
      primaryTextSize = textStyles.subtitle2;
    }
    if (alignToPrimary) {
      if (textPosition === "before") {
        alignToPrimaryClassName = textStyles.beforeAlignToPrimary;
      } else if (textPosition === "after") {
        alignToPrimaryClassName = textStyles.afterAlignToPrimary;
      }
    }
  } else {
    if (size2 === "huge") {
      primaryTextSize = textStyles.subtitle2;
    } else if (size2 === "extra-large") {
      primaryTextSize = textStyles.subtitle2;
    }
  }
  return {
    primaryTextClassName: mergeClasses(primaryTextBaseClassName, primaryTextSize, alignToPrimaryClassName),
    optionalTextClassName: mergeClasses(optionalTextBaseClassName, !presenceOnly && size2 === "huge" && textStyles.body1, alignToPrimaryClassName)
  };
};

// node_modules/@fluentui/react-persona/lib/components/Persona/Persona.js
var Persona = React216.forwardRef((props, ref) => {
  const state = usePersona_unstable(props, ref);
  usePersonaStyles_unstable(state);
  const {
    usePersonaStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderPersona_unstable(state);
});
Persona.displayName = "Persona";

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/RadioGroup.js
var React219 = __toESM(require_react());

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/renderRadioGroup.js
var React217 = __toESM(require_react());

// node_modules/@fluentui/react-radio/lib/contexts/RadioGroupContext.js
var RadioGroupContext = createContext10(void 0);
var radioGroupContextDefaultValue = {};
var RadioGroupProvider = RadioGroupContext.Provider;
var useRadioGroupContext_unstable = (selector) => useContextSelector(RadioGroupContext, (ctx = radioGroupContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/renderRadioGroup.js
var renderRadioGroup_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React217.createElement(RadioGroupContext.Provider, {
    value: contextValues.radioGroup
  }, React217.createElement(slots.root, slotProps.root));
};

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/useRadioGroup.js
var React218 = __toESM(require_react());
var useRadioGroup_unstable = (props, ref) => {
  const generatedName = useId2("radiogroup-");
  const {
    name = generatedName,
    value,
    defaultValue,
    disabled,
    layout = "vertical",
    onChange,
    required
  } = props;
  return {
    layout,
    name,
    value,
    defaultValue,
    disabled,
    required,
    components: {
      root: "div"
    },
    root: {
      ref,
      role: "radiogroup",
      ...getNativeElementProps(
        "div",
        props,
        /*excludedPropNames:*/
        ["onChange", "name"]
      ),
      onChange: useEventCallback((ev) => {
        if (onChange && isHTMLElement(ev.target, {
          constructorName: "HTMLInputElement"
        }) && ev.target.type === "radio") {
          onChange(ev, {
            value: ev.target.value
          });
        }
      })
    }
  };
};

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/useRadioGroupStyles.js
var radioGroupClassNames = {
  root: "fui-RadioGroup"
};
var useStyles27 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f6jr5hl"
  },
  vertical: {
    Beiy3e4: "f1vx9l62"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f6jr5hl{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}"]
});
var useRadioGroupStyles_unstable = (state) => {
  const styles = useStyles27();
  state.root.className = mergeClasses(radioGroupClassNames.root, styles.root, state.layout === "vertical" && styles.vertical, state.root.className);
};

// node_modules/@fluentui/react-radio/lib/contexts/useRadioGroupContextValues.js
var useRadioGroupContextValues = (state) => {
  const {
    name,
    value,
    defaultValue,
    disabled,
    layout,
    required
  } = state;
  const radioGroup = {
    name,
    value,
    defaultValue,
    disabled,
    layout,
    required
  };
  return {
    radioGroup
  };
};

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/RadioGroup.js
var RadioGroup = React219.forwardRef((props, ref) => {
  const state = useRadioGroup_unstable(props, ref);
  const contextValues = useRadioGroupContextValues(state);
  useRadioGroupStyles_unstable(state);
  const {
    useRadioGroupStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderRadioGroup_unstable(state, contextValues);
});
RadioGroup.displayName = "RadioGroup";

// node_modules/@fluentui/react-radio/lib/components/RadioGroup/RadioGroup.types.js
var React220 = __toESM(require_react());

// node_modules/@fluentui/react-radio/lib/components/Radio/Radio.js
var React223 = __toESM(require_react());

// node_modules/@fluentui/react-radio/lib/components/Radio/renderRadio.js
var React221 = __toESM(require_react());
var renderRadio_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React221.createElement(slots.root, slotProps.root, React221.createElement(slots.input, slotProps.input), React221.createElement(slots.indicator, slotProps.indicator), slots.label && React221.createElement(slots.label, slotProps.label));
};

// node_modules/@fluentui/react-radio/lib/components/Radio/useRadio.js
var React222 = __toESM(require_react());
var useRadio_unstable = (props, ref) => {
  const nameGroup = useRadioGroupContext_unstable((ctx) => ctx.name);
  const value = useRadioGroupContext_unstable((ctx) => ctx.value);
  const defaultValue = useRadioGroupContext_unstable((ctx) => ctx.defaultValue);
  const disabledGroup = useRadioGroupContext_unstable((ctx) => ctx.disabled);
  const layout = useRadioGroupContext_unstable((ctx) => ctx.layout);
  const requiredGroup = useRadioGroupContext_unstable((ctx) => ctx.required);
  const {
    name = nameGroup,
    checked = value !== void 0 ? value === props.value : void 0,
    defaultChecked = defaultValue !== void 0 ? defaultValue === props.value : void 0,
    labelPosition = layout === "horizontal-stacked" ? "below" : "after",
    disabled = disabledGroup,
    required = requiredGroup,
    onChange
  } = props;
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: ["checked", "defaultChecked", "onChange"]
  });
  const root = resolveShorthand(props.root, {
    required: true,
    defaultProps: {
      ref: useFocusWithin(),
      ...nativeProps.root
    }
  });
  const input = resolveShorthand(props.input, {
    required: true,
    defaultProps: {
      ref,
      type: "radio",
      id: useId2("radio-", nativeProps.primary.id),
      name,
      checked,
      defaultChecked,
      disabled,
      required,
      ...nativeProps.primary
    }
  });
  input.onChange = mergeCallbacks(input.onChange, (ev) => {
    return onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
      value: ev.currentTarget.value
    });
  });
  const label = resolveShorthand(props.label, {
    defaultProps: {
      htmlFor: input.id,
      disabled
    }
  });
  const indicator = resolveShorthand(props.indicator, {
    required: true,
    defaultProps: {
      "aria-hidden": true,
      children: React222.createElement(CircleFilled, null)
    }
  });
  return {
    labelPosition,
    components: {
      root: "span",
      input: "input",
      label: Label,
      indicator: "div"
    },
    root,
    input,
    label,
    indicator
  };
};

// node_modules/@fluentui/react-radio/lib/components/Radio/useRadioStyles.js
var radioClassNames = {
  root: "fui-Radio",
  indicator: "fui-Radio__indicator",
  input: "fui-Radio__input",
  label: "fui-Radio__label"
};
var useRootBaseClassName3 = __resetStyles("r18vxbm9", "r1631i6s", [".r18vxbm9{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;position:relative;}", ".r18vxbm9:focus{outline-style:none;}", ".r18vxbm9:focus-visible{outline-style:none;}", ".r18vxbm9[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r18vxbm9[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:2px;border-right-width:2px;border-bottom-width:2px;border-left-width:2px;border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;left:-2px;right:-2px;}', ".r1631i6s{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;position:relative;}", ".r1631i6s:focus{outline-style:none;}", ".r1631i6s:focus-visible{outline-style:none;}", ".r1631i6s[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.r1631i6s[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:2px;border-left-width:2px;border-bottom-width:2px;border-right-width:2px;border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;right:-2px;left:-2px;}']);
var useRootStyles9 = __styles2({
  vertical: {
    Beiy3e4: "f1vx9l62",
    Bt984gj: "f122n59"
  }
}, {
  d: [".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}"]
});
var useInputBaseClassName2 = __resetStyles("r9gx1vl", "r1uk1i2c", [".r9gx1vl{position:absolute;left:0;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));height:100%;box-sizing:border-box;margin:0;opacity:0;}", ".r9gx1vl:enabled{cursor:pointer;}", ".r9gx1vl:enabled~.fui-Radio__label{cursor:pointer;}", ".r9gx1vl:not(:checked)~.fui-Radio__indicator>*{opacity:0;}", ".r9gx1vl:enabled:not(:checked)~.fui-Radio__label{color:var(--colorNeutralForeground3);}", ".r9gx1vl:enabled:not(:checked)~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessible);}", ".r9gx1vl:enabled:not(:checked):hover~.fui-Radio__label{color:var(--colorNeutralForeground2);}", ".r9gx1vl:enabled:not(:checked):hover~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessibleHover);}", ".r9gx1vl:enabled:not(:checked):hover:active~.fui-Radio__label{color:var(--colorNeutralForeground1);}", ".r9gx1vl:enabled:not(:checked):hover:active~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".r9gx1vl:enabled:checked~.fui-Radio__label{color:var(--colorNeutralForeground1);}", ".r9gx1vl:enabled:checked~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStroke);color:var(--colorCompoundBrandForeground1);}", ".r9gx1vl:enabled:checked:hover~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStrokeHover);color:var(--colorCompoundBrandForeground1Hover);}", ".r9gx1vl:enabled:checked:hover:active~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStrokePressed);color:var(--colorCompoundBrandForeground1Pressed);}", ".r9gx1vl:disabled~.fui-Radio__label{color:var(--colorNeutralForegroundDisabled);cursor:default;}", ".r9gx1vl:disabled~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeDisabled);color:var(--colorNeutralForegroundDisabled);}", ".r1uk1i2c{position:absolute;right:0;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));height:100%;box-sizing:border-box;margin:0;opacity:0;}", ".r1uk1i2c:enabled{cursor:pointer;}", ".r1uk1i2c:enabled~.fui-Radio__label{cursor:pointer;}", ".r1uk1i2c:not(:checked)~.fui-Radio__indicator>*{opacity:0;}", ".r1uk1i2c:enabled:not(:checked)~.fui-Radio__label{color:var(--colorNeutralForeground3);}", ".r1uk1i2c:enabled:not(:checked)~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessible);}", ".r1uk1i2c:enabled:not(:checked):hover~.fui-Radio__label{color:var(--colorNeutralForeground2);}", ".r1uk1i2c:enabled:not(:checked):hover~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessibleHover);}", ".r1uk1i2c:enabled:not(:checked):hover:active~.fui-Radio__label{color:var(--colorNeutralForeground1);}", ".r1uk1i2c:enabled:not(:checked):hover:active~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".r1uk1i2c:enabled:checked~.fui-Radio__label{color:var(--colorNeutralForeground1);}", ".r1uk1i2c:enabled:checked~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStroke);color:var(--colorCompoundBrandForeground1);}", ".r1uk1i2c:enabled:checked:hover~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStrokeHover);color:var(--colorCompoundBrandForeground1Hover);}", ".r1uk1i2c:enabled:checked:hover:active~.fui-Radio__indicator{border-color:var(--colorCompoundBrandStrokePressed);color:var(--colorCompoundBrandForeground1Pressed);}", ".r1uk1i2c:disabled~.fui-Radio__label{color:var(--colorNeutralForegroundDisabled);cursor:default;}", ".r1uk1i2c:disabled~.fui-Radio__indicator{border-color:var(--colorNeutralStrokeDisabled);color:var(--colorNeutralForegroundDisabled);}"]);
var useInputStyles3 = __styles2({
  below: {
    a9b677: "fly5x3f",
    Bqenvij: "f1je6zif"
  }
}, {
  d: [".fly5x3f{width:100%;}", ".f1je6zif{height:calc(16px + 2 * var(--spacingVerticalS));}"]
});
var useIndicatorBaseClassName2 = __resetStyles("rid4516", null, [".rid4516{width:16px;height:16px;font-size:12px;box-sizing:border-box;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;overflow:hidden;border:var(--strokeWidthThin) solid;border-radius:var(--borderRadiusCircular);margin:var(--spacingVerticalS) var(--spacingHorizontalS);fill:currentColor;pointer-events:none;}"]);
var useLabelStyles3 = __styles2({
  base: {
    qb2dma: "f7nlbp4",
    z8tnut: "f1kwiid1",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f5b47ha",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"]
  },
  after: {
    uwmqm3: ["fruq291", "f7x41pl"],
    B6of3ja: "fjzwpt6",
    jrapky: "fh6j2fo"
  },
  below: {
    z8tnut: "f1ywm7hm",
    fsow6f: "f17mccla"
  }
}, {
  d: [".f7nlbp4{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;}", ".f1kwiid1{padding-top:var(--spacingVerticalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f5b47ha{padding-bottom:var(--spacingVerticalS);}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}", ".fjzwpt6{margin-top:calc((16px - var(--lineHeightBase300)) / 2);}", ".fh6j2fo{margin-bottom:calc((16px - var(--lineHeightBase300)) / 2);}", ".f1ywm7hm{padding-top:var(--spacingVerticalXS);}", ".f17mccla{text-align:center;}"]
});
var useRadioStyles_unstable = (state) => {
  const {
    labelPosition
  } = state;
  const rootBaseClassName = useRootBaseClassName3();
  const rootStyles = useRootStyles9();
  state.root.className = mergeClasses(radioClassNames.root, rootBaseClassName, labelPosition === "below" && rootStyles.vertical, state.root.className);
  const inputBaseClassName = useInputBaseClassName2();
  const inputStyles = useInputStyles3();
  state.input.className = mergeClasses(radioClassNames.input, inputBaseClassName, labelPosition === "below" && inputStyles.below, state.input.className);
  const indicatorBaseClassName = useIndicatorBaseClassName2();
  state.indicator.className = mergeClasses(radioClassNames.indicator, indicatorBaseClassName, state.indicator.className);
  const labelStyles = useLabelStyles3();
  if (state.label) {
    state.label.className = mergeClasses(radioClassNames.label, labelStyles.base, labelStyles[labelPosition], state.label.className);
  }
};

// node_modules/@fluentui/react-radio/lib/components/Radio/Radio.js
var Radio = React223.forwardRef((props, ref) => {
  const state = useRadio_unstable(props, ref);
  useRadioStyles_unstable(state);
  const {
    useRadioStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderRadio_unstable(state);
});
Radio.displayName = "Radio";

// node_modules/@fluentui/react-radio/lib/components/Radio/Radio.types.js
var React224 = __toESM(require_react());

// node_modules/@fluentui/react-radio/lib/components/RadioGroupField/RadioGroupField.js
var radioGroupFieldClassNames = getDeprecatedFieldClassNames(radioGroupClassNames.root);
var RadioGroupField = makeDeprecatedField(RadioGroup);

// node_modules/@fluentui/react-select/lib/components/Select/Select.js
var React227 = __toESM(require_react());

// node_modules/@fluentui/react-select/lib/components/Select/useSelect.js
var React225 = __toESM(require_react());
var useSelect_unstable = (props, ref) => {
  const overrides = useOverrides();
  var _overrides_inputDefaultAppearance;
  const {
    defaultValue,
    value,
    select,
    icon,
    root,
    appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : "outline",
    onChange,
    size: size2 = "medium"
  } = props;
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "select",
    excludedPropNames: ["appearance", "defaultValue", "onChange", "size", "value"]
  });
  const state = {
    size: size2,
    appearance,
    components: {
      root: "span",
      select: "select",
      icon: "span"
    },
    select: resolveShorthand(select, {
      required: true,
      defaultProps: {
        defaultValue,
        value,
        ref,
        ...nativeProps.primary
      }
    }),
    icon: resolveShorthand(icon, {
      required: true,
      defaultProps: {
        children: React225.createElement(ChevronDownRegular, null)
      }
    }),
    root: resolveShorthand(root, {
      required: true,
      defaultProps: nativeProps.root
    })
  };
  state.select.onChange = useEventCallback((event) => {
    onChange === null || onChange === void 0 ? void 0 : onChange(event, {
      value: event.target.value
    });
  });
  return state;
};

// node_modules/@fluentui/react-select/lib/components/Select/renderSelect.js
var React226 = __toESM(require_react());
var renderSelect_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React226.createElement(slots.root, slotProps.root, React226.createElement(slots.select, slotProps.select, slotProps.select.children), React226.createElement(slots.icon, slotProps.icon));
};

// node_modules/@fluentui/react-select/lib/components/Select/useSelectStyles.js
var selectClassNames = {
  root: "fui-Select",
  select: "fui-Select__select",
  icon: "fui-Select__icon"
};
var iconSizes2 = {
  small: "16px",
  medium: "20px",
  large: "24px"
};
var paddingRight = {
  small: `calc(${tokens.spacingHorizontalSNudge}
    + ${iconSizes2.small}
    + ${tokens.spacingHorizontalXXS}
    + ${tokens.spacingHorizontalXXS})`,
  medium: `calc(${tokens.spacingHorizontalMNudge}
    + ${iconSizes2.medium}
    + ${tokens.spacingHorizontalXXS}
    + ${tokens.spacingHorizontalXXS})`,
  large: `calc(${tokens.spacingHorizontalM}
    + ${iconSizes2.large}
    + ${tokens.spacingHorizontalSNudge}
    + ${tokens.spacingHorizontalSNudge})`
};
var paddingLeft = {
  small: `calc(${tokens.spacingHorizontalSNudge} + ${tokens.spacingHorizontalXXS})`,
  medium: `calc(${tokens.spacingHorizontalMNudge} + ${tokens.spacingHorizontalXXS})`,
  large: `calc(${tokens.spacingHorizontalM} + ${tokens.spacingHorizontalSNudge})`
};
var useRootStyles10 = __styles2({
  base: {
    Bt984gj: "f122n59",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    Eh141a: "flvyvdh",
    Bahqtrf: "fk6fouc",
    qhf8xq: "f10pi13n",
    h62rwi: "f7ll8cq",
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    Bl18szs: ["f18vqdqu", "f53nyzz"],
    B4j8arr: ["f53nyzz", "f18vqdqu"],
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    Dlnsje: "fhwjr99",
    E3zdtr: "f1mdlcz9",
    By385i5: "fo72kxq",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    B1piin3: ["f15yvnhg", "f1n6gb5g"],
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o"
  }
}, {
  d: [".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f1ewtqcl{box-sizing:border-box;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".flvyvdh{-webkit-box-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f10pi13n{position:relative;}", ".f7ll8cq::after{background-image:linear-gradient(\n        0deg,\n        var(--colorCompoundBrandStroke) 0%,\n        var(--colorCompoundBrandStroke) 50%,\n        transparent 50%,\n        transparent 100%\n      );}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f18vqdqu::after{border-top-right-radius:0;}", ".f53nyzz::after{border-top-left-radius:0;}", ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".fhwjr99::after{height:var(--borderRadiusMedium);}", ".f1mdlcz9::after{position:absolute;}", ".fo72kxq::after{bottom:0;}", ".f1n6gb5g::after{left:0;}", ".f15yvnhg::after{right:0;}", ".f1yk9hq::after{-webkit-transform:scaleX(0);-moz-transform:scaleX(0);-ms-transform:scaleX(0);transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]],
  w: [".fjw5xc1:focus-within::after{-webkit-transform:scaleX(1);-moz-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}"]
});
var useSelectStyles = __styles2({
  base: {
    Bowrso0: "fqrijq1",
    B4j52fo: "f5ogflp",
    Bekrc4i: ["f1hqa2wf", "finvdd3"],
    Bn0qgzm: "f1f09k3d",
    ibv6hh: ["finvdd3", "f1hqa2wf"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "f1p3nwhy",
    h3c5rm: ["f11589ue", "f1pdflbu"],
    B9xav0g: "f1q5o8ev",
    zhjwy3: ["f1pdflbu", "f11589ue"],
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    E5pizo: "f1couhl3",
    B7ck84d: "f1ewtqcl",
    sj55zd: "f19n0e5",
    Bceei9c: "f1k6fduh",
    Bh6795r: "fqerorx",
    B2u0y6b: "f6dzj5z",
    Byoj8tv: "f1qch9an",
    z8tnut: "f1g0x7ka",
    B3aqqti: "fatbyko",
    Brovlpu: "f1grzc83",
    Bxa1mx5: "f19shzzi"
  },
  disabled: {
    De3pzq: "f1c21dwh",
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  },
  disabledUnderline: {
    g2u3we: "fgig46g",
    h3c5rm: ["f1mxt3zg", "fziff3p"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fziff3p", "f1mxt3zg"]
  },
  small: {
    Bqenvij: "frvgh55",
    uwmqm3: ["f1xile11", "fqznh8f"],
    z189sj: ["fiqd4sw", "f11fkzut"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  medium: {
    Bqenvij: "f1d2rq10",
    uwmqm3: ["f1e60jzv", "f135dnwl"],
    z189sj: ["f154vowv", "flqamny"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    Bqenvij: "fbhnoac",
    uwmqm3: ["fnphzt9", "flt1dlf"],
    z189sj: ["f1xi5ia2", "f1xi1l47"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k"
  },
  outline: {
    De3pzq: "fxugw4r",
    B4j52fo: "f5ogflp",
    Bekrc4i: ["f1hqa2wf", "finvdd3"],
    Bn0qgzm: "f1f09k3d",
    ibv6hh: ["finvdd3", "f1hqa2wf"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1c1zstj",
    zhjwy3: ["f1lxtadh", "f1akhkt"]
  },
  outlineInteractive: {
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "flmw63s",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "fqhmt4z",
    B50zh58: ["f4ruux4", "f1assf6x"]
  },
  underline: {
    De3pzq: "f1c21dwh",
    Bn0qgzm: "f1f09k3d",
    oivjwe: "fg706s2",
    B9xav0g: "f1c1zstj",
    Bbmb7ep: ["f1krrbdw", "f1deotkl"],
    Beyfa6y: ["f1deotkl", "f1krrbdw"],
    B7oj6ja: ["f10ostut", "f1ozlkrg"],
    Btl43ni: ["f1ozlkrg", "f10ostut"]
  },
  "filled-lighter": {
    De3pzq: "fxugw4r"
  },
  "filled-darker": {
    De3pzq: "f16xq7d1"
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  },
  invalidUnderline: {
    hhx65j: "f1fgmyf4"
  }
}, {
  d: [".fqrijq1{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;}", ".f5ogflp{border-top-width:1px;}", ".f1hqa2wf{border-right-width:1px;}", ".finvdd3{border-left-width:1px;}", ".f1f09k3d{border-bottom-width:1px;}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".f1p3nwhy{border-top-color:transparent;}", ".f11589ue{border-right-color:transparent;}", ".f1pdflbu{border-left-color:transparent;}", ".f1q5o8ev{border-bottom-color:transparent;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f1couhl3{box-shadow:none;}", ".f1ewtqcl{box-sizing:border-box;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1k6fduh{cursor:pointer;}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f6dzj5z{max-width:100%;}", ".f1qch9an{padding-bottom:0;}", ".f1g0x7ka{padding-top:0;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".fgig46g{border-top-color:var(--colorTransparentStrokeDisabled);}", ".f1mxt3zg{border-right-color:var(--colorTransparentStrokeDisabled);}", ".fziff3p{border-left-color:var(--colorTransparentStrokeDisabled);}", ".frvgh55{height:24px;}", ".f1xile11{padding-left:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".fqznh8f{padding-right:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".fiqd4sw{padding-right:calc(var(--spacingHorizontalSNudge)\n    + 16px\n    + var(--spacingHorizontalXXS)\n    + var(--spacingHorizontalXXS));}", ".f11fkzut{padding-left:calc(var(--spacingHorizontalSNudge)\n    + 16px\n    + var(--spacingHorizontalXXS)\n    + var(--spacingHorizontalXXS));}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1d2rq10{height:32px;}", ".f1e60jzv{padding-left:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f135dnwl{padding-right:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f154vowv{padding-right:calc(var(--spacingHorizontalMNudge)\n    + 20px\n    + var(--spacingHorizontalXXS)\n    + var(--spacingHorizontalXXS));}", ".flqamny{padding-left:calc(var(--spacingHorizontalMNudge)\n    + 20px\n    + var(--spacingHorizontalXXS)\n    + var(--spacingHorizontalXXS));}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fbhnoac{height:40px;}", ".fnphzt9{padding-left:calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", ".flt1dlf{padding-right:calc(var(--spacingHorizontalM) + var(--spacingHorizontalSNudge));}", ".f1xi5ia2{padding-right:calc(var(--spacingHorizontalM)\n    + 24px\n    + var(--spacingHorizontalSNudge)\n    + var(--spacingHorizontalSNudge));}", ".f1xi1l47{padding-left:calc(var(--spacingHorizontalM)\n    + 24px\n    + var(--spacingHorizontalSNudge)\n    + var(--spacingHorizontalSNudge));}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".f1krrbdw{border-bottom-right-radius:0;}", ".f1deotkl{border-bottom-left-radius:0;}", ".f10ostut{border-top-right-radius:0;}", ".f1ozlkrg{border-top-left-radius:0;}", ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}"],
  f: [".fatbyko:focus{outline-width:2px;}", ".f1grzc83:focus{outline-style:solid;}", ".f19shzzi:focus{outline-color:transparent;}"],
  m: [["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rvyvqg{border-right-color:GrayText;}.f14g86mu{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  h: [".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".flmw63s:hover{border-bottom-color:var(--colorNeutralStrokeAccessible);}"],
  a: [".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".fqhmt4z:active{border-bottom-color:var(--colorNeutralStrokeAccessible);}"]
});
var useIconStyles6 = __styles2({
  icon: {
    B7ck84d: "f1ewtqcl",
    sj55zd: "fxkbij4",
    mc9l5x: "ftgm304",
    qhf8xq: "f1euv43f",
    Bkecrkj: "f1aehjj5",
    Bo70h7d: "fvc9v3g"
  },
  disabled: {
    sj55zd: "f1s2aq7o",
    Bbusuzp: "f1dcs8yz"
  },
  small: {
    Be2twd7: "f4ybsrx",
    Bqenvij: "fd461yt",
    j35jbq: ["f13lnp83", "f1i5nn0v"],
    a9b677: "fjw5fx7"
  },
  medium: {
    Be2twd7: "fe5j1ua",
    Bqenvij: "fjamq6b",
    j35jbq: ["fnyteob", "f1enpzzf"],
    a9b677: "f64fuq3"
  },
  large: {
    Be2twd7: "f1rt2boy",
    Bqenvij: "frvgh55",
    j35jbq: ["f8b87gs", "fedtrts"],
    a9b677: "fq4mcun"
  }
}, {
  d: [".f1ewtqcl{box-sizing:border-box;}", ".fxkbij4{color:var(--colorNeutralStrokeAccessible);}", ".ftgm304{display:block;}", ".f1euv43f{position:absolute;}", ".f1aehjj5{pointer-events:none;}", ".fvc9v3g svg{display:block;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".f4ybsrx{font-size:16px;}", ".fd461yt{height:16px;}", ".f13lnp83{right:var(--spacingHorizontalSNudge);}", ".f1i5nn0v{left:var(--spacingHorizontalSNudge);}", ".fjw5fx7{width:16px;}", ".fe5j1ua{font-size:20px;}", ".fjamq6b{height:20px;}", ".fnyteob{right:var(--spacingHorizontalMNudge);}", ".f1enpzzf{left:var(--spacingHorizontalMNudge);}", ".f64fuq3{width:20px;}", ".f1rt2boy{font-size:24px;}", ".frvgh55{height:24px;}", ".f8b87gs{right:var(--spacingHorizontalM);}", ".fedtrts{left:var(--spacingHorizontalM);}", ".fq4mcun{width:24px;}"],
  m: [["@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useSelectStyles_unstable = (state) => {
  const {
    size: size2,
    appearance
  } = state;
  const disabled = state.select.disabled;
  const invalid = `${state.select["aria-invalid"]}` === "true";
  const iconStyles = useIconStyles6();
  const rootStyles = useRootStyles10();
  const selectStyles = useSelectStyles();
  state.root.className = mergeClasses(selectClassNames.root, rootStyles.base, state.root.className);
  state.select.className = mergeClasses(selectClassNames.select, selectStyles.base, selectStyles[size2], selectStyles[appearance], !disabled && appearance === "outline" && selectStyles.outlineInteractive, !disabled && invalid && appearance !== "underline" && selectStyles.invalid, !disabled && invalid && appearance === "underline" && selectStyles.invalidUnderline, disabled && selectStyles.disabled, disabled && appearance === "underline" && selectStyles.disabledUnderline, state.select.className);
  if (state.icon) {
    state.icon.className = mergeClasses(selectClassNames.icon, iconStyles.icon, disabled && iconStyles.disabled, iconStyles[size2], state.icon.className);
  }
  return state;
};

// node_modules/@fluentui/react-select/lib/components/Select/Select.js
var Select2 = React227.forwardRef((props, ref) => {
  const state = useSelect_unstable(props, ref);
  useSelectStyles_unstable(state);
  const {
    useSelectStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderSelect_unstable(state);
});
Select2.displayName = "Select";

// node_modules/@fluentui/react-select/lib/components/Select/Select.types.js
var React228 = __toESM(require_react());

// node_modules/@fluentui/react-select/lib/components/SelectField/SelectField.js
var selectFieldClassNames = getDeprecatedFieldClassNames(selectClassNames.root);
var SelectField = makeDeprecatedField(Select2);

// node_modules/@fluentui/react-slider/lib/components/Slider/Slider.js
var React232 = __toESM(require_react());

// node_modules/@fluentui/react-slider/lib/components/Slider/useSlider.js
var React230 = __toESM(require_react());

// node_modules/@fluentui/react-slider/lib/components/Slider/useSliderState.js
var React229 = __toESM(require_react());

// node_modules/@fluentui/react-slider/lib/components/Slider/useSliderStyles.js
var sliderClassNames = {
  root: "fui-Slider",
  rail: "fui-Slider__rail",
  thumb: "fui-Slider__thumb",
  input: "fui-Slider__input"
};
var sliderCSSVars = {
  sliderDirectionVar: `--fui-Slider--direction`,
  sliderProgressVar: `--fui-Slider--progress`,
  sliderStepsPercentVar: `--fui-Slider--steps-percent`
};
var {
  sliderDirectionVar,
  sliderStepsPercentVar,
  sliderProgressVar
} = sliderCSSVars;
var useRootStyles11 = __styles2({
  root: {
    qhf8xq: "f10pi13n",
    mc9l5x: "fwk3njj",
    lpbzjs: "f1sdsnyy",
    Bt984gj: "f122n59",
    B7hvi0a: "f1oiokrs"
  },
  small: {
    Bi64ftq: "f1agqo6f",
    Ba19x4e: "f1i7ztpd",
    sshi5w: "f1pha7fy"
  },
  medium: {
    Bi64ftq: "f1a78h9h",
    Ba19x4e: "fuok0yf",
    sshi5w: "f1nxs5xn"
  },
  horizontal: {
    Bf4jedk: "fyvtabn",
    wkccdc: "fgfd48t",
    Budl1dq: "f4t5rw1"
  },
  vertical: {
    sshi5w: "f1pzv1zu",
    wkccdc: "fktlcaf",
    Budl1dq: "fiadc6h"
  },
  enabled: {
    B7wi8oa: "f4l8x3l",
    B250r6j: "f671q34",
    Bpmy4es: "fvfzmw5",
    Buw9y6v: "faw1t00",
    Bq939m0: "fxdgx5",
    gjzr1t: "fii04fa",
    tg7hqu: "f36hzz8",
    ypdvl1: "f1volkfw",
    Bw5jdd4: "f1xddb6",
    Bdjie01: "fcdikl",
    Bvh9j6m: "fhpzgm6",
    Bvsvvpo: "f1q6pm3h"
  },
  disabled: {
    Bpmy4es: "foojseg",
    B7wi8oa: "f1lgdqhv",
    B250r6j: "f1veetlj",
    ypdvl1: "fu12m3e",
    Bw5jdd4: "fi9guym",
    Bdjie01: "fcdjl4u"
  },
  focusIndicatorHorizontal: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bssx7fj: "f1b1k54r",
    uh7if5: ["f4ne723", "fqqcjud"],
    clntm0: "fh7aioi",
    Dlk2r6: ["fqqcjud", "f4ne723"],
    B2j2mmj: "ffht0p2",
    wigs8: "f1p0ul1q",
    pbfy6t: "f1c901ms",
    B0v4ure: "f1alokd7",
    ghq09: "f78i1la",
    B24cy0v: ["f1kvsw7t", "f1bw8brt"],
    Bwckmig: "f8k7e5g",
    Bvwlmkc: ["f1bw8brt", "f1kvsw7t"],
    Bbgo44z: "f1pmxfrl",
    Bil7v7r: ["fszkfcr", "f1ap5ily"],
    skfxo0: "f57dp0y",
    jo1ztg: ["f1ap5ily", "fszkfcr"],
    Ba3ybja: ["f11dm2qb", "f136rfnd"],
    az1dzo: ["f136rfnd", "f11dm2qb"],
    vppk2z: ["fdsq1qd", "f1khssms"],
    B6352mv: ["f1khssms", "fdsq1qd"],
    nr063g: "fq4eyks",
    Blmvk6g: ["f1ya6x16", "ftuszwa"],
    Bsiemmq: "f1e2iu44",
    B98u21t: ["ftuszwa", "f1ya6x16"],
    B2pnrqr: "f1pffoy2",
    Bhhzhcn: "fs6b7xr",
    Bec0n69: ["f15fv2gd", "f1bmyog6"],
    B29w5g4: ["f1bmyog6", "f15fv2gd"]
  },
  focusIndicatorVertical: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bssx7fj: "f1b1k54r",
    uh7if5: ["f4ne723", "fqqcjud"],
    clntm0: "fh7aioi",
    Dlk2r6: ["fqqcjud", "f4ne723"],
    B2j2mmj: "ffht0p2",
    wigs8: "f1p0ul1q",
    pbfy6t: "f1c901ms",
    B0v4ure: "f1alokd7",
    ghq09: "f78i1la",
    B24cy0v: ["f1kvsw7t", "f1bw8brt"],
    Bwckmig: "f8k7e5g",
    Bvwlmkc: ["f1bw8brt", "f1kvsw7t"],
    Bbgo44z: "f1pmxfrl",
    Bil7v7r: ["fszkfcr", "f1ap5ily"],
    skfxo0: "f57dp0y",
    jo1ztg: ["f1ap5ily", "fszkfcr"],
    Ba3ybja: ["f11dm2qb", "f136rfnd"],
    az1dzo: ["f136rfnd", "f11dm2qb"],
    vppk2z: ["fdsq1qd", "f1khssms"],
    B6352mv: ["f1khssms", "fdsq1qd"],
    nr063g: "fq4eyks",
    Blmvk6g: ["f1ya6x16", "ftuszwa"],
    Bsiemmq: "f1e2iu44",
    B98u21t: ["ftuszwa", "f1ya6x16"],
    B2pnrqr: "f1hxpdv8",
    Bhhzhcn: "f1dmxpeg",
    Bec0n69: ["femsgmt", "fm5xmfm"],
    B29w5g4: ["fm5xmfm", "femsgmt"]
  }
}, {
  d: [".f10pi13n{position:relative;}", ".fwk3njj{display:inline-grid;}", ".f1sdsnyy{touch-action:none;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f1oiokrs{justify-items:center;}", ".f1agqo6f{--fui-Slider__thumb--size:16px;}", ".f1i7ztpd{--fui-Slider__rail--size:2px;}", ".f1pha7fy{min-height:24px;}", ".f1a78h9h{--fui-Slider__thumb--size:20px;}", ".fuok0yf{--fui-Slider__rail--size:4px;}", ".f1nxs5xn{min-height:32px;}", ".fyvtabn{min-width:120px;}", ".fgfd48t{grid-template-rows:1fr var(--fui-Slider__thumb--size) 1fr;}", ".f4t5rw1{grid-template-columns:1fr calc(100% - var(--fui-Slider__thumb--size)) 1fr;}", ".f1pzv1zu{min-height:120px;}", ".fktlcaf{grid-template-rows:1fr calc(100% - var(--fui-Slider__thumb--size)) 1fr;}", ".fiadc6h{grid-template-columns:1fr var(--fui-Slider__thumb--size) 1fr;}", ".f4l8x3l{--fui-Slider__rail--color:var(--colorNeutralStrokeAccessible);}", ".f671q34{--fui-Slider__progress--color:var(--colorCompoundBrandBackground);}", ".fvfzmw5{--fui-Slider__thumb--color:var(--colorCompoundBrandBackground);}", ".foojseg{--fui-Slider__thumb--color:var(--colorNeutralForegroundDisabled);}", ".f1lgdqhv{--fui-Slider__rail--color:var(--colorNeutralBackgroundDisabled);}", ".f1veetlj{--fui-Slider__progress--color:var(--colorNeutralForegroundDisabled);}", ".f1b1k54r[data-fui-focus-within]:focus-within{border-top-color:transparent;}", ".f4ne723[data-fui-focus-within]:focus-within{border-right-color:transparent;}", ".fqqcjud[data-fui-focus-within]:focus-within{border-left-color:transparent;}", ".fh7aioi[data-fui-focus-within]:focus-within{border-bottom-color:transparent;}", '.ffht0p2[data-fui-focus-within]:focus-within::after{content:"";}', ".f1p0ul1q[data-fui-focus-within]:focus-within::after{position:absolute;}", ".f1c901ms[data-fui-focus-within]:focus-within::after{pointer-events:none;}", ".f1alokd7[data-fui-focus-within]:focus-within::after{z-index:1;}", ".f78i1la[data-fui-focus-within]:focus-within::after{border-top-style:solid;}", ".f1kvsw7t[data-fui-focus-within]:focus-within::after{border-right-style:solid;}", ".f1bw8brt[data-fui-focus-within]:focus-within::after{border-left-style:solid;}", ".f8k7e5g[data-fui-focus-within]:focus-within::after{border-bottom-style:solid;}", ".f1pmxfrl[data-fui-focus-within]:focus-within::after{border-top-width:2px;}", ".fszkfcr[data-fui-focus-within]:focus-within::after{border-right-width:2px;}", ".f1ap5ily[data-fui-focus-within]:focus-within::after{border-left-width:2px;}", ".f57dp0y[data-fui-focus-within]:focus-within::after{border-bottom-width:2px;}", ".f11dm2qb[data-fui-focus-within]:focus-within::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f136rfnd[data-fui-focus-within]:focus-within::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".fdsq1qd[data-fui-focus-within]:focus-within::after{border-top-right-radius:var(--borderRadiusMedium);}", ".f1khssms[data-fui-focus-within]:focus-within::after{border-top-left-radius:var(--borderRadiusMedium);}", ".fq4eyks[data-fui-focus-within]:focus-within::after{border-top-color:var(--colorStrokeFocus2);}", ".f1ya6x16[data-fui-focus-within]:focus-within::after{border-right-color:var(--colorStrokeFocus2);}", ".ftuszwa[data-fui-focus-within]:focus-within::after{border-left-color:var(--colorStrokeFocus2);}", ".f1e2iu44[data-fui-focus-within]:focus-within::after{border-bottom-color:var(--colorStrokeFocus2);}", ".f1pffoy2[data-fui-focus-within]:focus-within::after{top:calc(0px - 2px - -2px);}", ".fs6b7xr[data-fui-focus-within]:focus-within::after{bottom:calc(0px - 2px - -2px);}", ".f15fv2gd[data-fui-focus-within]:focus-within::after{left:calc(0px - 2px - 8px);}", ".f1bmyog6[data-fui-focus-within]:focus-within::after{right:calc(0px - 2px - 8px);}", ".f1hxpdv8[data-fui-focus-within]:focus-within::after{top:calc(0px - 2px - 6px);}", ".f1dmxpeg[data-fui-focus-within]:focus-within::after{bottom:calc(0px - 2px - 6px);}", ".femsgmt[data-fui-focus-within]:focus-within::after{left:calc(0px - 2px - 4px);}", ".fm5xmfm[data-fui-focus-within]:focus-within::after{right:calc(0px - 2px - 4px);}"],
  h: [".faw1t00:hover{--fui-Slider__thumb--color:var(--colorCompoundBrandBackgroundHover);}", ".fxdgx5:hover{--fui-Slider__progress--color:var(--colorCompoundBrandBackgroundHover);}"],
  a: [".fii04fa:active{--fui-Slider__thumb--color:var(--colorCompoundBrandBackgroundPressed);}", ".f36hzz8:active{--fui-Slider__progress--color:var(--colorCompoundBrandBackgroundPressed);}"],
  m: [["@media (forced-colors: active){.f1volkfw{--fui-Slider__rail--color:CanvasText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1xddb6{--fui-Slider__thumb--color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fcdikl{--fui-Slider__progress--color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fhpzgm6:hover{--fui-Slider__thumb--color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1q6pm3h:hover{--fui-Slider__progress--color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fu12m3e{--fui-Slider__rail--color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fi9guym{--fui-Slider__thumb--color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fcdjl4u{--fui-Slider__progress--color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"]
});
var useRailStyles = __styles2({
  rail: {
    Bbmb7ep: ["fnivh3a", "fc7yr5o"],
    Beyfa6y: ["fc7yr5o", "fnivh3a"],
    B7oj6ja: ["f1el4m67", "f8yange"],
    Btl43ni: ["f8yange", "f1el4m67"],
    Bkecrkj: "f1aehjj5",
    Ijaq50: "faunodf",
    nk6f5a: "f88nxoq",
    Br312pm: "fd46tj4",
    Bw0ie65: "f1e2fz10",
    qhf8xq: "f10pi13n",
    Bvjb7m6: "fdgv6k0",
    Bcmaq0h: "fizngqt",
    Bpd4iqm: "fpvhumw",
    oeaueh: "f1yog68k",
    Bw0xxkn: "f13sgyd8",
    Ftih45: "fzhtfnv",
    Brfgrao: "f1j7ml58",
    Bbn5juq: "fx36ao7",
    Brdvuy1: "fux3rle"
  },
  horizontal: {
    a9b677: "fly5x3f",
    Bqenvij: "f1cy86ho",
    Fbdkly: ["f1heqfse", "fkh49vu"],
    mdwyqc: ["fkh49vu", "f1heqfse"],
    Baz25je: "f16tdq4e"
  },
  vertical: {
    a9b677: "fqxfnkd",
    Bqenvij: "f1l02sjl",
    Ccq8qp: "f1rik0od",
    Bciustq: "f14xwovp",
    lawp4y: "febq2dz"
  }
}, {
  d: [".fnivh3a{border-bottom-right-radius:var(--borderRadiusXLarge);}", ".fc7yr5o{border-bottom-left-radius:var(--borderRadiusXLarge);}", ".f1el4m67{border-top-right-radius:var(--borderRadiusXLarge);}", ".f8yange{border-top-left-radius:var(--borderRadiusXLarge);}", ".f1aehjj5{pointer-events:none;}", ".faunodf{grid-row-start:2;}", ".f88nxoq{grid-row-end:2;}", ".fd46tj4{grid-column-start:2;}", ".f1e2fz10{grid-column-end:2;}", ".f10pi13n{position:relative;}", ".fdgv6k0{forced-color-adjust:none;}", ".fizngqt{background-image:linear-gradient(\n      var(--fui-Slider--direction),\n      var(--fui-Slider__progress--color) 0%,\n      var(--fui-Slider__progress--color) var(--fui-Slider--progress),\n      var(--fui-Slider__rail--color) var(--fui-Slider--progress)\n    );}", ".fpvhumw{outline-width:1px;}", ".f1yog68k{outline-style:solid;}", ".f13sgyd8{outline-color:var(--colorTransparentStroke);}", ".fzhtfnv::before{content:'';}", ".f1j7ml58::before{position:absolute;}", ".fx36ao7::before{background-image:repeating-linear-gradient(\n        var(--fui-Slider--direction),\n        #0000 0%,\n        #0000 calc(var(--fui-Slider--steps-percent) - 1px),\n        var(--colorNeutralBackground1) calc(var(--fui-Slider--steps-percent) - 1px),\n        var(--colorNeutralBackground1) var(--fui-Slider--steps-percent)\n      );}", ".fly5x3f{width:100%;}", ".f1cy86ho{height:var(--fui-Slider__rail--size);}", ".f1heqfse::before{left:-1px;}", ".fkh49vu::before{right:-1px;}", ".f16tdq4e::before{height:var(--fui-Slider__rail--size);}", ".fqxfnkd{width:var(--fui-Slider__rail--size);}", ".f1l02sjl{height:100%;}", ".f1rik0od::before{width:var(--fui-Slider__rail--size);}", ".f14xwovp::before{top:-1px;}", ".febq2dz::before{bottom:1px;}"],
  m: [["@media (forced-colors: active){.fux3rle::before{background-image:repeating-linear-gradient(\n          var(--fui-Slider--direction),\n          #0000 0%,\n          #0000 calc(var(--fui-Slider--steps-percent) - 1px),\n          HighlightText calc(var(--fui-Slider--steps-percent) - 1px),\n          HighlightText var(--fui-Slider--steps-percent)\n        );}}", {
    m: "(forced-colors: active)"
  }]]
});
var useThumbStyles = __styles2({
  thumb: {
    Ijaq50: "faunodf",
    nk6f5a: "f88nxoq",
    Br312pm: "fd46tj4",
    Bw0ie65: "f1e2fz10",
    qhf8xq: "f1euv43f",
    a9b677: "f174ca62",
    Bqenvij: "f1yfdkfd",
    Bkecrkj: "f1aehjj5",
    oeaueh: "f1s6fcnf",
    Bvjb7m6: "fdgv6k0",
    Bbmb7ep: ["f8fbkgy", "f1nfllo7"],
    Beyfa6y: ["f1nfllo7", "f8fbkgy"],
    B7oj6ja: ["f1djnp8u", "f1s8kh49"],
    Btl43ni: ["f1s8kh49", "f1djnp8u"],
    E5pizo: "fof7hq0",
    De3pzq: "foksa45",
    Brfgrao: "f1j7ml58",
    Bciustq: "f14u7mkt",
    Fbdkly: ["f5zrw40", "f1ks5ppg"],
    lawp4y: "fto0uou",
    mdwyqc: ["f1ks5ppg", "f5zrw40"],
    Budzafs: ["feh19e8", "f3j3guj"],
    r59vdv: ["f3j3guj", "feh19e8"],
    n07z76: ["fo75joz", "f1yag6sl"],
    ck0cow: ["f1yag6sl", "fo75joz"],
    Bcvre1j: "fyl8oag",
    Ftih45: "fzhtfnv",
    B0qfbqy: "f1rponpz",
    B4f6apu: ["f1rvw2z1", "fjj0g3m"],
    y0oebl: "f1muowhs",
    uvfttm: ["fjj0g3m", "f1rvw2z1"],
    Bdkvgpv: "f163fonl",
    m598lv: ["f1yq6w5o", "f1jpmc5p"],
    qa3bma: "f11yjt3y",
    Bbv0w2i: ["f1jpmc5p", "f1yq6w5o"],
    Bq4z7u6: "f10tv6oz",
    Bk5zm6e: ["f16xp3sf", "f1seuxxq"],
    Bqjgrrk: "fwrmqbx",
    Bm6vgfq: ["f1seuxxq", "f16xp3sf"]
  },
  disabled: {
    B0qfbqy: "f1rponpz",
    B4f6apu: ["f1rvw2z1", "fjj0g3m"],
    y0oebl: "f1muowhs",
    uvfttm: ["fjj0g3m", "f1rvw2z1"],
    Bdkvgpv: "f163fonl",
    m598lv: ["f1yq6w5o", "f1jpmc5p"],
    qa3bma: "f11yjt3y",
    Bbv0w2i: ["f1jpmc5p", "f1yq6w5o"],
    Bq4z7u6: "f1pw3ppl",
    Bk5zm6e: ["fxoq2z", "f1ykj0h9"],
    Bqjgrrk: "f1sz5gii",
    Bm6vgfq: ["f1ykj0h9", "fxoq2z"]
  },
  horizontal: {
    Bz10aip: ["f13gfj74", "f1nfknbn"],
    oyh7mz: ["f1fj3zth", "fcf9u6w"]
  },
  vertical: {
    Bz10aip: "f5cv5a3",
    B5kzvoi: "feeniun"
  }
}, {
  d: [".faunodf{grid-row-start:2;}", ".f88nxoq{grid-row-end:2;}", ".fd46tj4{grid-column-start:2;}", ".f1e2fz10{grid-column-end:2;}", ".f1euv43f{position:absolute;}", ".f174ca62{width:var(--fui-Slider__thumb--size);}", ".f1yfdkfd{height:var(--fui-Slider__thumb--size);}", ".f1aehjj5{pointer-events:none;}", ".f1s6fcnf{outline-style:none;}", ".fdgv6k0{forced-color-adjust:none;}", ".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}", ".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}", ".fof7hq0{box-shadow:0 0 0 calc(var(--fui-Slider__thumb--size) * .2) var(--colorNeutralBackground1) inset;}", ".foksa45{background-color:var(--fui-Slider__thumb--color);}", ".f1j7ml58::before{position:absolute;}", ".f14u7mkt::before{top:0px;}", ".f5zrw40::before{left:0px;}", ".f1ks5ppg::before{right:0px;}", ".fto0uou::before{bottom:0px;}", ".feh19e8::before{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f3j3guj::before{border-bottom-left-radius:var(--borderRadiusCircular);}", ".fo75joz::before{border-top-right-radius:var(--borderRadiusCircular);}", ".f1yag6sl::before{border-top-left-radius:var(--borderRadiusCircular);}", ".fyl8oag::before{box-sizing:border-box;}", ".fzhtfnv::before{content:'';}", ".f1rponpz::before{border-top-width:calc(var(--fui-Slider__thumb--size) * .05);}", ".f1rvw2z1::before{border-right-width:calc(var(--fui-Slider__thumb--size) * .05);}", ".fjj0g3m::before{border-left-width:calc(var(--fui-Slider__thumb--size) * .05);}", ".f1muowhs::before{border-bottom-width:calc(var(--fui-Slider__thumb--size) * .05);}", ".f163fonl::before{border-top-style:solid;}", ".f1yq6w5o::before{border-right-style:solid;}", ".f1jpmc5p::before{border-left-style:solid;}", ".f11yjt3y::before{border-bottom-style:solid;}", ".f10tv6oz::before{border-top-color:var(--colorNeutralStroke1);}", ".f16xp3sf::before{border-right-color:var(--colorNeutralStroke1);}", ".f1seuxxq::before{border-left-color:var(--colorNeutralStroke1);}", ".fwrmqbx::before{border-bottom-color:var(--colorNeutralStroke1);}", ".f1pw3ppl::before{border-top-color:var(--colorNeutralForegroundDisabled);}", ".fxoq2z::before{border-right-color:var(--colorNeutralForegroundDisabled);}", ".f1ykj0h9::before{border-left-color:var(--colorNeutralForegroundDisabled);}", ".f1sz5gii::before{border-bottom-color:var(--colorNeutralForegroundDisabled);}", ".f13gfj74{-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);}", ".f1nfknbn{-webkit-transform:translateX(50%);-moz-transform:translateX(50%);-ms-transform:translateX(50%);transform:translateX(50%);}", ".f1fj3zth{left:var(--fui-Slider--progress);}", ".fcf9u6w{right:var(--fui-Slider--progress);}", ".f5cv5a3{-webkit-transform:translateY(50%);-moz-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);}", ".feeniun{bottom:var(--fui-Slider--progress);}"]
});
var useInputStyles4 = __styles2({
  input: {
    Bceei9c: "f1k6fduh",
    abs64n: "fk73vx1",
    Ijaq50: "f16hsg94",
    nk6f5a: "f1nzqi2z",
    Br312pm: "fwpfdsa",
    Bw0ie65: "fuur7zz",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    B6of3ja: "f1hu3pq6",
    t21cq0: ["f11qmguv", "f1tyq0we"],
    jrapky: "f19f4twv",
    Frg6f3: ["f1tyq0we", "f11qmguv"]
  },
  disabled: {
    Bceei9c: "f158kwzp"
  },
  horizontal: {
    Bqenvij: "f1yfdkfd",
    a9b677: "fly5x3f"
  },
  vertical: {
    Bqenvij: "f1l02sjl",
    a9b677: "f174ca62",
    Brp00wb: "f1r9mf01"
  }
}, {
  d: [".f1k6fduh{cursor:pointer;}", ".fk73vx1{opacity:0;}", ".f16hsg94{grid-row-start:1;}", ".f1nzqi2z{grid-row-end:-1;}", ".fwpfdsa{grid-column-start:1;}", ".fuur7zz{grid-column-end:-1;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".f1hu3pq6{margin-top:0;}", ".f11qmguv{margin-right:0;}", ".f1tyq0we{margin-left:0;}", ".f19f4twv{margin-bottom:0;}", ".f158kwzp{cursor:default;}", ".f1yfdkfd{height:var(--fui-Slider__thumb--size);}", ".fly5x3f{width:100%;}", ".f1l02sjl{height:100%;}", ".f174ca62{width:var(--fui-Slider__thumb--size);}", ".f1r9mf01{-webkit-appearance:slider-vertical;}"]
});
var useSliderStyles_unstable = (state) => {
  const rootStyles = useRootStyles11();
  const railStyles = useRailStyles();
  const thumbStyles = useThumbStyles();
  const inputStyles = useInputStyles4();
  const isVertical = state.vertical;
  state.root.className = mergeClasses(sliderClassNames.root, rootStyles.root, isVertical ? rootStyles.focusIndicatorVertical : rootStyles.focusIndicatorHorizontal, rootStyles[state.size], isVertical ? rootStyles.vertical : rootStyles.horizontal, state.disabled ? rootStyles.disabled : rootStyles.enabled, state.root.className);
  state.rail.className = mergeClasses(sliderClassNames.rail, railStyles.rail, isVertical ? railStyles.vertical : railStyles.horizontal, state.rail.className);
  state.thumb.className = mergeClasses(sliderClassNames.thumb, thumbStyles.thumb, isVertical ? thumbStyles.vertical : thumbStyles.horizontal, state.disabled && thumbStyles.disabled, state.thumb.className);
  state.input.className = mergeClasses(sliderClassNames.input, inputStyles.input, isVertical ? inputStyles.vertical : inputStyles.horizontal, state.disabled && inputStyles.disabled, state.input.className);
  return state;
};

// node_modules/@fluentui/react-slider/lib/components/Slider/useSliderState.js
var {
  sliderStepsPercentVar: sliderStepsPercentVar2,
  sliderProgressVar: sliderProgressVar2,
  sliderDirectionVar: sliderDirectionVar2
} = sliderCSSVars;
var getPercent = (value, min3, max3) => {
  return max3 === min3 ? 0 : (value - min3) / (max3 - min3) * 100;
};
var useSliderState_unstable = (state, props) => {
  const {
    defaultValue = 0,
    min: min3 = 0,
    max: max3 = 100,
    step,
    value
  } = props;
  const {
    dir
  } = useFluent();
  const [currentValue, setCurrentValue] = useControllableState({
    state: value !== void 0 ? clamp(value, min3, max3) : void 0,
    defaultState: clamp(defaultValue, min3, max3),
    initialState: 0
  });
  const valuePercent = getPercent(currentValue, min3, max3);
  const inputOnChange = state.input.onChange;
  const propsOnChange = props.onChange;
  const onChange = useEventCallback((ev) => {
    const newValue = Number(ev.target.value);
    setCurrentValue(clamp(newValue, min3, max3));
    if (inputOnChange && inputOnChange !== propsOnChange) {
      inputOnChange(ev);
    } else if (propsOnChange) {
      propsOnChange(ev, {
        value: newValue
      });
    }
  });
  const rootVariables = {
    [sliderDirectionVar2]: state.vertical ? "0deg" : dir === "ltr" ? "90deg" : "270deg",
    [sliderStepsPercentVar2]: step && step > 0 ? `${step * 100 / (max3 - min3)}%` : "",
    [sliderProgressVar2]: `${valuePercent}%`
  };
  state.root.style = {
    ...rootVariables,
    ...state.root.style
  };
  state.input.value = currentValue;
  state.input.onChange = onChange;
  return state;
};

// node_modules/@fluentui/react-slider/lib/components/Slider/useSlider.js
var useSlider_unstable = (props, ref) => {
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: ["onChange", "size"]
  });
  const {
    disabled,
    vertical,
    size: size2 = "medium",
    // Slots
    root,
    input,
    rail,
    thumb
  } = props;
  const state = {
    disabled,
    size: size2,
    vertical,
    components: {
      input: "input",
      rail: "div",
      root: "div",
      thumb: "div"
    },
    root: resolveShorthand(root, {
      required: true,
      defaultProps: nativeProps.root
    }),
    input: resolveShorthand(input, {
      required: true,
      defaultProps: {
        id: useId2("slider-", props.id),
        ref,
        ...nativeProps.primary,
        type: "range",
        orient: vertical ? "vertical" : void 0
      }
    }),
    rail: resolveShorthand(rail, {
      required: true
    }),
    thumb: resolveShorthand(thumb, {
      required: true
    })
  };
  state.root.ref = useMergedRefs(state.root.ref, useFocusWithin());
  useSliderState_unstable(state, props);
  return state;
};

// node_modules/@fluentui/react-slider/lib/components/Slider/renderSlider.js
var React231 = __toESM(require_react());
var renderSlider_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React231.createElement(slots.root, slotProps.root, React231.createElement(slots.input, slotProps.input), React231.createElement(slots.rail, slotProps.rail), React231.createElement(slots.thumb, slotProps.thumb));
};

// node_modules/@fluentui/react-slider/lib/components/Slider/Slider.js
var Slider = React232.forwardRef((props, ref) => {
  const state = useSlider_unstable(props, ref);
  useSliderStyles_unstable(state);
  const {
    useSliderStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderSlider_unstable(state);
});
Slider.displayName = "Slider";

// node_modules/@fluentui/react-slider/lib/components/Slider/Slider.types.js
var React233 = __toESM(require_react());

// node_modules/@fluentui/react-slider/lib/components/SliderField/SliderField.js
var sliderFieldClassNames = getDeprecatedFieldClassNames(sliderClassNames.root);
var SliderField = makeDeprecatedField(Slider);

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/SpinButton.js
var React236 = __toESM(require_react());

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/useSpinButton.js
var React234 = __toESM(require_react());

// node_modules/@fluentui/react-spinbutton/lib/utils/clamp.js
var clamp2 = (value, min3, max3) => {
  let nextValue = value;
  if (min3 !== void 0) {
    if (max3 !== void 0 && min3 > max3) {
      const error = new Error();
      if (true) {
        console.error([`"min" value "${min3}" is greater than "max" value "${max3}".`, '"min" must be less than or equal to "max".', `Returning value "${value}".`, error.stack].join());
      }
      return value;
    }
    nextValue = Math.max(min3, nextValue);
  }
  if (max3 !== void 0) {
    nextValue = Math.min(max3, nextValue);
  }
  return nextValue;
};

// node_modules/@fluentui/react-spinbutton/lib/utils/getBound.js
var getBound = (value, min3, max3) => {
  if (min3 !== void 0 && value === min3) {
    if (max3 === min3) {
      return "both";
    }
    return "min";
  } else if (max3 !== void 0 && value === max3) {
    return "max";
  }
  return "none";
};

// node_modules/@fluentui/react-spinbutton/lib/utils/precision.js
function calculatePrecision(value) {
  const groups = /[1-9]([0]+$)|\.([0-9]*)/.exec(String(value));
  if (!groups) {
    return 0;
  }
  if (groups[1]) {
    return -groups[1].length;
  }
  if (groups[2]) {
    return groups[2].length;
  }
  return 0;
}
function precisionRound(value, precision, base = 10) {
  const exp = Math.pow(base, precision);
  return Math.round(value * exp) / exp;
}

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/useSpinButton.js
var DEFAULT_SPIN_DELAY_MS = 150;
var MIN_SPIN_DELAY_MS = 80;
var MAX_SPIN_TIME_MS = 1e3;
var lerp = (start, end, percent) => start + (end - start) * percent;
var useSpinButton_unstable = (props, ref) => {
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: ["defaultValue", "max", "min", "onChange", "size", "value"]
  });
  const overrides = useOverrides();
  var _overrides_inputDefaultAppearance;
  const {
    value,
    displayValue,
    defaultValue,
    min: min3,
    max: max3,
    step = 1,
    stepPage = 1,
    precision: precisionFromProps,
    onChange,
    size: size2 = "medium",
    appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : "outline",
    root,
    input,
    incrementButton,
    decrementButton
  } = props;
  const precision = React234.useMemo(() => {
    return precisionFromProps !== null && precisionFromProps !== void 0 ? precisionFromProps : Math.max(calculatePrecision(step), 0);
  }, [precisionFromProps, step]);
  const [currentValue, setCurrentValue] = useControllableState({
    state: value,
    defaultState: defaultValue,
    initialState: 0
  });
  const isControlled = value !== void 0;
  const [textValue, setTextValue] = React234.useState(void 0);
  const [keyboardSpinState, setKeyboardSpinState] = React234.useState("rest");
  const internalState = React234.useRef({
    value: currentValue,
    spinState: "rest",
    spinTime: 0,
    spinDelay: DEFAULT_SPIN_DELAY_MS,
    atBound: currentValue !== null ? getBound(precisionRound(currentValue, precision), min3, max3) : "none"
  });
  const [setStepTimeout, clearStepTimeout] = useTimeout();
  const stepValue = (e, direction, startFrom) => {
    let startValue = internalState.current.value;
    if (startFrom) {
      const num = parseFloat(startFrom);
      if (!isNaN(num)) {
        startValue = num;
      }
    }
    const val = startValue;
    const dir = direction === "up" || direction === "upPage" ? 1 : -1;
    const stepSize = direction === "upPage" || direction === "downPage" ? stepPage : step;
    if (val === null) {
      const stepStart = min3 === void 0 ? 0 : min3;
      const nullStep = clamp2(stepStart + stepSize * dir, min3, max3);
      commit(e, nullStep);
      return;
    }
    let newValue = val + stepSize * dir;
    if (!Number.isNaN(newValue)) {
      newValue = clamp2(newValue, min3, max3);
    }
    commit(e, newValue);
    if (internalState.current.spinState !== "rest") {
      setStepTimeout(() => {
        internalState.current.spinTime += internalState.current.spinDelay;
        internalState.current.spinDelay = lerp(DEFAULT_SPIN_DELAY_MS, MIN_SPIN_DELAY_MS, internalState.current.spinTime / MAX_SPIN_TIME_MS);
        stepValue(e, direction);
      }, internalState.current.spinDelay);
    }
  };
  const handleInputChange = (e) => {
    if (!internalState.current.previousTextValue) {
      internalState.current.previousTextValue = textValue !== null && textValue !== void 0 ? textValue : String(currentValue);
    }
    const newValue = e.target.value;
    setTextValue(newValue);
  };
  const handleIncrementMouseDown = (e) => {
    internalState.current.spinState = "up";
    stepValue(e, "up");
  };
  const handleDecrementMouseDown = (e) => {
    internalState.current.spinState = "down";
    stepValue(e, "down");
  };
  const handleStepMouseUpOrLeave = (e) => {
    clearStepTimeout();
    internalState.current.spinState = "rest";
    internalState.current.spinDelay = DEFAULT_SPIN_DELAY_MS;
    internalState.current.spinTime = 0;
  };
  const handleBlur = (e) => {
    commit(e, currentValue, textValue);
    internalState.current.previousTextValue = void 0;
  };
  const handleKeyDown = (e) => {
    let nextKeyboardSpinState = "rest";
    if (e.key === ArrowUp) {
      stepValue(e, "up", textValue);
      nextKeyboardSpinState = "up";
    } else if (e.key === ArrowDown) {
      stepValue(e, "down", textValue);
      nextKeyboardSpinState = "down";
    } else if (e.key === PageUp) {
      e.preventDefault();
      stepValue(e, "upPage", textValue);
      nextKeyboardSpinState = "up";
    } else if (e.key === PageDown) {
      e.preventDefault();
      stepValue(e, "downPage", textValue);
      nextKeyboardSpinState = "down";
    } else if (!e.shiftKey && e.key === Home && min3 !== void 0) {
      commit(e, min3);
      nextKeyboardSpinState = "down";
    } else if (!e.shiftKey && e.key === End && max3 !== void 0) {
      commit(e, max3);
      nextKeyboardSpinState = "up";
    } else if (e.key === Enter) {
      commit(e, currentValue, textValue);
      internalState.current.previousTextValue = void 0;
    } else if (e.key === Escape) {
      if (internalState.current.previousTextValue) {
        setTextValue(void 0);
        internalState.current.previousTextValue = void 0;
      }
    }
    if (keyboardSpinState !== nextKeyboardSpinState) {
      setKeyboardSpinState(nextKeyboardSpinState);
    }
  };
  const handleKeyUp = (e) => {
    if (keyboardSpinState !== "rest") {
      setKeyboardSpinState("rest");
      internalState.current.spinState = "rest";
    }
  };
  const commit = (e, newValue, newDisplayValue) => {
    const valueChanged = newValue !== void 0 && currentValue !== newValue;
    const displayValueChanged = newDisplayValue !== void 0 && internalState.current.previousTextValue !== void 0 && internalState.current.previousTextValue !== newDisplayValue;
    let roundedValue;
    if (valueChanged) {
      roundedValue = precisionRound(newValue, precision);
      setCurrentValue(roundedValue);
    } else if (displayValueChanged && !isControlled) {
      const nextValue = parseFloat(newDisplayValue);
      if (!isNaN(nextValue)) {
        setCurrentValue(precisionRound(nextValue, precision));
      }
    }
    if (valueChanged || displayValueChanged) {
      onChange === null || onChange === void 0 ? void 0 : onChange(e, {
        value: roundedValue,
        displayValue: newDisplayValue
      });
    }
    setTextValue(void 0);
  };
  const state = {
    size: size2,
    appearance,
    spinState: keyboardSpinState,
    atBound: internalState.current.atBound,
    components: {
      root: "span",
      input: "input",
      incrementButton: "button",
      decrementButton: "button"
    },
    root: resolveShorthand(root, {
      required: true,
      defaultProps: nativeProps.root
    }),
    input: resolveShorthand(input, {
      required: true,
      defaultProps: {
        ref,
        autoComplete: "off",
        role: "spinbutton",
        appearance,
        type: "text",
        ...nativeProps.primary
      }
    }),
    incrementButton: resolveShorthand(incrementButton, {
      required: true,
      defaultProps: {
        tabIndex: -1,
        children: React234.createElement(ChevronUp16Regular, null),
        disabled: nativeProps.primary.disabled,
        "aria-label": "Increment value",
        type: "button"
      }
    }),
    decrementButton: resolveShorthand(decrementButton, {
      required: true,
      defaultProps: {
        tabIndex: -1,
        children: React234.createElement(ChevronDown16Regular, null),
        disabled: nativeProps.primary.disabled,
        "aria-label": "Decrement value",
        type: "button"
      }
    })
  };
  let valueToDisplay;
  if (textValue !== void 0) {
    valueToDisplay = textValue;
  } else if (value === null || currentValue === null) {
    valueToDisplay = displayValue !== null && displayValue !== void 0 ? displayValue : "";
    internalState.current.value = null;
    internalState.current.atBound = "none";
  } else {
    const roundedValue = precisionRound(currentValue, precision);
    internalState.current.value = roundedValue;
    internalState.current.atBound = getBound(roundedValue, min3, max3);
    if (isControlled) {
      valueToDisplay = displayValue !== null && displayValue !== void 0 ? displayValue : String(roundedValue);
    } else {
      valueToDisplay = String(roundedValue);
    }
  }
  state.input.value = valueToDisplay;
  state.input["aria-valuemin"] = min3;
  state.input["aria-valuemax"] = max3;
  state.input["aria-valuenow"] = currentValue !== null && currentValue !== void 0 ? currentValue : void 0;
  var _state_input_ariavaluetext;
  state.input["aria-valuetext"] = (_state_input_ariavaluetext = state.input["aria-valuetext"]) !== null && _state_input_ariavaluetext !== void 0 ? _state_input_ariavaluetext : value !== void 0 && displayValue || void 0;
  state.input.onChange = mergeCallbacks(state.input.onChange, handleInputChange);
  state.input.onBlur = mergeCallbacks(state.input.onBlur, handleBlur);
  state.input.onKeyDown = mergeCallbacks(state.input.onKeyDown, handleKeyDown);
  state.input.onKeyUp = mergeCallbacks(state.input.onKeyUp, handleKeyUp);
  state.incrementButton.onMouseDown = mergeCallbacks(handleIncrementMouseDown, state.incrementButton.onMouseDown);
  state.incrementButton.onMouseUp = mergeCallbacks(state.incrementButton.onMouseUp, handleStepMouseUpOrLeave);
  state.incrementButton.onMouseLeave = mergeCallbacks(state.incrementButton.onMouseLeave, handleStepMouseUpOrLeave);
  state.decrementButton.onMouseDown = mergeCallbacks(handleDecrementMouseDown, state.decrementButton.onMouseDown);
  state.decrementButton.onMouseUp = mergeCallbacks(state.decrementButton.onMouseUp, handleStepMouseUpOrLeave);
  state.decrementButton.onMouseLeave = mergeCallbacks(state.decrementButton.onMouseLeave, handleStepMouseUpOrLeave);
  return state;
};

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/renderSpinButton.js
var React235 = __toESM(require_react());
var renderSpinButton_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React235.createElement(slots.root, slotProps.root, React235.createElement(slots.input, slotProps.input), React235.createElement(slots.incrementButton, slotProps.incrementButton), React235.createElement(slots.decrementButton, slotProps.decrementButton));
};

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/useSpinButtonStyles.js
var spinButtonClassNames = {
  root: "fui-SpinButton",
  input: "fui-SpinButton__input",
  incrementButton: "fui-SpinButton__incrementButton",
  decrementButton: "fui-SpinButton__decrementButton"
};
var spinButtonExtraClassNames = {
  buttonActive: "fui-SpinButton__button_active"
};
var useRootClassName6 = __resetStyles("rkqmps4", "r1trw52p", [".rkqmps4{display:inline-grid;grid-template-columns:1fr 24px;grid-template-rows:1fr 1fr;-webkit-column-gap:var(--spacingHorizontalXS);column-gap:var(--spacingHorizontalXS);row-gap:0;position:relative;isolation:isolate;background-color:var(--colorNeutralBackground1);min-height:32px;padding:0 0 0 var(--spacingHorizontalMNudge);border-radius:var(--borderRadiusMedium);}", '.rkqmps4::before{content:"";box-sizing:border-box;position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none;z-index:10;border:1px solid var(--colorNeutralStroke1);border-bottom-color:var(--colorNeutralStrokeAccessible);border-radius:var(--borderRadiusMedium);}', '.rkqmps4::after{box-sizing:border-box;content:"";position:absolute;right:0;bottom:0;left:0;z-index:20;height:max(2px, var(--borderRadiusMedium));border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-bottom:2px solid var(--colorCompoundBrandStroke);-webkit-clip-path:inset(calc(100% - 2px) 0 0 0);clip-path:inset(calc(100% - 2px) 0 0 0);-webkit-transform:scaleX(0);-moz-transform:scaleX(0);-ms-transform:scaleX(0);transform:scaleX(0);transition-property:transform;transition-duration:var(--durationUltraFast);transition-delay:var(--curveAccelerateMid);}', "@media screen and (prefers-reduced-motion: reduce){.rkqmps4::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", ".rkqmps4:focus-within::after{-webkit-transform:scaleX(1);-moz-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1);transition-property:transform;transition-duration:var(--durationNormal);transition-delay:var(--curveDecelerateMid);}", "@media screen and (prefers-reduced-motion: reduce){.rkqmps4:focus-within::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", ".rkqmps4:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".rkqmps4:focus-within{outline:2px solid transparent;}", ".r1trw52p{display:inline-grid;grid-template-columns:1fr 24px;grid-template-rows:1fr 1fr;-webkit-column-gap:var(--spacingHorizontalXS);column-gap:var(--spacingHorizontalXS);row-gap:0;position:relative;isolation:isolate;background-color:var(--colorNeutralBackground1);min-height:32px;padding:0 var(--spacingHorizontalMNudge) 0 0;border-radius:var(--borderRadiusMedium);}", '.r1trw52p::before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none;z-index:10;border:1px solid var(--colorNeutralStroke1);border-bottom-color:var(--colorNeutralStrokeAccessible);border-radius:var(--borderRadiusMedium);}', '.r1trw52p::after{box-sizing:border-box;content:"";position:absolute;left:0;bottom:0;right:0;z-index:20;height:max(2px, var(--borderRadiusMedium));border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-bottom:2px solid var(--colorCompoundBrandStroke);-webkit-clip-path:inset(calc(100% - 2px) 0 0 0);clip-path:inset(calc(100% - 2px) 0 0 0);-webkit-transform:scaleX(0);-moz-transform:scaleX(0);-ms-transform:scaleX(0);transform:scaleX(0);transition-property:transform;transition-duration:var(--durationUltraFast);transition-delay:var(--curveAccelerateMid);}', "@media screen and (prefers-reduced-motion: reduce){.r1trw52p::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", ".r1trw52p:focus-within::after{-webkit-transform:scaleX(1);-moz-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1);transition-property:transform;transition-duration:var(--durationNormal);transition-delay:var(--curveDecelerateMid);}", "@media screen and (prefers-reduced-motion: reduce){.r1trw52p:focus-within::after{transition-duration:0.01ms;transition-delay:0.01ms;}}", ".r1trw52p:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".r1trw52p:focus-within{outline:2px solid transparent;}"]);
var useRootStyles12 = __styles2({
  small: {
    sshi5w: "f1pha7fy",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"]
  },
  medium: {},
  outline: {},
  outlineInteractive: {
    Bo3r8zu: "f1w2y1rc",
    Hpvxnh: ["f1gofhvl", "f18htlvq"],
    Bx11ytk: "ffcnd28",
    B1rg0w0: ["f18htlvq", "f1gofhvl"],
    Bsg1tlv: "f6lmxco",
    Brjw370: ["fcoc0mf", "f15r4wkl"],
    xcfy85: "f1ipdth8",
    Bcc6kan: ["f15r4wkl", "fcoc0mf"]
  },
  underline: {
    B0qfbqy: "f1o236ok",
    B4f6apu: ["faeg28l", "f64aojp"],
    y0oebl: "fdw6hkg",
    uvfttm: ["f64aojp", "faeg28l"],
    Budzafs: ["f1vk4jnx", "f1v3v894"],
    r59vdv: ["f1v3v894", "f1vk4jnx"],
    n07z76: ["fzi2j54", "f1un0uoc"],
    ck0cow: ["f1un0uoc", "fzi2j54"]
  },
  underlineInteractive: {
    Bx11ytk: "ffcnd28",
    xcfy85: "f1ipdth8",
    B3778ie: ["f9pmbr4", "ffh3ws5"],
    d9w3h3: ["ffh3ws5", "f9pmbr4"],
    Bl18szs: ["f19438ov", "f1i9y5j"],
    B4j8arr: ["f1i9y5j", "f19438ov"]
  },
  filled: {
    B0qfbqy: "f1fjh9ub",
    B4f6apu: ["ff9c942", "f6rdg5o"],
    y0oebl: "fdw6hkg",
    uvfttm: ["f6rdg5o", "ff9c942"],
    Bdkvgpv: "f163fonl",
    m598lv: ["f1yq6w5o", "f1jpmc5p"],
    qa3bma: "f11yjt3y",
    Bbv0w2i: ["f1jpmc5p", "f1yq6w5o"],
    Bq4z7u6: "f7dgwnz",
    Bk5zm6e: ["f1edeodt", "fszsv3f"],
    Bqjgrrk: "f1172wan",
    Bm6vgfq: ["fszsv3f", "f1edeodt"]
  },
  "filled-darker": {
    De3pzq: "f16xq7d1"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r"
  },
  filledInteractive: {
    B05mzqr: "f1xqt08",
    tb9y6h: ["fzt5lgo", "f8tv3r9"],
    jcehpj: "fyhrops",
    B23o0hn: ["f8tv3r9", "fzt5lgo"]
  },
  invalid: {
    emecyz: "fl48pg9",
    lz0pba: ["f1a168p3", "f1pvdymy"],
    Bo1k74p: "f11knvgl",
    Ba322q7: ["f1pvdymy", "f1a168p3"]
  },
  disabled: {
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    Bq4z7u6: "f1a0lfh7",
    Bk5zm6e: ["f1p2ejm6", "fmzytvz"],
    Bqjgrrk: "fas2e61",
    Bm6vgfq: ["fmzytvz", "f1p2ejm6"],
    Cffpyd: "flb8es4",
    hxi8he: ["f1lclws", "frjp63v"],
    Bcuq369: "f1yv9wnt",
    Imo2if: ["frjp63v", "f1lclws"]
  }
}, {
  d: [".f1pha7fy{min-height:24px;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1o236ok::before{border-top-width:0;}", ".faeg28l::before{border-right-width:0;}", ".f64aojp::before{border-left-width:0;}", ".fdw6hkg::before{border-bottom-width:1px;}", ".f1vk4jnx::before{border-bottom-right-radius:var(--borderRadiusNone);}", ".f1v3v894::before{border-bottom-left-radius:var(--borderRadiusNone);}", ".fzi2j54::before{border-top-right-radius:var(--borderRadiusNone);}", ".f1un0uoc::before{border-top-left-radius:var(--borderRadiusNone);}", ".f9pmbr4::after{border-bottom-right-radius:var(--borderRadiusNone);}", ".ffh3ws5::after{border-bottom-left-radius:var(--borderRadiusNone);}", ".f19438ov::after{border-top-right-radius:var(--borderRadiusNone);}", ".f1i9y5j::after{border-top-left-radius:var(--borderRadiusNone);}", ".f1fjh9ub::before{border-top-width:1px;}", ".ff9c942::before{border-right-width:1px;}", ".f6rdg5o::before{border-left-width:1px;}", ".f163fonl::before{border-top-style:solid;}", ".f1yq6w5o::before{border-right-style:solid;}", ".f1jpmc5p::before{border-left-style:solid;}", ".f11yjt3y::before{border-bottom-style:solid;}", ".f7dgwnz::before{border-top-color:var(--colorTransparentStroke);}", ".f1edeodt::before{border-right-color:var(--colorTransparentStroke);}", ".fszsv3f::before{border-left-color:var(--colorTransparentStroke);}", ".f1172wan::before{border-bottom-color:var(--colorTransparentStroke);}", ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".fl48pg9:not(:focus-within)::before,.fl48pg9:hover:not(:focus-within)::before{border-top-color:var(--colorPaletteRedBorder2);}", ".f1a168p3:not(:focus-within)::before,.f1a168p3:hover:not(:focus-within)::before{border-right-color:var(--colorPaletteRedBorder2);}", ".f1pvdymy:not(:focus-within)::before,.f1pvdymy:hover:not(:focus-within)::before{border-left-color:var(--colorPaletteRedBorder2);}", ".f11knvgl:not(:focus-within)::before,.f11knvgl:hover:not(:focus-within)::before{border-bottom-color:var(--colorPaletteRedBorder2);}", ".fdrzuqr{cursor:not-allowed;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1a0lfh7::before{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f1p2ejm6::before{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fmzytvz::before{border-left-color:var(--colorNeutralStrokeDisabled);}", ".fas2e61::before{border-bottom-color:var(--colorNeutralStrokeDisabled);}"],
  h: [".f1w2y1rc:hover::before{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1gofhvl:hover::before{border-right-color:var(--colorNeutralStroke1Hover);}", ".f18htlvq:hover::before{border-left-color:var(--colorNeutralStroke1Hover);}", ".ffcnd28:hover::before{border-bottom-color:var(--colorNeutralStrokeAccessibleHover);}", ".f1xqt08:hover::before,.f1xqt08:focus-within::before{border-top-color:var(--colorTransparentStrokeInteractive);}", ".fzt5lgo:hover::before,.fzt5lgo:focus-within::before{border-right-color:var(--colorTransparentStrokeInteractive);}", ".f8tv3r9:hover::before,.f8tv3r9:focus-within::before{border-left-color:var(--colorTransparentStrokeInteractive);}", ".fyhrops:hover::before,.fyhrops:focus-within::before{border-bottom-color:var(--colorTransparentStrokeInteractive);}"],
  a: [".f6lmxco:active::before,.f6lmxco:focus-within::before{border-top-color:var(--colorNeutralStroke1Pressed);}", ".fcoc0mf:active::before,.fcoc0mf:focus-within::before{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f15r4wkl:active::before,.f15r4wkl:focus-within::before{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f1ipdth8:active::before,.f1ipdth8:focus-within::before{border-bottom-color:var(--colorNeutralStrokeAccessiblePressed);}"],
  m: [["@media (forced-colors: active){.flb8es4::before{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1lclws::before{border-right-color:GrayText;}.frjp63v::before{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1yv9wnt::before{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.frjp63v::before{border-left-color:GrayText;}.f1lclws::before{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useInputClassName2 = __resetStyles("rekhnij", null, [".rekhnij{grid-column-start:1;grid-column-end:2;grid-row-start:1;grid-row-end:3;outline-style:none;border:0;padding:0;color:var(--colorNeutralForeground1);background-color:transparent;font-family:inherit;font-size:inherit;font-weight:inherit;line-height:inherit;}", ".rekhnij::-webkit-input-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".rekhnij::-moz-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".rekhnij:-ms-input-placeholder{color:var(--colorNeutralForeground4);opacity:1;}", ".rekhnij::placeholder{color:var(--colorNeutralForeground4);opacity:1;}"]);
var useInputStyles5 = __styles2({
  disabled: {
    sj55zd: "f1s2aq7o",
    Bceei9c: "fdrzuqr",
    De3pzq: "f1c21dwh",
    yvdlaj: "fahhnxm"
  }
}, {
  d: [".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fahhnxm::-webkit-input-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".fahhnxm::-moz-placeholder{color:var(--colorNeutralForegroundDisabled);}"]
});
var useBaseButtonClassName = __resetStyles("r1g4chgs", null, [".r1g4chgs{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;width:24px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border:0;position:absolute;outline-style:none;height:16px;background-color:transparent;color:var(--colorNeutralForeground3);grid-column-start:2;border-radius:0;padding:0 5px 0 5px;}", ".r1g4chgs:active{outline-style:none;}", ".r1g4chgs:enabled:hover{cursor:pointer;color:var(--colorNeutralForeground3Hover);background-color:var(--colorSubtleBackgroundHover);}", ".r1g4chgs:enabled:active{color:var(--colorNeutralForeground3Pressed);background-color:var(--colorSubtleBackgroundPressed);}", ".r1g4chgs:enabled.fui-SpinButton__button_active{color:var(--colorNeutralForeground3Pressed);background-color:var(--colorSubtleBackgroundPressed);}", ".r1g4chgs:disabled{cursor:not-allowed;color:var(--colorNeutralForegroundDisabled);}"]);
var useButtonStyles = __styles2({
  increment: {
    Ijaq50: "f16hsg94",
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    z8tnut: "f10ra9hq",
    Byoj8tv: "f1brlhvm"
  },
  decrement: {
    Ijaq50: "faunodf",
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    z8tnut: "f1sl3k7w",
    Byoj8tv: "f1y2xyjm"
  },
  incrementButtonSmall: {
    z8tnut: "f1khb0e9",
    z189sj: ["f1sgzk6v", "f1bg5zqg"],
    Byoj8tv: "f1ov4xf1",
    uwmqm3: ["fycuoez", "f8wuabp"],
    Bqenvij: "fvblgha"
  },
  decrementButtonSmall: {
    z8tnut: "f1nbblvp",
    z189sj: ["f1sgzk6v", "f1bg5zqg"],
    Byoj8tv: "f1jnq6q7",
    uwmqm3: ["fycuoez", "f8wuabp"],
    Bqenvij: "fvblgha"
  },
  outline: {},
  underline: {
    De3pzq: "f3rmtva",
    sj55zd: "f11d4kpn",
    r4wkhp: "f1no7wuu",
    B95qlz1: "f1bifk9c",
    p743kt: "fp1zg4s",
    B7xitij: "fo6hitd",
    B6siaa6: "f1wiab75",
    Ba9qmo4: "fj9zm5z",
    Dyrjrp: "f1cqwcg4"
  },
  "filled-darker": {
    De3pzq: "f3rmtva",
    sj55zd: "f11d4kpn",
    r4wkhp: "f1no7wuu",
    B95qlz1: "fwwxidx",
    p743kt: "fp1zg4s",
    B7xitij: "f14i52sd",
    B6siaa6: "f1wiab75",
    Ba9qmo4: "fwry2ka",
    Dyrjrp: "f1cqwcg4"
  },
  "filled-lighter": {
    De3pzq: "f3rmtva",
    sj55zd: "f11d4kpn",
    r4wkhp: "f1no7wuu",
    B95qlz1: "f1yywxnv",
    drw0cw: "fzaa11h",
    idzz8t: "f4fpmm9",
    Dyrjrp: "f1cqwcg4"
  }
}, {
  d: [".f16hsg94{grid-row-start:1;}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f10ra9hq{padding-top:4px;}", ".f1brlhvm{padding-bottom:1px;}", ".faunodf{grid-row-start:2;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1sl3k7w{padding-top:1px;}", ".f1y2xyjm{padding-bottom:4px;}", ".f1khb0e9{padding-top:3px;}", ".f1sgzk6v{padding-right:6px;}", ".f1bg5zqg{padding-left:6px;}", ".f1ov4xf1{padding-bottom:0px;}", ".fycuoez{padding-left:4px;}", ".f8wuabp{padding-right:4px;}", ".fvblgha{height:12px;}", ".f1nbblvp{padding-top:0px;}", ".f1jnq6q7{padding-bottom:3px;}", ".f3rmtva{background-color:transparent;}", ".f11d4kpn{color:var(--colorNeutralForeground3);}", ".f1no7wuu:enabled:hover{color:var(--colorNeutralForeground3Hover);}", ".f1bifk9c:enabled:hover{background-color:var(--colorSubtleBackgroundHover);}", ".fp1zg4s:enabled:active{color:var(--colorNeutralForeground3Pressed);}", ".fo6hitd:enabled:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1wiab75:enabled.fui-SpinButton__button_active{color:var(--colorNeutralForeground3Pressed);}", ".fj9zm5z:enabled.fui-SpinButton__button_active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1cqwcg4:disabled{color:var(--colorNeutralForegroundDisabled);}", ".fwwxidx:enabled:hover{background-color:var(--colorNeutralBackground3Hover);}", ".f14i52sd:enabled:active{background-color:var(--colorNeutralBackground3Pressed);}", ".fwry2ka:enabled.fui-SpinButton__button_active{background-color:var(--colorNeutralBackground3Pressed);}", ".f1yywxnv:enabled:hover{background-color:var(--colorNeutralBackground1Hover);}", ".fzaa11h:enabled:active,.fzaa11h:enabled.fui-SpinButton__button_active{color:var(--colorNeutralForeground3Pressed);}", ".f4fpmm9:enabled:active,.f4fpmm9:enabled.fui-SpinButton__button_active{background-color:var(--colorNeutralBackground1Pressed);}"]
});
var useButtonDisabledStyles = __styles2({
  base: {
    Bceei9c: "fdrzuqr",
    eoavqd: "fphbwmw"
  },
  outline: {
    sj55zd: "f1s2aq7o",
    r4wkhp: "few7wvn",
    B95qlz1: "f110wuh6",
    p743kt: "f9s4mys",
    B7xitij: "f10404rc",
    B6siaa6: "fwzu9cz",
    Ba9qmo4: "f1snwkb6"
  },
  underline: {
    sj55zd: "f1s2aq7o",
    r4wkhp: "few7wvn",
    B95qlz1: "f110wuh6",
    p743kt: "f9s4mys",
    B7xitij: "f10404rc",
    B6siaa6: "fwzu9cz",
    Ba9qmo4: "f1snwkb6"
  },
  "filled-darker": {
    sj55zd: "f1s2aq7o",
    r4wkhp: "few7wvn",
    B95qlz1: "f110wuh6",
    p743kt: "f9s4mys",
    B7xitij: "f10404rc",
    B6siaa6: "fwzu9cz",
    Ba9qmo4: "f1snwkb6"
  },
  "filled-lighter": {
    sj55zd: "f1s2aq7o",
    r4wkhp: "few7wvn",
    B95qlz1: "f110wuh6",
    p743kt: "f9s4mys",
    B7xitij: "f10404rc",
    B6siaa6: "fwzu9cz",
    Ba9qmo4: "f1snwkb6"
  }
}, {
  d: [".fdrzuqr{cursor:not-allowed;}", ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}", ".few7wvn:enabled:hover{color:var(--colorNeutralForegroundDisabled);}", ".f110wuh6:enabled:hover{background-color:transparent;}", ".f9s4mys:enabled:active{color:var(--colorNeutralForegroundDisabled);}", ".f10404rc:enabled:active{background-color:transparent;}", ".fwzu9cz:enabled.fui-SpinButton__button_active{color:var(--colorNeutralForegroundDisabled);}", ".f1snwkb6:enabled.fui-SpinButton__button_active{background-color:transparent;}"],
  h: [".fphbwmw:hover{cursor:not-allowed;}"]
});
var useSpinButtonStyles_unstable = (state) => {
  const {
    appearance,
    atBound,
    spinState,
    size: size2
  } = state;
  const disabled = state.input.disabled;
  const invalid = `${state.input["aria-invalid"]}` === "true";
  const filled = appearance.startsWith("filled");
  const rootStyles = useRootStyles12();
  const buttonStyles = useButtonStyles();
  const buttonDisabledStyles = useButtonDisabledStyles();
  const inputStyles = useInputStyles5();
  state.root.className = mergeClasses(spinButtonClassNames.root, useRootClassName6(), rootStyles[size2], rootStyles[appearance], filled && rootStyles.filled, !disabled && appearance === "outline" && rootStyles.outlineInteractive, !disabled && appearance === "underline" && rootStyles.underlineInteractive, !disabled && filled && rootStyles.filledInteractive, !disabled && invalid && rootStyles.invalid, disabled && rootStyles.disabled, state.root.className);
  state.incrementButton.className = mergeClasses(spinButtonClassNames.incrementButton, spinState === "up" && `${spinButtonExtraClassNames.buttonActive}`, useBaseButtonClassName(), buttonStyles.increment, buttonStyles[appearance], size2 === "small" && buttonStyles.incrementButtonSmall, (atBound === "max" || atBound === "both") && buttonDisabledStyles.base, (atBound === "max" || atBound === "both") && buttonDisabledStyles[appearance], state.incrementButton.className);
  state.decrementButton.className = mergeClasses(spinButtonClassNames.decrementButton, spinState === "down" && `${spinButtonExtraClassNames.buttonActive}`, useBaseButtonClassName(), buttonStyles.decrement, buttonStyles[appearance], size2 === "small" && buttonStyles.decrementButtonSmall, (atBound === "min" || atBound === "both") && buttonDisabledStyles.base, (atBound === "min" || atBound === "both") && buttonDisabledStyles[appearance], state.decrementButton.className);
  state.input.className = mergeClasses(spinButtonClassNames.input, useInputClassName2(), disabled && inputStyles.disabled, state.input.className);
  return state;
};

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/SpinButton.js
var SpinButton = React236.forwardRef((props, ref) => {
  const state = useSpinButton_unstable(props, ref);
  useSpinButtonStyles_unstable(state);
  const {
    useSpinButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderSpinButton_unstable(state);
});
SpinButton.displayName = "SpinButton";

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButton/SpinButton.types.js
var React237 = __toESM(require_react());

// node_modules/@fluentui/react-spinbutton/lib/components/SpinButtonField/SpinButtonField.js
var spinButtonFieldClassNames = getDeprecatedFieldClassNames(spinButtonClassNames.root);
var SpinButtonField = makeDeprecatedField(SpinButton);

// node_modules/@fluentui/react-spinner/lib/components/Spinner/Spinner.js
var React241 = __toESM(require_react());

// node_modules/@fluentui/react-spinner/lib/components/Spinner/useSpinner.js
var React239 = __toESM(require_react());

// node_modules/@fluentui/react-spinner/lib/components/Spinner/DefaultSvg.js
var React238 = __toESM(require_react());
var DefaultSvg = () => React238.createElement("svg", {
  className: "fui-Spinner__Progressbar"
}, React238.createElement("circle", {
  className: "fui-Spinner__Track"
}), React238.createElement("circle", {
  className: "fui-Spinner__Tail"
}));

// node_modules/@fluentui/react-spinner/lib/components/Spinner/useSpinner.js
var useSpinner_unstable = (props, ref) => {
  const {
    appearance = "primary",
    labelPosition = "after",
    size: size2 = "medium"
  } = props;
  const baseId = useId2("spinner");
  const {
    role = "progressbar",
    tabIndex,
    ...rest
  } = props;
  const nativeRoot = getNativeElementProps("div", {
    ref,
    role,
    ...rest
  }, ["size"]);
  const labelShorthand = resolveShorthand(props.label, {
    defaultProps: {
      id: baseId
    },
    required: false
  });
  const spinnerShortHand = resolveShorthand(props.spinner, {
    required: true,
    defaultProps: {
      children: React239.createElement(DefaultSvg, null),
      tabIndex
    }
  });
  if (labelShorthand && nativeRoot && !nativeRoot["aria-labelledby"]) {
    nativeRoot["aria-labelledby"] = labelShorthand.id;
  }
  const state = {
    appearance,
    labelPosition,
    size: size2,
    components: {
      root: "div",
      spinner: "span",
      label: Label
    },
    root: nativeRoot,
    spinner: spinnerShortHand,
    label: labelShorthand
  };
  return state;
};

// node_modules/@fluentui/react-spinner/lib/components/Spinner/renderSpinner.js
var React240 = __toESM(require_react());
var renderSpinner_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  const {
    labelPosition
  } = state;
  return React240.createElement(slots.root, slotProps.root, slots.label && (labelPosition === "above" || labelPosition === "before") && React240.createElement(slots.label, slotProps.label), slots.spinner && React240.createElement(slots.spinner, slotProps.spinner), slots.label && (labelPosition === "below" || labelPosition === "after") && React240.createElement(slots.label, slotProps.label));
};

// node_modules/@fluentui/react-spinner/lib/components/Spinner/useSpinnerStyles.js
var spinnerClassNames = {
  root: "fui-Spinner",
  spinner: "fui-Spinner__spinner",
  label: "fui-Spinner__label"
};
var useRootStyles13 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    Brf1p80: "f4d9j23",
    Bg96gwp: "fez10in",
    i8kkvl: "f4px1ci",
    Belr9w4: "fn67r4l"
  },
  horizontal: {
    Beiy3e4: "f1063pyq"
  },
  vertical: {
    Beiy3e4: "f1vx9l62"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f4d9j23{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;}", ".fez10in{line-height:0;}", ".f4px1ci{-webkit-column-gap:8px;column-gap:8px;}", ".fn67r4l{row-gap:8px;}", ".f1063pyq{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}"]
});
var useLoaderStyles = __styles2({
  spinnerSVG: {
    B3aqqti: "f1or16p5",
    Brovlpu: "f1grzc83",
    Bxa1mx5: "f19shzzi",
    Bwaue66: ["f5tbecn", "f15qb8s7"],
    fyp1ls: "fn4mtlg",
    ag6ruv: "f1y80fxs",
    osj692: "f1r2crtq",
    aq5vjd: "f1wsi8sr",
    tlu9e1: "f1bkm2qd",
    J3u96z: "f1urqz7h",
    d32isg: "f1da2vov",
    Bsvqbuc: "f11rfva0",
    b3s3i5: "f1exc66"
  },
  tiny: {
    Bah9ito: "f1j4wmu2",
    ut6tcf: "f1vppzuq",
    B7p06xz: "fv1u54w",
    B807ibg: "fngtx1d"
  },
  "extra-small": {
    Bah9ito: "fmpqlna",
    ut6tcf: "f15z5jzu",
    B7p06xz: "fv1u54w",
    B807ibg: "fadawes"
  },
  small: {
    Bah9ito: "fo52gbo",
    ut6tcf: "f1b41i3v",
    B7p06xz: "fv1u54w",
    B807ibg: "f1xqyyrl"
  },
  medium: {
    Bah9ito: "f1aiqagr",
    ut6tcf: "f1wtx80b",
    B7p06xz: "f1flujpd",
    B807ibg: "f1u06hy7"
  },
  large: {
    Bah9ito: "f1trdq7b",
    ut6tcf: "f9e0mc5",
    B7p06xz: "f1flujpd",
    B807ibg: "f13pmvhl"
  },
  "extra-large": {
    Bah9ito: "f89rf2a",
    ut6tcf: "f1w2xg3q",
    B7p06xz: "f1flujpd",
    B807ibg: "fmn74v6"
  },
  huge: {
    Bah9ito: "f1rx7k5y",
    ut6tcf: "f1vtyt49",
    B7p06xz: "f1owbg48",
    B807ibg: "f1fr1izd"
  }
}, {
  f: [".f1or16p5:focus{outline-width:3px;}", ".f1grzc83:focus{outline-style:solid;}", ".f19shzzi:focus{outline-color:transparent;}"],
  k: ["@-webkit-keyframes fb7n1on{0%{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(360deg);-moz-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}", "@-webkit-keyframes f1gx3jof{0%{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(-360deg);-moz-transform:rotate(-360deg);-ms-transform:rotate(-360deg);transform:rotate(-360deg);}}", "@keyframes fb7n1on{0%{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(360deg);-moz-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}", "@keyframes f1gx3jof{0%{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}100%{-webkit-transform:rotate(-360deg);-moz-transform:rotate(-360deg);-ms-transform:rotate(-360deg);transform:rotate(-360deg);}}"],
  d: [".f5tbecn>svg{-webkit-animation-name:fb7n1on;animation-name:fb7n1on;}", ".f15qb8s7>svg{-webkit-animation-name:f1gx3jof;animation-name:f1gx3jof;}", ".fn4mtlg>svg{-webkit-animation-duration:3s;animation-duration:3s;}", ".f1y80fxs>svg{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;}", ".f1r2crtq>svg{-webkit-animation-timing-function:linear;animation-timing-function:linear;}", ".f1wsi8sr>svg{background-color:transparent;}", ".f1da2vov>svg>circle{cx:50%;}", ".f11rfva0>svg>circle{cy:50%;}", ".f1exc66>svg>circle{fill:none;}", ".f1j4wmu2>svg{height:20px;}", ".f1vppzuq>svg{width:20px;}", ".fv1u54w>svg>circle{stroke-width:var(--strokeWidthThick);}", ".fngtx1d>svg>circle{r:9px;}", ".fmpqlna>svg{height:24px;}", ".f15z5jzu>svg{width:24px;}", ".fadawes>svg>circle{r:11px;}", ".fo52gbo>svg{height:28px;}", ".f1b41i3v>svg{width:28px;}", ".f1xqyyrl>svg>circle{r:13px;}", ".f1aiqagr>svg{height:32px;}", ".f1wtx80b>svg{width:32px;}", ".f1flujpd>svg>circle{stroke-width:var(--strokeWidthThicker);}", ".f1u06hy7>svg>circle{r:14.5px;}", ".f1trdq7b>svg{height:36px;}", ".f9e0mc5>svg{width:36px;}", ".f13pmvhl>svg>circle{r:16.5px;}", ".f89rf2a>svg{height:40px;}", ".f1w2xg3q>svg{width:40px;}", ".fmn74v6>svg>circle{r:18.5px;}", ".f1rx7k5y>svg{height:44px;}", ".f1vtyt49>svg{width:44px;}", ".f1owbg48>svg>circle{stroke-width:var(--strokeWidthThickest);}", ".f1fr1izd>svg>circle{r:20px;}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.f1bkm2qd>svg{-webkit-animation-duration:0.01ms;animation-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1urqz7h>svg{-webkit-animation-iteration-count:1;animation-iteration-count:1;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]]
});
var useTrackStyles = __styles2({
  inverted: {
    gwg7kz: "f1jvpmnu",
    Bvrehnu: "fq8a5sv",
    Bidp6o: "f1b4lwqj",
    cq3kgi: "f1najlst",
    Btwiser: "fjxod4",
    B8001xd: "fu3xdw0",
    Bdordwa: ["f1ttdh6v", "fmyjox0"],
    Bo2mdfu: "f1eseayc",
    E10nrc: "folzdkc",
    Bwl7w15: "fhlfkde",
    Bksq7rz: "f1esql28"
  },
  primary: {
    gwg7kz: "f11ditju",
    B8k2rxp: "f1m9nikz",
    Bvrehnu: "fq8a5sv",
    Bidp6o: "f1b4lwqj",
    cq3kgi: "f1najlst",
    Btwiser: "fjxod4",
    B8001xd: "fu3xdw0",
    Bdordwa: ["f1ttdh6v", "fmyjox0"],
    Bo2mdfu: "f1eseayc",
    E10nrc: "folzdkc",
    Bwl7w15: "fhlfkde",
    Bksq7rz: "f61h2gu",
    y14cdu: "flglbw1"
  }
}, {
  d: [".f1jvpmnu>svg>circle.fui-Spinner__Tail{stroke:var(--colorNeutralStrokeOnBrand2);}", ".fq8a5sv>svg>circle.fui-Spinner__Tail{-webkit-animation-name:f1v1ql0f;animation-name:f1v1ql0f;}", ".f1b4lwqj>svg>circle.fui-Spinner__Tail{-webkit-animation-duration:1.5s;animation-duration:1.5s;}", ".f1najlst>svg>circle.fui-Spinner__Tail{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;}", ".fjxod4>svg>circle.fui-Spinner__Tail{-webkit-animation-timing-function:var(--curveEasyEase);animation-timing-function:var(--curveEasyEase);}", ".fu3xdw0>svg>circle.fui-Spinner__Tail{stroke-linecap:round;}", ".f1ttdh6v>svg>circle.fui-Spinner__Tail{-webkit-transform:rotate(-90deg);-moz-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);}", ".fmyjox0>svg>circle.fui-Spinner__Tail{-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);}", ".f1eseayc>svg>circle.fui-Spinner__Tail{transform-origin:50% 50%;}", ".f1esql28>svg>circle.fui-Spinner__Track{stroke:rgba(255, 255, 255, 0.2);}", ".f11ditju>svg>circle.fui-Spinner__Tail{stroke:var(--colorBrandStroke1);}", ".f61h2gu>svg>circle.fui-Spinner__Track{stroke:var(--colorBrandStroke2);}"],
  k: ["@-webkit-keyframes f1v1ql0f{0%{stroke-dasharray:1,150;stroke-dashoffset:0;}50%{stroke-dasharray:90,150;stroke-dashoffset:-35;}100%{stroke-dasharray:90,150;stroke-dashoffset:-124;}}", "@keyframes f1v1ql0f{0%{stroke-dasharray:1,150;stroke-dashoffset:0;}50%{stroke-dasharray:90,150;stroke-dashoffset:-35;}100%{stroke-dasharray:90,150;stroke-dashoffset:-124;}}"],
  m: [["@media screen and (prefers-reduced-motion: reduce){.folzdkc>svg>circle.fui-Spinner__Tail{-webkit-animation-duration:0.01ms;animation-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.fhlfkde>svg>circle.fui-Spinner__Tail{-webkit-animation-iteration-count:1;animation-iteration-count:1;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (forced-colors: active){.f1m9nikz>svg>circle.fui-Spinner__Tail{stroke:var(--colorNeutralStrokeOnBrand2);}}", {
    m: "screen and (forced-colors: active)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.folzdkc>svg>circle.fui-Spinner__Tail{-webkit-animation-duration:0.01ms;animation-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.fhlfkde>svg>circle.fui-Spinner__Tail{-webkit-animation-iteration-count:1;animation-iteration-count:1;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (forced-colors: active){.flglbw1>svg>circle.fui-Spinner__Track{stroke:var(--colorNeutralBackgroundInverted);}}", {
    m: "screen and (forced-colors: active)"
  }]]
});
var useLabelStyles4 = __styles2({
  inverted: {
    sj55zd: "f15aqcq"
  },
  primary: {},
  tiny: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  "extra-small": {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  small: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  medium: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  large: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  "extra-large": {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  huge: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1pp30po",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f106mvju"
  }
}, {
  d: [".f15aqcq{color:rgba(255, 255, 255, 1);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f106mvju{line-height:var(--lineHeightBase500);}"]
});
var useSpinnerStyles_unstable = (state) => {
  const {
    labelPosition,
    size: size2,
    appearance = "primary"
  } = state;
  const rootStyles = useRootStyles13();
  const spinnerStyles = useLoaderStyles();
  const labelStyles = useLabelStyles4();
  const trackStyles = useTrackStyles();
  state.root.className = mergeClasses(spinnerClassNames.root, rootStyles.root, (labelPosition === "above" || labelPosition === "below") && rootStyles.vertical, (labelPosition === "before" || labelPosition === "after") && rootStyles.horizontal, state.root.className);
  if (state.spinner) {
    state.spinner.className = mergeClasses(spinnerClassNames.spinner, spinnerStyles.spinnerSVG, spinnerStyles[size2], trackStyles[appearance], state.spinner.className);
  }
  if (state.label) {
    state.label.className = mergeClasses(spinnerClassNames.label, labelStyles[size2], labelStyles[appearance], state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-spinner/lib/components/Spinner/Spinner.js
var Spinner = React241.forwardRef((props, ref) => {
  const state = useSpinner_unstable(props, ref);
  useSpinnerStyles_unstable(state);
  const {
    useSpinnerStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderSpinner_unstable(state);
});
Spinner.displayName = "Spinner";

// node_modules/@fluentui/react-switch/lib/components/Switch/Switch.js
var React244 = __toESM(require_react());

// node_modules/@fluentui/react-switch/lib/components/Switch/useSwitch.js
var React242 = __toESM(require_react());
var useSwitch_unstable = (props, ref) => {
  const {
    checked,
    defaultChecked,
    disabled,
    labelPosition = "after",
    onChange,
    required
  } = props;
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "input",
    excludedPropNames: ["checked", "defaultChecked", "onChange"]
  });
  const id = useId2("switch-", nativeProps.primary.id);
  const root = resolveShorthand(props.root, {
    defaultProps: {
      ref: useFocusWithin(),
      ...nativeProps.root
    },
    required: true
  });
  const indicator = resolveShorthand(props.indicator, {
    defaultProps: {
      "aria-hidden": true,
      children: React242.createElement(CircleFilled, null)
    },
    required: true
  });
  const input = resolveShorthand(props.input, {
    defaultProps: {
      checked,
      defaultChecked,
      id,
      ref,
      role: "switch",
      type: "checkbox",
      ...nativeProps.primary
    },
    required: true
  });
  input.onChange = mergeCallbacks(input.onChange, (ev) => {
    return onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
      checked: ev.currentTarget.checked
    });
  });
  const label = resolveShorthand(props.label, {
    defaultProps: {
      disabled,
      htmlFor: id,
      required,
      size: "medium"
    }
  });
  return {
    labelPosition,
    //Slots definition
    components: {
      root: "div",
      indicator: "div",
      input: "input",
      label: Label
    },
    root,
    indicator,
    input,
    label
  };
};

// node_modules/@fluentui/react-switch/lib/components/Switch/renderSwitch.js
var React243 = __toESM(require_react());
var renderSwitch_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  const {
    labelPosition
  } = state;
  return React243.createElement(slots.root, slotProps.root, React243.createElement(slots.input, slotProps.input), labelPosition !== "after" && slots.label && React243.createElement(slots.label, slotProps.label), React243.createElement(slots.indicator, slotProps.indicator), labelPosition === "after" && slots.label && React243.createElement(slots.label, slotProps.label));
};

// node_modules/@fluentui/react-switch/lib/components/Switch/useSwitchStyles.js
var switchClassNames = {
  root: "fui-Switch",
  indicator: "fui-Switch__indicator",
  input: "fui-Switch__input",
  label: "fui-Switch__label"
};
var switchClassName = switchClassNames.root;
var spaceBetweenThumbAndTrack = 2;
var trackHeight = 20;
var thumbSize = trackHeight - spaceBetweenThumbAndTrack;
var useRootBaseClassName4 = __resetStyles("r1u7w45w", "rlzel8d", [".r1u7w45w{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;box-sizing:border-box;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;position:relative;}", ".r1u7w45w:focus{outline-style:none;}", ".r1u7w45w:focus-visible{outline-style:none;}", ".r1u7w45w[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}", '.r1u7w45w[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:2px;border-right-width:2px;border-bottom-width:2px;border-left-width:2px;border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;left:-2px;right:-2px;}', ".rlzel8d{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;box-sizing:border-box;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;position:relative;}", ".rlzel8d:focus{outline-style:none;}", ".rlzel8d:focus-visible{outline-style:none;}", ".rlzel8d[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}", '.rlzel8d[data-fui-focus-within]:focus-within::after{content:"";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:2px;border-left-width:2px;border-bottom-width:2px;border-right-width:2px;border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;right:-2px;left:-2px;}']);
var useRootStyles14 = __styles2({
  vertical: {
    Beiy3e4: "f1vx9l62"
  }
}, {
  d: [".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}"]
});
var useIndicatorBaseClassName3 = __resetStyles("r13wlxb8", null, [".r13wlxb8{border-radius:var(--borderRadiusCircular);border:1px solid;line-height:0;box-sizing:border-box;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;font-size:18px;height:20px;margin:var(--spacingVerticalS) var(--spacingHorizontalS);pointer-events:none;transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:background,border,color;width:40px;}", "@media screen and (prefers-reduced-motion: reduce){.r13wlxb8{transition-duration:0.01ms;}}", ".r13wlxb8>*{transition-duration:var(--durationNormal);transition-timing-function:var(--curveEasyEase);transition-property:transform;}", "@media screen and (prefers-reduced-motion: reduce){.r13wlxb8>*{transition-duration:0.01ms;}}"]);
var useIndicatorStyles2 = __styles2({
  labelAbove: {
    B6of3ja: "f1hu3pq6"
  }
}, {
  d: [".f1hu3pq6{margin-top:0;}"]
});
var useInputBaseClassName3 = __resetStyles("rw4brat", "r1f4bxyr", [".rw4brat{box-sizing:border-box;cursor:pointer;height:100%;margin:0;opacity:0;position:absolute;width:calc(40px + 2 * var(--spacingHorizontalS));}", ".rw4brat:checked~.fui-Switch__indicator>*{-webkit-transform:translateX(20px);-moz-transform:translateX(20px);-ms-transform:translateX(20px);transform:translateX(20px);}", ".rw4brat:disabled{cursor:default;}", ".rw4brat:disabled~.fui-Switch__indicator{color:var(--colorNeutralForegroundDisabled);}", ".rw4brat:disabled~.fui-Switch__label{cursor:default;color:var(--colorNeutralForegroundDisabled);}", ".rw4brat:enabled:not(:checked)~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessible);border-color:var(--colorNeutralStrokeAccessible);}", ".rw4brat:enabled:not(:checked)~.fui-Switch__label{color:var(--colorNeutralForeground1);}", ".rw4brat:enabled:not(:checked):hover~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessibleHover);border-color:var(--colorNeutralStrokeAccessibleHover);}", ".rw4brat:enabled:not(:checked):hover:active~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessiblePressed);border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".rw4brat:enabled:checked~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackground);color:var(--colorNeutralForegroundInverted);border-color:var(--colorTransparentStroke);}", ".rw4brat:enabled:checked:hover~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundHover);border-color:var(--colorTransparentStrokeInteractive);}", ".rw4brat:enabled:checked:hover:active~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);border-color:var(--colorTransparentStrokeInteractive);}", ".rw4brat:disabled:not(:checked)~.fui-Switch__indicator{border-color:var(--colorNeutralStrokeDisabled);}", ".rw4brat:disabled:checked~.fui-Switch__indicator{background-color:var(--colorNeutralBackgroundDisabled);border-color:var(--colorTransparentStrokeDisabled);}", "@media (forced-colors: active){.rw4brat:disabled~.fui-Switch__indicator{color:GrayText;border-color:GrayText;}.rw4brat:disabled~.fui-Switch__label{color:GrayText;}.rw4brat:enabled:checked:hover~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}.rw4brat:enabled:checked~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}}", ".r1f4bxyr{box-sizing:border-box;cursor:pointer;height:100%;margin:0;opacity:0;position:absolute;width:calc(40px + 2 * var(--spacingHorizontalS));}", ".r1f4bxyr:checked~.fui-Switch__indicator>*{-webkit-transform:translateX(-20px);-moz-transform:translateX(-20px);-ms-transform:translateX(-20px);transform:translateX(-20px);}", ".r1f4bxyr:disabled{cursor:default;}", ".r1f4bxyr:disabled~.fui-Switch__indicator{color:var(--colorNeutralForegroundDisabled);}", ".r1f4bxyr:disabled~.fui-Switch__label{cursor:default;color:var(--colorNeutralForegroundDisabled);}", ".r1f4bxyr:enabled:not(:checked)~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessible);border-color:var(--colorNeutralStrokeAccessible);}", ".r1f4bxyr:enabled:not(:checked)~.fui-Switch__label{color:var(--colorNeutralForeground1);}", ".r1f4bxyr:enabled:not(:checked):hover~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessibleHover);border-color:var(--colorNeutralStrokeAccessibleHover);}", ".r1f4bxyr:enabled:not(:checked):hover:active~.fui-Switch__indicator{color:var(--colorNeutralStrokeAccessiblePressed);border-color:var(--colorNeutralStrokeAccessiblePressed);}", ".r1f4bxyr:enabled:checked~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackground);color:var(--colorNeutralForegroundInverted);border-color:var(--colorTransparentStroke);}", ".r1f4bxyr:enabled:checked:hover~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundHover);border-color:var(--colorTransparentStrokeInteractive);}", ".r1f4bxyr:enabled:checked:hover:active~.fui-Switch__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);border-color:var(--colorTransparentStrokeInteractive);}", ".r1f4bxyr:disabled:not(:checked)~.fui-Switch__indicator{border-color:var(--colorNeutralStrokeDisabled);}", ".r1f4bxyr:disabled:checked~.fui-Switch__indicator{background-color:var(--colorNeutralBackgroundDisabled);border-color:var(--colorTransparentStrokeDisabled);}", "@media (forced-colors: active){.r1f4bxyr:disabled~.fui-Switch__indicator{color:GrayText;border-color:GrayText;}.r1f4bxyr:disabled~.fui-Switch__label{color:GrayText;}.r1f4bxyr:enabled:checked:hover~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}.r1f4bxyr:enabled:checked~.fui-Switch__indicator{background-color:Highlight;color:Canvas;}}"]);
var useInputStyles6 = __styles2({
  before: {
    j35jbq: ["f1e31b4d", "f1vgc2s3"],
    Bhzewxz: "f15twtuk"
  },
  after: {
    oyh7mz: ["f1vgc2s3", "f1e31b4d"],
    Bhzewxz: "f15twtuk"
  },
  above: {
    B5kzvoi: "f1yab3r1",
    Bqenvij: "f1aar7gd",
    a9b677: "fly5x3f"
  }
}, {
  d: [".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".f15twtuk{top:0;}", ".f1yab3r1{bottom:0;}", ".f1aar7gd{height:calc(20px + var(--spacingVerticalS));}", ".fly5x3f{width:100%;}"]
});
var useLabelStyles5 = __styles2({
  base: {
    Bceei9c: "f1k6fduh",
    jrapky: "f49ad5g",
    B6of3ja: "f1xlvstr",
    z8tnut: "f1kwiid1",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f5b47ha",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"]
  },
  above: {
    z8tnut: "f1ywm7hm",
    Byoj8tv: "f14wxoun",
    a9b677: "fly5x3f"
  },
  after: {
    uwmqm3: ["fruq291", "f7x41pl"]
  },
  before: {
    z189sj: ["f7x41pl", "fruq291"]
  }
}, {
  d: [".f1k6fduh{cursor:pointer;}", ".f49ad5g{margin-bottom:calc((20px - var(--lineHeightBase300)) / 2);}", ".f1xlvstr{margin-top:calc((20px - var(--lineHeightBase300)) / 2);}", ".f1kwiid1{padding-top:var(--spacingVerticalS);}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f5b47ha{padding-bottom:var(--spacingVerticalS);}", ".f1ywm7hm{padding-top:var(--spacingVerticalXS);}", ".f14wxoun{padding-bottom:var(--spacingVerticalXS);}", ".fly5x3f{width:100%;}", ".fruq291{padding-left:var(--spacingHorizontalXS);}", ".f7x41pl{padding-right:var(--spacingHorizontalXS);}"]
});
var useSwitchStyles_unstable = (state) => {
  const rootBaseClassName = useRootBaseClassName4();
  const rootStyles = useRootStyles14();
  const indicatorBaseClassName = useIndicatorBaseClassName3();
  const indicatorStyles = useIndicatorStyles2();
  const inputBaseClassName = useInputBaseClassName3();
  const inputStyles = useInputStyles6();
  const labelStyles = useLabelStyles5();
  const {
    label,
    labelPosition
  } = state;
  state.root.className = mergeClasses(switchClassNames.root, rootBaseClassName, labelPosition === "above" && rootStyles.vertical, state.root.className);
  state.indicator.className = mergeClasses(switchClassNames.indicator, indicatorBaseClassName, label && labelPosition === "above" && indicatorStyles.labelAbove, state.indicator.className);
  state.input.className = mergeClasses(switchClassNames.input, inputBaseClassName, label && inputStyles[labelPosition], state.input.className);
  if (state.label) {
    state.label.className = mergeClasses(switchClassNames.label, labelStyles.base, labelStyles[labelPosition], state.label.className);
  }
  return state;
};

// node_modules/@fluentui/react-switch/lib/components/Switch/Switch.js
var Switch = React244.forwardRef((props, ref) => {
  const state = useSwitch_unstable(props, ref);
  useSwitchStyles_unstable(state);
  const {
    useSwitchStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderSwitch_unstable(state);
});
Switch.displayName = "Switch";

// node_modules/@fluentui/react-switch/lib/components/Switch/Switch.types.js
var React245 = __toESM(require_react());

// node_modules/@fluentui/react-switch/lib/components/SwitchField/SwitchField.js
var switchFieldClassNames = getDeprecatedFieldClassNames(switchClassNames.root);
var SwitchField = makeDeprecatedField(Switch);

// node_modules/@fluentui/react-tabs/lib/components/Tab/Tab.js
var React249 = __toESM(require_react());

// node_modules/@fluentui/react-tabs/lib/components/Tab/useTab.js
var React246 = __toESM(require_react());

// node_modules/@fluentui/react-tabs/lib/components/TabList/TabListContext.js
var tabListContextDefaultValue = {
  appearance: "transparent",
  reserveSelectedTabSpace: true,
  disabled: false,
  selectedValue: void 0,
  onRegister: () => {
  },
  onUnregister: () => {
  },
  onSelect: () => {
  },
  getRegisteredTabs: () => {
    return {
      registeredTabs: {}
    };
  },
  size: "medium",
  vertical: false
};
var TabListContext = createContext10(void 0);
var TabListProvider = TabListContext.Provider;
var useTabListContext_unstable = (selector) => useContextSelector(TabListContext, (ctx = tabListContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-tabs/lib/components/Tab/useTab.js
var useTab_unstable = (props, ref) => {
  const {
    content,
    disabled: tabDisabled = false,
    icon,
    value
  } = props;
  const appearance = useTabListContext_unstable((ctx) => ctx.appearance);
  const reserveSelectedTabSpace = useTabListContext_unstable((ctx) => ctx.reserveSelectedTabSpace);
  const listDisabled = useTabListContext_unstable((ctx) => ctx.disabled);
  const selected = useTabListContext_unstable((ctx) => ctx.selectedValue === value);
  const onRegister = useTabListContext_unstable((ctx) => ctx.onRegister);
  const onUnregister = useTabListContext_unstable((ctx) => ctx.onUnregister);
  const onSelect = useTabListContext_unstable((ctx) => ctx.onSelect);
  const size2 = useTabListContext_unstable((ctx) => ctx.size);
  const vertical = useTabListContext_unstable((ctx) => !!ctx.vertical);
  const disabled = listDisabled || tabDisabled;
  const innerRef = React246.useRef(null);
  const onClick = useEventCallback((event) => onSelect(event, {
    value
  }));
  React246.useEffect(() => {
    onRegister({
      value,
      ref: innerRef
    });
    return () => {
      onUnregister({
        value,
        ref: innerRef
      });
    };
  }, [onRegister, onUnregister, innerRef, value]);
  const iconShorthand = resolveShorthand(icon);
  const contentShorthand = resolveShorthand(content, {
    required: true,
    defaultProps: {
      children: props.children
    }
  });
  return {
    components: {
      root: "button",
      icon: "span",
      content: "span"
    },
    root: getNativeElementProps("button", {
      ref: useMergedRefs(ref, innerRef),
      role: "tab",
      type: "button",
      // aria-selected undefined indicates it is not selectable
      // according to https://www.w3.org/TR/wai-aria-1.1/#aria-selected
      "aria-selected": disabled ? void 0 : `${selected}`,
      ...props,
      disabled,
      onClick
    }),
    icon: iconShorthand,
    iconOnly: Boolean((iconShorthand === null || iconShorthand === void 0 ? void 0 : iconShorthand.children) && !contentShorthand.children),
    content: contentShorthand,
    appearance,
    contentReservedSpaceClassName: reserveSelectedTabSpace ? "" : void 0,
    disabled,
    selected,
    size: size2,
    value,
    vertical
  };
};

// node_modules/@fluentui/react-tabs/lib/components/Tab/renderTab.js
var React247 = __toESM(require_react());
var renderTab_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React247.createElement(slots.root, slotProps.root, slots.icon && React247.createElement(slots.icon, slotProps.icon), !state.iconOnly && React247.createElement(slots.content, slotProps.content), !state.selected && !state.iconOnly && state.contentReservedSpaceClassName !== void 0 && React247.createElement(slots.content, {
    ...slotProps.content,
    className: state.contentReservedSpaceClassName
  }));
};

// node_modules/@fluentui/react-tabs/lib/components/Tab/useTabAnimatedIndicator.js
var React248 = __toESM(require_react());
var tabIndicatorCssVars_unstable = {
  offsetVar: "--fui-Tab__indicator--offset",
  scaleVar: "--fui-Tab__indicator--scale"
};
var useActiveIndicatorStyles = __styles2({
  base: {
    B68tc82: "f1mtd64y",
    Bmxbyg5: "f1y7q3j9"
  },
  animated: {
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f6zz20j",
    B1dyfl9: "f1ai4sc1",
    B0vmy72: "f9qxlq5",
    u9bimw: "f1aql376"
  },
  horizontal: {
    sjv3b2: ["fug4aj8", "f1i5xzg7"],
    b1kco5: "f1q7ujh"
  },
  vertical: {
    sjv3b2: "f1hqboyk",
    b1kco5: "f1dxupa6"
  }
}, {
  d: [".f1mtd64y{overflow-x:visible;}", ".f1y7q3j9{overflow-y:visible;}", ".fhwpy7i::after{transition-property:transform;}", ".f6zz20j::after{transition-duration:var(--durationSlow);}", ".f1ai4sc1::after{transition-timing-function:var(--curveDecelerateMax);}", ".fug4aj8::after{transform-origin:left;}", ".f1i5xzg7::after{transform-origin:right;}", ".f1q7ujh::after{-webkit-transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));-moz-transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));-ms-transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));}", ".f1hqboyk::after{transform-origin:top;}", ".f1dxupa6::after{-webkit-transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));-moz-transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));-ms-transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));}"],
  m: [["@media (prefers-reduced-motion: reduce){.f9qxlq5::after{transition-property:none;}}", {
    m: "(prefers-reduced-motion: reduce)"
  }], ["@media (prefers-reduced-motion: reduce){.f1aql376::after{transition-duration:0.01ms;}}", {
    m: "(prefers-reduced-motion: reduce)"
  }]]
});
var calculateTabRect = (element) => {
  if (element) {
    var _element_parentElement;
    const parentRect = ((_element_parentElement = element.parentElement) === null || _element_parentElement === void 0 ? void 0 : _element_parentElement.getBoundingClientRect()) || {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    };
    const tabRect = element.getBoundingClientRect();
    return {
      x: tabRect.x - parentRect.x,
      y: tabRect.y - parentRect.y,
      width: tabRect.width,
      height: tabRect.height
    };
  }
  return void 0;
};
var getRegisteredTabRect = (registeredTabs, value) => {
  var _registeredTabs_JSON_stringify;
  const element = value !== void 0 && value !== null ? (_registeredTabs_JSON_stringify = registeredTabs[JSON.stringify(value)]) === null || _registeredTabs_JSON_stringify === void 0 ? void 0 : _registeredTabs_JSON_stringify.ref.current : void 0;
  return element ? calculateTabRect(element) : void 0;
};
var useTabAnimatedIndicatorStyles_unstable = (state) => {
  const {
    disabled,
    selected,
    vertical
  } = state;
  const activeIndicatorStyles = useActiveIndicatorStyles();
  const [lastAnimatedFrom, setLastAnimatedFrom] = React248.useState();
  const [animationValues, setAnimationValues] = React248.useState({
    offset: 0,
    scale: 1
  });
  const getRegisteredTabs = useTabListContext_unstable((ctx) => ctx.getRegisteredTabs);
  React248.useEffect(() => {
    if (lastAnimatedFrom) {
      setAnimationValues({
        offset: 0,
        scale: 1
      });
    }
  }, [lastAnimatedFrom]);
  if (selected) {
    const {
      previousSelectedValue,
      selectedValue,
      registeredTabs
    } = getRegisteredTabs();
    const previousSelectedTabRect = getRegisteredTabRect(registeredTabs, previousSelectedValue);
    const selectedTabRect = getRegisteredTabRect(registeredTabs, selectedValue);
    if (selectedTabRect && previousSelectedTabRect && previousSelectedValue && lastAnimatedFrom !== previousSelectedValue) {
      const offset3 = vertical ? previousSelectedTabRect.y - selectedTabRect.y : previousSelectedTabRect.x - selectedTabRect.x;
      const scale = vertical ? previousSelectedTabRect.height / selectedTabRect.height : previousSelectedTabRect.width / selectedTabRect.width;
      setAnimationValues({
        offset: offset3,
        scale
      });
      setLastAnimatedFrom(previousSelectedValue);
    }
  } else if (lastAnimatedFrom) {
    setLastAnimatedFrom(void 0);
  }
  if (disabled) {
    return state;
  }
  const animating = animationValues.offset === 0 && animationValues.scale === 1;
  state.root.className = mergeClasses(state.root.className, selected && activeIndicatorStyles.base, selected && animating && activeIndicatorStyles.animated, selected && (vertical ? activeIndicatorStyles.vertical : activeIndicatorStyles.horizontal));
  const rootCssVars = {
    [tabIndicatorCssVars_unstable.offsetVar]: `${animationValues.offset}px`,
    [tabIndicatorCssVars_unstable.scaleVar]: `${animationValues.scale}`
  };
  state.root.style = {
    ...rootCssVars,
    ...state.root.style
  };
  return state;
};

// node_modules/@fluentui/react-tabs/lib/components/Tab/useTabStyles.js
var tabClassNames = {
  root: "fui-Tab",
  icon: "fui-Tab__icon",
  content: "fui-Tab__content"
};
var reservedSpaceClassNames = {
  content: "fui-Tab__content--reserved-space"
};
var useRootStyles15 = __styles2({
  base: {
    Bt984gj: "f122n59",
    g2u3we: "fwhevhj",
    h3c5rm: ["f61n433", "f1q8l70w"],
    B9xav0g: "fv1dfc8",
    zhjwy3: ["f1q8l70w", "f61n433"],
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"],
    B4j52fo: "fre7gi1",
    Bekrc4i: ["f1358rze", "f1rvrf73"],
    Bn0qgzm: "fqdk4by",
    ibv6hh: ["f1rvrf73", "f1358rze"],
    Bceei9c: "f1k6fduh",
    mc9l5x: "f13qh94s",
    Bnnss6s: "fi64zpg",
    Bxotwcr: "f1u07yai",
    Budl1dq: "frn2hmy",
    wkccdc: "f1olsevy",
    Bahqtrf: "fk6fouc",
    Bg96gwp: "f1i3iumi",
    oeaueh: "f1s6fcnf",
    qhf8xq: "f10pi13n",
    B68tc82: "f1p9o1ba",
    Bmxbyg5: "f1sil6mw",
    B9bfxx9: "f1cxpek8"
  },
  horizontal: {
    Brf1p80: "f4d9j23"
  },
  vertical: {
    Brf1p80: "f1s9ku6b"
  },
  smallHorizontal: {
    i8kkvl: "f14mj54c",
    z8tnut: "fp2oml8",
    z189sj: ["fdw0yi8", "fk8j09s"],
    Byoj8tv: "f1tdddsa",
    uwmqm3: ["fk8j09s", "fdw0yi8"]
  },
  smallVertical: {
    i8kkvl: "f14mj54c",
    z8tnut: "fclwglc",
    z189sj: ["fdw0yi8", "fk8j09s"],
    Byoj8tv: "fywfov9",
    uwmqm3: ["fk8j09s", "fdw0yi8"]
  },
  mediumHorizontal: {
    i8kkvl: "f1rjii52",
    z8tnut: "f5yzyt",
    z189sj: ["f11gcy0p", "f1ng84yb"],
    Byoj8tv: "fx3omr",
    uwmqm3: ["f1ng84yb", "f11gcy0p"]
  },
  mediumVertical: {
    i8kkvl: "f1rjii52",
    z8tnut: "fp2oml8",
    z189sj: ["f11gcy0p", "f1ng84yb"],
    Byoj8tv: "f1tdddsa",
    uwmqm3: ["f1ng84yb", "f11gcy0p"]
  },
  largeHorizontal: {
    i8kkvl: "f1rjii52",
    z8tnut: "fikn0iw",
    z189sj: ["f11gcy0p", "f1ng84yb"],
    Byoj8tv: "fdxej3c",
    uwmqm3: ["f1ng84yb", "f11gcy0p"]
  },
  largeVertical: {
    i8kkvl: "f1rjii52",
    z8tnut: "f1kwiid1",
    z189sj: ["f11gcy0p", "f1ng84yb"],
    Byoj8tv: "f5b47ha",
    uwmqm3: ["f1ng84yb", "f11gcy0p"]
  },
  transparent: {
    De3pzq: "f1c21dwh",
    Jwef8y: "fjxutwb",
    ecr2s2: "fophhak",
    Bptxc3x: "fmmjozx",
    B076xvk: "f1mfqf41",
    q9r9w5: "f10aiid4",
    cl4aha: "fpkze5g",
    Bk452zc: "f149wc3x",
    a4hkcw: "fjioou7"
  },
  subtle: {
    De3pzq: "fhovq9v",
    Jwef8y: "f1t94bn6",
    ecr2s2: "f1wfn5kd",
    Bptxc3x: "fmmjozx",
    B076xvk: "f1mfqf41",
    q9r9w5: "f10aiid4",
    cl4aha: "fpkze5g",
    Bk452zc: "f149wc3x",
    a4hkcw: "fjioou7"
  },
  disabled: {
    De3pzq: "f1c21dwh",
    Bptxc3x: "fato7r6",
    cl4aha: "fao1bnu",
    Bceei9c: "fdrzuqr"
  },
  selected: {
    Bptxc3x: "f1cadz5z",
    B076xvk: "f1ck17l",
    q9r9w5: "f42ak0g",
    cl4aha: "ffplhdr",
    Bk452zc: "ffth601",
    a4hkcw: "fhklyu5"
  }
}, {
  d: [".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".fwhevhj{border-top-color:none;}", ".f61n433{border-right-color:none;}", ".f1q8l70w{border-left-color:none;}", ".fv1dfc8{border-bottom-color:none;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".fre7gi1{border-top-width:0;}", ".f1358rze{border-right-width:0;}", ".f1rvrf73{border-left-width:0;}", ".fqdk4by{border-bottom-width:0;}", ".f1k6fduh{cursor:pointer;}", ".f13qh94s{display:grid;}", ".fi64zpg{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}", ".f1u07yai{grid-auto-flow:column;}", ".frn2hmy{grid-template-columns:auto;}", ".f1olsevy{grid-template-rows:auto;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1s6fcnf{outline-style:none;}", ".f10pi13n{position:relative;}", ".f1p9o1ba{overflow-x:hidden;}", ".f1sil6mw{overflow-y:hidden;}", ".f1cxpek8{text-transform:none;}", ".f4d9j23{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;}", ".f1s9ku6b{-webkit-box-pack:start;-ms-flex-pack:start;-webkit-justify-content:start;justify-content:start;}", ".f14mj54c{-webkit-column-gap:var(--spacingHorizontalXXS);column-gap:var(--spacingHorizontalXXS);}", ".fp2oml8{padding-top:var(--spacingVerticalSNudge);}", ".fdw0yi8{padding-right:var(--spacingHorizontalSNudge);}", ".fk8j09s{padding-left:var(--spacingHorizontalSNudge);}", ".f1tdddsa{padding-bottom:var(--spacingVerticalSNudge);}", ".fclwglc{padding-top:var(--spacingVerticalXXS);}", ".fywfov9{padding-bottom:var(--spacingVerticalXXS);}", ".f1rjii52{-webkit-column-gap:var(--spacingHorizontalSNudge);column-gap:var(--spacingHorizontalSNudge);}", ".f5yzyt{padding-top:var(--spacingVerticalM);}", ".f11gcy0p{padding-right:var(--spacingHorizontalMNudge);}", ".f1ng84yb{padding-left:var(--spacingHorizontalMNudge);}", ".fx3omr{padding-bottom:var(--spacingVerticalM);}", ".fikn0iw{padding-top:var(--spacingVerticalL);}", ".fdxej3c{padding-bottom:var(--spacingVerticalL);}", ".f1kwiid1{padding-top:var(--spacingVerticalS);}", ".f5b47ha{padding-bottom:var(--spacingVerticalS);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".fmmjozx .fui-Tab__icon{color:var(--colorNeutralForeground2);}", ".fpkze5g .fui-Tab__content{color:var(--colorNeutralForeground2);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".fato7r6 .fui-Tab__icon{color:var(--colorNeutralForegroundDisabled);}", ".fao1bnu .fui-Tab__content{color:var(--colorNeutralForegroundDisabled);}", ".fdrzuqr{cursor:not-allowed;}", ".f1cadz5z .fui-Tab__icon{color:var(--colorCompoundBrandForeground1);}", ".ffplhdr .fui-Tab__content{color:var(--colorNeutralForeground1);}"],
  h: [".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".f1mfqf41:hover .fui-Tab__icon{color:var(--colorNeutralForeground2Hover);}", ".f149wc3x:hover .fui-Tab__content{color:var(--colorNeutralForeground2Hover);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".f1ck17l:hover .fui-Tab__icon{color:var(--colorCompoundBrandForeground1Hover);}", ".ffth601:hover .fui-Tab__content{color:var(--colorNeutralForeground1Hover);}"],
  a: [".fophhak:active{background-color:var(--colorTransparentBackgroundPressed);}", ".f10aiid4:active .fui-Tab__icon{color:var(--colorNeutralForeground2Pressed);}", ".fjioou7:active .fui-Tab__content{color:var(--colorNeutralForeground2Pressed);}", ".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f42ak0g:active .fui-Tab__icon{color:var(--colorCompoundBrandForeground1Pressed);}", ".fhklyu5:active .fui-Tab__content{color:var(--colorNeutralForeground1Pressed);}"]
});
var useFocusStyles2 = __styles2({
  base: {
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bn4voq9: "f1p7hgxw",
    Bfpq7zp: "f1way5bb",
    g9k6zt: "f9znhxp",
    j6ew2k: ["fqa318h", "fqa318h"],
    Bhxq17a: "f1vjpng2"
  }
}, {
  d: [".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", ".f1p7hgxw[data-fui-focus-visible]{outline-width:var(--strokeWidthThick);}", ".f1way5bb[data-fui-focus-visible]{outline-color:transparent;}", ".f9znhxp[data-fui-focus-visible]{outline-style:solid;}", ".fqa318h[data-fui-focus-visible]{box-shadow:var(--shadow4),0 0 0 var(--strokeWidthThick) var(--colorStrokeFocus2);}", ".f1vjpng2[data-fui-focus-visible]{z-index:1;}"]
});
var usePendingIndicatorStyles = __styles2({
  base: {
    az7l2e: "fhw179n",
    Bv4n3vi: ["f10y1uxy", "f6aiuy0"],
    vqofr: ["f6aiuy0", "f10y1uxy"],
    B0uxbk8: ["f1kfpfnu", "f1dx5wco"],
    Bgqb9hq: ["f1dx5wco", "f1kfpfnu"],
    amg5m6: "f1kmhr4c",
    zkfqfm: "fl1ydde",
    Bkydozb: "f1y7maxz",
    vzq8l0: ["f105swax", "fscdmel"],
    Bka2azo: ["fscdmel", "f105swax"],
    Br4ovkg: ["f1tkcw1w", "f1u11x8o"],
    csmgbd: ["f1u11x8o", "f1tkcw1w"],
    y36c18: "f16cxu0",
    B1ctymy: "f1nwgacf",
    Bgvrrv0: "f15ovonk",
    ddr6p5: "fvje46l"
  },
  disabled: {
    az7l2e: "f1ut20fw",
    Bkydozb: "fhrzcfn"
  },
  smallHorizontal: {
    lawp4y: "fchca7p",
    Baz25je: "f1r53b5e",
    Fbdkly: ["f1s6rxz5", "fo35v8s"],
    mdwyqc: ["fo35v8s", "f1s6rxz5"]
  },
  smallVertical: {
    lawp4y: "fze4zud",
    Fbdkly: ["f1fzr1x6", "f1f351id"],
    Bciustq: "fdp32p8",
    Ccq8qp: "f1aij3q"
  },
  mediumHorizontal: {
    lawp4y: "fchca7p",
    Baz25je: "f1s2r9ax",
    Fbdkly: ["f1o0nnkk", "fxb7rol"],
    mdwyqc: ["fxb7rol", "f1o0nnkk"]
  },
  mediumVertical: {
    lawp4y: "f17jracn",
    Fbdkly: ["f1fzr1x6", "f1f351id"],
    Bciustq: "f117lcb2",
    Ccq8qp: "f1aij3q"
  },
  largeHorizontal: {
    lawp4y: "fchca7p",
    Baz25je: "f1s2r9ax",
    Fbdkly: ["f1o0nnkk", "fxb7rol"],
    mdwyqc: ["fxb7rol", "f1o0nnkk"]
  },
  largeVertical: {
    lawp4y: "fel9d3z",
    Fbdkly: ["f1fzr1x6", "f1f351id"],
    Bciustq: "f6vqlre",
    Ccq8qp: "f1aij3q"
  }
}, {
  h: [".fhw179n:hover::before{background-color:var(--colorNeutralStroke1Hover);}", ".f10y1uxy:hover::before{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f6aiuy0:hover::before{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1kfpfnu:hover::before{border-top-right-radius:var(--borderRadiusCircular);}", ".f1dx5wco:hover::before{border-top-left-radius:var(--borderRadiusCircular);}", '.f1kmhr4c:hover::before{content:"";}', ".fl1ydde:hover::before{position:absolute;}", ".f1ut20fw:hover::before{background-color:var(--colorTransparentStroke);}"],
  a: [".f1y7maxz:active::before{background-color:var(--colorNeutralStroke1Pressed);}", ".f105swax:active::before{border-bottom-right-radius:var(--borderRadiusCircular);}", ".fscdmel:active::before{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1tkcw1w:active::before{border-top-right-radius:var(--borderRadiusCircular);}", ".f1u11x8o:active::before{border-top-left-radius:var(--borderRadiusCircular);}", '.f16cxu0:active::before{content:"";}', ".f1nwgacf:active::before{position:absolute;}", ".fhrzcfn:active::before{background-color:var(--colorTransparentStroke);}"],
  m: [["@media (forced-colors: active){.f15ovonk:hover::before{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fvje46l:active::before{background-color:Highlight;}}", {
    m: "(forced-colors: active)"
  }]],
  d: [".fchca7p::before{bottom:0;}", ".f1r53b5e::before{height:var(--strokeWidthThick);}", ".f1s6rxz5::before{left:var(--spacingHorizontalSNudge);}", ".fo35v8s::before{right:var(--spacingHorizontalSNudge);}", ".fze4zud::before{bottom:var(--spacingVerticalXS);}", ".f1fzr1x6::before{left:0;}", ".f1f351id::before{right:0;}", ".fdp32p8::before{top:var(--spacingVerticalXS);}", ".f1aij3q::before{width:var(--strokeWidthThicker);}", ".f1s2r9ax::before{height:var(--strokeWidthThicker);}", ".f1o0nnkk::before{left:var(--spacingHorizontalM);}", ".fxb7rol::before{right:var(--spacingHorizontalM);}", ".f17jracn::before{bottom:var(--spacingVerticalS);}", ".f117lcb2::before{top:var(--spacingVerticalS);}", ".fel9d3z::before{bottom:var(--spacingVerticalMNudge);}", ".f6vqlre::before{top:var(--spacingVerticalMNudge);}"]
});
var useActiveIndicatorStyles2 = __styles2({
  base: {
    Bjyk6c5: "f1rp0jgh",
    B3778ie: ["fprarqb", "f14vs0nd"],
    d9w3h3: ["f14vs0nd", "fprarqb"],
    Bl18szs: ["f1gtfqs9", "f18zvfd9"],
    B4j8arr: ["f18zvfd9", "f1gtfqs9"],
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    t2ki1e: "ffmd2fr"
  },
  selected: {
    Bjyk6c5: "f1ksivud",
    Glksuk: "f1eytvvh",
    Blzl0y7: "fuaa9s",
    f7digc: "fy7ktjt",
    Biqphg1: "f16tp0gf",
    Bntoloa: "fj0yp7j"
  },
  disabled: {
    Bjyk6c5: "f13lkzet"
  },
  smallHorizontal: {
    By385i5: "fo72kxq",
    Dlnsje: "f9bb2ob",
    Eqx8gd: ["f1q70ajw", "f18rbzdx"],
    B1piin3: ["f18rbzdx", "f1q70ajw"]
  },
  smallVertical: {
    By385i5: "fqbue9b",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    bn5sak: "fk1klkt",
    a2br6o: "f1o25lip"
  },
  mediumHorizontal: {
    By385i5: "fo72kxq",
    Dlnsje: "f1vx7lu8",
    Eqx8gd: ["fna7m5n", "f1oxpfwv"],
    B1piin3: ["f1oxpfwv", "fna7m5n"]
  },
  mediumVertical: {
    By385i5: "fipylg0",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    bn5sak: "fqchiol",
    a2br6o: "f1o25lip"
  },
  largeHorizontal: {
    By385i5: "fo72kxq",
    Dlnsje: "f1vx7lu8",
    Eqx8gd: ["fna7m5n", "f1oxpfwv"],
    B1piin3: ["f1oxpfwv", "fna7m5n"]
  },
  largeVertical: {
    By385i5: "f1w7dm5g",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    bn5sak: "f1p6em4m",
    a2br6o: "f1o25lip"
  }
}, {
  d: [".f1rp0jgh::after{background-color:var(--colorTransparentStroke);}", ".fprarqb::after{border-bottom-right-radius:var(--borderRadiusCircular);}", ".f14vs0nd::after{border-bottom-left-radius:var(--borderRadiusCircular);}", ".f1gtfqs9::after{border-top-right-radius:var(--borderRadiusCircular);}", ".f18zvfd9::after{border-top-left-radius:var(--borderRadiusCircular);}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".ffmd2fr::after{z-index:1;}", ".f1ksivud::after{background-color:var(--colorCompoundBrandStroke);}", ".f13lkzet::after{background-color:var(--colorNeutralForegroundDisabled);}", ".fo72kxq::after{bottom:0;}", ".f9bb2ob::after{height:var(--strokeWidthThick);}", ".f1q70ajw::after{left:var(--spacingHorizontalSNudge);}", ".f18rbzdx::after{right:var(--spacingHorizontalSNudge);}", ".fqbue9b::after{bottom:var(--spacingVerticalXS);}", ".f1n6gb5g::after{left:0;}", ".f15yvnhg::after{right:0;}", ".fk1klkt::after{top:var(--spacingVerticalXS);}", ".f1o25lip::after{width:var(--strokeWidthThicker);}", ".f1vx7lu8::after{height:var(--strokeWidthThicker);}", ".fna7m5n::after{left:var(--spacingHorizontalM);}", ".f1oxpfwv::after{right:var(--spacingHorizontalM);}", ".fipylg0::after{bottom:var(--spacingVerticalS);}", ".fqchiol::after{top:var(--spacingVerticalS);}", ".f1w7dm5g::after{bottom:var(--spacingVerticalMNudge);}", ".f1p6em4m::after{top:var(--spacingVerticalMNudge);}"],
  h: [".f1eytvvh:hover::after{background-color:var(--colorCompoundBrandStrokeHover);}"],
  a: [".fuaa9s:active::after{background-color:var(--colorCompoundBrandStrokePressed);}"],
  m: [["@media (forced-colors: active){.fy7ktjt::after{background-color:ButtonText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f16tp0gf:hover::after{background-color:ButtonText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fj0yp7j:active::after{background-color:ButtonText;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useIconStyles7 = __styles2({
  base: {
    Br312pm: "fwpfdsa",
    Ijaq50: "f16hsg94",
    Bt984gj: "f122n59",
    mc9l5x: "ftuwxu6",
    Brf1p80: "f4d9j23",
    B68tc82: "f1p9o1ba",
    Bmxbyg5: "f1sil6mw",
    D0sxk3: "f16u1re",
    t6yez3: "f8bsbmo"
  },
  small: {
    Be2twd7: "fe5j1ua",
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3"
  },
  medium: {
    Be2twd7: "fe5j1ua",
    Bqenvij: "fjamq6b",
    a9b677: "f64fuq3"
  },
  large: {
    Be2twd7: "f1rt2boy",
    Bqenvij: "frvgh55",
    a9b677: "fq4mcun"
  },
  selected: {
    D0sxk3: "fxoiby5",
    t6yez3: "f15q0o9g"
  }
}, {
  d: [".fwpfdsa{grid-column-start:1;}", ".f16hsg94{grid-row-start:1;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".f4d9j23{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;}", ".f1p9o1ba{overflow-x:hidden;}", ".f1sil6mw{overflow-y:hidden;}", ".f16u1re .fui-Icon-filled{display:none;}", ".f8bsbmo .fui-Icon-regular{display:inline;}", ".fe5j1ua{font-size:20px;}", ".fjamq6b{height:20px;}", ".f64fuq3{width:20px;}", ".f1rt2boy{font-size:24px;}", ".frvgh55{height:24px;}", ".fq4mcun{width:24px;}", ".fxoiby5 .fui-Icon-filled{display:inline;}", ".f15q0o9g .fui-Icon-regular{display:none;}"]
});
var useContentStyles3 = __styles2({
  base: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi",
    B68tc82: "f1p9o1ba",
    Bmxbyg5: "f1sil6mw",
    z8tnut: "fztplxc",
    z189sj: ["ffczdla", "fgiv446"],
    Byoj8tv: "f9g1xly",
    uwmqm3: ["fgiv446", "ffczdla"]
  },
  selected: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k"
  },
  largeSelected: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  },
  noIconBefore: {
    Br312pm: "fwpfdsa",
    Ijaq50: "f16hsg94"
  },
  iconBefore: {
    Br312pm: "fd46tj4",
    Ijaq50: "f16hsg94"
  },
  placeholder: {
    Bcdw1i0: "fd7fpy0"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".f1p9o1ba{overflow-x:hidden;}", ".f1sil6mw{overflow-y:hidden;}", ".fztplxc{padding-top:var(--spacingVerticalNone);}", ".ffczdla{padding-right:var(--spacingHorizontalXXS);}", ".fgiv446{padding-left:var(--spacingHorizontalXXS);}", ".f9g1xly{padding-bottom:var(--spacingVerticalNone);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".fwpfdsa{grid-column-start:1;}", ".f16hsg94{grid-row-start:1;}", ".fd46tj4{grid-column-start:2;}", ".fd7fpy0{visibility:hidden;}"]
});
var useTabStyles_unstable = (state) => {
  const rootStyles = useRootStyles15();
  const focusStyles = useFocusStyles2();
  const pendingIndicatorStyles = usePendingIndicatorStyles();
  const activeIndicatorStyles = useActiveIndicatorStyles2();
  const iconStyles = useIconStyles7();
  const contentStyles = useContentStyles3();
  const {
    appearance,
    disabled,
    selected,
    size: size2,
    vertical
  } = state;
  state.root.className = mergeClasses(
    tabClassNames.root,
    rootStyles.base,
    vertical ? rootStyles.vertical : rootStyles.horizontal,
    size2 === "small" && (vertical ? rootStyles.smallVertical : rootStyles.smallHorizontal),
    size2 === "medium" && (vertical ? rootStyles.mediumVertical : rootStyles.mediumHorizontal),
    size2 === "large" && (vertical ? rootStyles.largeVertical : rootStyles.largeHorizontal),
    focusStyles.base,
    !disabled && appearance === "subtle" && rootStyles.subtle,
    !disabled && appearance === "transparent" && rootStyles.transparent,
    !disabled && selected && rootStyles.selected,
    disabled && rootStyles.disabled,
    // pending indicator (before pseudo element)
    pendingIndicatorStyles.base,
    size2 === "small" && (vertical ? pendingIndicatorStyles.smallVertical : pendingIndicatorStyles.smallHorizontal),
    size2 === "medium" && (vertical ? pendingIndicatorStyles.mediumVertical : pendingIndicatorStyles.mediumHorizontal),
    size2 === "large" && (vertical ? pendingIndicatorStyles.largeVertical : pendingIndicatorStyles.largeHorizontal),
    disabled && pendingIndicatorStyles.disabled,
    // active indicator (after pseudo element)
    selected && activeIndicatorStyles.base,
    selected && !disabled && activeIndicatorStyles.selected,
    selected && size2 === "small" && (vertical ? activeIndicatorStyles.smallVertical : activeIndicatorStyles.smallHorizontal),
    selected && size2 === "medium" && (vertical ? activeIndicatorStyles.mediumVertical : activeIndicatorStyles.mediumHorizontal),
    selected && size2 === "large" && (vertical ? activeIndicatorStyles.largeVertical : activeIndicatorStyles.largeHorizontal),
    selected && disabled && activeIndicatorStyles.disabled,
    state.root.className
  );
  if (state.icon) {
    state.icon.className = mergeClasses(tabClassNames.icon, iconStyles.base, iconStyles[size2], selected && iconStyles.selected, state.icon.className);
  }
  if (state.contentReservedSpaceClassName !== void 0) {
    state.contentReservedSpaceClassName = mergeClasses(reservedSpaceClassNames.content, contentStyles.base, size2 === "large" ? contentStyles.largeSelected : contentStyles.selected, state.icon ? contentStyles.iconBefore : contentStyles.noIconBefore, contentStyles.placeholder, state.content.className);
  }
  state.content.className = mergeClasses(tabClassNames.content, contentStyles.base, size2 === "large" && contentStyles.large, selected && (size2 === "large" ? contentStyles.largeSelected : contentStyles.selected), state.icon ? contentStyles.iconBefore : contentStyles.noIconBefore, state.content.className);
  useTabAnimatedIndicatorStyles_unstable(state);
  return state;
};

// node_modules/@fluentui/react-tabs/lib/components/Tab/Tab.js
var Tab2 = React249.forwardRef((props, ref) => {
  const state = useTab_unstable(props, ref);
  useTabStyles_unstable(state);
  const {
    useTabStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTab_unstable(state);
});
Tab2.displayName = "Tab";

// node_modules/@fluentui/react-tabs/lib/components/TabList/TabList.js
var React252 = __toESM(require_react());

// node_modules/@fluentui/react-tabs/lib/components/TabList/useTabList.js
var React250 = __toESM(require_react());
var useTabList_unstable = (props, ref) => {
  const {
    appearance = "transparent",
    reserveSelectedTabSpace = true,
    disabled = false,
    onTabSelect,
    size: size2 = "medium",
    vertical = false
  } = props;
  const innerRef = React250.useRef(null);
  const focusAttributes = useArrowNavigationGroup({
    circular: true,
    axis: vertical ? "vertical" : "horizontal",
    memorizeCurrent: true
  });
  const [selectedValue, setSelectedValue] = useControllableState({
    state: props.selectedValue,
    defaultState: props.defaultSelectedValue,
    initialState: void 0
  });
  const currentSelectedValue = React250.useRef(void 0);
  const previousSelectedValue = React250.useRef(void 0);
  React250.useEffect(() => {
    previousSelectedValue.current = currentSelectedValue.current;
    currentSelectedValue.current = selectedValue;
  }, [selectedValue]);
  const onSelect = useEventCallback((event, data) => {
    setSelectedValue(data.value);
    onTabSelect === null || onTabSelect === void 0 ? void 0 : onTabSelect(event, data);
  });
  const registeredTabs = React250.useRef({});
  const onRegister = useEventCallback((data) => {
    registeredTabs.current[JSON.stringify(data.value)] = data;
  });
  const onUnregister = useEventCallback((data) => {
    delete registeredTabs.current[JSON.stringify(data.value)];
  });
  const getRegisteredTabs = React250.useCallback(() => {
    return {
      selectedValue: currentSelectedValue.current,
      previousSelectedValue: previousSelectedValue.current,
      registeredTabs: registeredTabs.current
    };
  }, []);
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref: useMergedRefs(ref, innerRef),
      role: "tablist",
      ...focusAttributes,
      ...props
    }),
    appearance,
    reserveSelectedTabSpace,
    disabled,
    selectedValue,
    size: size2,
    vertical,
    onRegister,
    onUnregister,
    onSelect,
    getRegisteredTabs
  };
};

// node_modules/@fluentui/react-tabs/lib/components/TabList/renderTabList.js
var React251 = __toESM(require_react());
var renderTabList_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React251.createElement(slots.root, slotProps.root, React251.createElement(TabListProvider, {
    value: contextValues.tabList
  }, state.root.children));
};

// node_modules/@fluentui/react-tabs/lib/components/TabList/useTabListStyles.js
var tabListClassNames = {
  root: "fui-TabList"
};
var useStyles28 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    Bnnss6s: "fi64zpg",
    Eh141a: "flvyvdh",
    qhf8xq: "f10pi13n"
  },
  horizontal: {
    Bt984gj: "f1q9h2pe",
    Beiy3e4: "f1063pyq"
  },
  vertical: {
    Bt984gj: "f1q9h2pe",
    Beiy3e4: "f1vx9l62"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f1063pyq{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}", ".fi64zpg{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}", ".flvyvdh{-webkit-box-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}", ".f10pi13n{position:relative;}", ".f1q9h2pe{-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}"]
});
var useTabListStyles_unstable = (state) => {
  const {
    vertical
  } = state;
  const styles = useStyles28();
  state.root.className = mergeClasses(tabListClassNames.root, styles.root, vertical ? styles.vertical : styles.horizontal, state.root.className);
  return state;
};

// node_modules/@fluentui/react-tabs/lib/components/TabList/useTabListContextValues.js
function useTabListContextValues_unstable(state) {
  const {
    appearance,
    reserveSelectedTabSpace,
    disabled,
    selectedValue: selectedKey,
    onRegister,
    onUnregister,
    onSelect,
    getRegisteredTabs,
    size: size2,
    vertical
  } = state;
  const tabList = {
    appearance,
    reserveSelectedTabSpace,
    disabled,
    selectedValue: selectedKey,
    onSelect,
    onRegister,
    onUnregister,
    getRegisteredTabs,
    size: size2,
    vertical
  };
  return {
    tabList
  };
}

// node_modules/@fluentui/react-tabs/lib/components/TabList/TabList.js
var TabList = React252.forwardRef((props, ref) => {
  const state = useTabList_unstable(props, ref);
  const contextValues = useTabListContextValues_unstable(state);
  useTabListStyles_unstable(state);
  const {
    useTabListStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTabList_unstable(state, contextValues);
});
TabList.displayName = "TabList";

// node_modules/@fluentui/react-tabs/lib/components/TabList/TabList.types.js
var React253 = __toESM(require_react());

// node_modules/@fluentui/react-text/lib/components/Text/Text.js
var React256 = __toESM(require_react());

// node_modules/@fluentui/react-text/lib/components/Text/useText.js
var React254 = __toESM(require_react());
var useText_unstable = (props, ref) => {
  const {
    wrap,
    truncate,
    block,
    italic,
    underline,
    strikethrough,
    size: size2,
    font,
    weight,
    align
  } = props;
  var _props_as;
  const as = (_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : "span";
  const state = {
    align: align !== null && align !== void 0 ? align : "start",
    block: block !== null && block !== void 0 ? block : false,
    font: font !== null && font !== void 0 ? font : "base",
    italic: italic !== null && italic !== void 0 ? italic : false,
    size: size2 !== null && size2 !== void 0 ? size2 : 300,
    strikethrough: strikethrough !== null && strikethrough !== void 0 ? strikethrough : false,
    truncate: truncate !== null && truncate !== void 0 ? truncate : false,
    underline: underline !== null && underline !== void 0 ? underline : false,
    weight: weight !== null && weight !== void 0 ? weight : "regular",
    wrap: wrap !== null && wrap !== void 0 ? wrap : true,
    components: {
      root: "span"
    },
    root: getNativeElementProps(as, {
      ref,
      ...props,
      as
    })
  };
  return state;
};

// node_modules/@fluentui/react-text/lib/components/Text/renderText.js
var React255 = __toESM(require_react());
var renderText_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React255.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-text/lib/components/Text/useTextStyles.js
var textClassNames = {
  root: "fui-Text"
};
var useStyles29 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bg96gwp: "f1i3iumi",
    Bhrd7zp: "figsok6",
    fsow6f: "fpgzoln",
    mc9l5x: "f1w7gpdv",
    Huce71: "f6juhto",
    B68tc82: "f1mtd64y",
    Bmxbyg5: "f1y7q3j9",
    ygn44y: "f2jf649"
  },
  nowrap: {
    Huce71: "fz5stix",
    B68tc82: "f1p9o1ba",
    Bmxbyg5: "f1sil6mw"
  },
  truncate: {
    ygn44y: "f1cmbuwj"
  },
  block: {
    mc9l5x: "ftgm304"
  },
  italic: {
    B80ckks: "f1j4dglz"
  },
  underline: {
    w71qe1: "f13mvf36"
  },
  strikethrough: {
    w71qe1: "fv5q2k7"
  },
  strikethroughUnderline: {
    w71qe1: "f1drk4o6"
  },
  base100: {
    Be2twd7: "f13mqy1h",
    Bg96gwp: "fcpl73t"
  },
  base200: {
    Be2twd7: "fy9rknc",
    Bg96gwp: "fwrc4pm"
  },
  base400: {
    Be2twd7: "fod5ikn",
    Bg96gwp: "faaz57k"
  },
  base500: {
    Be2twd7: "f1pp30po",
    Bg96gwp: "f106mvju"
  },
  base600: {
    Be2twd7: "f1x0m3f5",
    Bg96gwp: "fb86gi6"
  },
  hero700: {
    Be2twd7: "fojgt09",
    Bg96gwp: "fcen8rp"
  },
  hero800: {
    Be2twd7: "fccw675",
    Bg96gwp: "f1ebx5kk"
  },
  hero900: {
    Be2twd7: "f15afnhw",
    Bg96gwp: "fr3w3wp"
  },
  hero1000: {
    Be2twd7: "fpyltcb",
    Bg96gwp: "f1ivgwrt"
  },
  monospace: {
    Bahqtrf: "f1fedwem"
  },
  numeric: {
    Bahqtrf: "f1uq0ln5"
  },
  weightMedium: {
    Bhrd7zp: "fdj6btp"
  },
  weightSemibold: {
    Bhrd7zp: "fl43uef"
  },
  weightBold: {
    Bhrd7zp: "flh3ekv"
  },
  alignCenter: {
    fsow6f: "f17mccla"
  },
  alignEnd: {
    fsow6f: "f12ymhq5"
  },
  alignJustify: {
    fsow6f: "f1j59e10"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fpgzoln{text-align:start;}", ".f1w7gpdv{display:inline;}", ".f6juhto{white-space:normal;}", ".f1mtd64y{overflow-x:visible;}", ".f1y7q3j9{overflow-y:visible;}", ".f2jf649{text-overflow:clip;}", ".fz5stix{white-space:nowrap;}", ".f1p9o1ba{overflow-x:hidden;}", ".f1sil6mw{overflow-y:hidden;}", ".f1cmbuwj{text-overflow:ellipsis;}", ".ftgm304{display:block;}", ".f1j4dglz{font-style:italic;}", ".f13mvf36{text-decoration-line:underline;}", ".fv5q2k7{text-decoration-line:line-through;}", ".f1drk4o6{text-decoration-line:line-through underline;}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fcpl73t{line-height:var(--lineHeightBase100);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".f106mvju{line-height:var(--lineHeightBase500);}", ".f1x0m3f5{font-size:var(--fontSizeBase600);}", ".fb86gi6{line-height:var(--lineHeightBase600);}", ".fojgt09{font-size:var(--fontSizeHero700);}", ".fcen8rp{line-height:var(--lineHeightHero700);}", ".fccw675{font-size:var(--fontSizeHero800);}", ".f1ebx5kk{line-height:var(--lineHeightHero800);}", ".f15afnhw{font-size:var(--fontSizeHero900);}", ".fr3w3wp{line-height:var(--lineHeightHero900);}", ".fpyltcb{font-size:var(--fontSizeHero1000);}", ".f1ivgwrt{line-height:var(--lineHeightHero1000);}", ".f1fedwem{font-family:var(--fontFamilyMonospace);}", ".f1uq0ln5{font-family:var(--fontFamilyNumeric);}", ".fdj6btp{font-weight:var(--fontWeightMedium);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".flh3ekv{font-weight:var(--fontWeightBold);}", ".f17mccla{text-align:center;}", ".f12ymhq5{text-align:end;}", ".f1j59e10{text-align:justify;}"]
});
var useTextStyles_unstable = (state) => {
  const styles = useStyles29();
  state.root.className = mergeClasses(textClassNames.root, styles.root, state.wrap === false && styles.nowrap, state.truncate && styles.truncate, state.block && styles.block, state.italic && styles.italic, state.underline && styles.underline, state.strikethrough && styles.strikethrough, state.underline && state.strikethrough && styles.strikethroughUnderline, state.size === 100 && styles.base100, state.size === 200 && styles.base200, state.size === 400 && styles.base400, state.size === 500 && styles.base500, state.size === 600 && styles.base600, state.size === 700 && styles.hero700, state.size === 800 && styles.hero800, state.size === 900 && styles.hero900, state.size === 1e3 && styles.hero1000, state.font === "monospace" && styles.monospace, state.font === "numeric" && styles.numeric, state.weight === "medium" && styles.weightMedium, state.weight === "semibold" && styles.weightSemibold, state.weight === "bold" && styles.weightBold, state.align === "center" && styles.alignCenter, state.align === "end" && styles.alignEnd, state.align === "justify" && styles.alignJustify, state.root.className);
  return state;
};

// node_modules/@fluentui/react-text/lib/components/Text/Text.js
var Text = React256.forwardRef((props, ref) => {
  const state = useText_unstable(props, ref);
  useTextStyles_unstable(state);
  const {
    useTextStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderText_unstable(state);
});
Text.displayName = "Text";

// node_modules/@fluentui/react-text/lib/components/presets/createPreset.js
var React257 = __toESM(require_react());
function createPreset(options) {
  const {
    useStyles: useStyles67,
    className,
    displayName
  } = options;
  const Wrapper = React257.forwardRef((props, ref) => {
    const styles = useStyles67();
    const state = useText_unstable(props, ref);
    useTextStyles_unstable(state);
    state.root.className = mergeClasses(className, state.root.className, styles.root, props.className);
    return renderText_unstable(state);
  });
  Wrapper.displayName = displayName;
  return Wrapper;
}

// node_modules/@fluentui/react-text/lib/components/presets/Body1/Body1.js
var body1ClassNames = {
  root: "fui-Body1"
};
var useStyles30 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var Body1 = createPreset({
  useStyles: useStyles30,
  className: body1ClassNames.root,
  displayName: "Body1"
});

// node_modules/@fluentui/react-text/lib/components/presets/Body1Strong/Body1Strong.js
var body1StrongClassNames = {
  root: "fui-Body1Strong"
};
var useStyles31 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var Body1Strong = createPreset({
  useStyles: useStyles31,
  className: body1StrongClassNames.root,
  displayName: "Body1Strong"
});

// node_modules/@fluentui/react-text/lib/components/presets/Body1Stronger/Body1Stronger.js
var body1StrongerClassNames = {
  root: "fui-Body1Stronger"
};
var useStyles32 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "flh3ekv",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".flh3ekv{font-weight:var(--fontWeightBold);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var Body1Stronger = createPreset({
  useStyles: useStyles32,
  className: body1StrongerClassNames.root,
  displayName: "Body1Stronger"
});

// node_modules/@fluentui/react-text/lib/components/presets/Body2/Body2.js
var body2ClassNames = {
  root: "fui-Body2"
};
var useStyles33 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});
var Body2 = createPreset({
  useStyles: useStyles33,
  className: body2ClassNames.root,
  displayName: "Body2"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1/Caption1.js
var caption1ClassNames = {
  root: "fui-Caption1"
};
var useStyles34 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}"]
});
var Caption1 = createPreset({
  useStyles: useStyles34,
  className: caption1ClassNames.root,
  displayName: "Caption1"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1Strong/Caption1Strong.js
var caption1StrongClassNames = {
  root: "fui-Caption1Strong"
};
var useStyles35 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fwrc4pm"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}"]
});
var Caption1Strong = createPreset({
  useStyles: useStyles35,
  className: caption1StrongClassNames.root,
  displayName: "Caption1Strong"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption1Stronger/Caption1Stronger.js
var caption1StrongerClassNames = {
  root: "fui-Caption1Stronger"
};
var useStyles36 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "flh3ekv",
    Bg96gwp: "fwrc4pm"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".flh3ekv{font-weight:var(--fontWeightBold);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}"]
});
var Caption1Stronger = createPreset({
  useStyles: useStyles36,
  className: caption1StrongerClassNames.root,
  displayName: "Caption1Stronger"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption2/Caption2.js
var caption2ClassNames = {
  root: "fui-Caption2"
};
var useStyles37 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f13mqy1h",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fcpl73t"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fcpl73t{line-height:var(--lineHeightBase100);}"]
});
var Caption2 = createPreset({
  useStyles: useStyles37,
  className: caption2ClassNames.root,
  displayName: "Caption2"
});

// node_modules/@fluentui/react-text/lib/components/presets/Caption2Strong/Caption2Strong.js
var caption2StrongClassNames = {
  root: "fui-Caption2Strong"
};
var useStyles38 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f13mqy1h",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fcpl73t"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f13mqy1h{font-size:var(--fontSizeBase100);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fcpl73t{line-height:var(--lineHeightBase100);}"]
});
var Caption2Strong = createPreset({
  useStyles: useStyles38,
  className: caption2StrongClassNames.root,
  displayName: "Caption2Strong"
});

// node_modules/@fluentui/react-text/lib/components/presets/Display/Display.js
var displayClassNames = {
  root: "fui-Display"
};
var useStyles39 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fpyltcb",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1ivgwrt"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fpyltcb{font-size:var(--fontSizeHero1000);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f1ivgwrt{line-height:var(--lineHeightHero1000);}"]
});
var Display = createPreset({
  useStyles: useStyles39,
  className: displayClassNames.root,
  displayName: "Display"
});

// node_modules/@fluentui/react-text/lib/components/presets/LargeTitle/LargeTitle.js
var largeTitleClassNames = {
  root: "fui-LargeTitle"
};
var useStyles40 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f15afnhw",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fr3w3wp"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f15afnhw{font-size:var(--fontSizeHero900);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fr3w3wp{line-height:var(--lineHeightHero900);}"]
});
var LargeTitle = createPreset({
  useStyles: useStyles40,
  className: largeTitleClassNames.root,
  displayName: "LargeTitle"
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle1/Subtitle1.js
var subtitle1ClassNames = {
  root: "fui-Subtitle1"
};
var useStyles41 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1pp30po",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f106mvju"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f106mvju{line-height:var(--lineHeightBase500);}"]
});
var Subtitle1 = createPreset({
  useStyles: useStyles41,
  className: subtitle1ClassNames.root,
  displayName: "Subtitle1"
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle2/Subtitle2.js
var subtitle2ClassNames = {
  root: "fui-Subtitle2"
};
var useStyles42 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});
var Subtitle2 = createPreset({
  useStyles: useStyles42,
  className: subtitle2ClassNames.root,
  displayName: "Subtitle2"
});

// node_modules/@fluentui/react-text/lib/components/presets/Subtitle2Stronger/Subtitle2Stronger.js
var subtitle2StrongerClassNames = {
  root: "fui-Subtitle2Stronger"
};
var useStyles43 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "flh3ekv",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".flh3ekv{font-weight:var(--fontWeightBold);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});
var Subtitle2Stronger = createPreset({
  useStyles: useStyles43,
  className: subtitle2StrongerClassNames.root,
  displayName: "Subtitle2Stronger"
});

// node_modules/@fluentui/react-text/lib/components/presets/Title1/Title1.js
var title1ClassNames = {
  root: "fui-Title1"
};
var useStyles44 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fccw675",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f1ebx5kk"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fccw675{font-size:var(--fontSizeHero800);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f1ebx5kk{line-height:var(--lineHeightHero800);}"]
});
var Title1 = createPreset({
  useStyles: useStyles44,
  className: title1ClassNames.root,
  displayName: "Title1"
});

// node_modules/@fluentui/react-text/lib/components/presets/Title2/Title2.js
var title2ClassNames = {
  root: "fui-Title2"
};
var useStyles45 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "fojgt09",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fcen8rp"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".fojgt09{font-size:var(--fontSizeHero700);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fcen8rp{line-height:var(--lineHeightHero700);}"]
});
var Title2 = createPreset({
  useStyles: useStyles45,
  className: title2ClassNames.root,
  displayName: "Title2"
});

// node_modules/@fluentui/react-text/lib/components/presets/Title3/Title3.js
var title3ClassNames = {
  root: "fui-Title3"
};
var useStyles46 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1x0m3f5",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "fb86gi6"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1x0m3f5{font-size:var(--fontSizeBase600);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fb86gi6{line-height:var(--lineHeightBase600);}"]
});
var Title3 = createPreset({
  useStyles: useStyles46,
  className: title3ClassNames.root,
  displayName: "Title3"
});

// node_modules/@fluentui/react-textarea/lib/components/Textarea/Textarea.js
var React260 = __toESM(require_react());

// node_modules/@fluentui/react-textarea/lib/components/Textarea/renderTextarea.js
var React258 = __toESM(require_react());
var renderTextarea_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React258.createElement(slots.root, slotProps.root, React258.createElement(slots.textarea, slotProps.textarea));
};

// node_modules/@fluentui/react-textarea/lib/components/Textarea/useTextarea.js
var React259 = __toESM(require_react());
var useTextarea_unstable = (props, ref) => {
  const overrides = useOverrides();
  var _overrides_inputDefaultAppearance;
  const {
    size: size2 = "medium",
    appearance = (_overrides_inputDefaultAppearance = overrides.inputDefaultAppearance) !== null && _overrides_inputDefaultAppearance !== void 0 ? _overrides_inputDefaultAppearance : "outline",
    resize = "none",
    onChange
  } = props;
  if (appearance === "filled-darker-shadow" || appearance === "filled-lighter-shadow") {
    console.error("The 'filled-darker-shadow' and 'filled-lighter-shadow' appearances are deprecated and will be removed in the future.");
  }
  const [value, setValue] = useControllableState({
    state: props.value,
    defaultState: props.defaultValue,
    initialState: void 0
  });
  const nativeProps = getPartitionedNativeProps({
    props,
    primarySlotTagName: "textarea",
    excludedPropNames: ["onChange", "value", "defaultValue"]
  });
  const state = {
    size: size2,
    appearance,
    resize,
    components: {
      root: "span",
      textarea: "textarea"
    },
    textarea: resolveShorthand(props.textarea, {
      required: true,
      defaultProps: {
        ref,
        ...nativeProps.primary
      }
    }),
    root: resolveShorthand(props.root, {
      required: true,
      defaultProps: nativeProps.root
    })
  };
  state.textarea.value = value;
  state.textarea.onChange = useEventCallback((ev) => {
    const newValue = ev.target.value;
    onChange === null || onChange === void 0 ? void 0 : onChange(ev, {
      value: newValue
    });
    setValue(newValue);
  });
  return state;
};

// node_modules/@fluentui/react-textarea/lib/components/Textarea/useTextareaStyles.js
var textareaClassNames = {
  root: "fui-Textarea",
  textarea: "fui-Textarea__textarea"
};
var useRootStyles16 = __styles2({
  base: {
    mc9l5x: "ftuwxu6",
    B7ck84d: "f1ewtqcl",
    qhf8xq: "f10pi13n",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1ean75l",
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    B6of3ja: "f1hu3pq6",
    t21cq0: ["f11qmguv", "f1tyq0we"],
    jrapky: "f19f4twv",
    Frg6f3: ["f1tyq0we", "f11qmguv"],
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"]
  },
  disabled: {
    De3pzq: "f1c21dwh",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "f1jj8ep1",
    h3c5rm: ["f15xbau", "fy0fskl"],
    B9xav0g: "f4ikngz",
    zhjwy3: ["fy0fskl", "f15xbau"],
    luzg7z: "f156r3ny",
    B1sv8sq: "f1tglsy2",
    Bjwas2f: "fg455y9",
    Bn1d65q: ["f1rvyvqg", "f14g86mu"],
    Bxeuatn: "f1cwzwz",
    n51gp8: ["f14g86mu", "f1rvyvqg"]
  },
  interactive: {
    li1rpt: "f1gw3sf2",
    Bsft5z2: "f13zj6fq",
    E3zdtr: "f1mdlcz9",
    Eqx8gd: ["f1a7op3", "f1cjjd47"],
    By385i5: "f1gboi2j",
    B1piin3: ["f1cjjd47", "f1a7op3"],
    Dlnsje: "ffyw7fx",
    d9w3h3: ["f1kp91vd", "f1ibwz09"],
    B3778ie: ["f1ibwz09", "f1kp91vd"],
    Bcgy8vk: "f14pi962",
    Bw17bha: "f1lh990p",
    B1q35kw: "f1jc6hxc",
    Gjdm7m: "fj2g8qd",
    b1kco5: "f1yk9hq",
    Ba2ppi3: "fhwpy7i",
    F2fol1: "f14ee0xe",
    lck23g: "f1xhbsuh",
    df92cz: "fv8e3ye",
    I188md: "ftb5wc6",
    umuwi5: "fjw5xc1",
    Blcqepd: "f1xdyd5c",
    nplu4u: "fatpbeo",
    Bioka5o: "fb7uyps",
    H713fs: "f1cmft4k",
    B9ooomg: "f1x58t8o",
    Bercvud: "f1ibeo51",
    Bbr2w1p: "f1vnc8sk",
    Bduesf4: "f3e99gv",
    Bpq79vn: "fhljsf7"
  },
  filled: {
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    q7v0qe: "ftmjh5b",
    kmh5ft: ["f17blpuu", "fsrcdbj"],
    nagaa4: "f1tpwn32",
    B1yhkcb: ["fsrcdbj", "f17blpuu"]
  },
  "filled-darker": {
    De3pzq: "f16xq7d1"
  },
  "filled-lighter": {
    De3pzq: "fxugw4r"
  },
  "filled-darker-shadow": {
    De3pzq: "f16xq7d1",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "f1bh3yvw",
    h3c5rm: ["fmi79ni", "f11fozsx"],
    B9xav0g: "fnzw4c6",
    zhjwy3: ["f11fozsx", "fmi79ni"],
    E5pizo: "fyed02w"
  },
  "filled-lighter-shadow": {
    De3pzq: "fxugw4r",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "f1bh3yvw",
    h3c5rm: ["fmi79ni", "f11fozsx"],
    B9xav0g: "fnzw4c6",
    zhjwy3: ["f11fozsx", "fmi79ni"],
    E5pizo: "fyed02w"
  },
  outline: {
    De3pzq: "fxugw4r",
    B4j52fo: "f192inf7",
    Bekrc4i: ["f5tn483", "f1ojsxk5"],
    Bn0qgzm: "f1vxd6vx",
    ibv6hh: ["f1ojsxk5", "f5tn483"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    g2u3we: "fj3muxo",
    h3c5rm: ["f1akhkt", "f1lxtadh"],
    B9xav0g: "f1c1zstj",
    zhjwy3: ["f1lxtadh", "f1akhkt"]
  },
  outlineInteractive: {
    ckks6v: "f7ic3uo",
    B2zwrfe: ["f1omjgsz", "f1snvl17"],
    xv9156: "fn6xmsl",
    dt87k2: ["f1snvl17", "f1omjgsz"],
    Bf40cpq: "f1sn8sm0",
    Bop6t4b: ["f1wovo5e", "f716mnf"],
    gvrnp0: "fm0h710",
    Beu9t3s: ["f716mnf", "f1wovo5e"],
    Bgoe8wy: "fvcxoqz",
    Bwzppfd: ["f1ub3y4t", "f1m52nbi"],
    oetu4i: "f1l4zc64",
    gg5e9n: ["f1m52nbi", "f1ub3y4t"],
    uqwnxt: "fk7lb2a",
    Bvecx4l: ["f1knhbbd", "f17itt0b"],
    Bs0cc2w: "f15pjvi3",
    e1hlit: ["f17itt0b", "f1knhbbd"],
    e2sjt0: "f6ginmj",
    Bbcopvn: ["f1grcyuh", "fgzu20w"],
    Bj33j0h: "fk1xjsr",
    f7epvg: ["fgzu20w", "f1grcyuh"],
    B6oc9vd: "fvs00aa",
    ak43y8: ["f1assf6x", "f4ruux4"],
    wmxk5l: "f1z0osm6",
    B50zh58: ["f4ruux4", "f1assf6x"],
    Bbs6y8j: "fu7v4fk",
    rexu52: ["f1fnaxjy", "fwory1w"],
    B7pmvfx: "f7hodha",
    Belqbek: ["fwory1w", "f1fnaxjy"],
    Bawrxx6: "f8jkv7v",
    r7b1zc: ["f1f3jaeo", "fh8au0q"],
    Bt3ojkv: "f19usxel",
    t1ykpo: ["fh8au0q", "f1f3jaeo"],
    Bvq3b66: "f12oevn0",
    Brahy3i: ["fvdgz8d", "f1cq0lt5"],
    zoxjo1: "f1so894s",
    an54nd: ["f1cq0lt5", "fvdgz8d"]
  },
  invalid: {
    tvckwq: "fs4k3qj",
    gk2u95: ["fcee079", "fmyw78r"],
    hhx65j: "f1fgmyf4",
    Bxowmz0: ["fmyw78r", "fcee079"]
  }
}, {
  d: [".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".f1ewtqcl{box-sizing:border-box;}", ".f10pi13n{position:relative;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1ean75l{padding-bottom:var(--strokeWidthThick);}", ".f1hu3pq6{margin-top:0;}", ".f11qmguv{margin-right:0;}", ".f1tyq0we{margin-left:0;}", ".f19f4twv{margin-bottom:0;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f192inf7{border-top-width:var(--strokeWidthThin);}", ".f5tn483{border-right-width:var(--strokeWidthThin);}", ".f1ojsxk5{border-left-width:var(--strokeWidthThin);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".f1jj8ep1{border-top-color:var(--colorNeutralStrokeDisabled);}", ".f15xbau{border-right-color:var(--colorNeutralStrokeDisabled);}", ".fy0fskl{border-left-color:var(--colorNeutralStrokeDisabled);}", ".f4ikngz{border-bottom-color:var(--colorNeutralStrokeDisabled);}", ".f156r3ny>textarea{cursor:not-allowed;}", ".f1tglsy2>textarea::-webkit-input-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".f1tglsy2>textarea::-moz-placeholder{color:var(--colorNeutralForegroundDisabled);}", ".f1gw3sf2::after{box-sizing:border-box;}", '.f13zj6fq::after{content:"";}', ".f1mdlcz9::after{position:absolute;}", ".f1a7op3::after{left:-1px;}", ".f1cjjd47::after{right:-1px;}", ".f1gboi2j::after{bottom:-1px;}", ".ffyw7fx::after{height:max(var(--strokeWidthThick), var(--borderRadiusMedium));}", ".f1kp91vd::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1ibwz09::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f14pi962::after{border-bottom-width:var(--strokeWidthThick);}", ".f1lh990p::after{border-bottom-style:solid;}", ".f1jc6hxc::after{border-bottom-color:var(--colorCompoundBrandStroke);}", ".fj2g8qd::after{-webkit-clip-path:inset(calc(100% - var(--strokeWidthThick)) 0 0 0);clip-path:inset(calc(100% - var(--strokeWidthThick)) 0 0 0);}", ".f1yk9hq::after{-webkit-transform:scaleX(0);-moz-transform:scaleX(0);-ms-transform:scaleX(0);transform:scaleX(0);}", ".fhwpy7i::after{transition-property:transform;}", ".f14ee0xe::after{transition-duration:var(--durationUltraFast);}", ".f1xhbsuh::after{transition-delay:var(--curveAccelerateMid);}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".f16xq7d1{background-color:var(--colorNeutralBackground3);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f1bh3yvw{border-top-color:var(--colorTransparentStrokeInteractive);}", ".fmi79ni{border-right-color:var(--colorTransparentStrokeInteractive);}", ".f11fozsx{border-left-color:var(--colorTransparentStrokeInteractive);}", ".fnzw4c6{border-bottom-color:var(--colorTransparentStrokeInteractive);}", ".fyed02w{box-shadow:var(--shadow2);}", ".fj3muxo{border-top-color:var(--colorNeutralStroke1);}", ".f1akhkt{border-right-color:var(--colorNeutralStroke1);}", ".f1lxtadh{border-left-color:var(--colorNeutralStroke1);}", ".f1c1zstj{border-bottom-color:var(--colorNeutralStrokeAccessible);}", ".fs4k3qj:not(:focus-within),.fs4k3qj:hover:not(:focus-within){border-top-color:var(--colorPaletteRedBorder2);}", ".fcee079:not(:focus-within),.fcee079:hover:not(:focus-within){border-right-color:var(--colorPaletteRedBorder2);}", ".fmyw78r:not(:focus-within),.fmyw78r:hover:not(:focus-within){border-left-color:var(--colorPaletteRedBorder2);}", ".f1fgmyf4:not(:focus-within),.f1fgmyf4:hover:not(:focus-within){border-bottom-color:var(--colorPaletteRedBorder2);}"],
  m: [["@media (forced-colors: active){.fg455y9{border-top-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1rvyvqg{border-right-color:GrayText;}.f14g86mu{border-left-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1cwzwz{border-bottom-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f14g86mu{border-left-color:GrayText;}.f1rvyvqg{border-right-color:GrayText;}}", {
    m: "(forced-colors: active)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.fv8e3ye::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.ftb5wc6::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1cmft4k:focus-within::after{transition-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f1x58t8o:focus-within::after{transition-delay:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]],
  w: [".fjw5xc1:focus-within::after{-webkit-transform:scaleX(1);-moz-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1);}", ".f1xdyd5c:focus-within::after{transition-property:transform;}", ".fatpbeo:focus-within::after{transition-duration:var(--durationNormal);}", ".fb7uyps:focus-within::after{transition-delay:var(--curveDecelerateMid);}", ".f1ibeo51:focus-within:active::after{border-bottom-color:var(--colorCompoundBrandStrokePressed);}", ".f1vnc8sk:focus-within{outline-width:var(--strokeWidthThick);}", ".f3e99gv:focus-within{outline-style:solid;}", ".fhljsf7:focus-within{outline-color:transparent;}", ".fu7v4fk:focus-within{border-top-width:var(--strokeWidthThin);}", ".f1fnaxjy:focus-within{border-right-width:var(--strokeWidthThin);}", ".fwory1w:focus-within{border-left-width:var(--strokeWidthThin);}", ".f7hodha:focus-within{border-bottom-width:var(--strokeWidthThin);}", ".f8jkv7v:focus-within{border-top-style:solid;}", ".f1f3jaeo:focus-within{border-right-style:solid;}", ".fh8au0q:focus-within{border-left-style:solid;}", ".f19usxel:focus-within{border-bottom-style:solid;}", ".f12oevn0:focus-within{border-top-color:var(--colorNeutralStroke1);}", ".fvdgz8d:focus-within{border-right-color:var(--colorNeutralStroke1);}", ".f1cq0lt5:focus-within{border-left-color:var(--colorNeutralStroke1);}", ".f1so894s:focus-within{border-bottom-color:var(--colorCompoundBrandStroke);}"],
  h: [".ftmjh5b:hover,.ftmjh5b:focus-within{border-top-color:var(--colorTransparentStrokeInteractive);}", ".f17blpuu:hover,.f17blpuu:focus-within{border-right-color:var(--colorTransparentStrokeInteractive);}", ".fsrcdbj:hover,.fsrcdbj:focus-within{border-left-color:var(--colorTransparentStrokeInteractive);}", ".f1tpwn32:hover,.f1tpwn32:focus-within{border-bottom-color:var(--colorTransparentStrokeInteractive);}", ".f7ic3uo:hover{border-top-width:var(--strokeWidthThin);}", ".f1omjgsz:hover{border-right-width:var(--strokeWidthThin);}", ".f1snvl17:hover{border-left-width:var(--strokeWidthThin);}", ".fn6xmsl:hover{border-bottom-width:var(--strokeWidthThin);}", ".f1sn8sm0:hover{border-top-style:solid;}", ".f1wovo5e:hover{border-right-style:solid;}", ".f716mnf:hover{border-left-style:solid;}", ".fm0h710:hover{border-bottom-style:solid;}", ".fvcxoqz:hover{border-top-color:var(--colorNeutralStroke1Hover);}", ".f1ub3y4t:hover{border-right-color:var(--colorNeutralStroke1Hover);}", ".f1m52nbi:hover{border-left-color:var(--colorNeutralStroke1Hover);}", ".f1l4zc64:hover{border-bottom-color:var(--colorNeutralStrokeAccessibleHover);}"],
  a: [".fk7lb2a:active{border-top-width:var(--strokeWidthThin);}", ".f1knhbbd:active{border-right-width:var(--strokeWidthThin);}", ".f17itt0b:active{border-left-width:var(--strokeWidthThin);}", ".f15pjvi3:active{border-bottom-width:var(--strokeWidthThin);}", ".f6ginmj:active{border-top-style:solid;}", ".f1grcyuh:active{border-right-style:solid;}", ".fgzu20w:active{border-left-style:solid;}", ".fk1xjsr:active{border-bottom-style:solid;}", ".fvs00aa:active{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1assf6x:active{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f4ruux4:active{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f1z0osm6:active{border-bottom-color:var(--colorNeutralStrokeAccessiblePressed);}"]
});
var useTextareaStyles = __styles2({
  base: {
    icvyot: "f1ern45e",
    vrafjx: ["f1n71otn", "f1deefiw"],
    oivjwe: "f1h8hb77",
    wvpqe5: ["f1deefiw", "f1n71otn"],
    B6of3ja: "f1hu3pq6",
    t21cq0: ["f11qmguv", "f1tyq0we"],
    jrapky: "f19f4twv",
    Frg6f3: ["f1tyq0we", "f11qmguv"],
    De3pzq: "f3rmtva",
    B7ck84d: "f1ewtqcl",
    sj55zd: "f19n0e5",
    Bh6795r: "fqerorx",
    Bahqtrf: "fk6fouc",
    Bqenvij: "f1l02sjl",
    Bxyxcbc: "f1immsc2",
    yvdlaj: "fwyc1cq",
    B3o7kgh: "f13ta7ih",
    B4brmom: "f1vw9udw",
    Brrnbx2: "fbb3kq8",
    oeaueh: "f1s6fcnf"
  },
  small: {
    Bqenvij: "frvgh55",
    sshi5w: "f1w5jphr",
    z8tnut: "f1ywm7hm",
    z189sj: ["fqznh8f", "f1xile11"],
    Byoj8tv: "f14wxoun",
    uwmqm3: ["f1xile11", "fqznh8f"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  },
  medium: {
    Bqenvij: "f1d2rq10",
    sshi5w: "fvmd9f",
    z8tnut: "fp2oml8",
    z189sj: ["f135dnwl", "f1e60jzv"],
    Byoj8tv: "f1tdddsa",
    uwmqm3: ["f1e60jzv", "f135dnwl"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  },
  large: {
    Bqenvij: "fbhnoac",
    sshi5w: "f1kfson",
    z8tnut: "f1kwiid1",
    z189sj: ["fcgl2c4", "f1anj20m"],
    Byoj8tv: "f5b47ha",
    uwmqm3: ["f1anj20m", "fcgl2c4"],
    Bahqtrf: "fk6fouc",
    Be2twd7: "fod5ikn",
    Bhrd7zp: "figsok6",
    Bg96gwp: "faaz57k"
  }
}, {
  d: [".f1ern45e{border-top-style:none;}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1h8hb77{border-bottom-style:none;}", ".f1hu3pq6{margin-top:0;}", ".f11qmguv{margin-right:0;}", ".f1tyq0we{margin-left:0;}", ".f19f4twv{margin-bottom:0;}", ".f3rmtva{background-color:transparent;}", ".f1ewtqcl{box-sizing:border-box;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1l02sjl{height:100%;}", ".f1immsc2{max-height:100%;}", ".fwyc1cq::-webkit-input-placeholder{color:var(--colorNeutralForeground4);}", ".fwyc1cq::-moz-placeholder{color:var(--colorNeutralForeground4);}", ".f13ta7ih::-webkit-input-placeholder{opacity:1;}", ".f13ta7ih::-moz-placeholder{opacity:1;}", ".f1vw9udw::selection{color:var(--colorNeutralForegroundInverted);}", ".fbb3kq8::selection{background-color:var(--colorNeutralBackgroundInverted);}", ".f1s6fcnf{outline-style:none;}", ".frvgh55{height:24px;}", ".f1w5jphr{min-height:40px;}", ".f1ywm7hm{padding-top:var(--spacingVerticalXS);}", ".fqznh8f{padding-right:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".f1xile11{padding-left:calc(var(--spacingHorizontalSNudge) + var(--spacingHorizontalXXS));}", ".f14wxoun{padding-bottom:var(--spacingVerticalXS);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}", ".f1d2rq10{height:32px;}", ".fvmd9f{min-height:52px;}", ".fp2oml8{padding-top:var(--spacingVerticalSNudge);}", ".f135dnwl{padding-right:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f1e60jzv{padding-left:calc(var(--spacingHorizontalMNudge) + var(--spacingHorizontalXXS));}", ".f1tdddsa{padding-bottom:var(--spacingVerticalSNudge);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}", ".fbhnoac{height:40px;}", ".f1kfson{min-height:64px;}", ".f1kwiid1{padding-top:var(--spacingVerticalS);}", ".fcgl2c4{padding-right:calc(var(--spacingHorizontalM) + var(--spacingHorizontalXXS));}", ".f1anj20m{padding-left:calc(var(--spacingHorizontalM) + var(--spacingHorizontalXXS));}", ".f5b47ha{padding-bottom:var(--spacingVerticalS);}", ".fod5ikn{font-size:var(--fontSizeBase400);}", ".faaz57k{line-height:var(--lineHeightBase400);}"]
});
var useTextareaResizeStyles = __styles2({
  none: {
    B3rzk8w: "f1o1s39h"
  },
  both: {
    B3rzk8w: "f1pxm0xe"
  },
  horizontal: {
    B3rzk8w: "fq6nmtn"
  },
  vertical: {
    B3rzk8w: "f1f5ktr4"
  }
}, {
  d: [".f1o1s39h{resize:none;}", ".f1pxm0xe{resize:both;}", ".fq6nmtn{resize:horizontal;}", ".f1f5ktr4{resize:vertical;}"]
});
var useTextareaStyles_unstable = (state) => {
  const {
    size: size2,
    appearance,
    resize
  } = state;
  const disabled = state.textarea.disabled;
  const invalid = `${state.textarea["aria-invalid"]}` === "true";
  const filled = appearance.startsWith("filled");
  const rootStyles = useRootStyles16();
  state.root.className = mergeClasses(textareaClassNames.root, rootStyles.base, rootStyles[appearance], filled && rootStyles.filled, disabled && rootStyles.disabled, !disabled && rootStyles.interactive, !disabled && appearance === "outline" && rootStyles.outlineInteractive, !disabled && invalid && rootStyles.invalid, state.root.className);
  const textareaStyles = useTextareaStyles();
  const textareaResizeStyles = useTextareaResizeStyles();
  state.textarea.className = mergeClasses(textareaClassNames.textarea, textareaStyles.base, textareaStyles[size2], textareaResizeStyles[resize], state.textarea.className);
  return state;
};

// node_modules/@fluentui/react-textarea/lib/components/Textarea/Textarea.js
var Textarea = React260.forwardRef((props, ref) => {
  const state = useTextarea_unstable(props, ref);
  useTextareaStyles_unstable(state);
  const {
    useTextareaStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTextarea_unstable(state);
});
Textarea.displayName = "Textarea";

// node_modules/@fluentui/react-textarea/lib/components/Textarea/Textarea.types.js
var React261 = __toESM(require_react());

// node_modules/@fluentui/react-textarea/lib/components/TextareaField/TextareaField.js
var textareaFieldClassNames = getDeprecatedFieldClassNames(textareaClassNames.root);
var TextareaField = makeDeprecatedField(Textarea);

// node_modules/@fluentui/react-dialog/lib/components/Dialog/Dialog.js
var React267 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/Dialog/useDialog.js
var React265 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/utils/isEscapeKeyDown.js
var React262 = __toESM(require_react());
function isEscapeKeyDismiss(event, modalType) {
  return event.key === Escape && modalType !== "alert" && !event.isDefaultPrevented();
}

// node_modules/@fluentui/react-dialog/lib/utils/useDisableBodyScroll.js
var import_react83 = __toESM(require_react());
var _element;
var _disableScrollElementProp;
var disableScrollElementProp = "__fluentDisableScrollElement";
function useDisableBodyScroll() {
  const {
    targetDocument
  } = useFluent();
  return (0, import_react83.useCallback)(() => {
    if (targetDocument) {
      return disableScroll(targetDocument.body);
    }
  }, [targetDocument]);
}
function disableScroll(target) {
  var _target_ownerDocument_defaultView;
  const {
    clientWidth
  } = target.ownerDocument.documentElement;
  var _target_ownerDocument_defaultView_innerWidth;
  const innerWidth = (_target_ownerDocument_defaultView_innerWidth = (_target_ownerDocument_defaultView = target.ownerDocument.defaultView) === null || _target_ownerDocument_defaultView === void 0 ? void 0 : _target_ownerDocument_defaultView.innerWidth) !== null && _target_ownerDocument_defaultView_innerWidth !== void 0 ? _target_ownerDocument_defaultView_innerWidth : 0;
  assertIsDisableScrollElement(target);
  if (target[disableScrollElementProp].count === 0) {
    target.style.overflow = "hidden";
    target.style.paddingRight = `${innerWidth - clientWidth}px`;
  }
  target[disableScrollElementProp].count++;
  return () => {
    target[disableScrollElementProp].count--;
    if (target[disableScrollElementProp].count === 0) {
      target.style.overflow = target[disableScrollElementProp].previousOverflowStyle;
      target.style.paddingRight = target[disableScrollElementProp].previousPaddingRightStyle;
    }
  };
}
function assertIsDisableScrollElement(element) {
  var _;
  (_ = (_element = element)[_disableScrollElementProp = disableScrollElementProp]) !== null && _ !== void 0 ? _ : _element[_disableScrollElementProp] = {
    count: 0,
    previousOverflowStyle: element.style.overflow,
    previousPaddingRightStyle: element.style.paddingRight
  };
}

// node_modules/@fluentui/react-dialog/lib/utils/useFocusFirstElement.js
var React263 = __toESM(require_react());
function useFocusFirstElement(open, modalType) {
  const {
    findFirstFocusable
  } = useFocusFinders();
  const {
    targetDocument
  } = useFluent();
  const dialogRef = React263.useRef(null);
  const triggerRef = React263.useRef();
  React263.useEffect(() => {
    if (!open) {
      var _triggerRef_current;
      return (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
    }
    triggerRef.current = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
    const element = dialogRef.current && findFirstFocusable(dialogRef.current);
    if (element) {
      element.focus();
    } else {
      var _dialogRef_current;
      (_dialogRef_current = dialogRef.current) === null || _dialogRef_current === void 0 ? void 0 : _dialogRef_current.focus();
      if (true) {
        console.warn(["@fluentui/react-dialog: a Dialog should have at least one focusable element inside DialogSurface.", "Please add at least a close button either on `DialogTitle` action slot or inside `DialogActions`"].join("\n"));
      }
    }
  }, [findFirstFocusable, open, modalType, targetDocument]);
  return dialogRef;
}

// node_modules/@fluentui/react-dialog/lib/contexts/dialogContext.js
var React264 = __toESM(require_react());
var defaultContextValue = {
  open: false,
  inertTrapFocus: false,
  modalType: "modal",
  isNestedDialog: false,
  dialogRef: {
    current: null
  },
  requestOpenChange() {
  }
};
var DialogContext = createContext10(void 0);
var DialogProvider = DialogContext.Provider;
var useDialogContext_unstable = (selector) => useContextSelector(DialogContext, (ctx = defaultContextValue) => selector(ctx));

// node_modules/@fluentui/react-dialog/lib/contexts/dialogSurfaceContext.js
var import_react84 = __toESM(require_react());
var defaultContextValue2 = false;
var DialogSurfaceContext = (0, import_react84.createContext)(void 0);
var DialogSurfaceProvider = DialogSurfaceContext.Provider;
var _useContext;
var useDialogSurfaceContext_unstable = () => (_useContext = (0, import_react84.useContext)(DialogSurfaceContext)) !== null && _useContext !== void 0 ? _useContext : defaultContextValue2;

// node_modules/@fluentui/react-dialog/lib/components/Dialog/useDialog.js
var useDialog_unstable = (props) => {
  const {
    children,
    modalType = "modal",
    onOpenChange,
    inertTrapFocus = false
  } = props;
  const [trigger, content] = childrenToTriggerAndContent(children);
  const [open, setOpen] = useControllableState({
    state: props.open,
    defaultState: props.defaultOpen,
    initialState: false
  });
  const requestOpenChange = useEventCallback((data) => {
    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(data.event, data);
    if (!data.event.isDefaultPrevented()) {
      setOpen(data.open);
    }
  });
  const focusRef = useFocusFirstElement(open, modalType);
  const disableBodyScroll = useDisableBodyScroll();
  const isBodyScrollLocked = Boolean(open && modalType !== "non-modal");
  useIsomorphicLayoutEffect(() => {
    if (isBodyScrollLocked) {
      return disableBodyScroll();
    }
  }, [disableBodyScroll, isBodyScrollLocked]);
  return {
    components: {
      backdrop: "div"
    },
    inertTrapFocus,
    open,
    modalType,
    content: open ? content : null,
    trigger,
    requestOpenChange,
    dialogTitleId: useId2("dialog-title-"),
    isNestedDialog: useHasParentContext(DialogContext),
    dialogRef: focusRef
  };
};
function childrenToTriggerAndContent(children) {
  const childrenArray = React265.Children.toArray(children);
  if (true) {
    if (childrenArray.length !== 1 && childrenArray.length !== 2) {
      console.warn("Dialog must contain at least one child <DialogSurface/>,\nand at most two children <DialogTrigger/> <DialogSurface/> (in this order)");
    }
  }
  switch (childrenArray.length) {
    case 2:
      return childrenArray;
    case 1:
      return [void 0, childrenArray[0]];
    default:
      return [void 0, void 0];
  }
}

// node_modules/@fluentui/react-dialog/lib/components/Dialog/renderDialog.js
var React266 = __toESM(require_react());
var renderDialog_unstable = (state, contextValues) => {
  const {
    content,
    trigger
  } = state;
  return React266.createElement(DialogProvider, {
    value: contextValues.dialog
  }, React266.createElement(DialogSurfaceProvider, {
    value: contextValues.dialogSurface
  }, trigger, content));
};

// node_modules/@fluentui/react-dialog/lib/components/Dialog/useDialogContextValues.js
function useDialogContextValues_unstable(state) {
  const {
    modalType,
    open,
    dialogRef,
    dialogTitleId,
    isNestedDialog,
    inertTrapFocus,
    requestOpenChange
  } = state;
  const dialog = {
    open,
    modalType,
    dialogRef,
    dialogTitleId,
    isNestedDialog,
    inertTrapFocus,
    requestOpenChange
  };
  const dialogSurface = false;
  return {
    dialog,
    dialogSurface
  };
}

// node_modules/@fluentui/react-dialog/lib/components/Dialog/Dialog.js
var Dialog = React267.memo((props) => {
  const state = useDialog_unstable(props);
  const contextValues = useDialogContextValues_unstable(state);
  return renderDialog_unstable(state, contextValues);
});
Dialog.displayName = "Dialog";

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/DialogTrigger.js
var React269 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/useDialogTrigger.js
var React268 = __toESM(require_react());
var useDialogTrigger_unstable = (props) => {
  const isInsideSurfaceDialog = useDialogSurfaceContext_unstable();
  const {
    children,
    disableButtonEnhancement = false,
    action = isInsideSurfaceDialog ? "close" : "open"
  } = props;
  const child = getTriggerChild(children);
  const requestOpenChange = useDialogContext_unstable((ctx) => ctx.requestOpenChange);
  const open = useDialogContext_unstable((ctx) => ctx.open);
  const {
    triggerAttributes
  } = useModalAttributes();
  const handleClick = useEventCallback((event) => {
    var _child_props, _child_props_onClick;
    (_child_props_onClick = (_child_props = child === null || child === void 0 ? void 0 : child.props).onClick) === null || _child_props_onClick === void 0 ? void 0 : _child_props_onClick.call(_child_props, event);
    if (!event.isDefaultPrevented()) {
      requestOpenChange({
        event,
        type: "triggerClick",
        open: action === "open"
      });
    }
  });
  const triggerChildProps = {
    ...child === null || child === void 0 ? void 0 : child.props,
    "aria-expanded": open,
    ref: child === null || child === void 0 ? void 0 : child.ref,
    onClick: handleClick,
    ...triggerAttributes
  };
  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === "button" || (child === null || child === void 0 ? void 0 : child.type) === "a" ? child.type : "div", {
    ...triggerChildProps,
    type: "button"
  });
  return {
    children: applyTriggerPropsToChildren(children, disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/renderDialogTrigger.js
var renderDialogTrigger_unstable = (state) => state.children;

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/DialogTrigger.js
var DialogTrigger = (props) => {
  const state = useDialogTrigger_unstable(props);
  return renderDialogTrigger_unstable(state);
};
DialogTrigger.displayName = "DialogTrigger";
DialogTrigger.isFluentTriggerComponent = true;

// node_modules/@fluentui/react-dialog/lib/components/DialogTrigger/DialogTrigger.types.js
var React270 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/DialogActions.js
var React273 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/useDialogActions.js
var React271 = __toESM(require_react());
var useDialogActions_unstable = (props, ref) => {
  const {
    position = "end",
    fluid = false
  } = props;
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props
    }),
    position,
    fluid
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/renderDialogActions.js
var React272 = __toESM(require_react());
var renderDialogActions_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React272.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/useDialogActionsStyles.js
var dialogActionsClassNames = {
  root: "fui-DialogActions"
};
var useStyles47 = __styles2({
  root: {
    Bqenvij: "f3052tw",
    B7ck84d: "f1ewtqcl",
    mc9l5x: "f22iagw",
    i8kkvl: "f4px1ci",
    Belr9w4: "fn67r4l",
    Bmdcpmo: "f6glcwc",
    th9wkt: "f1e3st1r"
  },
  gridPositionEnd: {
    Bdqf98w: "f1a7i8kp",
    Ijaq50: "f11u0jfc",
    Br312pm: "f1d6tb1o",
    nk6f5a: "f23awfp",
    Bw0ie65: "fiappcv"
  },
  gridPositionStart: {
    Bdqf98w: "fsxvdwy",
    Ijaq50: "f1vnb230",
    Br312pm: "f14781pt",
    nk6f5a: "f13d374e",
    Bw0ie65: "f1fjo411"
  },
  fluidStart: {
    Bw0ie65: "fiappcv"
  },
  fluidEnd: {
    Br312pm: "f14781pt"
  }
}, {
  d: [".f3052tw{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;}", ".f1ewtqcl{box-sizing:border-box;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f4px1ci{-webkit-column-gap:8px;column-gap:8px;}", ".fn67r4l{row-gap:8px;}", ".f1a7i8kp{justify-self:end;}", ".f11u0jfc{grid-row-start:actions-end;}", ".f1d6tb1o{grid-column-start:actions-end;}", ".f23awfp{grid-row-end:actions-end;}", ".fiappcv{grid-column-end:actions-end;}", ".fsxvdwy{justify-self:start;}", ".f1vnb230{grid-row-start:actions-start;}", ".f14781pt{grid-column-start:actions-start;}", ".f13d374e{grid-row-end:actions-start;}", ".f1fjo411{grid-column-end:actions-start;}"],
  m: [["@media screen and (max-width: 480px){.f6glcwc{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}}", {
    m: "screen and (max-width: 480px)"
  }], ["@media screen and (max-width: 480px){.f1e3st1r{justify-self:stretch;}}", {
    m: "screen and (max-width: 480px)"
  }]]
});
var useDialogActionsStyles_unstable = (state) => {
  const styles = useStyles47();
  state.root.className = mergeClasses(dialogActionsClassNames.root, styles.root, state.position === "start" && styles.gridPositionStart, state.position === "end" && styles.gridPositionEnd, state.fluid && state.position === "start" && styles.fluidStart, state.fluid && state.position === "end" && styles.fluidEnd, state.root.className);
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogActions/DialogActions.js
var DialogActions = React273.forwardRef((props, ref) => {
  const state = useDialogActions_unstable(props, ref);
  useDialogActionsStyles_unstable(state);
  const {
    useDialogActionsStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDialogActions_unstable(state);
});
DialogActions.displayName = "DialogActions";

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/DialogBody.js
var React276 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/useDialogBody.js
var React274 = __toESM(require_react());
var useDialogBody_unstable = (props, ref) => {
  var _props_as;
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : "div", {
      ref,
      ...props
    })
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/renderDialogBody.js
var React275 = __toESM(require_react());
var renderDialogBody_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React275.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/useDialogBodyStyles.js
var dialogBodyClassNames = {
  root: "fui-DialogBody"
};
var useStyles48 = __styles2({
  root: {
    mc9l5x: "f13qh94s",
    fshzfu: "f120kxnn",
    a9b677: "fly5x3f",
    Bqenvij: "f3052tw",
    Bxyxcbc: "flnwrvu",
    B7ck84d: "f1ewtqcl",
    wkccdc: "f874eam",
    Budl1dq: "fjj47a5",
    zoa1oz: "fe34spp",
    B68tc82: "f1ln0qer",
    Bmxbyg5: "fa2wlxz",
    i8kkvl: "f4px1ci",
    Belr9w4: "fn67r4l",
    B5xtmjs: "ff54dml",
    Bqu9lor: "f52bj20",
    B06wobe: "f1dangjo"
  }
}, {
  d: [".f13qh94s{display:grid;}", ".f120kxnn::backdrop{background-color:rgba(0, 0, 0, 0.4);}", ".fly5x3f{width:100%;}", ".f3052tw{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;}", ".flnwrvu{max-height:calc(100vh - 2 * 24px);}", ".f1ewtqcl{box-sizing:border-box;}", ".f874eam{grid-template-rows:auto 1fr auto;}", ".fjj47a5{grid-template-columns:1fr 1fr auto;}", '.fe34spp{grid-template-areas:"title title close-button" "body body body" "actions-start actions-end actions-end";}', ".f1ln0qer{overflow-x:unset;}", ".fa2wlxz{overflow-y:unset;}", ".f4px1ci{-webkit-column-gap:8px;column-gap:8px;}", ".fn67r4l{row-gap:8px;}"],
  m: [["@media screen and (max-width: 480px){.ff54dml{max-width:100vw;}}", {
    m: "screen and (max-width: 480px)"
  }], ["@media screen and (max-width: 480px){.f52bj20{grid-template-rows:auto 1fr auto auto;}}", {
    m: "screen and (max-width: 480px)"
  }], ['@media screen and (max-width: 480px){.f1dangjo{grid-template-areas:"title title close-button" "body body body" "actions-start actions-start actions-start" "actions-end actions-end actions-end";}}', {
    m: "screen and (max-width: 480px)"
  }]]
});
var useDialogBodyStyles_unstable = (state) => {
  const styles = useStyles48();
  state.root.className = mergeClasses(dialogBodyClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogBody/DialogBody.js
var DialogBody = React276.forwardRef((props, ref) => {
  const state = useDialogBody_unstable(props, ref);
  useDialogBodyStyles_unstable(state);
  const {
    useDialogBodyStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDialogBody_unstable(state);
});
DialogBody.displayName = "DialogBody";

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/DialogTitle.js
var React279 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/useDialogTitle.js
var React277 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/useDialogTitleStyles.js
var dialogTitleClassNames = {
  root: "fui-DialogTitle",
  action: "fui-DialogTitle__action"
};
var useStyles49 = __styles2({
  root: {
    Bahqtrf: "fk6fouc",
    Be2twd7: "f1pp30po",
    Bhrd7zp: "fl43uef",
    Bg96gwp: "f106mvju",
    Ijaq50: "faq1aip",
    Br312pm: "f1m489tg",
    nk6f5a: "fv2srd9",
    Bw0ie65: "f1tz6hh8"
  },
  rootWithoutCloseButton: {
    Ijaq50: "faq1aip",
    Br312pm: "f1m489tg",
    nk6f5a: "f11nczdl",
    Bw0ie65: "f98d4vj"
  },
  action: {
    Ijaq50: "f1hysmiz",
    Br312pm: "f1379kmu",
    nk6f5a: "f11nczdl",
    Bw0ie65: "f98d4vj"
  }
}, {
  d: [".fk6fouc{font-family:var(--fontFamilyBase);}", ".f1pp30po{font-size:var(--fontSizeBase500);}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".f106mvju{line-height:var(--lineHeightBase500);}", ".faq1aip{grid-row-start:title;}", ".f1m489tg{grid-column-start:title;}", ".fv2srd9{grid-row-end:title;}", ".f1tz6hh8{grid-column-end:title;}", ".f11nczdl{grid-row-end:close-button;}", ".f98d4vj{grid-column-end:close-button;}", ".f1hysmiz{grid-row-start:close-button;}", ".f1379kmu{grid-column-start:close-button;}"]
});
var useDialogTitleInternalStyles = __styles2({
  button: {
    qhf8xq: "f10pi13n",
    B7ck84d: "f1e4lqlz",
    De3pzq: "f1u2r49w",
    sj55zd: "f1ym3bx4",
    Bahqtrf: "f1mo0ibp",
    Be2twd7: "fjoy568",
    Bceei9c: "f1k6fduh",
    Bg96gwp: "fez10in",
    B68tc82: "f1mtd64y",
    Bmxbyg5: "f1y7q3j9",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    icvyot: "f1ern45e",
    vrafjx: ["f1n71otn", "f1deefiw"],
    oivjwe: "f1h8hb77",
    wvpqe5: ["f1deefiw", "f1n71otn"],
    Bv0vk6g: "f37px4s",
    fsow6f: "fgusgyc",
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bm4h7ae: "f15bsgw9",
    B7ys5i9: "f14e48fq",
    Busjfv9: "f18yb2kv",
    Bhk32uz: "fd6o370",
    Bf4ptjt: "fh1cnn4",
    kclons: ["fy7oxxb", "f184ne2d"],
    Bhdgwq3: "fpukqih",
    Blkhhs4: ["f184ne2d", "fy7oxxb"],
    Bqtpl0w: "frrh606",
    clg4pj: ["f1v5zibi", "fo2hd23"],
    hgwjuy: "ful5kiu",
    Bonggc9: ["fo2hd23", "f1v5zibi"],
    B1tsrr9: ["f1jqcqds", "ftffrms"],
    Dah5zi: ["ftffrms", "f1jqcqds"],
    Bkh64rk: ["f2e7qr6", "fsr1zz6"],
    qqdqy8: ["fsr1zz6", "f2e7qr6"],
    B6dhp37: "f1dvezut",
    i03rao: ["fd0oaoj", "f1cwg4i8"],
    Boxcth7: "fjvm52t",
    Bsom6fd: ["f1cwg4i8", "fd0oaoj"],
    J0r882: "fdiulkx",
    Bjwuhne: "f1yalx80",
    Ghsupd: ["fq22d5a", "f1jw7pan"],
    Bule8hv: ["f1jw7pan", "fq22d5a"]
  }
}, {
  d: [".f10pi13n{position:relative;}", ".f1e4lqlz{box-sizing:content-box;}", ".f1u2r49w{background-color:inherit;}", ".f1ym3bx4{color:inherit;}", ".f1mo0ibp{font-family:inherit;}", ".fjoy568{font-size:inherit;}", ".f1k6fduh{cursor:pointer;}", ".fez10in{line-height:0;}", ".f1mtd64y{overflow-x:visible;}", ".f1y7q3j9{overflow-y:visible;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".f1ern45e{border-top-style:none;}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1h8hb77{border-bottom-style:none;}", ".f37px4s{-webkit-appearance:button;}", ".fgusgyc{text-align:unset;}", ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", '.f15bsgw9[data-fui-focus-visible]::after{content:"";}', ".f14e48fq[data-fui-focus-visible]::after{position:absolute;}", ".f18yb2kv[data-fui-focus-visible]::after{pointer-events:none;}", ".fd6o370[data-fui-focus-visible]::after{z-index:1;}", ".fh1cnn4[data-fui-focus-visible]::after{border-top-style:solid;}", ".fy7oxxb[data-fui-focus-visible]::after{border-right-style:solid;}", ".f184ne2d[data-fui-focus-visible]::after{border-left-style:solid;}", ".fpukqih[data-fui-focus-visible]::after{border-bottom-style:solid;}", ".frrh606[data-fui-focus-visible]::after{border-top-width:2px;}", ".f1v5zibi[data-fui-focus-visible]::after{border-right-width:2px;}", ".fo2hd23[data-fui-focus-visible]::after{border-left-width:2px;}", ".ful5kiu[data-fui-focus-visible]::after{border-bottom-width:2px;}", ".f1jqcqds[data-fui-focus-visible]::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".ftffrms[data-fui-focus-visible]::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f2e7qr6[data-fui-focus-visible]::after{border-top-right-radius:var(--borderRadiusMedium);}", ".fsr1zz6[data-fui-focus-visible]::after{border-top-left-radius:var(--borderRadiusMedium);}", ".f1dvezut[data-fui-focus-visible]::after{border-top-color:var(--colorStrokeFocus2);}", ".fd0oaoj[data-fui-focus-visible]::after{border-right-color:var(--colorStrokeFocus2);}", ".f1cwg4i8[data-fui-focus-visible]::after{border-left-color:var(--colorStrokeFocus2);}", ".fjvm52t[data-fui-focus-visible]::after{border-bottom-color:var(--colorStrokeFocus2);}", ".fdiulkx[data-fui-focus-visible]::after{top:-2px;}", ".f1yalx80[data-fui-focus-visible]::after{bottom:-2px;}", ".fq22d5a[data-fui-focus-visible]::after{left:-2px;}", ".f1jw7pan[data-fui-focus-visible]::after{right:-2px;}"],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"]
});
var useDialogTitleStyles_unstable = (state) => {
  const styles = useStyles49();
  state.root.className = mergeClasses(dialogTitleClassNames.root, styles.root, !state.action && styles.rootWithoutCloseButton, state.root.className);
  if (state.action) {
    state.action.className = mergeClasses(dialogTitleClassNames.action, styles.action, state.action.className);
  }
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/useDialogTitle.js
var useDialogTitle_unstable = (props, ref) => {
  const {
    as,
    action
  } = props;
  const modalType = useDialogContext_unstable((ctx) => ctx.modalType);
  const internalStyles = useDialogTitleInternalStyles();
  return {
    components: {
      root: "div",
      action: "div"
    },
    root: getNativeElementProps(as !== null && as !== void 0 ? as : "div", {
      ref,
      id: useDialogContext_unstable((ctx) => ctx.dialogTitleId),
      ...props
    }),
    action: resolveShorthand(action, {
      required: modalType === "non-modal",
      defaultProps: {
        children: React277.createElement(DialogTrigger, {
          disableButtonEnhancement: true,
          action: "close"
        }, React277.createElement("button", {
          type: "button",
          className: internalStyles.button,
          // TODO: find a better way to add internal labels
          "aria-label": "close"
        }, React277.createElement(Dismiss24Regular, null)))
      }
    })
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/renderDialogTitle.js
var React278 = __toESM(require_react());
var renderDialogTitle_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React278.createElement(React278.Fragment, null, React278.createElement(slots.root, slotProps.root, slotProps.root.children), slots.action && React278.createElement(slots.action, slotProps.action));
};

// node_modules/@fluentui/react-dialog/lib/components/DialogTitle/DialogTitle.js
var DialogTitle = React279.forwardRef((props, ref) => {
  const state = useDialogTitle_unstable(props, ref);
  useDialogTitleStyles_unstable(state);
  const {
    useDialogTitleStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDialogTitle_unstable(state);
});
DialogTitle.displayName = "DialogTitle";

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/DialogSurface.js
var React282 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/useDialogSurface.js
var React280 = __toESM(require_react());
var useDialogSurface_unstable = (props, ref) => {
  const {
    backdrop,
    as
  } = props;
  const modalType = useDialogContext_unstable((ctx) => ctx.modalType);
  const inertTrapFocus = useDialogContext_unstable((ctx) => ctx.inertTrapFocus);
  const dialogRef = useDialogContext_unstable((ctx) => ctx.dialogRef);
  const open = useDialogContext_unstable((ctx) => ctx.open);
  const requestOpenChange = useDialogContext_unstable((ctx) => ctx.requestOpenChange);
  const dialogTitleID = useDialogContext_unstable((ctx) => ctx.dialogTitleId);
  const handledBackdropClick = useEventCallback((event) => {
    if (isResolvedShorthand(props.backdrop)) {
      var _props_backdrop, _props_backdrop_onClick;
      (_props_backdrop_onClick = (_props_backdrop = props.backdrop).onClick) === null || _props_backdrop_onClick === void 0 ? void 0 : _props_backdrop_onClick.call(_props_backdrop, event);
    }
    if (modalType === "modal" && !event.isDefaultPrevented()) {
      requestOpenChange({
        event,
        open: false,
        type: "backdropClick"
      });
    }
  });
  const handleKeyDown = useEventCallback((event) => {
    var _props_onKeyDown;
    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);
    if (isEscapeKeyDismiss(event, modalType)) {
      requestOpenChange({
        event,
        open: false,
        type: "escapeKeyDown"
      });
      event.stopPropagation();
    }
  });
  const {
    modalAttributes
  } = useModalAttributes({
    trapFocus: modalType !== "non-modal",
    legacyTrapFocus: !inertTrapFocus
  });
  return {
    components: {
      backdrop: "div",
      root: "div"
    },
    backdrop: resolveShorthand(backdrop, {
      required: open && modalType !== "non-modal",
      defaultProps: {
        "aria-hidden": "true",
        onClick: handledBackdropClick
      }
    }),
    root: getNativeElementProps(as !== null && as !== void 0 ? as : "div", {
      tabIndex: -1,
      "aria-modal": modalType !== "non-modal",
      role: modalType === "alert" ? "alertdialog" : "dialog",
      "aria-labelledby": props["aria-label"] ? void 0 : dialogTitleID,
      ...props,
      ...modalAttributes,
      onKeyDown: handleKeyDown,
      ref: useMergedRefs(ref, dialogRef)
    })
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/renderDialogSurface.js
var React281 = __toESM(require_react());
var renderDialogSurface_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React281.createElement(Portal, null, slots.backdrop && React281.createElement(slots.backdrop, slotProps.backdrop), React281.createElement(DialogSurfaceProvider, {
    value: contextValues.dialogSurface
  }, React281.createElement(slots.root, slotProps.root)));
};

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/useDialogSurfaceStyles.js
var dialogSurfaceClassNames = {
  root: "fui-DialogSurface",
  backdrop: "fui-DialogSurface__backdrop"
};
var useStyles50 = __styles2({
  focusOutline: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bm4h7ae: "f15bsgw9",
    B7ys5i9: "f14e48fq",
    Busjfv9: "f18yb2kv",
    Bhk32uz: "fd6o370",
    Bf4ptjt: "fh1cnn4",
    kclons: ["fy7oxxb", "f184ne2d"],
    Bhdgwq3: "fpukqih",
    Blkhhs4: ["f184ne2d", "fy7oxxb"],
    Bqtpl0w: "frrh606",
    clg4pj: ["f1v5zibi", "fo2hd23"],
    hgwjuy: "ful5kiu",
    Bonggc9: ["fo2hd23", "f1v5zibi"],
    B1tsrr9: ["f1jqcqds", "ftffrms"],
    Dah5zi: ["ftffrms", "f1jqcqds"],
    Bkh64rk: ["f2e7qr6", "fsr1zz6"],
    qqdqy8: ["fsr1zz6", "f2e7qr6"],
    B6dhp37: "f1dvezut",
    i03rao: ["fd0oaoj", "f1cwg4i8"],
    Boxcth7: "fjvm52t",
    Bsom6fd: ["f1cwg4i8", "fd0oaoj"],
    J0r882: "fdiulkx",
    Bjwuhne: "f1yalx80",
    Ghsupd: ["fq22d5a", "f1jw7pan"],
    Bule8hv: ["f1jw7pan", "fq22d5a"]
  },
  root: {
    mc9l5x: "ftgm304",
    famaaq: "f1c515w",
    Bcdw1i0: "f1bitti",
    Bhzewxz: "f15twtuk",
    j35jbq: ["f1e31b4d", "f1vgc2s3"],
    B5kzvoi: "f1yab3r1",
    oyh7mz: ["f1vgc2s3", "f1e31b4d"],
    z8tnut: "fuq56rw",
    z189sj: ["f15kemlc", "fdgang7"],
    Byoj8tv: "fl2zwns",
    uwmqm3: ["fdgang7", "f15kemlc"],
    B6of3ja: "fgr6219",
    t21cq0: ["f1ujusj6", "fcgxt0o"],
    jrapky: "f10jk5vf",
    Frg6f3: ["fcgxt0o", "f1ujusj6"],
    icvyot: "fzkkow9",
    vrafjx: ["fcdblym", "fjik90z"],
    oivjwe: "fg706s2",
    wvpqe5: ["fjik90z", "fcdblym"],
    B68tc82: "f1ln0qer",
    Bmxbyg5: "fa2wlxz",
    fshzfu: "f120kxnn",
    qhf8xq: "f19dog8a",
    a9b677: "fly5x3f",
    Bqenvij: "f3052tw",
    B2u0y6b: "fvgz9i8",
    Bxyxcbc: "f6a9g1z",
    B7ck84d: "f1ewtqcl",
    E5pizo: "f10nrhrw",
    De3pzq: "fxugw4r",
    sj55zd: "f19n0e5",
    B4j52fo: "f5ogflp",
    Bekrc4i: ["f1hqa2wf", "finvdd3"],
    Bn0qgzm: "f1f09k3d",
    ibv6hh: ["finvdd3", "f1hqa2wf"],
    g2u3we: "fghlq4f",
    h3c5rm: ["f1gn591s", "fjscplz"],
    B9xav0g: "fb073pr",
    zhjwy3: ["fjscplz", "f1gn591s"],
    Bbmb7ep: ["fnivh3a", "fc7yr5o"],
    Beyfa6y: ["fc7yr5o", "fnivh3a"],
    B7oj6ja: ["f1el4m67", "f8yange"],
    Btl43ni: ["f8yange", "f1el4m67"],
    B5xtmjs: "ff54dml"
  },
  backdrop: {
    qhf8xq: "f19dog8a",
    De3pzq: "fju19wo",
    Bhzewxz: "f113wtx2",
    j35jbq: ["f10k790i", "f1xynx9j"],
    B5kzvoi: "f5gq2j6",
    oyh7mz: ["f1xynx9j", "f10k790i"]
  },
  nestedDialogBackdrop: {
    De3pzq: "f3rmtva"
  },
  nestedNativeDialogBackdrop: {
    fshzfu: "foe20jx"
  }
}, {
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  d: [".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", '.f15bsgw9[data-fui-focus-visible]::after{content:"";}', ".f14e48fq[data-fui-focus-visible]::after{position:absolute;}", ".f18yb2kv[data-fui-focus-visible]::after{pointer-events:none;}", ".fd6o370[data-fui-focus-visible]::after{z-index:1;}", ".fh1cnn4[data-fui-focus-visible]::after{border-top-style:solid;}", ".fy7oxxb[data-fui-focus-visible]::after{border-right-style:solid;}", ".f184ne2d[data-fui-focus-visible]::after{border-left-style:solid;}", ".fpukqih[data-fui-focus-visible]::after{border-bottom-style:solid;}", ".frrh606[data-fui-focus-visible]::after{border-top-width:2px;}", ".f1v5zibi[data-fui-focus-visible]::after{border-right-width:2px;}", ".fo2hd23[data-fui-focus-visible]::after{border-left-width:2px;}", ".ful5kiu[data-fui-focus-visible]::after{border-bottom-width:2px;}", ".f1jqcqds[data-fui-focus-visible]::after{border-bottom-right-radius:var(--borderRadiusMedium);}", ".ftffrms[data-fui-focus-visible]::after{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f2e7qr6[data-fui-focus-visible]::after{border-top-right-radius:var(--borderRadiusMedium);}", ".fsr1zz6[data-fui-focus-visible]::after{border-top-left-radius:var(--borderRadiusMedium);}", ".f1dvezut[data-fui-focus-visible]::after{border-top-color:var(--colorStrokeFocus2);}", ".fd0oaoj[data-fui-focus-visible]::after{border-right-color:var(--colorStrokeFocus2);}", ".f1cwg4i8[data-fui-focus-visible]::after{border-left-color:var(--colorStrokeFocus2);}", ".fjvm52t[data-fui-focus-visible]::after{border-bottom-color:var(--colorStrokeFocus2);}", ".fdiulkx[data-fui-focus-visible]::after{top:-2px;}", ".f1yalx80[data-fui-focus-visible]::after{bottom:-2px;}", ".fq22d5a[data-fui-focus-visible]::after{left:-2px;}", ".f1jw7pan[data-fui-focus-visible]::after{right:-2px;}", ".ftgm304{display:block;}", ".f1c515w{-webkit-user-select:unset;-moz-user-select:unset;-ms-user-select:unset;user-select:unset;}", ".f1bitti{visibility:unset;}", ".f15twtuk{top:0;}", ".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".f1yab3r1{bottom:0;}", ".fuq56rw{padding-top:24px;}", ".f15kemlc{padding-right:24px;}", ".fdgang7{padding-left:24px;}", ".fl2zwns{padding-bottom:24px;}", ".fgr6219{margin-top:auto;}", ".f1ujusj6{margin-right:auto;}", ".fcgxt0o{margin-left:auto;}", ".f10jk5vf{margin-bottom:auto;}", ".fzkkow9{border-top-style:solid;}", ".fcdblym{border-right-style:solid;}", ".fjik90z{border-left-style:solid;}", ".fg706s2{border-bottom-style:solid;}", ".f1ln0qer{overflow-x:unset;}", ".fa2wlxz{overflow-y:unset;}", ".f120kxnn::backdrop{background-color:rgba(0, 0, 0, 0.4);}", ".f19dog8a{position:fixed;}", ".fly5x3f{width:100%;}", ".f3052tw{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;}", ".fvgz9i8{max-width:600px;}", ".f6a9g1z{max-height:100vh;}", ".f1ewtqcl{box-sizing:border-box;}", ".f10nrhrw{box-shadow:var(--shadow64);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f5ogflp{border-top-width:1px;}", ".f1hqa2wf{border-right-width:1px;}", ".finvdd3{border-left-width:1px;}", ".f1f09k3d{border-bottom-width:1px;}", ".fghlq4f{border-top-color:var(--colorTransparentStroke);}", ".f1gn591s{border-right-color:var(--colorTransparentStroke);}", ".fjscplz{border-left-color:var(--colorTransparentStroke);}", ".fb073pr{border-bottom-color:var(--colorTransparentStroke);}", ".fnivh3a{border-bottom-right-radius:var(--borderRadiusXLarge);}", ".fc7yr5o{border-bottom-left-radius:var(--borderRadiusXLarge);}", ".f1el4m67{border-top-right-radius:var(--borderRadiusXLarge);}", ".f8yange{border-top-left-radius:var(--borderRadiusXLarge);}", ".fju19wo{background-color:rgba(0, 0, 0, 0.4);}", ".f113wtx2{top:0px;}", ".f10k790i{right:0px;}", ".f1xynx9j{left:0px;}", ".f5gq2j6{bottom:0px;}", ".f3rmtva{background-color:transparent;}", ".foe20jx::backdrop{background-color:transparent;}"],
  m: [["@media screen and (max-width: 480px){.ff54dml{max-width:100vw;}}", {
    m: "screen and (max-width: 480px)"
  }]]
});
var useDialogSurfaceStyles_unstable = (state) => {
  const styles = useStyles50();
  const isNestedDialog = useDialogContext_unstable((ctx) => ctx.isNestedDialog);
  state.root.className = mergeClasses(dialogSurfaceClassNames.root, styles.root, styles.focusOutline, isNestedDialog && styles.nestedNativeDialogBackdrop, state.root.className);
  if (state.backdrop) {
    state.backdrop.className = mergeClasses(dialogSurfaceClassNames.backdrop, styles.backdrop, isNestedDialog && styles.nestedDialogBackdrop, state.backdrop.className);
  }
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/useDialogSurfaceContextValues.js
function useDialogSurfaceContextValues_unstable(state) {
  const dialogSurface = true;
  return {
    dialogSurface
  };
}

// node_modules/@fluentui/react-dialog/lib/components/DialogSurface/DialogSurface.js
var DialogSurface = React282.forwardRef((props, ref) => {
  const state = useDialogSurface_unstable(props, ref);
  const contextValues = useDialogSurfaceContextValues_unstable(state);
  useDialogSurfaceStyles_unstable(state);
  const {
    useDialogSurfaceStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDialogSurface_unstable(state, contextValues);
});
DialogSurface.displayName = "DialogSurface";

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/DialogContent.js
var React285 = __toESM(require_react());

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/useDialogContent.js
var React283 = __toESM(require_react());
var useDialogContent_unstable = (props, ref) => {
  var _props_as;
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : "div", {
      ref,
      ...props
    })
  };
};

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/renderDialogContent.js
var React284 = __toESM(require_react());
var renderDialogContent_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React284.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/useDialogContentStyles.js
var dialogContentClassNames = {
  root: "fui-DialogContent"
};
var useStyles51 = __styles2({
  root: {
    a9b677: "fly5x3f",
    Bqenvij: "f1l02sjl",
    Bmxbyg5: "f5zp4f",
    sshi5w: "f1nxs5xn",
    B7ck84d: "f1ewtqcl",
    z8tnut: "fr4fn7s",
    z189sj: ["f171n1a0", "f1jwbs5a"],
    Byoj8tv: "f1ean75l",
    uwmqm3: ["f1jwbs5a", "f171n1a0"],
    B6of3ja: "fxlnl9e",
    t21cq0: ["ffs23cn", "f1v5tmjd"],
    jrapky: "f2uu7rc",
    Frg6f3: ["f1v5tmjd", "ffs23cn"],
    Ijaq50: "f6owso0",
    Br312pm: "fupswjn",
    nk6f5a: "foucsne",
    Bw0ie65: "f1ka72gx",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fkhj508",
    Bhrd7zp: "figsok6",
    Bg96gwp: "f1i3iumi"
  }
}, {
  d: [".fly5x3f{width:100%;}", ".f1l02sjl{height:100%;}", ".f5zp4f{overflow-y:auto;}", ".f1nxs5xn{min-height:32px;}", ".f1ewtqcl{box-sizing:border-box;}", ".fr4fn7s{padding-top:var(--strokeWidthThick);}", ".f171n1a0{padding-right:var(--strokeWidthThick);}", ".f1jwbs5a{padding-left:var(--strokeWidthThick);}", ".f1ean75l{padding-bottom:var(--strokeWidthThick);}", ".fxlnl9e{margin-top:calc(var(--strokeWidthThick) * -1);}", ".ffs23cn{margin-right:calc(var(--strokeWidthThick) * -1);}", ".f1v5tmjd{margin-left:calc(var(--strokeWidthThick) * -1);}", ".f2uu7rc{margin-bottom:calc(var(--strokeWidthThick) * -1);}", ".f6owso0{grid-row-start:body;}", ".fupswjn{grid-column-start:body;}", ".foucsne{grid-row-end:body;}", ".f1ka72gx{grid-column-end:body;}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fkhj508{font-size:var(--fontSizeBase300);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".f1i3iumi{line-height:var(--lineHeightBase300);}"]
});
var useDialogContentStyles_unstable = (state) => {
  const styles = useStyles51();
  state.root.className = mergeClasses(dialogContentClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-dialog/lib/components/DialogContent/DialogContent.js
var DialogContent = React285.forwardRef((props, ref) => {
  const state = useDialogContent_unstable(props, ref);
  useDialogContentStyles_unstable(state);
  const {
    useDialogContentStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDialogContent_unstable(state);
});
DialogContent.displayName = "DialogContent";

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/ProgressBar.js
var React288 = __toESM(require_react());

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/useProgressBar.js
var React286 = __toESM(require_react());

// node_modules/@fluentui/react-progress/lib/utils/clampMax.js
var clampMax = (max3) => {
  const internalMax = max3 <= 0 ? 1 : max3;
  if (true) {
    if (max3 <= 0) {
      console.error(`The prop 'max' must be greater than 0. Received max: ${max3}`);
    }
  }
  return internalMax;
};

// node_modules/@fluentui/react-progress/lib/utils/clampValue.js
var clampValue = (value, max3) => {
  if (value === void 0) {
    return value;
  }
  const internalValue = value < 0 ? 0 : value > max3 ? max3 : value;
  if (true) {
    if (value < 0) {
      console.error(`The prop 'value' must be greater than or equal to zero. Received value: ${value}`);
    }
    if (value > max3) {
      console.error(`The prop 'value' must be less than or equal to 'max'. Received value: ${value}, max: ${max3}`);
    }
  }
  return internalValue;
};

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/useProgressBar.js
var useProgressBar_unstable = (props, ref) => {
  const {
    color = "brand",
    shape = "rounded",
    thickness = "medium"
  } = props;
  var _props_max;
  const max3 = clampMax((_props_max = props.max) !== null && _props_max !== void 0 ? _props_max : 1);
  const value = clampValue(props.value, max3);
  const root = getNativeElementProps("div", {
    ref,
    role: "progressbar",
    "aria-valuemin": value !== void 0 ? 0 : void 0,
    "aria-valuemax": value !== void 0 ? max3 : void 0,
    "aria-valuenow": value,
    ...props
  });
  const bar = resolveShorthand(props.bar, {
    required: true
  });
  const state = {
    color,
    max: max3,
    shape,
    thickness,
    value,
    components: {
      root: "div",
      bar: "div"
    },
    root,
    bar
  };
  return state;
};

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/renderProgressBar.js
var React287 = __toESM(require_react());
var renderProgressBar_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React287.createElement(slots.root, slotProps.root, slots.bar && React287.createElement(slots.bar, slotProps.bar));
};

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/useProgressBarStyles.js
var progressBarClassNames = {
  root: "fui-ProgressBar",
  bar: "fui-ProgressBar__bar"
};
var ZERO_THRESHOLD = 0.01;
var useRootStyles17 = __styles2({
  root: {
    mc9l5x: "ftgm304",
    De3pzq: "f18f03hv",
    a9b677: "fly5x3f",
    B68tc82: "f1p9o1ba",
    Bmxbyg5: "f1sil6mw",
    Bpep1pd: "fu42dvn"
  },
  rounded: {
    Bbmb7ep: ["f1aa9q02", "f16jpd5f"],
    Beyfa6y: ["f16jpd5f", "f1aa9q02"],
    B7oj6ja: ["f1jar5jt", "fyu767a"],
    Btl43ni: ["fyu767a", "f1jar5jt"]
  },
  square: {
    Bbmb7ep: ["fzi6hpg", "fyowgf4"],
    Beyfa6y: ["fyowgf4", "fzi6hpg"],
    B7oj6ja: ["f3fg2lr", "f13av6d4"],
    Btl43ni: ["f13av6d4", "f3fg2lr"]
  },
  medium: {
    Bqenvij: "f4t8t6x"
  },
  large: {
    Bqenvij: "f6ywr7j"
  }
}, {
  d: [".ftgm304{display:block;}", ".f18f03hv{background-color:var(--colorNeutralBackground6);}", ".fly5x3f{width:100%;}", ".f1p9o1ba{overflow-x:hidden;}", ".f1sil6mw{overflow-y:hidden;}", ".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}", ".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}", ".fzi6hpg{border-bottom-right-radius:var(--borderRadiusNone);}", ".fyowgf4{border-bottom-left-radius:var(--borderRadiusNone);}", ".f3fg2lr{border-top-right-radius:var(--borderRadiusNone);}", ".f13av6d4{border-top-left-radius:var(--borderRadiusNone);}", ".f4t8t6x{height:2px;}", ".f6ywr7j{height:4px;}"],
  m: [["@media screen and (forced-colors: active){.fu42dvn{background-color:CanvasText;}}", {
    m: "screen and (forced-colors: active)"
  }]]
});
var useBarStyles = __styles2({
  base: {
    Bpep1pd: "f1neahkh",
    Bbmb7ep: ["f1d9uwra", "fzibvwi"],
    Beyfa6y: ["fzibvwi", "f1d9uwra"],
    B7oj6ja: ["fuoumxm", "f1vtqnvc"],
    Btl43ni: ["f1vtqnvc", "fuoumxm"],
    Bqenvij: "f1l02sjl"
  },
  nonZeroDeterminate: {
    Bmy1vo4: "fjt6zfz",
    B3o57yi: "f1wofebd",
    Bkqvd7p: "fv71qf3"
  },
  indeterminate: {
    B2u0y6b: "fa0wk36",
    qhf8xq: "f10pi13n",
    Bcmaq0h: ["fpo0yib", "f1u5hf6c"],
    Bv12yb3: ["fwd2bol", "f14gig94"],
    vin17d: "f1a27w2r",
    Ezkn3b: "f452v7t",
    w3vfg9: "f1cpbl36",
    Gqtpxc: "f4akx1t",
    B3vm3ge: "f18p5put"
  },
  brand: {
    De3pzq: "ftywsgz"
  },
  error: {
    De3pzq: "fdl5y0r"
  },
  warning: {
    De3pzq: "f1s438gw"
  },
  success: {
    De3pzq: "flxk52p"
  }
}, {
  m: [["@media screen and (forced-colors: active){.f1neahkh{background-color:Highlight;}}", {
    m: "screen and (forced-colors: active)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f4akx1t{-webkit-animation-duration:0.01ms;animation-duration:0.01ms;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }], ["@media screen and (prefers-reduced-motion: reduce){.f18p5put{-webkit-animation-iteration-count:1;animation-iteration-count:1;}}", {
    m: "screen and (prefers-reduced-motion: reduce)"
  }]],
  d: [".f1d9uwra{border-bottom-right-radius:inherit;}", ".fzibvwi{border-bottom-left-radius:inherit;}", ".fuoumxm{border-top-right-radius:inherit;}", ".f1vtqnvc{border-top-left-radius:inherit;}", ".f1l02sjl{height:100%;}", ".fjt6zfz{transition-property:width;}", ".f1wofebd{transition-duration:0.3s;}", ".fv71qf3{transition-timing-function:ease;}", ".fa0wk36{max-width:33%;}", ".f10pi13n{position:relative;}", ".fpo0yib{background-image:linear-gradient(\n      to right,\n      var(--colorNeutralBackground6) 0%,\n      var(--colorTransparentBackground) 50%,\n      var(--colorNeutralBackground6) 100%\n    );}", ".f1u5hf6c{background-image:linear-gradient(\n      to left,\n      var(--colorNeutralBackground6) 0%,\n      var(--colorTransparentBackground) 50%,\n      var(--colorNeutralBackground6) 100%\n    );}", ".fwd2bol{-webkit-animation-name:f1keuaan;animation-name:f1keuaan;}", ".f14gig94{-webkit-animation-name:f10x8f8u;animation-name:f10x8f8u;}", ".f1a27w2r{-webkit-animation-duration:3s;animation-duration:3s;}", ".f452v7t{-webkit-animation-timing-function:linear;animation-timing-function:linear;}", ".f1cpbl36{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;}", ".ftywsgz{background-color:var(--colorCompoundBrandBackground);}", ".fdl5y0r{background-color:var(--colorPaletteRedBackground3);}", ".f1s438gw{background-color:var(--colorPaletteDarkOrangeBackground3);}", ".flxk52p{background-color:var(--colorPaletteGreenBackground3);}"],
  k: ["@-webkit-keyframes f1keuaan{0%{left:-33%;}100%{left:100%;}}", "@-webkit-keyframes f10x8f8u{0%{right:-33%;}100%{right:100%;}}", "@keyframes f1keuaan{0%{left:-33%;}100%{left:100%;}}", "@keyframes f10x8f8u{0%{right:-33%;}100%{right:100%;}}"]
});
var useProgressBarStyles_unstable = (state) => {
  const {
    color,
    max: max3,
    shape,
    thickness,
    value
  } = state;
  const rootStyles = useRootStyles17();
  const barStyles = useBarStyles();
  state.root.className = mergeClasses(progressBarClassNames.root, rootStyles.root, rootStyles[shape], rootStyles[thickness], state.root.className);
  if (state.bar) {
    state.bar.className = mergeClasses(progressBarClassNames.bar, barStyles.base, barStyles.brand, value === void 0 && barStyles.indeterminate, value !== void 0 && value > ZERO_THRESHOLD && barStyles.nonZeroDeterminate, color && value !== void 0 && barStyles[color], state.bar.className);
  }
  if (state.bar && value !== void 0) {
    state.bar.style = {
      width: Math.min(100, Math.max(0, value / max3 * 100)) + "%",
      ...state.bar.style
    };
  }
  return state;
};

// node_modules/@fluentui/react-progress/lib/components/ProgressBar/ProgressBar.js
var ProgressBar = React288.forwardRef((props, ref) => {
  const state = useProgressBar_unstable(props, ref);
  useProgressBarStyles_unstable(state);
  const {
    useProgressBarStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderProgressBar_unstable(state);
});
ProgressBar.displayName = "ProgressBar";

// node_modules/@fluentui/react-progress/lib/components/ProgressField/ProgressField.js
var progressFieldClassNames = getDeprecatedFieldClassNames(progressBarClassNames.root);
var ProgressField = makeDeprecatedField(ProgressBar, {
  displayName: "ProgressField",
  mapProps: (props) => ({
    ...props,
    control: {
      ...props.control,
      validationState: props.validationState
    }
  })
});

// node_modules/@fluentui/react-overflow/lib/components/Overflow.js
var React290 = __toESM(require_react());

// node_modules/@fluentui/react-overflow/lib/overflowContext.js
var OverflowContext = createContext10(void 0);
var overflowContextDefaultValue = {
  itemVisibility: {},
  groupVisibility: {},
  hasOverflow: false,
  registerItem: () => () => null,
  updateOverflow: () => null,
  registerOverflowMenu: () => () => null
};
var useOverflowContext = (selector) => useContextSelector(OverflowContext, (ctx = overflowContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-overflow/lib/useOverflowContainer.js
var React289 = __toESM(require_react());

// node_modules/@fluentui/priority-overflow/lib/debounce.js
function debounce2(fn) {
  let pending;
  return () => {
    if (!pending) {
      pending = true;
      queueMicrotask(() => {
        pending = false;
        fn();
      });
    }
  };
}

// node_modules/@fluentui/priority-overflow/lib/priorityQueue.js
function createPriorityQueue(compare) {
  const arr = [];
  let size2 = 0;
  const left = (i) => {
    return 2 * i + 1;
  };
  const right = (i) => {
    return 2 * i + 2;
  };
  const parent = (i) => {
    return Math.floor((i - 1) / 2);
  };
  const swap = (a, b) => {
    const tmp = arr[a];
    arr[a] = arr[b];
    arr[b] = tmp;
  };
  const heapify = (i) => {
    let smallest = i;
    const l = left(i);
    const r = right(i);
    if (l < size2 && compare(arr[l], arr[smallest]) < 0) {
      smallest = l;
    }
    if (r < size2 && compare(arr[r], arr[smallest]) < 0) {
      smallest = r;
    }
    if (smallest !== i) {
      swap(smallest, i);
      heapify(smallest);
    }
  };
  const dequeue = () => {
    if (size2 === 0) {
      throw new Error("Priority queue empty");
    }
    const res = arr[0];
    arr[0] = arr[--size2];
    heapify(0);
    return res;
  };
  const peek = () => {
    if (size2 === 0) {
      return null;
    }
    return arr[0];
  };
  const enqueue = (item) => {
    arr[size2++] = item;
    let i = size2 - 1;
    let p = parent(i);
    while (i > 0 && compare(arr[p], arr[i]) > 0) {
      swap(p, i);
      i = p;
      p = parent(i);
    }
  };
  const contains = (item) => {
    const index = arr.indexOf(item);
    return index >= 0 && index < size2;
  };
  const remove = (item) => {
    const i = arr.indexOf(item);
    if (i === -1 || i >= size2) {
      return;
    }
    arr[i] = arr[--size2];
    heapify(i);
  };
  const clear = () => {
    size2 = 0;
  };
  const all = () => {
    return arr.slice(0, size2);
  };
  return {
    all,
    clear,
    contains,
    dequeue,
    enqueue,
    peek,
    remove,
    size: () => size2
  };
}

// node_modules/@fluentui/priority-overflow/lib/overflowManager.js
function createOverflowManager() {
  let container;
  let overflowMenu;
  let observing = false;
  let forceDispatch = false;
  const options = {
    padding: 10,
    overflowAxis: "horizontal",
    overflowDirection: "end",
    minimumVisible: 0,
    onUpdateItemVisibility: () => void 0,
    onUpdateOverflow: () => void 0
  };
  const overflowItems = {};
  const overflowGroups = {};
  const resizeObserver = new ResizeObserver((entries) => {
    if (!entries[0] || !container) {
      return;
    }
    update();
  });
  const invisibleItemQueue = createPriorityQueue((a, b) => {
    const itemA = overflowItems[a];
    const itemB = overflowItems[b];
    const priority = itemB.priority - itemA.priority;
    if (priority !== 0) {
      return priority;
    }
    const positionStatusBit = options.overflowDirection === "end" ? Node.DOCUMENT_POSITION_FOLLOWING : Node.DOCUMENT_POSITION_PRECEDING;
    return itemA.element.compareDocumentPosition(itemB.element) & positionStatusBit ? -1 : 1;
  });
  const visibleItemQueue = createPriorityQueue((a, b) => {
    const itemA = overflowItems[a];
    const itemB = overflowItems[b];
    const priority = itemA.priority - itemB.priority;
    if (priority !== 0) {
      return priority;
    }
    const positionStatusBit = options.overflowDirection === "end" ? Node.DOCUMENT_POSITION_PRECEDING : Node.DOCUMENT_POSITION_FOLLOWING;
    return itemA.element.compareDocumentPosition(itemB.element) & positionStatusBit ? -1 : 1;
  });
  const getOffsetSize = (el) => {
    return options.overflowAxis === "horizontal" ? el.offsetWidth : el.offsetHeight;
  };
  const makeItemVisible = () => {
    const nextVisible = invisibleItemQueue.dequeue();
    visibleItemQueue.enqueue(nextVisible);
    const item = overflowItems[nextVisible];
    options.onUpdateItemVisibility({
      item,
      visible: true
    });
    if (item.groupId) {
      overflowGroups[item.groupId].invisibleItemIds.delete(item.id);
      overflowGroups[item.groupId].visibleItemIds.add(item.id);
    }
    return getOffsetSize(item.element);
  };
  const makeItemInvisible = () => {
    const nextInvisible = visibleItemQueue.dequeue();
    invisibleItemQueue.enqueue(nextInvisible);
    const item = overflowItems[nextInvisible];
    const width = getOffsetSize(item.element);
    options.onUpdateItemVisibility({
      item,
      visible: false
    });
    if (item.groupId) {
      overflowGroups[item.groupId].visibleItemIds.delete(item.id);
      overflowGroups[item.groupId].invisibleItemIds.add(item.id);
    }
    return width;
  };
  const dispatchOverflowUpdate = () => {
    const visibleItemIds = visibleItemQueue.all();
    const invisibleItemIds = invisibleItemQueue.all();
    const visibleItems = visibleItemIds.map((itemId) => overflowItems[itemId]);
    const invisibleItems = invisibleItemIds.map((itemId) => overflowItems[itemId]);
    const groupVisibility = {};
    Object.entries(overflowGroups).forEach(([groupId, groupState]) => {
      if (groupState.invisibleItemIds.size && groupState.visibleItemIds.size) {
        groupVisibility[groupId] = "overflow";
      } else if (groupState.visibleItemIds.size === 0) {
        groupVisibility[groupId] = "hidden";
      } else {
        groupVisibility[groupId] = "visible";
      }
    });
    options.onUpdateOverflow({
      visibleItems,
      invisibleItems,
      groupVisibility
    });
  };
  const processOverflowItems = () => {
    if (!container) {
      return false;
    }
    const availableSize = getOffsetSize(container) - options.padding;
    const overflowMenuOffset = overflowMenu ? getOffsetSize(overflowMenu) : 0;
    const visibleTop = visibleItemQueue.peek();
    const invisibleTop = invisibleItemQueue.peek();
    const visibleItemIds = visibleItemQueue.all();
    let currentWidth = visibleItemIds.reduce((sum, visibleItemId) => {
      const child = overflowItems[visibleItemId].element;
      return sum + getOffsetSize(child);
    }, 0);
    while (currentWidth < availableSize && invisibleItemQueue.size() > 0) {
      currentWidth += makeItemVisible();
    }
    while (currentWidth > availableSize && visibleItemQueue.size() > 0) {
      if (visibleItemQueue.size() <= options.minimumVisible) {
        break;
      }
      currentWidth -= makeItemInvisible();
    }
    if (visibleItemQueue.size() > options.minimumVisible && invisibleItemQueue.size() > 0 && currentWidth + overflowMenuOffset > availableSize) {
      makeItemInvisible();
    }
    if (visibleItemQueue.peek() !== visibleTop || invisibleItemQueue.peek() !== invisibleTop) {
      return true;
    }
    return false;
  };
  const forceUpdate = () => {
    if (processOverflowItems() || forceDispatch) {
      forceDispatch = false;
      dispatchOverflowUpdate();
    }
  };
  const update = debounce2(forceUpdate);
  const observe = (observedContainer, userOptions) => {
    Object.assign(options, userOptions);
    observing = true;
    Object.values(overflowItems).forEach((item) => visibleItemQueue.enqueue(item.id));
    container = observedContainer;
    resizeObserver.observe(container);
  };
  const disconnect = () => {
    observing = false;
    resizeObserver.disconnect();
  };
  const addItem = (item) => {
    if (overflowItems[item.id]) {
      return;
    }
    overflowItems[item.id] = item;
    if (observing) {
      forceDispatch = true;
      visibleItemQueue.enqueue(item.id);
    }
    if (item.groupId) {
      if (!overflowGroups[item.groupId]) {
        overflowGroups[item.groupId] = {
          visibleItemIds: /* @__PURE__ */ new Set(),
          invisibleItemIds: /* @__PURE__ */ new Set()
        };
      }
      overflowGroups[item.groupId].visibleItemIds.add(item.id);
    }
    update();
  };
  const addOverflowMenu = (el) => {
    overflowMenu = el;
  };
  const removeOverflowMenu = () => {
    overflowMenu = void 0;
  };
  const removeItem = (itemId) => {
    if (!overflowItems[itemId]) {
      return;
    }
    const item = overflowItems[itemId];
    visibleItemQueue.remove(itemId);
    invisibleItemQueue.remove(itemId);
    if (item.groupId) {
      overflowGroups[item.groupId].visibleItemIds.delete(item.id);
      overflowGroups[item.groupId].invisibleItemIds.delete(item.id);
    }
    delete overflowItems[itemId];
    update();
  };
  return {
    addItem,
    disconnect,
    forceUpdate,
    observe,
    removeItem,
    update,
    addOverflowMenu,
    removeOverflowMenu
  };
}

// node_modules/@fluentui/react-overflow/lib/constants.js
var DATA_OVERFLOWING = "data-overflowing";
var DATA_OVERFLOW_ITEM = "data-overflow-item";
var DATA_OVERFLOW_MENU = "data-overflow-menu";

// node_modules/@fluentui/react-overflow/lib/useOverflowContainer.js
var useOverflowContainer = (update, options) => {
  const {
    overflowAxis,
    overflowDirection,
    padding,
    minimumVisible,
    onUpdateItemVisibility
  } = options;
  const containerRef = React289.useRef(null);
  const updateOverflowItems = useEventCallback(update);
  const [overflowManager] = React289.useState(() => canUseDOM() ? createOverflowManager() : null);
  useIsomorphicLayoutEffect(() => {
    if (!containerRef.current) {
      return;
    }
    if (overflowManager) {
      overflowManager.observe(containerRef.current, {
        overflowDirection: overflowDirection !== null && overflowDirection !== void 0 ? overflowDirection : "end",
        overflowAxis: overflowAxis !== null && overflowAxis !== void 0 ? overflowAxis : "horizontal",
        padding: padding !== null && padding !== void 0 ? padding : 10,
        minimumVisible: minimumVisible !== null && minimumVisible !== void 0 ? minimumVisible : 0,
        onUpdateItemVisibility: onUpdateItemVisibility !== null && onUpdateItemVisibility !== void 0 ? onUpdateItemVisibility : () => void 0,
        onUpdateOverflow: updateOverflowItems !== null && updateOverflowItems !== void 0 ? updateOverflowItems : () => void 0
      });
      return () => {
        overflowManager.disconnect();
      };
    }
  }, [updateOverflowItems, overflowManager, overflowDirection, overflowAxis, padding, minimumVisible, onUpdateItemVisibility]);
  const registerItem = React289.useCallback((item) => {
    overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.addItem(item);
    item.element.setAttribute(DATA_OVERFLOW_ITEM, "");
    return () => {
      item.element.removeAttribute(DATA_OVERFLOWING);
      item.element.removeAttribute(DATA_OVERFLOW_ITEM);
      overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.removeItem(item.id);
    };
  }, [overflowManager]);
  const updateOverflow = React289.useCallback(() => {
    overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.update();
  }, [overflowManager]);
  const registerOverflowMenu = React289.useCallback((el) => {
    overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.addOverflowMenu(el);
    el.setAttribute(DATA_OVERFLOW_MENU, "");
    return () => {
      overflowManager === null || overflowManager === void 0 ? void 0 : overflowManager.removeOverflowMenu();
      el.removeAttribute(DATA_OVERFLOW_MENU);
    };
  }, [overflowManager]);
  return {
    containerRef,
    registerItem,
    updateOverflow,
    registerOverflowMenu
  };
};
var updateVisibilityAttribute = ({
  item,
  visible
}) => {
  if (visible) {
    item.element.removeAttribute(DATA_OVERFLOWING);
  } else {
    item.element.setAttribute(DATA_OVERFLOWING, "");
  }
};

// node_modules/@fluentui/react-overflow/lib/components/Overflow.js
var useStyles52 = __styles2({
  overflowMenu: {
    Brvla84: "fyfkpbf"
  },
  overflowingItems: {
    Hevnzl: "ftz08xh"
  }
}, {
  d: [".fyfkpbf [data-overflow-menu]{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}", ".ftz08xh>[data-overflowing]{display:none;}"]
});
var Overflow = React290.forwardRef((props, ref) => {
  const styles = useStyles52();
  const {
    children,
    minimumVisible,
    overflowAxis = "horizontal",
    overflowDirection,
    padding
  } = props;
  const [hasOverflow, setHasOverflow] = React290.useState(false);
  const [itemVisibility, setItemVisibility] = React290.useState({});
  const [groupVisibility, setGroupVisibility] = React290.useState({});
  const update = (data) => {
    setHasOverflow(() => data.invisibleItems.length > 0);
    setItemVisibility(() => {
      const newState = {};
      data.visibleItems.forEach((x) => newState[x.id] = true);
      data.invisibleItems.forEach((x) => newState[x.id] = false);
      return newState;
    });
    setGroupVisibility(data.groupVisibility);
  };
  const {
    containerRef,
    registerItem,
    updateOverflow,
    registerOverflowMenu
  } = useOverflowContainer(update, {
    overflowDirection,
    overflowAxis,
    padding,
    minimumVisible,
    onUpdateItemVisibility: updateVisibilityAttribute
  });
  const clonedChild = applyTriggerPropsToChildren(children, {
    ref: useMergedRefs(containerRef, ref),
    className: mergeClasses(styles.overflowMenu, styles.overflowingItems, children.props.className)
  });
  return React290.createElement(OverflowContext.Provider, {
    value: {
      itemVisibility,
      groupVisibility,
      hasOverflow,
      registerItem,
      updateOverflow,
      registerOverflowMenu
    }
  }, clonedChild);
});

// node_modules/@fluentui/react-overflow/lib/useIsOverflowGroupVisible.js
function useIsOverflowGroupVisible(id) {
  return useOverflowContext((ctx) => ctx.groupVisibility[id]);
}

// node_modules/@fluentui/react-overflow/lib/useIsOverflowItemVisible.js
function useIsOverflowItemVisible(id) {
  return !!useOverflowContext((ctx) => ctx.itemVisibility[id]);
}

// node_modules/@fluentui/react-overflow/lib/useOverflowCount.js
var useOverflowCount = () => useOverflowContext((v) => {
  return Object.entries(v.itemVisibility).reduce((acc, [id, visible]) => {
    if (!visible) {
      acc++;
    }
    return acc;
  }, 0);
});

// node_modules/@fluentui/react-overflow/lib/useOverflowItem.js
var React291 = __toESM(require_react());
function useOverflowItem(id, priority, groupId) {
  const ref = React291.useRef(null);
  const registerItem = useOverflowContext((v) => v.registerItem);
  useIsomorphicLayoutEffect(() => {
    if (ref.current) {
      return registerItem({
        element: ref.current,
        id,
        priority: priority !== null && priority !== void 0 ? priority : 0,
        groupId
      });
    }
  }, [id, priority, registerItem, groupId]);
  return ref;
}

// node_modules/@fluentui/react-overflow/lib/useOverflowMenu.js
var React292 = __toESM(require_react());
function useOverflowMenu(id) {
  const elementId = useId2("overflow-menu", id);
  const overflowCount = useOverflowCount();
  const registerOverflowMenu = useOverflowContext((v) => v.registerOverflowMenu);
  const updateOverflow = useOverflowContext((v) => v.updateOverflow);
  const ref = React292.useRef(null);
  const isOverflowing = overflowCount > 0;
  useIsomorphicLayoutEffect(() => {
    if (ref.current) {
      return registerOverflowMenu(ref.current);
    }
  }, [registerOverflowMenu, isOverflowing, elementId]);
  useIsomorphicLayoutEffect(() => {
    if (isOverflowing) {
      updateOverflow();
    }
  }, [isOverflowing, updateOverflow, ref]);
  return {
    ref,
    overflowCount,
    isOverflowing
  };
}

// node_modules/@fluentui/react-overflow/lib/components/OverflowItem/OverflowItem.js
var React293 = __toESM(require_react());
var OverflowItem = React293.forwardRef((props, ref) => {
  const {
    id,
    groupId,
    priority,
    children
  } = props;
  const containerRef = useOverflowItem(id, priority, groupId);
  return applyTriggerPropsToChildren(children, {
    ref: useMergedRefs(containerRef, ref)
  });
});

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/Toolbar.js
var React296 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbar.js
var React294 = __toESM(require_react());
var useToolbar_unstable = (props, ref) => {
  const {
    size: size2 = "medium",
    vertical = false
  } = props;
  const arrowNavigationProps = useArrowNavigationGroup({
    circular: true,
    axis: "both"
  });
  const initialState = {
    size: size2,
    vertical,
    // TODO add appropriate props/defaults
    components: {
      // TODO add each slot's element type or component
      root: "div"
    },
    // TODO add appropriate slots, for example:
    // mySlot: resolveShorthand(props.mySlot),
    root: getNativeElementProps("div", {
      role: "toolbar",
      ref,
      ...vertical && {
        "aria-orientation": "vertical"
      },
      ...arrowNavigationProps,
      ...props
    })
  };
  const [checkedValues, onCheckedValueChange] = useToolbarSelectableState({
    checkedValues: props.checkedValues,
    defaultCheckedValues: props.defaultCheckedValues,
    onCheckedValueChange: props.onCheckedValueChange
  });
  const handleToggleButton = useEventCallback((e, name, value, checked) => {
    if (name && value) {
      const checkedItems = (checkedValues === null || checkedValues === void 0 ? void 0 : checkedValues[name]) || [];
      const newCheckedItems = [...checkedItems];
      if (checked) {
        newCheckedItems.splice(newCheckedItems.indexOf(value), 1);
      } else {
        newCheckedItems.push(value);
      }
      onCheckedValueChange === null || onCheckedValueChange === void 0 ? void 0 : onCheckedValueChange(e, {
        name,
        checkedItems: newCheckedItems
      });
    }
  });
  const handleRadio = useEventCallback((e, name, value, checked) => {
    if (name && value) {
      onCheckedValueChange === null || onCheckedValueChange === void 0 ? void 0 : onCheckedValueChange(e, {
        name,
        checkedItems: [value]
      });
    }
  });
  return {
    ...initialState,
    handleToggleButton,
    handleRadio,
    checkedValues: checkedValues !== null && checkedValues !== void 0 ? checkedValues : {}
  };
};
var useToolbarSelectableState = (state) => {
  const [checkedValues, setCheckedValues] = useControllableState({
    state: state.checkedValues,
    defaultState: state.defaultCheckedValues,
    initialState: {}
  });
  const {
    onCheckedValueChange: onCheckedValueChangeOriginal
  } = state;
  const onCheckedValueChange = useEventCallback((e, {
    name,
    checkedItems
  }) => {
    if (onCheckedValueChangeOriginal) {
      onCheckedValueChangeOriginal(e, {
        name,
        checkedItems
      });
    }
    setCheckedValues((s) => {
      return s ? {
        ...s,
        [name]: checkedItems
      } : {
        [name]: checkedItems
      };
    });
  });
  return [checkedValues, onCheckedValueChange];
};

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/renderToolbar.js
var React295 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/ToolbarContext.js
var ToolbarContext = createContext10(void 0);
var toolbarContextDefaultValue = {
  size: "medium",
  handleToggleButton: () => null,
  handleRadio: () => null,
  vertical: false,
  checkedValues: {}
};
var useToolbarContext_unstable = (selector) => useContextSelector(ToolbarContext, (ctx = toolbarContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/renderToolbar.js
var renderToolbar_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React295.createElement(ToolbarContext.Provider, {
    value: contextValues.toolbar
  }, React295.createElement(slots.root, slotProps.root, slotProps.root.children));
};

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbarStyles.js
var toolbarClassNames = {
  root: "fui-Toolbar"
};
var useStyles53 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    z8tnut: "f10ra9hq",
    z189sj: ["f19lj068", "f177v4lu"],
    Byoj8tv: "f1y2xyjm",
    uwmqm3: ["f177v4lu", "f19lj068"],
    i8kkvl: "f4px1ci",
    Belr9w4: "fn67r4l"
  },
  vertical: {
    Beiy3e4: "f1vx9l62",
    a9b677: "f1acs6jw"
  },
  small: {
    Bqenvij: "f1d2rq10"
  },
  medium: {
    Bqenvij: "fbhnoac"
  },
  large: {
    Bqenvij: "ff2sm71"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f10ra9hq{padding-top:4px;}", ".f19lj068{padding-right:8px;}", ".f177v4lu{padding-left:8px;}", ".f1y2xyjm{padding-bottom:4px;}", ".f4px1ci{-webkit-column-gap:8px;column-gap:8px;}", ".fn67r4l{row-gap:8px;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".f1acs6jw{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;}", ".f1d2rq10{height:32px;}", ".fbhnoac{height:40px;}", ".ff2sm71{height:48px;}"]
});
var useToolbarStyles_unstable = (state) => {
  const styles = useStyles53();
  const {
    vertical,
    size: size2
  } = state;
  state.root.className = mergeClasses(toolbarClassNames.root, styles.root, vertical && styles.vertical, size2 === "small" && !vertical && styles.small, size2 === "medium" && !vertical && styles.medium, size2 === "large" && !vertical && styles.large, state.root.className);
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbarContextValues.js
function useToolbarContextValues_unstable(state) {
  const {
    size: size2,
    handleToggleButton,
    vertical,
    checkedValues,
    handleRadio
  } = state;
  const toolbar = {
    size: size2,
    vertical,
    handleToggleButton,
    handleRadio,
    checkedValues
  };
  return {
    toolbar
  };
}

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/Toolbar.js
var Toolbar = React296.forwardRef((props, ref) => {
  const state = useToolbar_unstable(props, ref);
  const contextValues = useToolbarContextValues_unstable(state);
  useToolbarStyles_unstable(state);
  const {
    useToolbarStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderToolbar_unstable(state, contextValues);
});
Toolbar.displayName = "Toolbar";

// node_modules/@fluentui/react-toolbar/lib/components/Toolbar/Toolbar.types.js
var React297 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/ToolbarButton.js
var React299 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/useToolbarButtonStyles.js
var useBaseStyles2 = __styles2({
  vertical: {
    Beiy3e4: "f1vx9l62"
  },
  verticalIcon: {
    Be2twd7: "f1rt2boy"
  }
}, {
  d: [".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".f1rt2boy{font-size:24px;}"]
});
var useToolbarButtonStyles_unstable = (state) => {
  useButtonStyles_unstable(state);
  const buttonStyles = useBaseStyles2();
  state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);
  if (state.icon) {
    state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);
  }
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/useToolbarButton.js
var React298 = __toESM(require_react());
var useToolbarButton_unstable = (props, ref) => {
  const {
    vertical = false,
    ...buttonProps
  } = props;
  const state = useButton_unstable({
    appearance: "subtle",
    ...buttonProps
  }, ref);
  return {
    vertical,
    ...state
  };
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/ToolbarButton.js
var ToolbarButton = React299.forwardRef((props, ref) => {
  const state = useToolbarButton_unstable(props, ref);
  useToolbarButtonStyles_unstable(state);
  const {
    useToolbarButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderButton_unstable(state);
});
ToolbarButton.displayName = "ToolbarButton";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarDivider/ToolbarDivider.js
var React301 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarDivider/useToolbarDividerStyles.js
var useBaseStyles3 = __styles2({
  root: {
    mc9l5x: "ftuwxu6",
    B2u0y6b: "f1lwjmbk"
  },
  vertical: {
    B2u0y6b: "fe668z"
  }
}, {
  d: [".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".f1lwjmbk{max-width:1px;}", ".fe668z{max-width:initial;}"]
});
var useToolbarDividerStyles_unstable = (state) => {
  useDividerStyles_unstable(state);
  const {
    vertical
  } = state;
  const toolbarDividerStyles = useBaseStyles3();
  state.root.className = mergeClasses(state.root.className, toolbarDividerStyles.root, !vertical && toolbarDividerStyles.vertical);
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarDivider/useToolbarDivider.js
var React300 = __toESM(require_react());
var useToolbarDivider_unstable = (props, ref) => {
  const vertical = useToolbarContext_unstable((ctx) => ctx.vertical);
  return useDivider_unstable({
    vertical: !vertical,
    ...props
  }, ref);
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarDivider/ToolbarDivider.js
var ToolbarDivider = React301.forwardRef((props, ref) => {
  const state = useToolbarDivider_unstable(props, ref);
  useToolbarDividerStyles_unstable(state);
  const {
    useToolbarDividerStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDivider_unstable(state);
});
ToolbarDivider.displayName = "ToolbarDivider";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarToggleButton/ToolbarToggleButton.js
var React303 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarToggleButton/useToolbarToggleButton.js
var React302 = __toESM(require_react());
var useToolbarToggleButton_unstable = (props, ref) => {
  const handleToggleButton = useToolbarContext_unstable((ctx) => ctx.handleToggleButton);
  const checked = useToolbarContext_unstable((ctx) => {
    var _ctx_checkedValues_props_name;
    return !!((_ctx_checkedValues_props_name = ctx.checkedValues[props.name]) === null || _ctx_checkedValues_props_name === void 0 ? void 0 : _ctx_checkedValues_props_name.includes(props.value));
  });
  const size2 = useToolbarContext_unstable((ctx) => ctx.size);
  const {
    onClick: onClickOriginal
  } = props;
  const toggleButtonState = useToggleButton_unstable({
    size: size2,
    checked,
    ...props
  }, ref);
  const state = {
    ...toggleButtonState,
    name: props.name,
    value: props.value
  };
  const handleOnClick = (e) => {
    if (state.disabled) {
      e.preventDefault();
      e.stopPropagation();
      return;
    }
    handleToggleButton === null || handleToggleButton === void 0 ? void 0 : handleToggleButton(e, state.name, state.value, state.checked);
    onClickOriginal === null || onClickOriginal === void 0 ? void 0 : onClickOriginal(e);
  };
  state.root.onClick = handleOnClick;
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarToggleButton/useToolbarToggleButtonStyles.js
var useBaseStyles4 = __styles2({
  selected: {
    sj55zd: "f16muhyy"
  }
}, {
  d: [".f16muhyy{color:var(--colorBrandForeground1);}"]
});
var useToolbarToggleButtonStyles_unstable = (state) => {
  useToggleButtonStyles_unstable(state);
  const toggleButtonStyles = useBaseStyles4();
  state.root.className = mergeClasses(state.root.className, state.checked && toggleButtonStyles.selected);
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarToggleButton/ToolbarToggleButton.js
var ToolbarToggleButton = React303.forwardRef((props, ref) => {
  const state = useToolbarToggleButton_unstable(props, ref);
  useToolbarToggleButtonStyles_unstable(state);
  const {
    useToolbarToggleButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderButton_unstable(state);
});
ToolbarToggleButton.displayName = "ToolbarToggleButton";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioButton/ToolbarRadioButton.js
var React305 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioButton/useToolbarRadioButton.js
var React304 = __toESM(require_react());
var useToolbarRadioButton_unstable = (props, ref) => {
  const handleRadio = useToolbarContext_unstable((ctx) => ctx.handleRadio);
  const checked = useToolbarContext_unstable((ctx) => {
    var _ctx_checkedValues_props_name;
    return !!((_ctx_checkedValues_props_name = ctx.checkedValues[props.name]) === null || _ctx_checkedValues_props_name === void 0 ? void 0 : _ctx_checkedValues_props_name.includes(props.value));
  });
  const size2 = useToolbarContext_unstable((ctx) => ctx.size);
  const {
    onClick: onClickOriginal
  } = props;
  const toggleButtonState = useToggleButton_unstable({
    size: size2,
    checked,
    role: "radio",
    "aria-checked": checked,
    ...props
  }, ref);
  const state = {
    ...toggleButtonState,
    name: props.name,
    value: props.value
  };
  const handleOnClick = useEventCallback((e) => {
    handleRadio === null || handleRadio === void 0 ? void 0 : handleRadio(e, state.name, state.value, state.checked);
    onClickOriginal === null || onClickOriginal === void 0 ? void 0 : onClickOriginal(e);
  });
  state.root["aria-pressed"] = void 0;
  state.root.onClick = handleOnClick;
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioButton/useToolbarRadioButtonStyles.js
var useBaseStyles5 = __styles2({
  selected: {
    sj55zd: "f16muhyy"
  }
}, {
  d: [".f16muhyy{color:var(--colorBrandForeground1);}"]
});
var useToolbarRadioButtonStyles_unstable = (state) => {
  useToggleButtonStyles_unstable(state);
  const toggleButtonStyles = useBaseStyles5();
  state.root.className = mergeClasses(state.root.className, state.checked && toggleButtonStyles.selected);
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioButton/ToolbarRadioButton.js
var ToolbarRadioButton = React305.forwardRef((props, ref) => {
  const state = useToolbarRadioButton_unstable(props, ref);
  useToolbarRadioButtonStyles_unstable(state);
  const {
    useToolbarRadioButtonStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderButton_unstable(state);
});
ToolbarRadioButton.displayName = "ToolbarRadioButton";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/ToolbarGroup.js
var React308 = __toESM(require_react());

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/useToolbarGroup.js
var React306 = __toESM(require_react());
var useToolbarGroup_unstable = (props, ref) => {
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      role: "presentation",
      ...props
    })
  };
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/useToolbarGroupStyles.js
var toolbarGroupClassNames = {
  root: "fui-ToolbarGroup"
};
var useStyles54 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    i8kkvl: "f4px1ci",
    Belr9w4: "fn67r4l"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f4px1ci{-webkit-column-gap:8px;column-gap:8px;}", ".fn67r4l{row-gap:8px;}"]
});
var useToolbarGroupStyles_unstable = (state) => {
  const styles = useStyles54();
  state.root.className = mergeClasses(toolbarGroupClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/renderToolbarGroup.js
var React307 = __toESM(require_react());
var renderToolbarGroup_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React307.createElement(slots.root, slotProps.root, slotProps.root.children);
};

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/ToolbarGroup.js
var ToolbarGroup = React308.forwardRef((props, ref) => {
  const state = useToolbarGroup_unstable(props, ref);
  useToolbarGroupStyles_unstable(state);
  const {
    useToolbarGroupStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderToolbarGroup_unstable(state);
});
ToolbarGroup.displayName = "ToolbarGroup";

// node_modules/@fluentui/react-toolbar/lib/components/ToolbarRadioGroup/ToolbarRadioGroup.js
var React309 = __toESM(require_react());
var ToolbarRadioGroup = React309.forwardRef((props, ref) => {
  const state = useToolbarGroup_unstable({
    role: "radiogroup",
    ...props
  }, ref);
  useToolbarGroupStyles_unstable(state);
  const {
    useToolbarGroupStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderToolbarGroup_unstable(state);
});
ToolbarRadioGroup.displayName = "ToolbarRadioGroup";

// node_modules/@fluentui/react-table/lib/hooks/types.js
var React311 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/hooks/useTableFeatures.js
var React323 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/hooks/useTableSelection.js
var React313 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/hooks/selectionManager.js
var React312 = __toESM(require_react());
function createSelectionManager(mode, onSelectionChange = () => void 0) {
  const managerFactory = mode === "multiselect" ? createMultipleSelectionManager : createSingleSelectionManager;
  return managerFactory(onSelectionChange);
}
function createMultipleSelectionManager(onSelectionChange) {
  const toggleAllItems = (e, itemIds, selectedItems) => {
    const allItemsSelected = itemIds.every((itemId) => selectedItems.has(itemId));
    if (allItemsSelected) {
      selectedItems.clear();
    } else {
      itemIds.forEach((itemId) => selectedItems.add(itemId));
    }
    onSelectionChange(e, new Set(selectedItems));
  };
  const toggleItem = (e, itemId, selectedItems) => {
    if (selectedItems.has(itemId)) {
      selectedItems.delete(itemId);
    } else {
      selectedItems.add(itemId);
    }
    onSelectionChange(e, new Set(selectedItems));
  };
  const selectItem = (e, itemId, selectedItems) => {
    selectedItems.add(itemId);
    onSelectionChange(e, new Set(selectedItems));
  };
  const deselectItem = (e, itemId, selectedItems) => {
    selectedItems.delete(itemId);
    onSelectionChange(e, new Set(selectedItems));
  };
  const clearItems = (e) => {
    onSelectionChange(e, /* @__PURE__ */ new Set());
  };
  const isSelected = (itemId, selectedItems) => {
    return selectedItems.has(itemId);
  };
  return {
    toggleItem,
    selectItem,
    deselectItem,
    clearItems,
    isSelected,
    toggleAllItems
  };
}
function createSingleSelectionManager(onSelectionChange) {
  const toggleItem = (e, itemId) => {
    onSelectionChange(e, /* @__PURE__ */ new Set([itemId]));
  };
  const clearItems = (e) => {
    onSelectionChange(e, /* @__PURE__ */ new Set());
  };
  const isSelected = (itemId, selectedItems) => {
    return selectedItems.has(itemId);
  };
  const selectItem = (e, itemId) => {
    onSelectionChange(e, /* @__PURE__ */ new Set([itemId]));
  };
  return {
    deselectItem: clearItems,
    selectItem,
    toggleAllItems: () => {
      if (true) {
        throw new Error("[react-table]: `toggleAllItems` should not be used in single selection mode");
      }
      return void 0;
    },
    toggleItem,
    clearItems,
    isSelected
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableSelection.js
var noop2 = () => void 0;
var defaultTableSelectionState = {
  allRowsSelected: false,
  clearRows: noop2,
  deselectRow: noop2,
  isRowSelected: () => false,
  selectRow: noop2,
  selectedRows: /* @__PURE__ */ new Set(),
  someRowsSelected: false,
  toggleAllRows: noop2,
  toggleRow: noop2,
  selectionMode: "multiselect"
};
function useTableSelection(options) {
  return (tableState) => useTableSelectionState(tableState, options);
}
function useTableSelectionState(tableState, options) {
  const {
    items,
    getRowId
  } = tableState;
  const {
    selectionMode,
    defaultSelectedItems,
    selectedItems,
    onSelectionChange
  } = options;
  const [selected, setSelected] = useControllableState({
    initialState: /* @__PURE__ */ new Set(),
    defaultState: React313.useMemo(() => defaultSelectedItems && createSetFromIterable(defaultSelectedItems), [defaultSelectedItems]),
    state: React313.useMemo(() => selectedItems && createSetFromIterable(selectedItems), [selectedItems])
  });
  const selectionManager = React313.useMemo(() => {
    return createSelectionManager(selectionMode, (e, newSelectedItems) => {
      setSelected(() => {
        onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(e, {
          selectedItems: newSelectedItems
        });
        return newSelectedItems;
      });
    });
  }, [onSelectionChange, selectionMode, setSelected]);
  const toggleAllRows = useEventCallback((e) => {
    var _getRowId;
    selectionManager.toggleAllItems(e, items.map((item, i) => {
      return (_getRowId = getRowId === null || getRowId === void 0 ? void 0 : getRowId(item)) !== null && _getRowId !== void 0 ? _getRowId : i;
    }), selected);
  });
  const toggleRow = useEventCallback((e, rowId) => selectionManager.toggleItem(e, rowId, selected));
  const deselectRow = useEventCallback((e, rowId) => selectionManager.deselectItem(e, rowId, selected));
  const selectRow = useEventCallback((e, rowId) => selectionManager.selectItem(e, rowId, selected));
  const isRowSelected = (rowId) => selectionManager.isSelected(rowId, selected);
  return {
    ...tableState,
    selection: {
      selectionMode,
      someRowsSelected: selected.size > 0,
      allRowsSelected: selectionMode === "single" ? selected.size > 0 : selected.size === items.length,
      selectedRows: selected,
      toggleRow,
      toggleAllRows,
      clearRows: selectionManager.clearItems,
      deselectRow,
      selectRow,
      isRowSelected
    }
  };
}
function createSetFromIterable(iterable) {
  return iterable instanceof Set ? iterable : new Set(iterable);
}

// node_modules/@fluentui/react-table/lib/hooks/useTableSort.js
var React314 = __toESM(require_react());
var noop3 = () => void 0;
var defaultTableSortState = {
  getSortDirection: () => "ascending",
  setColumnSort: noop3,
  sort: (rows) => [...rows],
  sortColumn: void 0,
  sortDirection: "ascending",
  toggleColumnSort: noop3
};
function useTableSort(options) {
  return (tableState) => useTableSortState(tableState, options);
}
function useTableSortState(tableState, options) {
  const {
    columns
  } = tableState;
  const {
    sortState,
    defaultSortState,
    onSortChange
  } = options;
  const [sorted, setSorted] = useControllableState({
    initialState: {
      sortDirection: "ascending",
      sortColumn: void 0
    },
    defaultState: defaultSortState,
    state: sortState
  });
  const {
    sortColumn,
    sortDirection
  } = sorted;
  const toggleColumnSort = (e, columnId) => {
    setSorted((s) => {
      const newState = {
        ...s,
        sortColumn: columnId
      };
      if (s.sortColumn === columnId) {
        newState.sortDirection = s.sortDirection === "ascending" ? "descending" : "ascending";
      } else {
        newState.sortDirection = "ascending";
      }
      onSortChange === null || onSortChange === void 0 ? void 0 : onSortChange(e, newState);
      return newState;
    });
  };
  const setColumnSort = (e, nextSortColumn, nextSortDirection) => {
    const newState = {
      sortColumn: nextSortColumn,
      sortDirection: nextSortDirection
    };
    onSortChange === null || onSortChange === void 0 ? void 0 : onSortChange(e, newState);
    setSorted(newState);
  };
  const sort = (rows) => {
    return rows.slice().sort((a, b) => {
      const sortColumnDef = columns.find((column) => column.columnId === sortColumn);
      if (!(sortColumnDef === null || sortColumnDef === void 0 ? void 0 : sortColumnDef.compare)) {
        return 0;
      }
      const mod = sortDirection === "ascending" ? 1 : -1;
      return sortColumnDef.compare(a.item, b.item) * mod;
    });
  };
  const getSortDirection = (columnId) => {
    return sortColumn === columnId ? sortDirection : void 0;
  };
  return {
    ...tableState,
    sort: {
      sort,
      sortColumn,
      sortDirection,
      setColumnSort,
      toggleColumnSort,
      getSortDirection
    }
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnSizing.js
var React322 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/TableResizeHandle.js
var React317 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/useTableResizeHandle.js
var React315 = __toESM(require_react());
var useTableResizeHandle_unstable = (props, ref) => {
  const onClick = useEventCallback((event) => {
    var _props_onClick;
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);
    event.stopPropagation();
  });
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props,
      onClick
    })
  };
};

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/renderTableResizeHandle.js
var React316 = __toESM(require_react());
var renderTableResizeHandle_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React316.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/useTableResizeHandleStyles.js
var tableResizeHandleClassNames = {
  root: "fui-TableResizeHandle"
};
var useStyles55 = __styles2({
  root: {
    qhf8xq: "f1euv43f",
    j35jbq: ["f1e31b4d", "f1vgc2s3"],
    Bhzewxz: "f15twtuk",
    B5kzvoi: "f1yab3r1",
    a9b677: "fjw5fx7",
    B6of3ja: "f1hu3pq6",
    t21cq0: ["fn2i5td", "f1eybr6b"],
    jrapky: "f19f4twv",
    Frg6f3: ["f1eybr6b", "fn2i5td"],
    Bceei9c: "fc3en1c",
    abs64n: "fk73vx1",
    Bmy1vo4: "f13u1uyl",
    B3o57yi: "fezquic",
    Bj3rh1h: "f19g0ac",
    B7zu5sd: "f15pjodv",
    Bs6t6z0: "ftgrb5f",
    Fdvyjd: "f2df6js",
    Biobvvw: "fshsryb",
    Hdbjpj: "f11ef69",
    jc51t6: ["f12lb1dx", "f13tbxeo"],
    u6d25: "fu4ulse",
    Bj55yzk: "fw2wsqs",
    Bkbwdz4: "f1swzn7y"
  }
}, {
  d: [".f1euv43f{position:absolute;}", ".f1e31b4d{right:0;}", ".f1vgc2s3{left:0;}", ".f15twtuk{top:0;}", ".f1yab3r1{bottom:0;}", ".fjw5fx7{width:16px;}", ".f1hu3pq6{margin-top:0;}", ".fn2i5td{margin-right:-8px;}", ".f1eybr6b{margin-left:-8px;}", ".f19f4twv{margin-bottom:0;}", ".fc3en1c{cursor:col-resize;}", ".fk73vx1{opacity:0;}", ".f13u1uyl{transition-property:opacity;}", ".fezquic{transition-duration:.2s;}", ".f19g0ac{z-index:1;}", '.ftgrb5f:after{content:" ";}', ".f2df6js:after{display:block;}", ".fshsryb:after{width:1px;}", ".f11ef69:after{position:absolute;}", ".f12lb1dx:after{left:50%;}", ".f13tbxeo:after{right:50%;}", ".fu4ulse:after{top:0;}", ".fw2wsqs:after{bottom:0;}", ".f1swzn7y:after{background-color:var(--colorNeutralStroke1);}"],
  h: [".f15pjodv:hover{opacity:1;}"]
});
var useTableResizeHandleStyles_unstable = (state) => {
  const styles = useStyles55();
  state.root.className = mergeClasses(tableResizeHandleClassNames.root, styles.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableResizeHandle/TableResizeHandle.js
var TableResizeHandle = React317.forwardRef((props, ref) => {
  const state = useTableResizeHandle_unstable(props, ref);
  useTableResizeHandleStyles_unstable(state);
  const {
    useTableResizeHandleStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableResizeHandle_unstable(state);
});
TableResizeHandle.displayName = "TableResizeHandle";

// node_modules/@fluentui/react-table/lib/hooks/useMeasureElement.js
var React318 = __toESM(require_react());
function useMeasureElement() {
  const [width, setWidth] = React318.useState(0);
  const container = React318.useRef(void 0);
  const {
    targetDocument
  } = useFluent();
  const handleResize = React318.useCallback(() => {
    var _container_current;
    const containerWidth = (_container_current = container.current) === null || _container_current === void 0 ? void 0 : _container_current.getBoundingClientRect().width;
    setWidth(containerWidth || 0);
  }, []);
  const [resizeObserver] = React318.useState(canUseDOM() ? new ResizeObserver(handleResize) : void 0);
  const measureElementRef = React318.useCallback((el) => {
    if (!targetDocument || !resizeObserver) {
      return;
    }
    if (container.current) {
      resizeObserver.unobserve(container.current);
      container.current.remove();
    }
    if (el) {
      container.current = targetDocument.createElement("div");
      el.insertAdjacentElement("beforebegin", container.current);
      resizeObserver.observe(container.current);
      handleResize();
    }
  }, [targetDocument, resizeObserver, handleResize]);
  React318.useEffect(() => {
    return () => {
      return resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();
    };
  }, [resizeObserver]);
  return {
    width,
    measureElementRef
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnResizeMouseHandler.js
var React319 = __toESM(require_react());
function useTableColumnResizeMouseHandler(columnResizeState) {
  const mouseX = React319.useRef(0);
  const currentWidth = React319.useRef(0);
  const colId = React319.useRef(void 0);
  const {
    targetDocument
  } = useFluent();
  const globalWin = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;
  const recalculatePosition = React319.useCallback((e) => {
    const {
      clientX
    } = getEventClientCoords(e);
    const dx = clientX - mouseX.current;
    currentWidth.current += dx;
    colId.current && columnResizeState.setColumnWidth(e, {
      columnId: colId.current,
      width: currentWidth.current
    });
    mouseX.current = clientX;
  }, [columnResizeState]);
  const onDrag = React319.useCallback((e) => {
    if (typeof (globalWin === null || globalWin === void 0 ? void 0 : globalWin.requestAnimationFrame) === "function") {
      requestAnimationFrame(() => recalculatePosition(e));
    } else {
      recalculatePosition(e);
    }
  }, [globalWin === null || globalWin === void 0 ? void 0 : globalWin.requestAnimationFrame, recalculatePosition]);
  const onDragEnd = React319.useCallback((event) => {
    if (isMouseEvent(event)) {
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("mouseup", onDragEnd);
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("mousemove", onDrag);
    }
    if (isTouchEvent(event)) {
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("touchend", onDragEnd);
      targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener("touchmove", onDrag);
    }
  }, [onDrag, targetDocument]);
  const getOnMouseDown = (columnId) => {
    return (event) => {
      currentWidth.current = columnResizeState.getColumnWidth(columnId);
      mouseX.current = getEventClientCoords(event).clientX;
      colId.current = columnId;
      if (isMouseEvent(event)) {
        if (event.target !== event.currentTarget || event.button !== 0) {
          return;
        }
        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("mouseup", onDragEnd);
        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("mousemove", onDrag);
      }
      if (isTouchEvent(event)) {
        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("touchend", onDragEnd);
        targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener("touchmove", onDrag);
      }
    };
  };
  return {
    getOnMouseDown: (columnId) => getOnMouseDown(columnId)
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnResizeState.js
var React320 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/utils/columnResizeUtils.js
var DEFAULT_WIDTH = 150;
var DEFAULT_MIN_WIDTH = 100;
function columnDefinitionsToState(columns, state = [], columnSizingOptions = {}) {
  let updated = false;
  const stateMap = new Map(state.map((s) => [s.columnId, s]));
  const updatedState = columns.map((column) => {
    const existingColumnState = stateMap.get(column.columnId);
    if (existingColumnState) {
      var _columnSizingOptions_column_columnId;
      const {
        idealWidth: idealWidth2 = existingColumnState.idealWidth,
        minWidth: minWidth2 = existingColumnState.minWidth,
        padding: padding2 = existingColumnState.padding
      } = (_columnSizingOptions_column_columnId = columnSizingOptions[column.columnId]) !== null && _columnSizingOptions_column_columnId !== void 0 ? _columnSizingOptions_column_columnId : {};
      if (idealWidth2 !== existingColumnState.idealWidth || minWidth2 !== existingColumnState.minWidth || padding2 !== existingColumnState.padding) {
        updated = true;
        return {
          ...existingColumnState,
          idealWidth: idealWidth2,
          width: idealWidth2,
          minWidth: minWidth2,
          padding: padding2
        };
      }
      return existingColumnState;
    }
    var _columnSizingOptions_column_columnId1;
    const {
      defaultWidth,
      idealWidth = DEFAULT_WIDTH,
      minWidth = DEFAULT_MIN_WIDTH,
      padding
    } = (_columnSizingOptions_column_columnId1 = columnSizingOptions[column.columnId]) !== null && _columnSizingOptions_column_columnId1 !== void 0 ? _columnSizingOptions_column_columnId1 : {};
    updated = true;
    return {
      columnId: column.columnId,
      width: Math.max(defaultWidth !== null && defaultWidth !== void 0 ? defaultWidth : idealWidth, minWidth),
      minWidth,
      idealWidth: Math.max(defaultWidth !== null && defaultWidth !== void 0 ? defaultWidth : idealWidth, minWidth),
      padding: padding !== null && padding !== void 0 ? padding : 16
    };
  });
  if (updatedState.length !== state.length || updated) {
    const column = updatedState.find((col) => col.width > col.idealWidth);
    if (column) {
      column.width = column.idealWidth;
    }
    updated = true;
  }
  return updated ? updatedState : state;
}
function getColumnById(state, columnId) {
  return state.find((c) => c.columnId === columnId);
}
function getColumnByIndex(state, index) {
  return state[index];
}
function getTotalWidth(state) {
  return state.reduce((sum, column) => sum + column.width + column.padding, 0);
}
function getColumnWidth(state, columnId) {
  const column = getColumnById(state, columnId);
  var _column_width;
  return (_column_width = column === null || column === void 0 ? void 0 : column.width) !== null && _column_width !== void 0 ? _column_width : 0;
}
function setColumnProperty(localState, columnId, property, value) {
  const currentColumn = getColumnById(localState, columnId);
  if (!currentColumn || (currentColumn === null || currentColumn === void 0 ? void 0 : currentColumn[property]) === value) {
    return localState;
  }
  const updatedColumn = {
    ...currentColumn,
    [property]: value
  };
  const newState = localState.reduce((acc, current) => {
    if (current.columnId === updatedColumn.columnId) {
      return [...acc, updatedColumn];
    }
    return [...acc, current];
  }, []);
  return newState;
}
function adjustColumnWidthsToFitContainer(state, containerWidth) {
  let newState = state;
  const totalWidth = getTotalWidth(newState);
  if (totalWidth < containerWidth) {
    let difference = containerWidth - totalWidth;
    let i = 0;
    while (i < newState.length && difference > 0) {
      const currentCol = getColumnByIndex(newState, i);
      const colAdjustment = Math.min(currentCol.idealWidth - currentCol.width, difference);
      newState = setColumnProperty(newState, currentCol.columnId, "width", currentCol.width + colAdjustment);
      difference -= colAdjustment;
      if (i === newState.length - 1 && difference !== 0) {
        const lastCol = getColumnByIndex(newState, i);
        newState = setColumnProperty(newState, lastCol.columnId, "width", lastCol.width + difference);
      }
      i++;
    }
  } else if (totalWidth >= containerWidth) {
    let difference = totalWidth - containerWidth;
    let j = newState.length - 1;
    while (j >= 0 && difference > 0) {
      const currentCol = getColumnByIndex(newState, j);
      if (currentCol.width > currentCol.minWidth) {
        const colAdjustment = Math.min(currentCol.width - currentCol.minWidth, difference);
        difference -= colAdjustment;
        newState = setColumnProperty(newState, currentCol.columnId, "width", currentCol.width - colAdjustment);
      }
      j--;
    }
  }
  return newState;
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnResizeState.js
var createReducer = () => (state, action) => {
  switch (action.type) {
    case "CONTAINER_WIDTH_UPDATED":
      return {
        ...state,
        containerWidth: action.containerWidth,
        columnWidthState: adjustColumnWidthsToFitContainer(state.columnWidthState, action.containerWidth)
      };
    case "COLUMNS_UPDATED":
      const newS = columnDefinitionsToState(action.columns, state.columnWidthState, state.columnSizingOptions);
      return {
        ...state,
        columns: action.columns,
        columnWidthState: adjustColumnWidthsToFitContainer(newS, state.containerWidth)
      };
    case "COLUMN_SIZING_OPTIONS_UPDATED":
      const newState = columnDefinitionsToState(state.columns, state.columnWidthState, action.columnSizingOptions);
      return {
        ...state,
        columnSizingOptions: action.columnSizingOptions,
        columnWidthState: adjustColumnWidthsToFitContainer(newState, state.containerWidth)
      };
    case "SET_COLUMN_WIDTH":
      const {
        columnId,
        width
      } = action;
      const {
        containerWidth
      } = state;
      const column = getColumnById(state.columnWidthState, columnId);
      let newColumnWidthState = [...state.columnWidthState];
      if (!column) {
        return state;
      }
      newColumnWidthState = setColumnProperty(newColumnWidthState, columnId, "width", width);
      newColumnWidthState = setColumnProperty(newColumnWidthState, columnId, "idealWidth", width);
      newColumnWidthState = adjustColumnWidthsToFitContainer(newColumnWidthState, containerWidth);
      return {
        ...state,
        columnWidthState: newColumnWidthState
      };
  }
};
function useTableColumnResizeState(columns, containerWidth, params = {}) {
  const {
    onColumnResize,
    columnSizingOptions
  } = params;
  const reducer = React320.useMemo(() => createReducer(), []);
  const [state, dispatch] = React320.useReducer(reducer, {
    columns,
    containerWidth: 0,
    columnWidthState: columnDefinitionsToState(columns, void 0, columnSizingOptions),
    columnSizingOptions
  });
  useIsomorphicLayoutEffect(() => {
    dispatch({
      type: "CONTAINER_WIDTH_UPDATED",
      containerWidth
    });
  }, [containerWidth]);
  useIsomorphicLayoutEffect(() => {
    dispatch({
      type: "COLUMNS_UPDATED",
      columns
    });
  }, [columns]);
  useIsomorphicLayoutEffect(() => {
    dispatch({
      type: "COLUMN_SIZING_OPTIONS_UPDATED",
      columnSizingOptions
    });
  }, [columnSizingOptions]);
  const setColumnWidth = useEventCallback((event, data) => {
    let {
      width
    } = data;
    const {
      columnId
    } = data;
    const col = getColumnById(state.columnWidthState, columnId);
    if (!col) {
      return;
    }
    width = Math.max(col.minWidth || 0, width);
    if (onColumnResize) {
      onColumnResize(event, {
        columnId,
        width
      });
    }
    dispatch({
      type: "SET_COLUMN_WIDTH",
      columnId,
      width
    });
  });
  return {
    getColumnById: (colId) => getColumnById(state.columnWidthState, colId),
    getColumns: () => state.columnWidthState,
    getColumnWidth: (colId) => getColumnWidth(state.columnWidthState, colId),
    setColumnWidth
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useKeyboardResizing.js
var React321 = __toESM(require_react());
var STEP = 20;
var PRECISION_MODIFIER = Shift;
var PRECISION_FACTOR = 1 / 4;
function useKeyboardResizing(columnResizeState) {
  const columnId = React321.useRef();
  const onChangeRef = React321.useRef();
  const addListenerTimeout = React321.useRef();
  const columnResizeStateRef = React321.useRef(columnResizeState);
  React321.useEffect(() => {
    columnResizeStateRef.current = columnResizeState;
  }, [columnResizeState]);
  const {
    targetDocument
  } = useFluent();
  const keyboardHandler = useEventCallback((event) => {
    const colId = columnId.current;
    if (!colId) {
      return;
    }
    const width = columnResizeStateRef.current.getColumnWidth(colId);
    const precisionModifier = event.getModifierState(PRECISION_MODIFIER);
    const stopEvent = () => {
      event.preventDefault();
      event.stopPropagation();
    };
    switch (event.key) {
      case ArrowLeft:
        stopEvent();
        columnResizeStateRef.current.setColumnWidth(event, {
          columnId: colId,
          width: width - (precisionModifier ? STEP * PRECISION_FACTOR : STEP)
        });
        return;
      case ArrowRight:
        stopEvent();
        columnResizeStateRef.current.setColumnWidth(event, {
          columnId: colId,
          width: width + (precisionModifier ? STEP * PRECISION_FACTOR : STEP)
        });
        return;
      case Space:
      case Enter:
      case Escape:
        stopEvent();
        disableInteractiveMode();
        break;
    }
  });
  React321.useEffect(() => {
    return () => {
      var _targetDocument_defaultView, _targetDocument_defaultView1;
      targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.clearTimeout(addListenerTimeout.current);
      targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView1 = targetDocument.defaultView) === null || _targetDocument_defaultView1 === void 0 ? void 0 : _targetDocument_defaultView1.removeEventListener("keydown", keyboardHandler);
    };
  }, [keyboardHandler, targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView]);
  const enableInteractiveMode = React321.useCallback((colId) => {
    var _onChangeRef_current, _targetDocument_defaultView;
    columnId.current = colId;
    (_onChangeRef_current = onChangeRef.current) === null || _onChangeRef_current === void 0 ? void 0 : _onChangeRef_current.call(onChangeRef, colId, true);
    addListenerTimeout.current = targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.setTimeout(() => {
      var _targetDocument_defaultView2;
      targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView2 = targetDocument.defaultView) === null || _targetDocument_defaultView2 === void 0 ? void 0 : _targetDocument_defaultView2.addEventListener("keydown", keyboardHandler);
    }, 0);
  }, [keyboardHandler, targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView]);
  const disableInteractiveMode = React321.useCallback(() => {
    var _targetDocument_defaultView;
    if (columnId.current) {
      var _onChangeRef_current;
      (_onChangeRef_current = onChangeRef.current) === null || _onChangeRef_current === void 0 ? void 0 : _onChangeRef_current.call(onChangeRef, columnId.current, false);
    }
    columnId.current = void 0;
    targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.removeEventListener("keydown", keyboardHandler);
  }, [keyboardHandler, targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView]);
  const toggleInteractiveMode = (colId, onChange) => {
    onChangeRef.current = onChange;
    if (!columnId.current) {
      enableInteractiveMode(colId);
    } else if (colId && columnId.current !== colId) {
      columnId.current = colId;
      onChange === null || onChange === void 0 ? void 0 : onChange(columnId.current, true);
    } else {
      disableInteractiveMode();
    }
  };
  return {
    toggleInteractiveMode
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableColumnSizing.js
var defaultColumnSizingState = {
  getColumnWidths: () => [],
  getOnMouseDown: () => () => null,
  setColumnWidth: () => null,
  getTableHeaderCellProps: () => ({
    style: {},
    columnId: ""
  }),
  getTableCellProps: () => ({
    style: {},
    columnId: ""
  }),
  enableKeyboardMode: () => () => null
};
function useTableColumnSizing_unstable(params) {
  return (tableState) => useTableColumnSizingState(tableState, params);
}
function getColumnStyles(column) {
  const width = column.width;
  return {
    // native styles
    width,
    // non-native element styles (flex layout)
    minWidth: width,
    maxWidth: width
  };
}
function useTableColumnSizingState(tableState, params) {
  const {
    columns
  } = tableState;
  const {
    width,
    measureElementRef
  } = useMeasureElement();
  const columnResizeState = useTableColumnResizeState(columns, width + ((params === null || params === void 0 ? void 0 : params.containerWidthOffset) || 0), params);
  const mouseHandler = useTableColumnResizeMouseHandler(columnResizeState);
  const keyboardResizing = useKeyboardResizing(columnResizeState);
  const enableKeyboardMode = React322.useCallback((columnId, onChange) => (e) => {
    e.preventDefault();
    e.nativeEvent.stopPropagation();
    keyboardResizing.toggleInteractiveMode(columnId, onChange);
  }, [keyboardResizing]);
  return {
    ...tableState,
    tableRef: measureElementRef,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    columnSizing_unstable: {
      getOnMouseDown: mouseHandler.getOnMouseDown,
      setColumnWidth: (columnId, w) => columnResizeState.setColumnWidth(void 0, {
        columnId,
        width: w
      }),
      getColumnWidths: columnResizeState.getColumns,
      getTableHeaderCellProps: (columnId) => {
        const col = columnResizeState.getColumnById(columnId);
        const aside = React322.createElement(TableResizeHandle, {
          onMouseDown: mouseHandler.getOnMouseDown(columnId),
          onTouchStart: mouseHandler.getOnMouseDown(columnId)
        });
        return col ? {
          style: getColumnStyles(col),
          aside
        } : {};
      },
      getTableCellProps: (columnId) => {
        const col = columnResizeState.getColumnById(columnId);
        return col ? {
          style: getColumnStyles(col)
        } : {};
      },
      enableKeyboardMode
    }
  };
}

// node_modules/@fluentui/react-table/lib/hooks/useTableFeatures.js
var defaultRowEnhancer = (row) => row;
var defaultTableState = {
  selection: defaultTableSelectionState,
  sort: defaultTableSortState,
  getRows: () => [],
  getRowId: () => "",
  items: [],
  columns: [],
  // eslint-disable-next-line @typescript-eslint/naming-convention
  columnSizing_unstable: defaultColumnSizingState,
  tableRef: React323.createRef()
};
function useTableFeatures(options, plugins = []) {
  const {
    items,
    getRowId,
    columns
  } = options;
  var _getRowId;
  const getRows = (rowEnhancer = defaultRowEnhancer) => {
    return items.map((item, i) => {
      return rowEnhancer({
        item,
        rowId: (_getRowId = getRowId === null || getRowId === void 0 ? void 0 : getRowId(item)) !== null && _getRowId !== void 0 ? _getRowId : i
      });
    });
  };
  const initialState = {
    getRowId,
    items,
    columns,
    getRows,
    selection: defaultTableSelectionState,
    sort: defaultTableSortState,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    columnSizing_unstable: defaultColumnSizingState,
    tableRef: React323.createRef()
  };
  return plugins.reduce((state, plugin) => plugin(state), initialState);
}

// node_modules/@fluentui/react-table/lib/hooks/createColumn.js
var defaultCompare = () => 0;
var defaultRenderCell = () => {
  if (true) {
    console.warn("@fluentui/react-table: You are using the default column renderCell function that renders null");
  }
  return null;
};
var defaultRenderHeaderCell = () => {
  if (true) {
    console.warn("@fluentui/react-table: You are using the default column renderHeaderCell function that renders null");
  }
  return null;
};
function createTableColumn(options) {
  const {
    columnId,
    renderCell = defaultRenderCell,
    renderHeaderCell = defaultRenderHeaderCell,
    compare = defaultCompare
  } = options;
  return {
    columnId,
    renderCell,
    renderHeaderCell,
    compare
  };
}

// node_modules/@fluentui/react-table/lib/components/TableCell/TableCell.js
var React327 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableCell/useTableCell.js
var React325 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/contexts/tableContext.js
var React324 = __toESM(require_react());
var tableContext = React324.createContext(void 0);
var tableContextDefaultValue = {
  size: "medium",
  noNativeElements: false,
  sortable: false
};
var TableContextProvider = tableContext.Provider;
var _React_useContext6;
var useTableContext = () => (_React_useContext6 = React324.useContext(tableContext)) !== null && _React_useContext6 !== void 0 ? _React_useContext6 : tableContextDefaultValue;

// node_modules/@fluentui/react-table/lib/components/TableCell/useTableCell.js
var useTableCell_unstable = (props, ref) => {
  const {
    noNativeElements,
    size: size2
  } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "td";
  return {
    components: {
      root: rootComponent
    },
    root: getNativeElementProps(rootComponent, {
      ref,
      role: rootComponent === "div" ? "cell" : void 0,
      ...props
    }),
    noNativeElements,
    size: size2
  };
};

// node_modules/@fluentui/react-table/lib/components/TableCell/renderTableCell.js
var React326 = __toESM(require_react());
var renderTableCell_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React326.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-table/lib/components/TableCell/useTableCellStyles.js
var tableCellClassName = "fui-TableCell";
var tableCellClassNames = {
  root: tableCellClassName
};
var useTableLayoutStyles = __styles2({
  root: {
    mc9l5x: "f15pt5es",
    ha4doy: "fmrv4ls"
  },
  medium: {
    Bqenvij: "f1ft4266"
  },
  small: {
    Bqenvij: "fbsu25e"
  },
  "extra-small": {
    Bqenvij: "frvgh55"
  }
}, {
  d: [".f15pt5es{display:table-cell;}", ".fmrv4ls{vertical-align:middle;}", ".f1ft4266{height:44px;}", ".fbsu25e{height:34px;}", ".frvgh55{height:24px;}"]
});
var useFlexLayoutStyles = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bf4jedk: "f10tiqix",
    Bt984gj: "f122n59",
    Bh6795r: "fqerorx",
    Bnnss6s: "f1neuvcm",
    xawz: "fkjuxzh"
  },
  medium: {
    sshi5w: "f5pgtk9"
  },
  small: {
    sshi5w: "fcep9tg"
  },
  "extra-small": {
    sshi5w: "f1pha7fy"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f10tiqix{min-width:0px;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1neuvcm{-webkit-flex-shrink:1;-ms-flex-negative:1;flex-shrink:1;}", ".fkjuxzh{-webkit-flex-basis:0px;-ms-flex-preferred-size:0px;flex-basis:0px;}", ".f5pgtk9{min-height:44px;}", ".fcep9tg{min-height:34px;}", ".f1pha7fy{min-height:24px;}"]
});
var useStyles56 = __styles2({
  root: {
    De3pzq: "f1u2r49w",
    qhf8xq: "f10pi13n",
    z8tnut: "f1nbblvp",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f1ov4xf1",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    Bn4voq9: "fz36nt7",
    g9k6zt: "f9znhxp",
    Bfpq7zp: "fqrak0z",
    kdpuga: ["f1o2ludy", "f1kjnpwc"],
    Bw81rd7: ["f1kjnpwc", "f1o2ludy"],
    B6xbmo0: ["fxmnebo", "f1witrsb"],
    dm238s: ["f1witrsb", "fxmnebo"]
  }
}, {
  d: [".f1u2r49w{background-color:inherit;}", ".f10pi13n{position:relative;}", ".f1nbblvp{padding-top:0px;}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1ov4xf1{padding-bottom:0px;}", ".fz36nt7[data-fui-focus-visible]{outline-width:2px;}", ".f9znhxp[data-fui-focus-visible]{outline-style:solid;}", ".fqrak0z[data-fui-focus-visible]{outline-color:var(--colorStrokeFocus2);}", ".f1o2ludy[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f1kjnpwc[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusMedium);}", ".fxmnebo[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusMedium);}", ".f1witrsb[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusMedium);}"]
});
var useTableCellStyles_unstable = (state) => {
  const styles = useStyles56();
  const layoutStyles = {
    table: useTableLayoutStyles(),
    flex: useFlexLayoutStyles()
  };
  state.root.className = mergeClasses(tableCellClassNames.root, styles.root, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.noNativeElements ? layoutStyles.flex[state.size] : layoutStyles.table[state.size], state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableCell/TableCell.js
var TableCell = React327.forwardRef((props, ref) => {
  const state = useTableCell_unstable(props, ref);
  useTableCellStyles_unstable(state);
  const {
    useTableCellStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableCell_unstable(state);
});
TableCell.displayName = "TableCell";

// node_modules/@fluentui/react-table/lib/components/TableRow/TableRow.js
var React331 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableRow/useTableRow.js
var React329 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/contexts/tableHeaderContext.js
var React328 = __toESM(require_react());
var tableHeaderContext = React328.createContext(void 0);
var tableHeaderContextDefaultValue = "";
var TableHeaderContextProvider = tableHeaderContext.Provider;
var useIsInTableHeader = () => React328.useContext(tableHeaderContext) === tableHeaderContextDefaultValue;

// node_modules/@fluentui/react-table/lib/components/TableRow/useTableRow.js
var useTableRow_unstable = (props, ref) => {
  const {
    noNativeElements,
    size: size2
  } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "tr";
  const focusVisibleRef = useFocusVisible();
  const focusWithinRef = useFocusWithin();
  const isHeaderRow = useIsInTableHeader();
  var _props_appearance;
  return {
    components: {
      root: rootComponent
    },
    root: getNativeElementProps(rootComponent, {
      ref: useMergedRefs(ref, focusVisibleRef, focusWithinRef),
      role: rootComponent === "div" ? "row" : void 0,
      ...props
    }),
    size: size2,
    noNativeElements,
    appearance: (_props_appearance = props.appearance) !== null && _props_appearance !== void 0 ? _props_appearance : "none",
    isHeaderRow
  };
};

// node_modules/@fluentui/react-table/lib/components/TableRow/renderTableRow.js
var React330 = __toESM(require_react());
var renderTableRow_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React330.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-table/lib/components/TableCellActions/useTableCellActionsStyles.js
var tableCellActionsClassNames = {
  root: "fui-TableCellActions"
};
var useStyles57 = __styles2({
  root: {
    De3pzq: "f1u2r49w",
    qhf8xq: "f1euv43f",
    j35jbq: ["f10k790i", "f1xynx9j"],
    Bhzewxz: "f1i1t8d1",
    Bz10aip: "f188r07x",
    abs64n: "fk73vx1",
    Frg6f3: ["fcgxt0o", "f1ujusj6"]
  },
  visible: {
    abs64n: "f5p0z4x"
  }
}, {
  d: [".f1u2r49w{background-color:inherit;}", ".f1euv43f{position:absolute;}", ".f10k790i{right:0px;}", ".f1xynx9j{left:0px;}", ".f1i1t8d1{top:50%;}", ".f188r07x{-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);}", ".fk73vx1{opacity:0;}", ".fcgxt0o{margin-left:auto;}", ".f1ujusj6{margin-right:auto;}", ".f5p0z4x{opacity:1;}"]
});
var useTableCellActionsStyles_unstable = (state) => {
  const styles = useStyles57();
  state.root.className = mergeClasses(tableCellActionsClassNames.root, styles.root, state.visible && styles.visible, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/useTableSelectionCellStyles.js
var CELL_WIDTH = 44;
var tableSelectionCellClassNames = {
  root: "fui-TableSelectionCell",
  checkboxIndicator: "fui-TableSelectionCell__checkboxIndicator",
  radioIndicator: "fui-TableSelectionCell__radioIndicator"
};
var useTableLayoutStyles2 = __styles2({
  root: {
    mc9l5x: "f15pt5es",
    a9b677: "fksc0bp"
  }
}, {
  d: [".f15pt5es{display:table-cell;}", ".fksc0bp{width:44px;}"]
});
var useFlexLayoutStyles2 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bh6795r: "fqerorx",
    Bnnss6s: "f1neuvcm",
    xawz: "fkjuxzh",
    Bf4jedk: "fvrlu0f",
    B2u0y6b: "f1c71y05",
    Brf1p80: "f4d9j23"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1neuvcm{-webkit-flex-shrink:1;-ms-flex-negative:1;flex-shrink:1;}", ".fkjuxzh{-webkit-flex-basis:0px;-ms-flex-preferred-size:0px;flex-basis:0px;}", ".fvrlu0f{min-width:44px;}", ".f1c71y05{max-width:44px;}", ".f4d9j23{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;}"]
});
var useStyles58 = __styles2({
  root: {
    fsow6f: "f17mccla",
    Huce71: "fz5stix",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    Bn4voq9: "fz36nt7",
    g9k6zt: "f9znhxp",
    Bfpq7zp: "fqrak0z",
    kdpuga: ["f1o2ludy", "f1kjnpwc"],
    Bw81rd7: ["f1kjnpwc", "f1o2ludy"],
    B6xbmo0: ["fxmnebo", "f1witrsb"],
    dm238s: ["f1witrsb", "fxmnebo"]
  },
  radioIndicator: {
    mc9l5x: "f22iagw",
    Bh6795r: "fqerorx",
    Bt984gj: "f122n59",
    Brf1p80: "f4d9j23"
  },
  subtle: {
    abs64n: "fk73vx1",
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8a84jv: "f1y7ij6c"
  },
  hidden: {
    Bcdw1i0: "fd7fpy0"
  }
}, {
  d: [".f17mccla{text-align:center;}", ".fz5stix{white-space:nowrap;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".fz36nt7[data-fui-focus-visible]{outline-width:2px;}", ".f9znhxp[data-fui-focus-visible]{outline-style:solid;}", ".fqrak0z[data-fui-focus-visible]{outline-color:var(--colorStrokeFocus2);}", ".f1o2ludy[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f1kjnpwc[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusMedium);}", ".fxmnebo[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusMedium);}", ".f1witrsb[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusMedium);}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f4d9j23{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;}", ".fk73vx1{opacity:0;}", ".f1y7ij6c[data-fui-focus-within]:focus-within{opacity:1;}", ".fd7fpy0{visibility:hidden;}"],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"]
});
var useTableSelectionCellStyles_unstable = (state) => {
  const styles = useStyles58();
  const layoutStyles = {
    table: useTableLayoutStyles2(),
    flex: useFlexLayoutStyles2()
  };
  state.root.className = mergeClasses(tableSelectionCellClassNames.root, styles.root, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.subtle && state.checked === false && styles.subtle, state.hidden && styles.hidden, state.root.className);
  if (state.checkboxIndicator) {
    state.checkboxIndicator.className = mergeClasses(tableSelectionCellClassNames.checkboxIndicator, state.checkboxIndicator.className);
  }
  if (state.radioIndicator) {
    state.radioIndicator.className = mergeClasses(tableSelectionCellClassNames.radioIndicator, styles.radioIndicator, state.radioIndicator.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableRow/useTableRowStyles.js
var tableRowClassName = "fui-TableRow";
var tableRowClassNames = {
  root: tableRowClassName
};
var useTableLayoutStyles3 = __styles2({
  root: {
    mc9l5x: "f1u0rzck"
  }
}, {
  d: [".f1u0rzck{display:table-row;}"]
});
var useFlexLayoutStyles3 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}"]
});
var useStyles59 = __styles2({
  root: {
    sj55zd: "f19n0e5",
    B7ck84d: "f1ewtqcl",
    Bconypa: "f1jazu75",
    B6guboy: "f1xeqee6",
    Bn4voq9: "fz36nt7",
    g9k6zt: "f9znhxp",
    Bfpq7zp: "fqrak0z",
    kdpuga: ["f1o2ludy", "f1kjnpwc"],
    Bw81rd7: ["f1kjnpwc", "f1o2ludy"],
    B6xbmo0: ["fxmnebo", "f1witrsb"],
    dm238s: ["f1witrsb", "fxmnebo"]
  },
  noAppearanceFocusWithin: {
    Bm5rygw: "f13cic75"
  },
  rootInteractive: {
    ecr2s2: "f1wfn5kd",
    lj723h: "f1g4hkjv",
    B43xm9u: "f15ngxrw",
    i921ia: "fjbbrdp",
    Jwef8y: "f1t94bn6",
    Bi91k9c: "feu1g3u",
    Bpt6rm4: "f1uorfem",
    ff6mpl: "fw60kww"
  },
  medium: {
    Bn0qgzm: "f1vxd6vx",
    oivjwe: "fg706s2",
    B9xav0g: "frpde29"
  },
  small: {
    Bn0qgzm: "f1vxd6vx",
    oivjwe: "fg706s2",
    B9xav0g: "frpde29"
  },
  "extra-small": {
    Be2twd7: "fy9rknc"
  },
  brand: {
    De3pzq: "f16xkysk",
    sj55zd: "f1cgsbmv",
    g2u3we: "frmsihh",
    h3c5rm: ["frttxa5", "f11o2r7f"],
    B9xav0g: "fem5et0",
    zhjwy3: ["f11o2r7f", "frttxa5"],
    Jwef8y: "f121v1wq",
    ecr2s2: "ftepret",
    gwxt9v: "fqlf3fd",
    v3aym: ["f9dpb3h", "fw2muls"],
    Bc736ss: "f1yat0gj",
    Bk6ri7n: ["fw2muls", "f9dpb3h"],
    Bk5ld8o: "f7nae3y",
    c4eypz: ["fkbere7", "fa97sf3"],
    felo30: "fmtyzcc",
    Eshu5l: ["fa97sf3", "fkbere7"],
    Bjwas2f: "fb6zhgp",
    Bn1d65q: ["fyowp6c", "fz08sq8"],
    Bxeuatn: "f9dii88",
    n51gp8: ["fz08sq8", "fyowp6c"],
    Beo2b4z: ["f1afxoft", "flqq2yx"],
    h6lo6r: ["flqq2yx", "f1afxoft"],
    Btyw6ap: ["f1b5xrmd", "f1831rx6"],
    w1pwid: ["f1831rx6", "f1b5xrmd"],
    Brwvgy3: "fd94n53",
    yadkgm: "f1e0wld5"
  },
  neutral: {
    gwxt9v: "fqlf3fd",
    v3aym: ["f9dpb3h", "fw2muls"],
    Bc736ss: "f1yat0gj",
    Bk6ri7n: ["fw2muls", "f9dpb3h"],
    Bk5ld8o: "f7nae3y",
    c4eypz: ["fkbere7", "fa97sf3"],
    felo30: "fmtyzcc",
    Eshu5l: ["fa97sf3", "fkbere7"],
    Bjwas2f: "fb6zhgp",
    Bn1d65q: ["fyowp6c", "fz08sq8"],
    Bxeuatn: "f9dii88",
    n51gp8: ["fz08sq8", "fyowp6c"],
    Beo2b4z: ["f1afxoft", "flqq2yx"],
    h6lo6r: ["flqq2yx", "f1afxoft"],
    Btyw6ap: ["f1b5xrmd", "f1831rx6"],
    w1pwid: ["f1831rx6", "f1b5xrmd"],
    Brwvgy3: "fd94n53",
    yadkgm: "f1e0wld5",
    De3pzq: "fq5gl1p",
    sj55zd: "f1cgsbmv",
    Jwef8y: "f1uqaxdt",
    ecr2s2: "fa9o754",
    g2u3we: "frmsihh",
    h3c5rm: ["frttxa5", "f11o2r7f"],
    B9xav0g: "fem5et0",
    zhjwy3: ["f11o2r7f", "frttxa5"]
  },
  none: {}
}, {
  d: [".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1ewtqcl{box-sizing:border-box;}", ".f1jazu75[data-fui-focus-within]:focus-within .fui-TableSelectionCell{opacity:1;}", ".f1xeqee6[data-fui-focus-within]:focus-within .fui-TableCellActions{opacity:1;}", ".fz36nt7[data-fui-focus-visible]{outline-width:2px;}", ".f9znhxp[data-fui-focus-visible]{outline-style:solid;}", ".fqrak0z[data-fui-focus-visible]{outline-color:var(--colorStrokeFocus2);}", ".f1o2ludy[data-fui-focus-visible]{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f1kjnpwc[data-fui-focus-visible]{border-bottom-left-radius:var(--borderRadiusMedium);}", ".fxmnebo[data-fui-focus-visible]{border-top-right-radius:var(--borderRadiusMedium);}", ".f1witrsb[data-fui-focus-visible]{border-top-left-radius:var(--borderRadiusMedium);}", ".f13cic75[data-fui-focus-within]:focus-within{background-color:var(--colorSubtleBackgroundHover);}", ".f1vxd6vx{border-bottom-width:var(--strokeWidthThin);}", ".fg706s2{border-bottom-style:solid;}", ".frpde29{border-bottom-color:var(--colorNeutralStroke2);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".f16xkysk{background-color:var(--colorBrandBackground2);}", ".f1cgsbmv{color:var(--colorNeutralForeground1Hover);}", ".frmsihh{border-top-color:var(--colorNeutralStrokeOnBrand);}", ".frttxa5{border-right-color:var(--colorNeutralStrokeOnBrand);}", ".f11o2r7f{border-left-color:var(--colorNeutralStrokeOnBrand);}", ".fem5et0{border-bottom-color:var(--colorNeutralStrokeOnBrand);}", ".fq5gl1p{background-color:var(--colorSubtleBackgroundSelected);}"],
  a: [".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}", ".f1g4hkjv:active{color:var(--colorNeutralForeground1Pressed);}", ".f15ngxrw:active .fui-TableCellActions{opacity:1;}", ".fjbbrdp:active .fui-TableSelectionCell{opacity:1;}", ".ftepret:active{background-color:var(--colorBrandBackgroundInvertedSelected);}", ".fa9o754:active{background-color:var(--colorSubtleBackgroundSelected);}"],
  h: [".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".feu1g3u:hover{color:var(--colorNeutralForeground1Hover);}", ".f1uorfem:hover .fui-TableCellActions{opacity:1;}", ".fw60kww:hover .fui-TableSelectionCell{opacity:1;}", ".f121v1wq:hover{background-color:var(--colorBrandBackground2);}", ".f1uqaxdt:hover{background-color:var(--colorSubtleBackgroundSelected);}"],
  m: [["@media (forced-colors: active){.fqlf3fd{border-top-width:2px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9dpb3h{border-right-width:2px;}.fw2muls{border-left-width:2px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1yat0gj{border-bottom-width:2px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fw2muls{border-left-width:2px;}.f9dpb3h{border-right-width:2px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f7nae3y{border-top-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkbere7{border-right-style:solid;}.fa97sf3{border-left-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fmtyzcc{border-bottom-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fa97sf3{border-left-style:solid;}.fkbere7{border-right-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fb6zhgp{border-top-color:transparent;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fyowp6c{border-right-color:transparent;}.fz08sq8{border-left-color:transparent;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9dii88{border-bottom-color:transparent;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fz08sq8{border-left-color:transparent;}.fyowp6c{border-right-color:transparent;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1afxoft{border-bottom-right-radius:var(--borderRadiusMedium);}.flqq2yx{border-bottom-left-radius:var(--borderRadiusMedium);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.flqq2yx{border-bottom-left-radius:var(--borderRadiusMedium);}.f1afxoft{border-bottom-right-radius:var(--borderRadiusMedium);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1b5xrmd{border-top-right-radius:var(--borderRadiusMedium);}.f1831rx6{border-top-left-radius:var(--borderRadiusMedium);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1831rx6{border-top-left-radius:var(--borderRadiusMedium);}.f1b5xrmd{border-top-right-radius:var(--borderRadiusMedium);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fd94n53{box-sizing:border-box;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1e0wld5:focus-visible{outline-offset:-4px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fqlf3fd{border-top-width:2px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9dpb3h{border-right-width:2px;}.fw2muls{border-left-width:2px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1yat0gj{border-bottom-width:2px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fw2muls{border-left-width:2px;}.f9dpb3h{border-right-width:2px;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f7nae3y{border-top-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fkbere7{border-right-style:solid;}.fa97sf3{border-left-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fmtyzcc{border-bottom-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fa97sf3{border-left-style:solid;}.fkbere7{border-right-style:solid;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fb6zhgp{border-top-color:transparent;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fyowp6c{border-right-color:transparent;}.fz08sq8{border-left-color:transparent;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f9dii88{border-bottom-color:transparent;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fz08sq8{border-left-color:transparent;}.fyowp6c{border-right-color:transparent;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1afxoft{border-bottom-right-radius:var(--borderRadiusMedium);}.flqq2yx{border-bottom-left-radius:var(--borderRadiusMedium);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.flqq2yx{border-bottom-left-radius:var(--borderRadiusMedium);}.f1afxoft{border-bottom-right-radius:var(--borderRadiusMedium);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1b5xrmd{border-top-right-radius:var(--borderRadiusMedium);}.f1831rx6{border-top-left-radius:var(--borderRadiusMedium);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1831rx6{border-top-left-radius:var(--borderRadiusMedium);}.f1b5xrmd{border-top-right-radius:var(--borderRadiusMedium);}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.fd94n53{box-sizing:border-box;}}", {
    m: "(forced-colors: active)"
  }], ["@media (forced-colors: active){.f1e0wld5:focus-visible{outline-offset:-4px;}}", {
    m: "(forced-colors: active)"
  }]]
});
var useTableRowStyles_unstable = (state) => {
  const styles = useStyles59();
  const layoutStyles = {
    table: useTableLayoutStyles3(),
    flex: useFlexLayoutStyles3()
  };
  state.root.className = mergeClasses(tableRowClassNames.root, styles.root, !state.isHeaderRow && styles.rootInteractive, styles[state.size], state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, styles[state.appearance], state.appearance === "none" && !state.isHeaderRow && styles.noAppearanceFocusWithin, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableRow/TableRow.js
var TableRow = React331.forwardRef((props, ref) => {
  const state = useTableRow_unstable(props, ref);
  useTableRowStyles_unstable(state);
  const {
    useTableRowStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableRow_unstable(state);
});
TableRow.displayName = "TableRow";

// node_modules/@fluentui/react-table/lib/components/TableBody/TableBody.js
var React334 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableBody/useTableBody.js
var React332 = __toESM(require_react());
var useTableBody_unstable = (props, ref) => {
  const {
    noNativeElements
  } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "tbody";
  return {
    components: {
      root: rootComponent
    },
    root: getNativeElementProps(rootComponent, {
      ref,
      role: rootComponent === "div" ? "rowgroup" : void 0,
      ...props
    }),
    noNativeElements
  };
};

// node_modules/@fluentui/react-table/lib/components/TableBody/renderTableBody.js
var React333 = __toESM(require_react());
var renderTableBody_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React333.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-table/lib/components/TableBody/useTableBodyStyles.js
var useTableLayoutStyles4 = __styles2({
  root: {
    mc9l5x: "f1tp1avn"
  }
}, {
  d: [".f1tp1avn{display:table-row-group;}"]
});
var useFlexLayoutStyles4 = __styles2({
  root: {
    mc9l5x: "ftgm304"
  }
}, {
  d: [".ftgm304{display:block;}"]
});
var tableBodyClassName = "fui-TableBody";
var tableBodyClassNames = {
  root: "fui-TableBody"
};
var useTableBodyStyles_unstable = (state) => {
  const layoutStyles = {
    table: useTableLayoutStyles4(),
    flex: useFlexLayoutStyles4()
  };
  state.root.className = mergeClasses(tableBodyClassName, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableBody/TableBody.js
var TableBody = React334.forwardRef((props, ref) => {
  const state = useTableBody_unstable(props, ref);
  useTableBodyStyles_unstable(state);
  const {
    useTableBodyStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableBody_unstable(state);
});
TableBody.displayName = "TableBody";

// node_modules/@fluentui/react-table/lib/components/Table/Table.js
var React338 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/Table/useTable.js
var React335 = __toESM(require_react());
var useTable_unstable = (props, ref) => {
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : props.noNativeElements) ? "div" : "table";
  var _props_size, _props_noNativeElements, _props_sortable;
  return {
    components: {
      root: rootComponent
    },
    root: getNativeElementProps(rootComponent, {
      ref,
      role: rootComponent === "div" ? "table" : void 0,
      ...props
    }),
    size: (_props_size = props.size) !== null && _props_size !== void 0 ? _props_size : "medium",
    noNativeElements: (_props_noNativeElements = props.noNativeElements) !== null && _props_noNativeElements !== void 0 ? _props_noNativeElements : false,
    sortable: (_props_sortable = props.sortable) !== null && _props_sortable !== void 0 ? _props_sortable : false
  };
};

// node_modules/@fluentui/react-table/lib/components/Table/renderTable.js
var React336 = __toESM(require_react());
var renderTable_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React336.createElement(TableContextProvider, {
    value: contextValues.table
  }, React336.createElement(slots.root, slotProps.root));
};

// node_modules/@fluentui/react-table/lib/components/Table/useTableStyles.js
var tableClassName = "fui-Table";
var tableClassNames = {
  root: "fui-Table"
};
var useTableLayoutStyles5 = __styles2({
  root: {
    mc9l5x: "f1w4nmp0",
    ha4doy: "fmrv4ls",
    a9b677: "fly5x3f",
    B73mfa3: "f14m3nip"
  }
}, {
  d: [".f1w4nmp0{display:table;}", ".fmrv4ls{vertical-align:middle;}", ".fly5x3f{width:100%;}", ".f14m3nip{table-layout:fixed;}"]
});
var useFlexLayoutStyles5 = __styles2({
  root: {
    mc9l5x: "ftgm304"
  }
}, {
  d: [".ftgm304{display:block;}"]
});
var useStyles60 = __styles2({
  root: {
    po53p8: "fgkb47j",
    De3pzq: "fhovq9v"
  }
}, {
  d: [".fgkb47j{border-collapse:collapse;}", ".fhovq9v{background-color:var(--colorSubtleBackground);}"]
});
var useTableStyles_unstable = (state) => {
  const styles = useStyles60();
  const layoutStyles = {
    table: useTableLayoutStyles5(),
    flex: useFlexLayoutStyles5()
  };
  state.root.className = mergeClasses(tableClassName, styles.root, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/Table/useTableContextValues.js
var React337 = __toESM(require_react());
function useTableContextValues_unstable(state) {
  const {
    size: size2,
    noNativeElements,
    sortable
  } = state;
  const tableContext2 = React337.useMemo(() => ({
    noNativeElements,
    size: size2,
    sortable
  }), [noNativeElements, size2, sortable]);
  return {
    table: tableContext2
  };
}

// node_modules/@fluentui/react-table/lib/components/Table/Table.js
var Table = React338.forwardRef((props, ref) => {
  const state = useTable_unstable(props, ref);
  useTableStyles_unstable(state);
  const {
    useTableStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTable_unstable(state, useTableContextValues_unstable(state));
});
Table.displayName = "Table";

// node_modules/@fluentui/react-table/lib/components/TableHeader/TableHeader.js
var React341 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableHeader/useTableHeader.js
var React339 = __toESM(require_react());
var useTableHeader_unstable = (props, ref) => {
  const {
    noNativeElements
  } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "thead";
  return {
    components: {
      root: rootComponent
    },
    root: getNativeElementProps(rootComponent, {
      ref,
      role: rootComponent === "div" ? "rowgroup" : void 0,
      ...props
    }),
    noNativeElements
  };
};

// node_modules/@fluentui/react-table/lib/components/TableHeader/renderTableHeader.js
var React340 = __toESM(require_react());
var renderTableHeader_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React340.createElement(TableHeaderContextProvider, {
    value: ""
  }, React340.createElement(slots.root, slotProps.root));
};

// node_modules/@fluentui/react-table/lib/components/TableHeader/useTableHeaderStyles.js
var tableHeaderClassName = "fui-TableHeader";
var tableHeaderClassNames = {
  root: "fui-TableHeader"
};
var useFlexLayoutStyles6 = __styles2({
  root: {
    mc9l5x: "ftgm304"
  }
}, {
  d: [".ftgm304{display:block;}"]
});
var useTableLayoutStyles6 = __styles2({
  root: {
    mc9l5x: "f1tp1avn"
  }
}, {
  d: [".f1tp1avn{display:table-row-group;}"]
});
var useTableHeaderStyles_unstable = (state) => {
  const layoutStyles = {
    table: useTableLayoutStyles6(),
    flex: useFlexLayoutStyles6()
  };
  state.root.className = mergeClasses(tableHeaderClassName, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableHeader/TableHeader.js
var TableHeader = React341.forwardRef((props, ref) => {
  const state = useTableHeader_unstable(props, ref);
  useTableHeaderStyles_unstable(state);
  const {
    useTableHeaderStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableHeader_unstable(state);
});
TableHeader.displayName = "TableHeader";

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/TableHeaderCell.js
var React344 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/useTableHeaderCell.js
var React342 = __toESM(require_react());
var sortIcons = {
  ascending: React342.createElement(ArrowUpRegular, {
    fontSize: 12
  }),
  descending: React342.createElement(ArrowDownRegular, {
    fontSize: 12
  })
};
var useTableHeaderCell_unstable = (props, ref) => {
  const {
    noNativeElements,
    sortable
  } = useTableContext();
  var _props_as;
  const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? "div" : "th";
  var _props_sortDirection;
  return {
    components: {
      root: rootComponent,
      button: "button",
      sortIcon: "span",
      aside: "span"
    },
    root: getNativeElementProps(rootComponent, {
      ref: useMergedRefs(ref, useFocusWithin()),
      role: rootComponent === "div" ? "columnheader" : void 0,
      "aria-sort": sortable ? (_props_sortDirection = props.sortDirection) !== null && _props_sortDirection !== void 0 ? _props_sortDirection : "none" : void 0,
      ...props
    }),
    aside: resolveShorthand(props.aside),
    sortIcon: resolveShorthand(props.sortIcon, {
      required: !!props.sortDirection,
      defaultProps: {
        children: props.sortDirection ? sortIcons[props.sortDirection] : void 0
      }
    }),
    button: useARIAButtonShorthand(props.button, {
      required: true,
      defaultProps: {
        role: "presentation",
        tabIndex: -1,
        type: "button",
        ...sortable && {
          role: void 0,
          tabIndex: void 0
        }
      }
    }),
    sortable,
    noNativeElements
  };
};

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/renderTableHeaderCell.js
var React343 = __toESM(require_react());
var renderTableHeaderCell_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React343.createElement(slots.root, slotProps.root, React343.createElement(slots.button, slotProps.button, slotProps.root.children, slots.sortIcon && React343.createElement(slots.sortIcon, slotProps.sortIcon)), slots.aside && React343.createElement(slots.aside, slotProps.aside));
};

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/useTableHeaderCellStyles.js
var tableHeaderCellClassName = "fui-TableHeaderCell";
var tableHeaderCellClassNames = {
  root: "fui-TableHeaderCell",
  button: "fui-TableHeaderCell__button",
  sortIcon: "fui-TableHeaderCell__sortIcon",
  aside: "fui-TableHeaderCell__aside"
};
var useTableLayoutStyles7 = __styles2({
  root: {
    mc9l5x: "f15pt5es",
    ha4doy: "fmrv4ls"
  }
}, {
  d: [".f15pt5es{display:table-cell;}", ".fmrv4ls{vertical-align:middle;}"]
});
var useFlexLayoutStyles7 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bh6795r: "fqerorx",
    Bnnss6s: "f1neuvcm",
    xawz: "fkjuxzh",
    Bf4jedk: "f10tiqix"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1neuvcm{-webkit-flex-shrink:1;-ms-flex-negative:1;flex-shrink:1;}", ".fkjuxzh{-webkit-flex-basis:0px;-ms-flex-preferred-size:0px;flex-basis:0px;}", ".f10tiqix{min-width:0px;}"]
});
var useStyles61 = __styles2({
  root: {
    z8tnut: "f1nbblvp",
    z189sj: ["f1vdfbxk", "f1f5gg8d"],
    Byoj8tv: "f1ov4xf1",
    uwmqm3: ["f1f5gg8d", "f1vdfbxk"],
    B3nxjsc: "fhix6mv",
    Bmvh20x: "fha7anx",
    robkg1: "f1fmzww4",
    pehzd3: ["fs9qmxf", "f187m4uq"],
    B8osjzx: ["f187m4uq", "fs9qmxf"],
    u7xebq: ["f145mzao", "f1uha7eq"],
    Blsv9te: ["f1uha7eq", "f145mzao"],
    qhf8xq: "f10pi13n"
  },
  rootInteractive: {
    Jwef8y: "f1t94bn6",
    ecr2s2: "f1wfn5kd"
  },
  resetButton: {
    B3rzk8w: "fq6nmtn",
    B7ck84d: "f1e4lqlz",
    De3pzq: "f1u2r49w",
    sj55zd: "f1ym3bx4",
    Bahqtrf: "f1mo0ibp",
    Be2twd7: "fjoy568",
    Bg96gwp: "fytdu2e",
    B68tc82: "f1mtd64y",
    Bmxbyg5: "f1y7q3j9",
    z8tnut: "f1g0x7ka",
    z189sj: ["fhxju0i", "f1cnd47f"],
    Byoj8tv: "f1qch9an",
    uwmqm3: ["f1cnd47f", "fhxju0i"],
    icvyot: "f1ern45e",
    vrafjx: ["f1n71otn", "f1deefiw"],
    oivjwe: "f1h8hb77",
    wvpqe5: ["f1deefiw", "f1n71otn"],
    Bv0vk6g: "f37px4s",
    fsow6f: "fgusgyc"
  },
  button: {
    qhf8xq: "f10pi13n",
    a9b677: "fly5x3f",
    mc9l5x: "f22iagw",
    Bh6795r: "fqerorx",
    Bqenvij: "f1l02sjl",
    Bt984gj: "f122n59",
    i8kkvl: "f1ufnopg",
    Belr9w4: "f14sijuj",
    sshi5w: "f1nxs5xn",
    Bnnss6s: "f1neuvcm",
    xawz: "fkjuxzh",
    oeaueh: "f1s6fcnf"
  },
  sortable: {
    Bceei9c: "f1k6fduh"
  },
  sortIcon: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    z8tnut: "fclwglc"
  },
  resizeHandle: {}
}, {
  d: [".f1nbblvp{padding-top:0px;}", ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}", ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}", ".f1ov4xf1{padding-bottom:0px;}", ".fhix6mv[data-fui-focus-within]:focus-within{outline-width:2px;}", ".fha7anx[data-fui-focus-within]:focus-within{outline-style:solid;}", ".f1fmzww4[data-fui-focus-within]:focus-within{outline-color:var(--colorStrokeFocus2);}", ".fs9qmxf[data-fui-focus-within]:focus-within{border-bottom-right-radius:var(--borderRadiusMedium);}", ".f187m4uq[data-fui-focus-within]:focus-within{border-bottom-left-radius:var(--borderRadiusMedium);}", ".f145mzao[data-fui-focus-within]:focus-within{border-top-right-radius:var(--borderRadiusMedium);}", ".f1uha7eq[data-fui-focus-within]:focus-within{border-top-left-radius:var(--borderRadiusMedium);}", ".f10pi13n{position:relative;}", ".fq6nmtn{resize:horizontal;}", ".f1e4lqlz{box-sizing:content-box;}", ".f1u2r49w{background-color:inherit;}", ".f1ym3bx4{color:inherit;}", ".f1mo0ibp{font-family:inherit;}", ".fjoy568{font-size:inherit;}", ".fytdu2e{line-height:normal;}", ".f1mtd64y{overflow-x:visible;}", ".f1y7q3j9{overflow-y:visible;}", ".f1g0x7ka{padding-top:0;}", ".fhxju0i{padding-right:0;}", ".f1cnd47f{padding-left:0;}", ".f1qch9an{padding-bottom:0;}", ".f1ern45e{border-top-style:none;}", ".f1n71otn{border-right-style:none;}", ".f1deefiw{border-left-style:none;}", ".f1h8hb77{border-bottom-style:none;}", ".f37px4s{-webkit-appearance:button;}", ".fgusgyc{text-align:unset;}", ".fly5x3f{width:100%;}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1l02sjl{height:100%;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".f1ufnopg{-webkit-column-gap:var(--spacingHorizontalXS);column-gap:var(--spacingHorizontalXS);}", ".f14sijuj{row-gap:var(--spacingHorizontalXS);}", ".f1nxs5xn{min-height:32px;}", ".f1neuvcm{-webkit-flex-shrink:1;-ms-flex-negative:1;flex-shrink:1;}", ".fkjuxzh{-webkit-flex-basis:0px;-ms-flex-preferred-size:0px;flex-basis:0px;}", ".f1s6fcnf{outline-style:none;}", ".f1k6fduh{cursor:pointer;}", ".fclwglc{padding-top:var(--spacingVerticalXXS);}"],
  h: [".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}"],
  a: [".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}"]
});
var useTableHeaderCellStyles_unstable = (state) => {
  const styles = useStyles61();
  const layoutStyles = {
    table: useTableLayoutStyles7(),
    flex: useFlexLayoutStyles7()
  };
  state.root.className = mergeClasses(tableHeaderCellClassNames.root, styles.root, state.sortable && styles.rootInteractive, state.noNativeElements ? layoutStyles.flex.root : layoutStyles.table.root, state.root.className);
  state.button.className = mergeClasses(tableHeaderCellClassNames.button, styles.resetButton, styles.button, state.sortable && styles.sortable, state.button.className);
  if (state.sortIcon) {
    state.sortIcon.className = mergeClasses(tableHeaderCellClassNames.sortIcon, styles.sortIcon, state.sortIcon.className);
  }
  if (state.aside) {
    state.aside.className = mergeClasses(tableHeaderCellClassNames.aside, styles.resizeHandle, state.aside.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableHeaderCell/TableHeaderCell.js
var TableHeaderCell = React344.forwardRef((props, ref) => {
  const state = useTableHeaderCell_unstable(props, ref);
  useTableHeaderCellStyles_unstable(state);
  const {
    useTableHeaderCellStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableHeaderCell_unstable(state);
});
TableHeaderCell.displayName = "TableHeaderCell";

// node_modules/@fluentui/react-table/lib/contexts/rowIdContext.js
var React345 = __toESM(require_react());
var rowIdContext = React345.createContext(void 0);
var tableRowIdContextDefaultValue = "";
var _React_useContext7;
var useTableRowIdContext = () => (_React_useContext7 = React345.useContext(rowIdContext)) !== null && _React_useContext7 !== void 0 ? _React_useContext7 : tableRowIdContextDefaultValue;
var TableRowIdContextProvider = rowIdContext.Provider;

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/TableSelectionCell.js
var React348 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/useTableSelectionCell.js
var React346 = __toESM(require_react());
var useTableSelectionCell_unstable = (props, ref) => {
  const tableCellState = useTableCell_unstable(props, ref);
  const {
    noNativeElements
  } = useTableContext();
  const {
    type = "checkbox",
    checked = false,
    subtle = false,
    hidden = false
  } = props;
  return {
    ...tableCellState,
    components: {
      ...tableCellState.components,
      checkboxIndicator: Checkbox,
      radioIndicator: Radio
    },
    checkboxIndicator: resolveShorthand(props.checkboxIndicator, {
      required: type === "checkbox",
      defaultProps: {
        checked: props.checked
      }
    }),
    radioIndicator: resolveShorthand(props.radioIndicator, {
      required: type === "radio",
      defaultProps: {
        checked: !!checked,
        input: {
          name: useId2("table-selection-radio")
        }
      }
    }),
    type,
    checked,
    noNativeElements,
    subtle,
    hidden
  };
};

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/renderTableSelectionCell.js
var React347 = __toESM(require_react());
var renderTableSelectionCell_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React347.createElement(slots.root, slotProps.root, state.type === "checkbox" && slots.checkboxIndicator && React347.createElement(slots.checkboxIndicator, slotProps.checkboxIndicator), state.type === "radio" && slots.radioIndicator && React347.createElement(slots.radioIndicator, slotProps.radioIndicator));
};

// node_modules/@fluentui/react-table/lib/components/TableSelectionCell/TableSelectionCell.js
var TableSelectionCell = React348.forwardRef((props, ref) => {
  const state = useTableSelectionCell_unstable(props, ref);
  useTableSelectionCellStyles_unstable(state);
  const {
    useTableSelectionCellStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableSelectionCell_unstable(state);
});
TableSelectionCell.displayName = "TableSelectionCell";

// node_modules/@fluentui/react-table/lib/components/TableCellActions/TableCellActions.js
var React351 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableCellActions/useTableCellActions.js
var React349 = __toESM(require_react());
var useTableCellActions_unstable = (props, ref) => {
  var _props_visible;
  return {
    components: {
      root: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props
    }),
    visible: (_props_visible = props.visible) !== null && _props_visible !== void 0 ? _props_visible : false
  };
};

// node_modules/@fluentui/react-table/lib/components/TableCellActions/renderTableCellActions.js
var React350 = __toESM(require_react());
var renderTableCellActions_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React350.createElement(slots.root, slotProps.root);
};

// node_modules/@fluentui/react-table/lib/components/TableCellActions/TableCellActions.js
var TableCellActions = React351.forwardRef((props, ref) => {
  const state = useTableCellActions_unstable(props, ref);
  useTableCellActionsStyles_unstable(state);
  const {
    useTableCellActionsStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableCellActions_unstable(state);
});
TableCellActions.displayName = "TableCellActions";

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/TableCellLayout.js
var React355 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayout.js
var React352 = __toESM(require_react());
var tableAvatarSizeMap = {
  medium: 32,
  small: 24,
  "extra-small": 20
};
var useTableCellLayout_unstable = (props, ref) => {
  const {
    size: size2
  } = useTableContext();
  return {
    components: {
      root: "div",
      main: "span",
      description: "span",
      content: "div",
      media: "span"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props
    }),
    appearance: props.appearance,
    truncate: props.truncate,
    main: resolveShorthand(props.main, {
      required: true
    }),
    media: resolveShorthand(props.media),
    description: resolveShorthand(props.description),
    content: resolveShorthand(props.content, {
      required: !!props.description || !!props.children
    }),
    avatarSize: tableAvatarSizeMap[size2],
    size: size2
  };
};

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/renderTableCellLayout.js
var React353 = __toESM(require_react());
var renderTableCellLayout_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React353.createElement(slots.root, slotProps.root, slots.media && React353.createElement(AvatarContextProvider, {
    value: contextValues.avatar
  }, React353.createElement(slots.media, slotProps.media)), slots.content && React353.createElement(slots.content, slotProps.content, slots.main && React353.createElement(slots.main, slotProps.main, slotProps.root.children), slots.description && React353.createElement(slots.description, slotProps.description)));
};

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayoutStyles.js
var tableCellLayoutClassNames = {
  root: "fui-TableCellLayout",
  media: "fui-TableCellLayout__media",
  main: "fui-TableCellLayout__main",
  description: "fui-TableCellLayout__description",
  content: "fui-TableCellLayout__content"
};
var useStyles62 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59",
    i8kkvl: "fsnqrgy",
    Belr9w4: "fylz90v",
    Bh6795r: "fqerorx",
    Bnnss6s: "f1neuvcm",
    xawz: "fkjuxzh"
  },
  rootTruncate: {
    B68tc82: "f1p9o1ba"
  },
  content: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1vx9l62"
  },
  contentTruncate: {
    B68tc82: "f1p9o1ba"
  },
  media: {
    mc9l5x: "f22iagw",
    Bt984gj: "f122n59"
  },
  mediaExtraSmall: {
    Be2twd7: "f4ybsrx"
  },
  mediaSmallAndMedium: {
    Be2twd7: "fe5j1ua"
  },
  mediaPrimary: {
    Be2twd7: "f1rt2boy"
  },
  mainPrimary: {
    Bhrd7zp: "fl43uef"
  },
  mainTruncate: {
    B68tc82: "f1p9o1ba",
    Huce71: "fz5stix",
    ygn44y: "f1cmbuwj"
  },
  description: {
    sj55zd: "fkfq4zb",
    Bahqtrf: "fk6fouc",
    Be2twd7: "fy9rknc",
    Bhrd7zp: "figsok6",
    Bg96gwp: "fwrc4pm"
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".fsnqrgy{-webkit-column-gap:var(--spacingHorizontalS);column-gap:var(--spacingHorizontalS);}", ".fylz90v{row-gap:var(--spacingHorizontalS);}", ".fqerorx{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1neuvcm{-webkit-flex-shrink:1;-ms-flex-negative:1;flex-shrink:1;}", ".fkjuxzh{-webkit-flex-basis:0px;-ms-flex-preferred-size:0px;flex-basis:0px;}", ".f1p9o1ba{overflow-x:hidden;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".f4ybsrx{font-size:16px;}", ".fe5j1ua{font-size:20px;}", ".f1rt2boy{font-size:24px;}", ".fl43uef{font-weight:var(--fontWeightSemibold);}", ".fz5stix{white-space:nowrap;}", ".f1cmbuwj{text-overflow:ellipsis;}", ".fkfq4zb{color:var(--colorNeutralForeground2);}", ".fk6fouc{font-family:var(--fontFamilyBase);}", ".fy9rknc{font-size:var(--fontSizeBase200);}", ".figsok6{font-weight:var(--fontWeightRegular);}", ".fwrc4pm{line-height:var(--lineHeightBase200);}"]
});
var useTableCellLayoutStyles_unstable = (state) => {
  const styles = useStyles62();
  const {
    truncate
  } = state;
  state.root.className = mergeClasses(tableCellLayoutClassNames.root, styles.root, truncate && styles.rootTruncate, state.root.className);
  const primary = state.appearance === "primary";
  if (state.media) {
    const mediaSizedStyles = {
      small: styles.mediaSmallAndMedium,
      medium: styles.mediaSmallAndMedium,
      "extra-small": styles.mediaExtraSmall
    };
    state.media.className = mergeClasses(tableCellLayoutClassNames.media, styles.media, mediaSizedStyles[state.size], primary && styles.mediaPrimary, state.media.className);
  }
  if (state.main) {
    state.main.className = mergeClasses(tableCellLayoutClassNames.main, truncate && styles.mainTruncate, primary && styles.mainPrimary, state.main.className);
  }
  if (state.description) {
    state.description.className = mergeClasses(tableCellLayoutClassNames.description, styles.description, state.description.className);
  }
  if (state.content) {
    state.content.className = mergeClasses(tableCellLayoutClassNames.content, styles.content, truncate && styles.contentTruncate, state.content.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayoutContextValues.js
var React354 = __toESM(require_react());
function useTableCellLayoutContextValues_unstable(state) {
  const {
    avatarSize
  } = state;
  const avatar = React354.useMemo(() => ({
    size: avatarSize
  }), [avatarSize]);
  return {
    avatar
  };
}

// node_modules/@fluentui/react-table/lib/components/TableCellLayout/TableCellLayout.js
var TableCellLayout = React355.forwardRef((props, ref) => {
  const state = useTableCellLayout_unstable(props, ref);
  useTableCellLayoutStyles_unstable(state);
  const {
    useTableCellLayoutStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderTableCellLayout_unstable(state, useTableCellLayoutContextValues_unstable(state));
});
TableCellLayout.displayName = "TableCellLayout";

// node_modules/@fluentui/react-table/lib/components/DataGridCell/DataGridCell.js
var React358 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridCell/useDataGridCell.js
var React357 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/contexts/dataGridContext.js
var dataGridContext = createContext10(void 0);
var dataGridContextDefaultValue = {
  ...defaultTableState,
  subtleSelection: false,
  selectableRows: false,
  selectionAppearance: "brand",
  focusMode: "none"
};
var DataGridContextProvider = dataGridContext.Provider;
var useDataGridContext_unstable = (selector) => useContextSelector(dataGridContext, (ctx = dataGridContextDefaultValue) => selector(ctx));

// node_modules/@fluentui/react-table/lib/contexts/columnIdContext.js
var React356 = __toESM(require_react());
var columnIdContext = React356.createContext(void 0);
var columnIdContextDefaultValue = "";
var _React_useContext8;
var useColumnIdContext = () => (_React_useContext8 = React356.useContext(columnIdContext)) !== null && _React_useContext8 !== void 0 ? _React_useContext8 : columnIdContextDefaultValue;
var ColumnIdContextProvider = columnIdContext.Provider;

// node_modules/@fluentui/react-table/lib/components/DataGridCell/useDataGridCell.js
var useDataGridCell_unstable = (props, ref) => {
  const columnId = useColumnIdContext();
  const tabbable = useDataGridContext_unstable((ctx) => ctx.focusMode === "cell");
  const resizableColumns = useDataGridContext_unstable((ctx) => ctx.resizableColumns);
  const columnSizing = useDataGridContext_unstable((ctx) => ctx.columnSizing_unstable);
  return useTableCell_unstable({
    as: "div",
    role: "gridcell",
    tabIndex: tabbable ? 0 : void 0,
    ...resizableColumns ? columnSizing.getTableCellProps(columnId) : {},
    ...props
  }, ref);
};

// node_modules/@fluentui/react-table/lib/components/DataGridCell/renderDataGridCell.js
var renderDataGridCell_unstable = (state) => {
  return renderTableCell_unstable(state);
};

// node_modules/@fluentui/react-table/lib/components/DataGridCell/useDataGridCellStyles.js
var dataGridCellClassNames = {
  root: "fui-DataGridCell"
};
var useDataGridCellStyles_unstable = (state) => {
  useTableCellStyles_unstable(state);
  state.root.className = mergeClasses(dataGridCellClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridCell/DataGridCell.js
var DataGridCell = React358.forwardRef((props, ref) => {
  const state = useDataGridCell_unstable(props, ref);
  useDataGridCellStyles_unstable(state);
  const {
    useDataGridCellStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDataGridCell_unstable(state);
});
DataGridCell.displayName = "DataGridCell";

// node_modules/@fluentui/react-table/lib/components/DataGridRow/DataGridRow.js
var React363 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridRow/useDataGridRow.js
var React361 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/DataGridSelectionCell.js
var React360 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/useDataGridSelectionCell.js
var React359 = __toESM(require_react());
var useDataGridSelectionCell_unstable = (props, ref) => {
  const isHeader = useIsInTableHeader();
  const rowId = useTableRowIdContext();
  const subtle = useDataGridContext_unstable((ctx) => ctx.subtleSelection);
  const checked = useDataGridContext_unstable((ctx) => {
    if (isHeader && ctx.selection.selectionMode === "multiselect") {
      return ctx.selection.allRowsSelected ? true : ctx.selection.someRowsSelected ? "mixed" : false;
    }
    return ctx.selection.isRowSelected(rowId);
  });
  const toggleAllRows = useDataGridContext_unstable((ctx) => ctx.selection.toggleAllRows);
  const type = useDataGridContext_unstable((ctx) => ctx.selection.selectionMode === "multiselect" ? "checkbox" : "radio");
  const onClick = useEventCallback((e) => {
    var _props_onClick;
    if (isHeader) {
      toggleAllRows(e);
    }
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
  });
  return useTableSelectionCell_unstable({
    as: "div",
    role: "gridcell",
    checked,
    type,
    hidden: isHeader && type === "radio",
    "aria-checked": isHeader ? checked : void 0,
    "aria-selected": isHeader || checked === "mixed" ? void 0 : checked,
    subtle,
    ...props,
    onClick
  }, ref);
};

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/renderDataGridSelectionCell.js
var renderDataGridSelectionCell_unstable = (state) => {
  return renderTableSelectionCell_unstable(state);
};

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/useDataGridSelectionCellStyles.js
var dataGridSelectionCellClassNames = {
  root: "fui-DataGridSelectionCell",
  checkboxIndicator: "fui-DataGridSelectionCell__checkboxIndicator",
  radioIndicator: "fui-DataGridSelectionCell__radioIndicator"
};
var useDataGridSelectionCellStyles_unstable = (state) => {
  useTableSelectionCellStyles_unstable(state);
  state.root.className = mergeClasses(dataGridSelectionCellClassNames.root, state.root.className);
  if (state.checkboxIndicator) {
    state.checkboxIndicator.className = mergeClasses(dataGridSelectionCellClassNames.checkboxIndicator, state.checkboxIndicator.className);
  }
  if (state.radioIndicator) {
    state.radioIndicator.className = mergeClasses(dataGridSelectionCellClassNames.radioIndicator, state.radioIndicator.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridSelectionCell/DataGridSelectionCell.js
var DataGridSelectionCell = React360.forwardRef((props, ref) => {
  const state = useDataGridSelectionCell_unstable(props, ref);
  useDataGridSelectionCellStyles_unstable(state);
  const {
    useDataGridSelectionCellStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDataGridSelectionCell_unstable(state);
});
DataGridSelectionCell.displayName = "DataGridSelectionCell";

// node_modules/@fluentui/react-table/lib/components/DataGridRow/useDataGridRow.js
var useDataGridRow_unstable = (props, ref) => {
  const rowId = useTableRowIdContext();
  const isHeader = useIsInTableHeader();
  const columnDefs = useDataGridContext_unstable((ctx) => ctx.columns);
  const selectable = useDataGridContext_unstable((ctx) => ctx.selectableRows);
  const selected = useDataGridContext_unstable((ctx) => ctx.selection.isRowSelected(rowId));
  const tabbable = useDataGridContext_unstable((ctx) => ctx.focusMode === "row_unstable");
  const appearance = useDataGridContext_unstable((ctx) => {
    if (!isHeader && selectable && ctx.selection.isRowSelected(rowId)) {
      return ctx.selectionAppearance;
    }
    return "none";
  });
  const toggleRow = useDataGridContext_unstable((ctx) => ctx.selection.toggleRow);
  const dataGridContextValue = useDataGridContext_unstable((ctx) => ctx);
  const onClick = useEventCallback((e) => {
    var _props_onClick;
    if (selectable && !isHeader) {
      toggleRow(e, rowId);
    }
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
  });
  const onKeyDown = useEventCallback((e) => {
    var _props_onKeyDown;
    if (selectable && !isHeader && e.key === Space && !isInteractiveHTMLElement(e.target)) {
      e.preventDefault();
      toggleRow(e, rowId);
    }
    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);
  });
  const baseState = useTableRow_unstable({
    appearance,
    "aria-selected": selectable ? selected : void 0,
    ...props,
    onClick,
    onKeyDown,
    children: null,
    as: "div",
    tabIndex: tabbable && !isHeader ? 0 : void 0
  }, ref);
  return {
    ...baseState,
    components: {
      ...baseState.components,
      selectionCell: DataGridSelectionCell
    },
    selectionCell: resolveShorthand(props.selectionCell, {
      required: selectable
    }),
    renderCell: props.children,
    columnDefs,
    dataGridContextValue
  };
};

// node_modules/@fluentui/react-table/lib/components/DataGridRow/renderDataGridRow.js
var React362 = __toESM(require_react());
var renderDataGridRow_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React362.createElement(slots.root, slotProps.root, slots.selectionCell && React362.createElement(slots.selectionCell, slotProps.selectionCell), state.columnDefs.map((columnDef) => React362.createElement(ColumnIdContextProvider, {
    value: columnDef.columnId,
    key: columnDef.columnId
  }, state.renderCell(columnDef, state.dataGridContextValue))));
};

// node_modules/@fluentui/react-table/lib/components/DataGridRow/useDataGridRowStyles.js
var dataGridRowClassNames = {
  root: "fui-DataGridRow",
  selectionCell: "fui-DataGridRow__selectionCell"
};
var useDataGridRowStyles_unstable = (state) => {
  useTableRowStyles_unstable(state);
  state.root.className = mergeClasses(dataGridRowClassNames.root, state.root.className);
  if (state.selectionCell) {
    state.selectionCell.className = mergeClasses(dataGridRowClassNames.selectionCell, state.selectionCell.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridRow/DataGridRow.js
var DataGridRow = React363.forwardRef((props, ref) => {
  const state = useDataGridRow_unstable(props, ref);
  useDataGridRowStyles_unstable(state);
  const {
    useDataGridRowStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDataGridRow_unstable(state);
});
DataGridRow.displayName = "DataGridRow";

// node_modules/@fluentui/react-table/lib/components/DataGridRow/DataGridRow.types.js
var React364 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridBody/DataGridBody.js
var React367 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridBody/useDataGridBody.js
var React365 = __toESM(require_react());
var useDataGridBody_unstable = (props, ref) => {
  const {
    sortable
  } = useTableContext();
  const getRows = useDataGridContext_unstable((ctx) => ctx.getRows);
  const sort = useDataGridContext_unstable((ctx) => ctx.sort.sort);
  const rows = sortable ? sort(getRows()) : getRows();
  const baseState = useTableBody_unstable({
    ...props,
    children: null,
    as: "div"
  }, ref);
  return {
    ...baseState,
    rows,
    renderRow: props.children
  };
};

// node_modules/@fluentui/react-table/lib/components/DataGridBody/renderDataGridBody.js
var React366 = __toESM(require_react());
var renderDataGridBody_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React366.createElement(slots.root, slotProps.root, state.rows.map((row) => React366.createElement(TableRowIdContextProvider, {
    key: row.rowId,
    value: row.rowId
  }, state.renderRow(row))));
};

// node_modules/@fluentui/react-table/lib/components/DataGridBody/useDataGridBodyStyles.js
var dataGridBodyClassNames = {
  root: "fui-DataGridBody"
};
var useDataGridBodyStyles_unstable = (state) => {
  useTableBodyStyles_unstable(state);
  state.root.className = mergeClasses(dataGridBodyClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridBody/DataGridBody.js
var DataGridBody = React367.forwardRef((props, ref) => {
  const state = useDataGridBody_unstable(props, ref);
  useDataGridBodyStyles_unstable(state);
  const {
    useDataGridBodyStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDataGridBody_unstable(state);
});
DataGridBody.displayName = "DataGridBody";

// node_modules/@fluentui/react-table/lib/components/DataGridBody/DataGridBody.types.js
var React368 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGrid/DataGrid.js
var React371 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGrid/useDataGrid.js
var React369 = __toESM(require_react());
var useDataGrid_unstable = (props, ref) => {
  const {
    items,
    columns,
    focusMode = "cell",
    selectionMode,
    onSortChange,
    onSelectionChange,
    defaultSortState,
    sortState,
    selectedItems,
    defaultSelectedItems,
    subtleSelection = false,
    selectionAppearance = "brand",
    getRowId,
    resizableColumns,
    columnSizingOptions,
    onColumnResize
  } = props;
  const navigable = focusMode !== "none";
  const keyboardNavAttr = useArrowNavigationGroup({
    axis: "grid"
  });
  const tableState = useTableFeatures({
    items,
    columns,
    getRowId
  }, [useTableSort({
    defaultSortState,
    sortState,
    onSortChange
  }), useTableSelection({
    defaultSelectedItems,
    selectedItems,
    onSelectionChange,
    selectionMode: selectionMode !== null && selectionMode !== void 0 ? selectionMode : "multiselect"
  }), useTableColumnSizing_unstable({
    onColumnResize,
    columnSizingOptions,
    // The selection cell is not part of the columns, therefore its width needs to be subtracted
    // from the container to make sure the columns don't overflow the table.
    containerWidthOffset: selectionMode ? -CELL_WIDTH : 0
  })]);
  const innerRef = React369.useRef(null);
  const {
    findFirstFocusable,
    findLastFocusable
  } = useFocusFinders();
  const onKeyDown = useEventCallback((e) => {
    var _props_onKeyDown;
    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);
    if (!innerRef.current || !e.ctrlKey || e.defaultPrevented) {
      return;
    }
    if (e.key === Home) {
      const firstRow = innerRef.current.querySelector('[role="row"]');
      if (firstRow) {
        var _findFirstFocusable;
        (_findFirstFocusable = findFirstFocusable(firstRow)) === null || _findFirstFocusable === void 0 ? void 0 : _findFirstFocusable.focus();
      }
    }
    if (e.key === End) {
      const rows = innerRef.current.querySelectorAll('[role="row"]');
      if (rows.length) {
        var _findLastFocusable;
        const lastRow = rows.item(rows.length - 1);
        (_findLastFocusable = findLastFocusable(lastRow)) === null || _findLastFocusable === void 0 ? void 0 : _findLastFocusable.focus();
      }
    }
  });
  const baseTableState = useTable_unstable({
    role: "grid",
    as: "div",
    noNativeElements: true,
    ...navigable && keyboardNavAttr,
    ...props,
    onKeyDown
  }, useMergedRefs(ref, tableState.tableRef, innerRef));
  return {
    ...baseTableState,
    focusMode,
    tableState,
    selectableRows: !!selectionMode,
    subtleSelection,
    selectionAppearance,
    resizableColumns
  };
};

// node_modules/@fluentui/react-table/lib/components/DataGrid/renderDataGrid.js
var React370 = __toESM(require_react());
var renderDataGrid_unstable = (state, contextValues) => {
  return React370.createElement(DataGridContextProvider, {
    value: contextValues.dataGrid
  }, renderTable_unstable(state, contextValues));
};

// node_modules/@fluentui/react-table/lib/components/DataGrid/useDataGridStyles.js
var dataGridClassNames = {
  root: "fui-DataGrid"
};
var useDataGridStyles_unstable = (state) => {
  useTableStyles_unstable(state);
  state.root.className = mergeClasses(dataGridClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGrid/useDataGridContextValues.js
function useDataGridContextValues_unstable(state) {
  const tableContextValues = useTableContextValues_unstable(state);
  return {
    ...tableContextValues,
    dataGrid: {
      ...state.tableState,
      focusMode: state.focusMode,
      selectableRows: state.selectableRows,
      subtleSelection: state.subtleSelection,
      selectionAppearance: state.selectionAppearance,
      resizableColumns: state.resizableColumns
    }
  };
}

// node_modules/@fluentui/react-table/lib/components/DataGrid/DataGrid.js
var DataGrid = React371.forwardRef((props, ref) => {
  const state = useDataGrid_unstable(props, ref);
  useDataGridStyles_unstable(state);
  const {
    useDataGridStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDataGrid_unstable(state, useDataGridContextValues_unstable(state));
});
DataGrid.displayName = "DataGrid";

// node_modules/@fluentui/react-table/lib/components/DataGrid/DataGrid.types.js
var React372 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/DataGridHeader.js
var React374 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/useDataGridHeader.js
var React373 = __toESM(require_react());
var useDataGridHeader_unstable = (props, ref) => {
  return useTableHeader_unstable({
    ...props,
    as: "div"
  }, ref);
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/renderDataGridHeader.js
var renderDataGridHeader_unstable = (state) => {
  return renderTableHeader_unstable(state);
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/useDataGridHeaderStyles.js
var dataGridHeaderClassNames = {
  root: "fui-DataGridHeader"
};
var useDataGridHeaderStyles_unstable = (state) => {
  useTableHeaderStyles_unstable(state);
  state.root.className = mergeClasses(dataGridHeaderClassNames.root, state.root.className);
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeader/DataGridHeader.js
var DataGridHeader = React374.forwardRef((props, ref) => {
  const state = useDataGridHeader_unstable(props, ref);
  useDataGridHeaderStyles_unstable(state);
  const {
    useDataGridHeaderStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDataGridHeader_unstable(state);
});
DataGridHeader.displayName = "DataGridHeader";

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/DataGridHeaderCell.js
var React376 = __toESM(require_react());

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/useDataGridHeaderCell.js
var React375 = __toESM(require_react());
var useDataGridHeaderCell_unstable = (props, ref) => {
  const columnId = useColumnIdContext();
  const {
    sortable
  } = useTableContext();
  const toggleColumnSort = useDataGridContext_unstable((ctx) => ctx.sort.toggleColumnSort);
  const sortDirection = useDataGridContext_unstable((ctx) => sortable ? ctx.sort.getSortDirection(columnId) : void 0);
  const resizableColumns = useDataGridContext_unstable((ctx) => ctx.resizableColumns);
  const columnSizing = useDataGridContext_unstable((ctx) => ctx.columnSizing_unstable);
  const onClick = useEventCallback((e) => {
    var _props_onClick;
    if (sortable) {
      toggleColumnSort(e, columnId);
    }
    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);
  });
  return useTableHeaderCell_unstable({
    sortDirection,
    as: "div",
    tabIndex: sortable ? void 0 : 0,
    ...resizableColumns ? columnSizing.getTableHeaderCellProps(columnId) : {},
    ...props,
    onClick
  }, ref);
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/renderDataGridHeaderCell.js
var renderDataGridHeaderCell_unstable = (state) => {
  return renderTableHeaderCell_unstable(state);
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/useDataGridHeaderCellStyles.js
var dataGridHeaderCellClassNames = {
  root: "fui-DataGridHeaderCell",
  button: "fui-DataGridHeaderCell__button",
  sortIcon: "fui-DataGridHeaderCell__sortIcon",
  aside: "fui-DataGridHeaderCell__aside"
};
var useDataGridHeaderCellStyles_unstable = (state) => {
  useTableHeaderCellStyles_unstable(state);
  state.root.className = mergeClasses(dataGridHeaderCellClassNames.root, state.root.className);
  if (state.button) {
    state.button.className = mergeClasses(dataGridHeaderCellClassNames.button, state.button.className);
  }
  if (state.sortIcon) {
    state.sortIcon.className = mergeClasses(dataGridHeaderCellClassNames.sortIcon, state.sortIcon.className);
  }
  if (state.aside) {
    state.aside.className = mergeClasses(dataGridHeaderCellClassNames.aside, state.aside.className);
  }
  return state;
};

// node_modules/@fluentui/react-table/lib/components/DataGridHeaderCell/DataGridHeaderCell.js
var DataGridHeaderCell = React376.forwardRef((props, ref) => {
  const state = useDataGridHeaderCell_unstable(props, ref);
  useDataGridHeaderCellStyles_unstable(state);
  const {
    useDataGridHeaderCellStyles_unstable: useCustomStyles
  } = useCustomStyleHooks();
  useCustomStyles(state);
  return renderDataGridHeaderCell_unstable(state);
});
DataGridHeaderCell.displayName = "DataGridHeaderCell";

// node_modules/@fluentui/react-card/lib/components/Card/Card.js
var React381 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/Card/useCard.js
var React379 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/Card/useCardSelectable.js
var React377 = __toESM(require_react());
var useCardSelectable = (props, {
  referenceLabel,
  referenceId
}, cardRef) => {
  const {
    checkbox = {},
    selected,
    defaultSelected,
    onSelectionChange,
    floatingAction,
    onClick,
    onKeyDown
  } = props;
  const {
    findAllFocusable
  } = useFocusFinders();
  const checkboxRef = React377.useRef(null);
  const isSelectable = [selected, defaultSelected, onSelectionChange].some((prop) => typeof prop !== "undefined");
  const [isCardSelected, setIsCardSelected] = React377.useState(false);
  const [isSelectFocused, setIsSelectFocused] = React377.useState(false);
  const shouldRestrictTriggerAction = React377.useCallback((event) => {
    if (!cardRef.current) {
      return false;
    }
    const focusableElements = findAllFocusable(cardRef.current);
    const target = event.target;
    const isElementInFocusableGroup = focusableElements.some((element) => element.contains(target));
    const isCheckboxSlot = (checkboxRef === null || checkboxRef === void 0 ? void 0 : checkboxRef.current) === target;
    return isElementInFocusableGroup && !isCheckboxSlot;
  }, [cardRef, findAllFocusable]);
  const onChangeHandler = React377.useCallback((event) => {
    if (shouldRestrictTriggerAction(event)) {
      return;
    }
    const newCheckedValue = !isCardSelected;
    setIsCardSelected(newCheckedValue);
    if (onSelectionChange) {
      onSelectionChange(event, {
        selected: newCheckedValue
      });
    }
  }, [onSelectionChange, isCardSelected, shouldRestrictTriggerAction]);
  const onKeyDownHandler = React377.useCallback((event) => {
    if ([Enter].includes(event.key)) {
      event.preventDefault();
      onChangeHandler(event);
    }
  }, [onChangeHandler]);
  const checkboxSlot = React377.useMemo(() => {
    if (!isSelectable || floatingAction) {
      return;
    }
    const selectableCheckboxProps = {};
    if (referenceId) {
      selectableCheckboxProps["aria-labelledby"] = referenceId;
    } else if (referenceLabel) {
      selectableCheckboxProps["aria-label"] = referenceLabel;
    }
    return resolveShorthand(checkbox, {
      defaultProps: {
        ref: checkboxRef,
        type: "checkbox",
        checked: isCardSelected,
        onChange: (event) => onChangeHandler(event),
        onFocus: () => setIsSelectFocused(true),
        onBlur: () => setIsSelectFocused(false),
        ...selectableCheckboxProps
      }
    });
  }, [checkbox, floatingAction, isCardSelected, isSelectable, onChangeHandler, referenceId, referenceLabel]);
  const floatingActionSlot = React377.useMemo(() => {
    if (!floatingAction) {
      return;
    }
    return resolveShorthand(floatingAction, {
      defaultProps: {
        ref: checkboxRef
      }
    });
  }, [floatingAction]);
  const selectableCardProps = React377.useMemo(() => {
    if (!isSelectable) {
      return null;
    }
    return {
      onClick: mergeCallbacks(onClick, onChangeHandler),
      onKeyDown: mergeCallbacks(onKeyDown, onKeyDownHandler)
    };
  }, [isSelectable, onChangeHandler, onClick, onKeyDown, onKeyDownHandler]);
  React377.useEffect(() => setIsCardSelected(Boolean(defaultSelected !== null && defaultSelected !== void 0 ? defaultSelected : selected)), [defaultSelected, selected, setIsCardSelected]);
  return {
    selected: isCardSelected,
    selectable: isSelectable,
    selectFocused: isSelectFocused,
    selectableCardProps,
    checkboxSlot,
    floatingActionSlot
  };
};

// node_modules/@fluentui/react-card/lib/components/Card/CardContext.js
var React378 = __toESM(require_react());
var cardContext = React378.createContext(void 0);
var cardContextDefaultValue = {
  selectableA11yProps: {
    referenceId: void 0,
    setReferenceId() {
    },
    referenceLabel: void 0,
    setReferenceLabel() {
    }
  }
};
var CardProvider = cardContext.Provider;
var _React_useContext9;
var useCardContext_unstable = () => (_React_useContext9 = React378.useContext(cardContext)) !== null && _React_useContext9 !== void 0 ? _React_useContext9 : cardContextDefaultValue;

// node_modules/@fluentui/react-card/lib/components/Card/useCard.js
var focusMap = {
  off: void 0,
  "no-tab": "limited-trap-focus",
  "tab-exit": "limited",
  "tab-only": "unlimited"
};
var useCardInteractive = ({
  focusMode = "off",
  ...props
}) => {
  const interactive = ["onClick", "onDoubleClick", "onMouseUp", "onMouseDown", "onPointerUp", "onPointerDown", "onTouchStart", "onTouchEnd", "onDragStart", "onDragEnd"].some((prop) => props[prop]);
  const groupperAttrs = useFocusableGroup({
    tabBehavior: focusMap[interactive ? "no-tab" : focusMode]
  });
  const interactiveFocusAttributes = {
    ...groupperAttrs,
    tabIndex: 0
  };
  return {
    interactive,
    focusAttributes: focusMode === "off" ? null : interactiveFocusAttributes
  };
};
var useCard_unstable = (props, ref) => {
  const {
    appearance = "filled",
    orientation = "vertical",
    size: size2 = "medium"
  } = props;
  const [referenceId, setReferenceId] = React379.useState(cardContextDefaultValue.selectableA11yProps.referenceId);
  const [referenceLabel, setReferenceLabel] = React379.useState(cardContextDefaultValue.selectableA11yProps.referenceId);
  const cardBaseRef = useFocusWithin();
  const {
    selectable,
    selected,
    selectableCardProps,
    selectFocused,
    checkboxSlot,
    floatingActionSlot
  } = useCardSelectable(props, {
    referenceId,
    referenceLabel
  }, cardBaseRef);
  const cardRef = useMergedRefs(cardBaseRef, ref);
  const {
    interactive,
    focusAttributes
  } = useCardInteractive(props);
  return {
    appearance,
    orientation,
    size: size2,
    interactive,
    selectable,
    selectFocused,
    selected,
    selectableA11yProps: {
      setReferenceId,
      referenceId,
      referenceLabel,
      setReferenceLabel
    },
    components: {
      root: "div",
      floatingAction: "div",
      checkbox: "input"
    },
    root: getNativeElementProps("div", {
      ref: cardRef,
      role: "group",
      ...focusAttributes,
      ...props,
      ...selectableCardProps
    }),
    floatingAction: floatingActionSlot,
    checkbox: checkboxSlot
  };
};

// node_modules/@fluentui/react-card/lib/components/Card/renderCard.js
var React380 = __toESM(require_react());
var renderCard_unstable = (state, cardContextValue) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React380.createElement(slots.root, slotProps.root, React380.createElement(CardProvider, {
    value: cardContextValue
  }, slots.checkbox ? React380.createElement(slots.checkbox, slotProps.checkbox) : null, slots.floatingAction ? React380.createElement(slots.floatingAction, slotProps.floatingAction) : null, slotProps.root.children));
};

// node_modules/@fluentui/react-card/lib/components/CardPreview/useCardPreviewStyles.js
var cardPreviewClassNames = {
  root: "fui-CardPreview",
  logo: "fui-CardPreview__logo"
};
var useStyles63 = __styles2({
  root: {
    qhf8xq: "f10pi13n",
    pnb5jt: "f1rzl30s",
    Elg2ur: "f1chxnfo",
    B184ckt: "f17xb19f"
  },
  logo: {
    qhf8xq: "f1euv43f",
    B5kzvoi: "f1gcvs1y",
    oyh7mz: ["f1t6tvco", "ffrfxm3"],
    a9b677: "f1szoe96",
    Bqenvij: "f1d2rq10"
  }
}, {
  d: [".f10pi13n{position:relative;}", ".f1rzl30s>:not(.fui-CardPreview__logo){display:block;}", ".f1chxnfo>:not(.fui-CardPreview__logo){height:100%;}", ".f17xb19f>:not(.fui-CardPreview__logo){width:100%;}", ".f1euv43f{position:absolute;}", ".f1gcvs1y{bottom:12px;}", ".f1t6tvco{left:12px;}", ".ffrfxm3{right:12px;}", ".f1szoe96{width:32px;}", ".f1d2rq10{height:32px;}"]
});
var useCardPreviewStyles_unstable = (state) => {
  const styles = useStyles63();
  state.root.className = mergeClasses(cardPreviewClassNames.root, styles.root, state.root.className);
  if (state.logo) {
    state.logo.className = mergeClasses(cardPreviewClassNames.logo, styles.logo, state.logo.className);
  }
  return state;
};

// node_modules/@fluentui/react-card/lib/components/CardHeader/useCardHeaderStyles.js
var cardHeaderClassNames = {
  root: "fui-CardHeader",
  image: "fui-CardHeader__image",
  header: "fui-CardHeader__header",
  description: "fui-CardHeader__description",
  action: "fui-CardHeader__action"
};
var cardHeaderCSSVars = {
  cardHeaderGapVar: "--fui-CardHeader--gap"
};
var useStyles64 = __styles2({
  root: {
    Bkc6ea2: "fkufhic",
    mc9l5x: "f13qh94s",
    t4k1zu: "f8a668j",
    v29qe6: "f4h39za",
    Bt984gj: "f122n59"
  },
  image: {
    mc9l5x: "ftuwxu6",
    t21cq0: ["fql5097", "f6yss9k"],
    Br312pm: "fwpfdsa",
    Ijaq50: "fldnz9j"
  },
  header: {
    Br312pm: "fd46tj4",
    Ijaq50: "f16hsg94"
  },
  description: {
    Br312pm: "fd46tj4",
    Ijaq50: "faunodf"
  },
  action: {
    Frg6f3: ["f6yss9k", "fql5097"],
    Br312pm: "fis13di",
    Ijaq50: "fldnz9j"
  }
}, {
  d: [".fkufhic{--fui-CardHeader--gap:12px;}", ".f13qh94s{display:grid;}", ".f8a668j{grid-auto-columns:min-content 1fr min-content;}", ".f4h39za{grid-auto-rows:1fr min-content;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".ftuwxu6{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}", ".fql5097{margin-right:var(--fui-CardHeader--gap);}", ".f6yss9k{margin-left:var(--fui-CardHeader--gap);}", ".fwpfdsa{grid-column-start:1;}", ".fldnz9j{grid-row-start:span 2;}", ".fd46tj4{grid-column-start:2;}", ".f16hsg94{grid-row-start:1;}", ".faunodf{grid-row-start:2;}", ".fis13di{grid-column-start:3;}"]
});
var useCardHeaderStyles_unstable = (state) => {
  const styles = useStyles64();
  state.root.className = mergeClasses(cardHeaderClassNames.root, styles.root, state.root.className);
  if (state.image) {
    state.image.className = mergeClasses(cardHeaderClassNames.image, styles.image, state.image.className);
  }
  if (state.header) {
    state.header.className = mergeClasses(cardHeaderClassNames.header, styles.header, state.header.className);
  }
  if (state.description) {
    state.description.className = mergeClasses(cardHeaderClassNames.description, styles.description, state.description.className);
  }
  if (state.action) {
    state.action.className = mergeClasses(cardHeaderClassNames.action, styles.action, state.action.className);
  }
  return state;
};

// node_modules/@fluentui/react-card/lib/components/CardFooter/useCardFooterStyles.js
var cardFooterClassNames = {
  root: "fui-CardFooter",
  action: "fui-CardFooter__action"
};
var useStyles65 = __styles2({
  root: {
    mc9l5x: "f22iagw",
    Beiy3e4: "f1063pyq",
    i8kkvl: "f4akndk",
    Belr9w4: "fe5j3v"
  },
  action: {
    Frg6f3: ["fcgxt0o", "f1ujusj6"]
  }
}, {
  d: [".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f1063pyq{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}", ".f4akndk{-webkit-column-gap:12px;column-gap:12px;}", ".fe5j3v{row-gap:12px;}", ".fcgxt0o{margin-left:auto;}", ".f1ujusj6{margin-right:auto;}"]
});
var useCardFooterStyles_unstable = (state) => {
  const styles = useStyles65();
  state.root.className = mergeClasses(cardFooterClassNames.root, styles.root, state.root.className);
  if (state.action) {
    state.action.className = mergeClasses(cardFooterClassNames.action, styles.action, state.action.className);
  }
  return state;
};

// node_modules/@fluentui/react-card/lib/components/Card/useCardStyles.js
var cardClassNames = {
  root: "fui-Card",
  floatingAction: "fui-Card__floatingAction",
  checkbox: "fui-Card__checkbox"
};
var cardCSSVars = {
  cardSizeVar: "--fui-Card--size",
  cardBorderRadiusVar: "--fui-Card--border-radius"
};
var focusOutlineStyle = {
  outlineRadius: `var(${cardCSSVars.cardBorderRadiusVar})`,
  outlineWidth: tokens.strokeWidthThick
};
var useStyles66 = __styles2({
  root: {
    B68tc82: "f1p9o1ba",
    Bmxbyg5: "f1sil6mw",
    Bbmb7ep: ["fifeqxg", "f899z7z"],
    Beyfa6y: ["f899z7z", "fifeqxg"],
    B7oj6ja: ["f4h3tyx", "f18ur2pz"],
    Btl43ni: ["f18ur2pz", "f4h3tyx"],
    z8tnut: "f1lplnzb",
    z189sj: ["f10m5gbb", "f1k04kkk"],
    Byoj8tv: "fhftqfp",
    uwmqm3: ["f1k04kkk", "f10m5gbb"],
    i8kkvl: "fxsr4vj",
    Belr9w4: "fcvsdzp",
    mc9l5x: "f22iagw",
    qhf8xq: "f10pi13n",
    B7ck84d: "f1ewtqcl",
    sj55zd: "f19n0e5",
    E3zdtr: "f1mdlcz9",
    bn5sak: "frwkxtg",
    Eqx8gd: ["f1n6gb5g", "f15yvnhg"],
    B1piin3: ["f15yvnhg", "f1n6gb5g"],
    By385i5: "fo72kxq",
    Bsft5z2: "f13zj6fq",
    B80jsxd: "f1nwj1ja",
    Bm2nyyq: "f8rth92",
    Barhvk9: ["flthirb", "ftkbnf5"],
    Bw17bha: "f1lh990p",
    vfts7: ["ftkbnf5", "flthirb"],
    xrcqlc: "f6czdpx",
    Ihftqj: ["f13hvwk3", "f1en4csx"],
    Bcgy8vk: "f1i1u9k0",
    Bhxzhr1: ["f1en4csx", "f13hvwk3"],
    B3778ie: ["f1qnomq5", "f2fl922"],
    d9w3h3: ["f2fl922", "f1qnomq5"],
    Bl18szs: ["f1anhtl", "f1n2zcl3"],
    B4j8arr: ["f1n2zcl3", "f1anhtl"],
    B2jhnfs: "f16v3d5c",
    wiictr: "f1su8t2g",
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    B8q5s1w: "f8hki3x",
    Bci5o5g: ["f1d2448m", "ffh67wi"],
    n8qw10: "f1bjia2o",
    Bdrgwmp: ["ffh67wi", "f1d2448m"],
    Bm4h7ae: "f15bsgw9",
    B7ys5i9: "f14e48fq",
    Busjfv9: "f18yb2kv",
    Bhk32uz: "fd6o370",
    Bf4ptjt: "fh1cnn4",
    kclons: ["fy7oxxb", "f184ne2d"],
    Bhdgwq3: "fpukqih",
    Blkhhs4: ["f184ne2d", "fy7oxxb"],
    Bqtpl0w: "f99gebs",
    clg4pj: ["f13b0oaq", "f8t2bz6"],
    hgwjuy: "f1jvq617",
    Bonggc9: ["f8t2bz6", "f13b0oaq"],
    B1tsrr9: ["f11unbnk", "fbd201q"],
    Dah5zi: ["fbd201q", "f11unbnk"],
    Bkh64rk: ["f12nqxso", "f1uguk4w"],
    qqdqy8: ["f1uguk4w", "f12nqxso"],
    B6dhp37: "f1dvezut",
    i03rao: ["fd0oaoj", "f1cwg4i8"],
    Boxcth7: "fjvm52t",
    Bsom6fd: ["f1cwg4i8", "fd0oaoj"],
    J0r882: "f3l4wcz",
    Bjwuhne: "f6j2biq",
    Ghsupd: ["fdzzmfx", "fduh8kh"],
    Bule8hv: ["fduh8kh", "fdzzmfx"]
  },
  selectableFocused: {
    Brovlpu: "ftqa4ok",
    B486eqv: "f2hkw1w",
    Bssx7fj: "f1b1k54r",
    uh7if5: ["f4ne723", "fqqcjud"],
    clntm0: "fh7aioi",
    Dlk2r6: ["fqqcjud", "f4ne723"],
    B2j2mmj: "ffht0p2",
    wigs8: "f1p0ul1q",
    pbfy6t: "f1c901ms",
    B0v4ure: "f1alokd7",
    ghq09: "f78i1la",
    B24cy0v: ["f1kvsw7t", "f1bw8brt"],
    Bwckmig: "f8k7e5g",
    Bvwlmkc: ["f1bw8brt", "f1kvsw7t"],
    Bbgo44z: "f125hn41",
    Bil7v7r: ["fgxkx34", "f1v56tyl"],
    skfxo0: "fdxas6f",
    jo1ztg: ["f1v56tyl", "fgxkx34"],
    Ba3ybja: ["fxwickw", "f1ia5cve"],
    az1dzo: ["f1ia5cve", "fxwickw"],
    vppk2z: ["f194aguw", "fqicc6c"],
    B6352mv: ["fqicc6c", "f194aguw"],
    nr063g: "fq4eyks",
    Blmvk6g: ["f1ya6x16", "ftuszwa"],
    Bsiemmq: "f1e2iu44",
    B98u21t: ["ftuszwa", "f1ya6x16"],
    B2pnrqr: "f4a0pcc",
    Bhhzhcn: "f11go4w5",
    Bec0n69: ["f4dzull", "fy687nj"],
    B29w5g4: ["fy687nj", "f4dzull"]
  },
  orientationHorizontal: {
    Beiy3e4: "f1063pyq",
    Bt984gj: "f122n59",
    Bnoktp0: "fpfyeui",
    Idhjb2: "fwi74qw",
    ihgzqh: ["ffcmwrh", "f6ppoih"],
    Bgp6ld0: ["f1dc9p14", "fd933vt"],
    Bbucpmy: "f18esqgw"
  },
  orientationVertical: {
    Beiy3e4: "f1vx9l62",
    Bt4kzjz: ["fobhde4", "fx5r7kn"],
    B1ou843: ["fx5r7kn", "fobhde4"],
    y1433z: "f19chtn8",
    B7egwnw: "fuvs6re",
    B49b4xf: "fy4glsf"
  },
  sizeSmall: {
    B7balbw: "f1pi9uxy",
    B1h88n7: "f1h1zgly"
  },
  sizeMedium: {
    B7balbw: "frsmuga",
    B1h88n7: "fuldkky"
  },
  sizeLarge: {
    B7balbw: "f1qua4xo",
    B1h88n7: "fimkt6v"
  },
  filled: {
    De3pzq: "fxugw4r",
    E5pizo: "f1whvlc6",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"]
  },
  filledInteractive: {
    Bceei9c: "f1k6fduh",
    De3pzq: "fxugw4r",
    E5pizo: "f1whvlc6",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"],
    Jwef8y: "f1knas48",
    Bvxd0ez: "f1m145df",
    ecr2s2: "fb40n2d"
  },
  filledInteractiveSelected: {
    De3pzq: "f1nfm20t",
    B0n5ga8: "f16eln5f",
    s924m2: ["fa2okxs", "fg4zq3l"],
    B1q35kw: "ff6932p",
    Gp14am: ["fg4zq3l", "fa2okxs"],
    Jwef8y: "f1kz6goq"
  },
  filledAlternative: {
    De3pzq: "f1dmdbja",
    E5pizo: "f1whvlc6",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"]
  },
  filledAlternativeInteractive: {
    Bceei9c: "f1k6fduh",
    De3pzq: "f1dmdbja",
    E5pizo: "f1whvlc6",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"],
    Jwef8y: "f1uvynv3",
    Bvxd0ez: "f1m145df",
    ecr2s2: "f1yhgkbh"
  },
  filledAlternativeInteractiveSelected: {
    De3pzq: "fjxa0vh",
    B0n5ga8: "f16eln5f",
    s924m2: ["fa2okxs", "fg4zq3l"],
    B1q35kw: "ff6932p",
    Gp14am: ["fg4zq3l", "fa2okxs"],
    Jwef8y: "fehi0vp"
  },
  outline: {
    De3pzq: "f1c21dwh",
    E5pizo: "f1couhl3",
    B0n5ga8: "ft83z1f",
    s924m2: ["f1g4150c", "f192dr6e"],
    B1q35kw: "f1qnawh6",
    Gp14am: ["f192dr6e", "f1g4150c"]
  },
  outlineInteractive: {
    Bceei9c: "f1k6fduh",
    De3pzq: "f1c21dwh",
    E5pizo: "f1couhl3",
    B0n5ga8: "ft83z1f",
    s924m2: ["f1g4150c", "f192dr6e"],
    B1q35kw: "f1qnawh6",
    Gp14am: ["f192dr6e", "f1g4150c"],
    Jwef8y: "fjxutwb",
    Be0v6ae: "f1llr77y",
    B5kxglz: ["fzk0khw", "fjj8tog"],
    B3pwyw6: "fb1u8ub",
    Bymgtzf: ["fjj8tog", "fzk0khw"],
    ecr2s2: "fophhak",
    dmfk: "f1uohb70",
    B4ofi8: ["f1jm7v1n", "f1bus3rq"],
    jgq6uv: "f1fbu7rr",
    Baxewws: ["f1bus3rq", "f1jm7v1n"]
  },
  outlineInteractiveSelected: {
    De3pzq: "f1q9pm1r",
    B0n5ga8: "f16eln5f",
    s924m2: ["fa2okxs", "fg4zq3l"],
    B1q35kw: "ff6932p",
    Gp14am: ["fg4zq3l", "fa2okxs"],
    Jwef8y: "fg59vm4"
  },
  subtle: {
    De3pzq: "fhovq9v",
    E5pizo: "f1couhl3",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"]
  },
  subtleInteractive: {
    Bceei9c: "f1k6fduh",
    De3pzq: "fhovq9v",
    E5pizo: "f1couhl3",
    B0n5ga8: "f16gxe2i",
    s924m2: ["fpgykix", "fzybk4o"],
    B1q35kw: "f1osi826",
    Gp14am: ["fzybk4o", "fpgykix"],
    Jwef8y: "f1t94bn6",
    ecr2s2: "f1wfn5kd"
  },
  subtleInteractiveSelected: {
    De3pzq: "fq5gl1p",
    B0n5ga8: "f16eln5f",
    s924m2: ["fa2okxs", "fg4zq3l"],
    B1q35kw: "ff6932p",
    Gp14am: ["fg4zq3l", "fa2okxs"],
    Jwef8y: "f1uqaxdt"
  },
  select: {
    qhf8xq: "f1euv43f",
    Bhzewxz: "fqclxi7",
    j35jbq: ["fiv86kb", "f36uhnt"],
    Bj3rh1h: "f19g0ac"
  },
  hiddenCheckbox: {
    B68tc82: "f1p9o1ba",
    Bmxbyg5: "f1sil6mw",
    a9b677: "frkrog8",
    Bqenvij: "f1mpe4l3",
    qhf8xq: "f1euv43f",
    Bh84pgu: "fmf1zke",
    Bgl5zvf: "f1wch0ki",
    Huce71: "fz5stix"
  }
}, {
  d: [".f1p9o1ba{overflow-x:hidden;}", ".f1sil6mw{overflow-y:hidden;}", ".fifeqxg{border-bottom-right-radius:var(--fui-Card--border-radius);}", ".f899z7z{border-bottom-left-radius:var(--fui-Card--border-radius);}", ".f4h3tyx{border-top-right-radius:var(--fui-Card--border-radius);}", ".f18ur2pz{border-top-left-radius:var(--fui-Card--border-radius);}", ".f1lplnzb{padding-top:var(--fui-Card--size);}", ".f10m5gbb{padding-right:var(--fui-Card--size);}", ".f1k04kkk{padding-left:var(--fui-Card--size);}", ".fhftqfp{padding-bottom:var(--fui-Card--size);}", ".fxsr4vj{-webkit-column-gap:var(--fui-Card--size);column-gap:var(--fui-Card--size);}", ".fcvsdzp{row-gap:var(--fui-Card--size);}", ".f22iagw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}", ".f10pi13n{position:relative;}", ".f1ewtqcl{box-sizing:border-box;}", ".f19n0e5{color:var(--colorNeutralForeground1);}", ".f1mdlcz9::after{position:absolute;}", ".frwkxtg::after{top:0;}", ".f1n6gb5g::after{left:0;}", ".f15yvnhg::after{right:0;}", ".fo72kxq::after{bottom:0;}", '.f13zj6fq::after{content:"";}', ".f1nwj1ja::after{pointer-events:none;}", ".f8rth92::after{border-top-style:solid;}", ".flthirb::after{border-right-style:solid;}", ".ftkbnf5::after{border-left-style:solid;}", ".f1lh990p::after{border-bottom-style:solid;}", ".f6czdpx::after{border-top-width:var(--strokeWidthThin);}", ".f13hvwk3::after{border-right-width:var(--strokeWidthThin);}", ".f1en4csx::after{border-left-width:var(--strokeWidthThin);}", ".f1i1u9k0::after{border-bottom-width:var(--strokeWidthThin);}", ".f1qnomq5::after{border-bottom-right-radius:var(--fui-Card--border-radius);}", ".f2fl922::after{border-bottom-left-radius:var(--fui-Card--border-radius);}", ".f1anhtl::after{border-top-right-radius:var(--fui-Card--border-radius);}", ".f1n2zcl3::after{border-top-left-radius:var(--fui-Card--border-radius);}", ".f16v3d5c>.fui-CardHeader,.f16v3d5c>.fui-CardFooter{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}", ".f1su8t2g>:not(.fui-CardPreview):not(.fui-CardHeader):not(.fui-CardFooter){-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f8hki3x[data-fui-focus-visible]{border-top-color:transparent;}", ".f1d2448m[data-fui-focus-visible]{border-right-color:transparent;}", ".ffh67wi[data-fui-focus-visible]{border-left-color:transparent;}", ".f1bjia2o[data-fui-focus-visible]{border-bottom-color:transparent;}", '.f15bsgw9[data-fui-focus-visible]::after{content:"";}', ".f14e48fq[data-fui-focus-visible]::after{position:absolute;}", ".f18yb2kv[data-fui-focus-visible]::after{pointer-events:none;}", ".fd6o370[data-fui-focus-visible]::after{z-index:1;}", ".fh1cnn4[data-fui-focus-visible]::after{border-top-style:solid;}", ".fy7oxxb[data-fui-focus-visible]::after{border-right-style:solid;}", ".f184ne2d[data-fui-focus-visible]::after{border-left-style:solid;}", ".fpukqih[data-fui-focus-visible]::after{border-bottom-style:solid;}", ".f99gebs[data-fui-focus-visible]::after{border-top-width:var(--strokeWidthThick);}", ".f13b0oaq[data-fui-focus-visible]::after{border-right-width:var(--strokeWidthThick);}", ".f8t2bz6[data-fui-focus-visible]::after{border-left-width:var(--strokeWidthThick);}", ".f1jvq617[data-fui-focus-visible]::after{border-bottom-width:var(--strokeWidthThick);}", ".f11unbnk[data-fui-focus-visible]::after{border-bottom-right-radius:var(--fui-Card--border-radius);}", ".fbd201q[data-fui-focus-visible]::after{border-bottom-left-radius:var(--fui-Card--border-radius);}", ".f12nqxso[data-fui-focus-visible]::after{border-top-right-radius:var(--fui-Card--border-radius);}", ".f1uguk4w[data-fui-focus-visible]::after{border-top-left-radius:var(--fui-Card--border-radius);}", ".f1dvezut[data-fui-focus-visible]::after{border-top-color:var(--colorStrokeFocus2);}", ".fd0oaoj[data-fui-focus-visible]::after{border-right-color:var(--colorStrokeFocus2);}", ".f1cwg4i8[data-fui-focus-visible]::after{border-left-color:var(--colorStrokeFocus2);}", ".fjvm52t[data-fui-focus-visible]::after{border-bottom-color:var(--colorStrokeFocus2);}", ".f3l4wcz[data-fui-focus-visible]::after{top:-var(--strokeWidthThick);}", ".f6j2biq[data-fui-focus-visible]::after{bottom:-var(--strokeWidthThick);}", ".fdzzmfx[data-fui-focus-visible]::after{left:-var(--strokeWidthThick);}", ".fduh8kh[data-fui-focus-visible]::after{right:-var(--strokeWidthThick);}", ".f1b1k54r[data-fui-focus-within]:focus-within{border-top-color:transparent;}", ".f4ne723[data-fui-focus-within]:focus-within{border-right-color:transparent;}", ".fqqcjud[data-fui-focus-within]:focus-within{border-left-color:transparent;}", ".fh7aioi[data-fui-focus-within]:focus-within{border-bottom-color:transparent;}", '.ffht0p2[data-fui-focus-within]:focus-within::after{content:"";}', ".f1p0ul1q[data-fui-focus-within]:focus-within::after{position:absolute;}", ".f1c901ms[data-fui-focus-within]:focus-within::after{pointer-events:none;}", ".f1alokd7[data-fui-focus-within]:focus-within::after{z-index:1;}", ".f78i1la[data-fui-focus-within]:focus-within::after{border-top-style:solid;}", ".f1kvsw7t[data-fui-focus-within]:focus-within::after{border-right-style:solid;}", ".f1bw8brt[data-fui-focus-within]:focus-within::after{border-left-style:solid;}", ".f8k7e5g[data-fui-focus-within]:focus-within::after{border-bottom-style:solid;}", ".f125hn41[data-fui-focus-within]:focus-within::after{border-top-width:var(--strokeWidthThick);}", ".fgxkx34[data-fui-focus-within]:focus-within::after{border-right-width:var(--strokeWidthThick);}", ".f1v56tyl[data-fui-focus-within]:focus-within::after{border-left-width:var(--strokeWidthThick);}", ".fdxas6f[data-fui-focus-within]:focus-within::after{border-bottom-width:var(--strokeWidthThick);}", ".fxwickw[data-fui-focus-within]:focus-within::after{border-bottom-right-radius:var(--fui-Card--border-radius);}", ".f1ia5cve[data-fui-focus-within]:focus-within::after{border-bottom-left-radius:var(--fui-Card--border-radius);}", ".f194aguw[data-fui-focus-within]:focus-within::after{border-top-right-radius:var(--fui-Card--border-radius);}", ".fqicc6c[data-fui-focus-within]:focus-within::after{border-top-left-radius:var(--fui-Card--border-radius);}", ".fq4eyks[data-fui-focus-within]:focus-within::after{border-top-color:var(--colorStrokeFocus2);}", ".f1ya6x16[data-fui-focus-within]:focus-within::after{border-right-color:var(--colorStrokeFocus2);}", ".ftuszwa[data-fui-focus-within]:focus-within::after{border-left-color:var(--colorStrokeFocus2);}", ".f1e2iu44[data-fui-focus-within]:focus-within::after{border-bottom-color:var(--colorStrokeFocus2);}", ".f4a0pcc[data-fui-focus-within]:focus-within::after{top:-var(--strokeWidthThick);}", ".f11go4w5[data-fui-focus-within]:focus-within::after{bottom:-var(--strokeWidthThick);}", ".f4dzull[data-fui-focus-within]:focus-within::after{left:-var(--strokeWidthThick);}", ".fy687nj[data-fui-focus-within]:focus-within::after{right:-var(--strokeWidthThick);}", ".f1063pyq{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}", ".f122n59{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}", ".fpfyeui>.fui-CardPreview{margin-top:calc(var(--fui-Card--size) * -1);}", ".fwi74qw>.fui-CardPreview{margin-bottom:calc(var(--fui-Card--size) * -1);}", '.ffcmwrh>:not([aria-hidden="true"]).fui-CardPreview:first-of-type{margin-left:calc(var(--fui-Card--size) * -1);}', '.f6ppoih>:not([aria-hidden="true"]).fui-CardPreview:first-of-type{margin-right:calc(var(--fui-Card--size) * -1);}', '.f1dc9p14>:not([aria-hidden="true"]).fui-CardPreview:last-of-type{margin-right:calc(var(--fui-Card--size) * -1);}', '.fd933vt>:not([aria-hidden="true"]).fui-CardPreview:last-of-type{margin-left:calc(var(--fui-Card--size) * -1);}', ".f18esqgw>.fui-CardHeader:last-of-type,.f18esqgw>.fui-CardFooter:last-of-type{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".f1vx9l62{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", ".fobhde4>.fui-CardPreview{margin-left:calc(var(--fui-Card--size) * -1);}", ".fx5r7kn>.fui-CardPreview{margin-right:calc(var(--fui-Card--size) * -1);}", '.f19chtn8>:not([aria-hidden="true"]).fui-CardPreview:first-of-type{margin-top:calc(var(--fui-Card--size) * -1);}', ".fuvs6re>.fui-Card__floatingAction+.fui-CardPreview{margin-top:calc(var(--fui-Card--size) * -1);}", '.fy4glsf>:not([aria-hidden="true"]).fui-CardPreview:last-of-type{margin-bottom:calc(var(--fui-Card--size) * -1);}', ".f1pi9uxy{--fui-Card--size:8px;}", ".f1h1zgly{--fui-Card--border-radius:var(--borderRadiusSmall);}", ".frsmuga{--fui-Card--size:12px;}", ".fuldkky{--fui-Card--border-radius:var(--borderRadiusMedium);}", ".f1qua4xo{--fui-Card--size:16px;}", ".fimkt6v{--fui-Card--border-radius:var(--borderRadiusLarge);}", ".fxugw4r{background-color:var(--colorNeutralBackground1);}", ".f1whvlc6{box-shadow:var(--shadow4);}", ".f16gxe2i::after{border-top-color:var(--colorTransparentStroke);}", ".fpgykix::after{border-right-color:var(--colorTransparentStroke);}", ".fzybk4o::after{border-left-color:var(--colorTransparentStroke);}", ".f1osi826::after{border-bottom-color:var(--colorTransparentStroke);}", ".f1k6fduh{cursor:pointer;}", ".f1nfm20t{background-color:var(--colorNeutralBackground1Selected);}", ".f16eln5f::after{border-top-color:var(--colorNeutralStroke1Selected);}", ".fa2okxs::after{border-right-color:var(--colorNeutralStroke1Selected);}", ".fg4zq3l::after{border-left-color:var(--colorNeutralStroke1Selected);}", ".ff6932p::after{border-bottom-color:var(--colorNeutralStroke1Selected);}", ".f1dmdbja{background-color:var(--colorNeutralBackground2);}", ".fjxa0vh{background-color:var(--colorNeutralBackground2Selected);}", ".f1c21dwh{background-color:var(--colorTransparentBackground);}", ".f1couhl3{box-shadow:none;}", ".ft83z1f::after{border-top-color:var(--colorNeutralStroke1);}", ".f1g4150c::after{border-right-color:var(--colorNeutralStroke1);}", ".f192dr6e::after{border-left-color:var(--colorNeutralStroke1);}", ".f1qnawh6::after{border-bottom-color:var(--colorNeutralStroke1);}", ".f1q9pm1r{background-color:var(--colorTransparentBackgroundSelected);}", ".fhovq9v{background-color:var(--colorSubtleBackground);}", ".fq5gl1p{background-color:var(--colorSubtleBackgroundSelected);}", ".f1euv43f{position:absolute;}", ".fqclxi7{top:4px;}", ".fiv86kb{right:4px;}", ".f36uhnt{left:4px;}", ".f19g0ac{z-index:1;}", ".frkrog8{width:1px;}", ".f1mpe4l3{height:1px;}", ".fmf1zke{clip:rect(0 0 0 0);}", ".f1wch0ki{-webkit-clip-path:inset(50%);clip-path:inset(50%);}", ".fz5stix{white-space:nowrap;}"],
  f: [".ftqa4ok:focus{outline-style:none;}"],
  i: [".f2hkw1w:focus-visible{outline-style:none;}"],
  h: [".f1knas48:hover{background-color:var(--colorNeutralBackground1Hover);}", ".f1m145df:hover{box-shadow:var(--shadow8);}", ".f1kz6goq:hover{background-color:var(--colorNeutralBackground1Selected);}", ".f1uvynv3:hover{background-color:var(--colorNeutralBackground2Hover);}", ".fehi0vp:hover{background-color:var(--colorNeutralBackground2Selected);}", ".fjxutwb:hover{background-color:var(--colorTransparentBackgroundHover);}", ".f1llr77y:hover::after{border-top-color:var(--colorNeutralStroke1Hover);}", ".fzk0khw:hover::after{border-right-color:var(--colorNeutralStroke1Hover);}", ".fjj8tog:hover::after{border-left-color:var(--colorNeutralStroke1Hover);}", ".fb1u8ub:hover::after{border-bottom-color:var(--colorNeutralStroke1Hover);}", ".fg59vm4:hover{background-color:var(--colorTransparentBackgroundSelected);}", ".f1t94bn6:hover{background-color:var(--colorSubtleBackgroundHover);}", ".f1uqaxdt:hover{background-color:var(--colorSubtleBackgroundSelected);}"],
  a: [".fb40n2d:active{background-color:var(--colorNeutralBackground1Pressed);}", ".f1yhgkbh:active{background-color:var(--colorNeutralBackground2Pressed);}", ".fophhak:active{background-color:var(--colorTransparentBackgroundPressed);}", ".f1uohb70:active::after{border-top-color:var(--colorNeutralStroke1Pressed);}", ".f1jm7v1n:active::after{border-right-color:var(--colorNeutralStroke1Pressed);}", ".f1bus3rq:active::after{border-left-color:var(--colorNeutralStroke1Pressed);}", ".f1fbu7rr:active::after{border-bottom-color:var(--colorNeutralStroke1Pressed);}", ".f1wfn5kd:active{background-color:var(--colorSubtleBackgroundPressed);}"]
});
var useCardStyles_unstable = (state) => {
  const styles = useStyles66();
  const orientationMap = {
    horizontal: styles.orientationHorizontal,
    vertical: styles.orientationVertical
  };
  const sizeMap = {
    small: styles.sizeSmall,
    medium: styles.sizeMedium,
    large: styles.sizeLarge
  };
  const appearanceMap = {
    filled: styles.filled,
    "filled-alternative": styles.filledAlternative,
    outline: styles.outline,
    subtle: styles.subtle
  };
  const selectedMap = {
    filled: styles.filledInteractiveSelected,
    "filled-alternative": styles.filledAlternativeInteractiveSelected,
    outline: styles.outlineInteractiveSelected,
    subtle: styles.subtleInteractiveSelected
  };
  const interactiveMap = {
    filled: styles.filledInteractive,
    "filled-alternative": styles.filledAlternativeInteractive,
    outline: styles.outlineInteractive,
    subtle: styles.subtleInteractive
  };
  state.root.className = mergeClasses(cardClassNames.root, styles.root, orientationMap[state.orientation], sizeMap[state.size], appearanceMap[state.appearance], (state.interactive || state.selectable) && interactiveMap[state.appearance], state.selected && selectedMap[state.appearance], state.selectFocused && styles.selectableFocused, state.root.className);
  if (state.floatingAction) {
    state.floatingAction.className = mergeClasses(cardClassNames.floatingAction, styles.select, state.floatingAction.className);
  }
  if (state.checkbox) {
    state.checkbox.className = mergeClasses(cardClassNames.checkbox, styles.hiddenCheckbox, state.checkbox.className);
  }
  return state;
};

// node_modules/@fluentui/react-card/lib/components/Card/useCardContextValue.js
function useCardContextValue({
  selectableA11yProps
}) {
  return {
    selectableA11yProps
  };
}

// node_modules/@fluentui/react-card/lib/components/Card/Card.js
var Card = React381.forwardRef((props, ref) => {
  const state = useCard_unstable(props, ref);
  const cardContextValue = useCardContextValue(state);
  useCardStyles_unstable(state);
  return renderCard_unstable(state, cardContextValue);
});
Card.displayName = "Card";

// node_modules/@fluentui/react-card/lib/components/Card/Card.types.js
var React382 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardFooter/CardFooter.js
var React385 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardFooter/useCardFooter.js
var React383 = __toESM(require_react());
var useCardFooter_unstable = (props, ref) => {
  const {
    action
  } = props;
  return {
    components: {
      root: "div",
      action: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props
    }),
    action: resolveShorthand(action)
  };
};

// node_modules/@fluentui/react-card/lib/components/CardFooter/renderCardFooter.js
var React384 = __toESM(require_react());
var renderCardFooter_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React384.createElement(slots.root, slotProps.root, slotProps.root.children, slots.action && React384.createElement(slots.action, slotProps.action));
};

// node_modules/@fluentui/react-card/lib/components/CardFooter/CardFooter.js
var CardFooter = React385.forwardRef((props, ref) => {
  const state = useCardFooter_unstable(props, ref);
  useCardFooterStyles_unstable(state);
  return renderCardFooter_unstable(state);
});
CardFooter.displayName = "CardFooter";

// node_modules/@fluentui/react-card/lib/components/CardHeader/CardHeader.js
var React388 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardHeader/useCardHeader.js
var React386 = __toESM(require_react());
var useCardHeader_unstable = (props, ref) => {
  const {
    image,
    header,
    description,
    action
  } = props;
  const {
    selectableA11yProps: {
      referenceId,
      setReferenceId
    }
  } = useCardContext_unstable();
  const headerRef = React386.useRef(null);
  const generatedId = useId2(cardHeaderClassNames.header, referenceId);
  React386.useEffect(() => {
    if (header && headerRef.current) {
      const {
        id
      } = headerRef.current;
      setReferenceId(id ? id : generatedId);
    }
  }, [header, setReferenceId, generatedId]);
  return {
    components: {
      root: "div",
      image: "div",
      header: "div",
      description: "div",
      action: "div"
    },
    root: getNativeElementProps("div", {
      ref,
      ...props
    }),
    image: resolveShorthand(image),
    header: resolveShorthand(header, {
      required: true,
      defaultProps: {
        ref: headerRef,
        id: referenceId
      }
    }),
    description: resolveShorthand(description),
    action: resolveShorthand(action)
  };
};

// node_modules/@fluentui/react-card/lib/components/CardHeader/renderCardHeader.js
var React387 = __toESM(require_react());
var renderCardHeader_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React387.createElement(slots.root, slotProps.root, slots.image && React387.createElement(slots.image, slotProps.image), React387.createElement(slots.header, slotProps.header), slots.description && React387.createElement(slots.description, slotProps.description), slots.action && React387.createElement(slots.action, slotProps.action));
};

// node_modules/@fluentui/react-card/lib/components/CardHeader/CardHeader.js
var CardHeader = React388.forwardRef((props, ref) => {
  const state = useCardHeader_unstable(props, ref);
  useCardHeaderStyles_unstable(state);
  return renderCardHeader_unstable(state);
});
CardHeader.displayName = "CardHeader";

// node_modules/@fluentui/react-card/lib/components/CardPreview/CardPreview.js
var React391 = __toESM(require_react());

// node_modules/@fluentui/react-card/lib/components/CardPreview/useCardPreview.js
var React389 = __toESM(require_react());
var useCardPreview_unstable = (props, ref) => {
  const {
    logo
  } = props;
  const {
    selectableA11yProps: {
      referenceLabel,
      referenceId,
      setReferenceLabel,
      setReferenceId
    }
  } = useCardContext_unstable();
  const previewRef = useMergedRefs(ref, React389.useRef(null));
  React389.useEffect(() => {
    if (referenceLabel && referenceId) {
      return;
    }
    if (previewRef.current && previewRef.current.parentNode) {
      const img = previewRef.current.parentNode.querySelector(`.${cardPreviewClassNames.root} > img`);
      if (img) {
        const ariaLabel = img.getAttribute("aria-label");
        const ariaDescribedby = img.getAttribute("aria-describedby");
        if (ariaDescribedby) {
          setReferenceId(ariaDescribedby);
        } else if (img.alt) {
          setReferenceLabel(img.alt);
        } else if (ariaLabel) {
          setReferenceLabel(ariaLabel);
        }
      }
    }
  }, [setReferenceLabel, referenceLabel, previewRef, referenceId, setReferenceId]);
  return {
    components: {
      root: "div",
      logo: "div"
    },
    root: getNativeElementProps("div", {
      ref: previewRef,
      ...props
    }),
    logo: resolveShorthand(logo)
  };
};

// node_modules/@fluentui/react-card/lib/components/CardPreview/renderCardPreview.js
var React390 = __toESM(require_react());
var renderCardPreview_unstable = (state) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  return React390.createElement(slots.root, slotProps.root, slotProps.root.children, slots.logo && React390.createElement(slots.logo, slotProps.logo));
};

// node_modules/@fluentui/react-card/lib/components/CardPreview/CardPreview.js
var CardPreview = React391.forwardRef((props, ref) => {
  const state = useCardPreview_unstable(props, ref);
  useCardPreviewStyles_unstable(state);
  return renderCardPreview_unstable(state);
});
CardPreview.displayName = "CardPreview";
export {
  Accordion,
  AccordionHeader,
  AccordionItem,
  AccordionItemProvider,
  AccordionPanel,
  AccordionProvider,
  Avatar,
  AvatarGroup,
  AvatarGroupItem,
  AvatarGroupPopover,
  AvatarGroupProvider,
  Badge,
  Body1,
  Body1Strong,
  Body1Stronger,
  Body2,
  Button,
  Caption1,
  Caption1Strong,
  Caption1Stronger,
  Caption2,
  Caption2Strong,
  Card,
  CardFooter,
  CardHeader,
  CardPreview,
  Checkbox,
  Combobox,
  ComboboxProvider,
  CompoundButton,
  CounterBadge,
  DATA_OVERFLOWING,
  DATA_OVERFLOW_ITEM,
  DATA_OVERFLOW_MENU,
  DataGrid,
  DataGridBody,
  DataGridCell,
  DataGridHeader,
  DataGridHeaderCell,
  DataGridRow,
  DataGridSelectionCell,
  Dialog,
  DialogActions,
  DialogBody,
  DialogContent,
  DialogSurface,
  DialogTitle,
  DialogTrigger,
  Display,
  Divider,
  Dropdown,
  FluentProvider,
  IdPrefixProvider,
  Image,
  Input,
  Label,
  LargeTitle,
  Link2 as Link,
  Listbox,
  ListboxProvider,
  Menu,
  MenuButton,
  MenuDivider,
  MenuGroup,
  MenuGroupContextProvider,
  MenuGroupHeader,
  MenuItem,
  MenuItemCheckbox,
  MenuItemRadio,
  MenuList,
  MenuListProvider,
  MenuPopover,
  MenuProvider,
  MenuSplitGroup,
  MenuTrigger,
  MenuTriggerContextProvider,
  Option,
  OptionGroup,
  Overflow,
  OverflowItem,
  Persona,
  Popover,
  PopoverProvider,
  PopoverSurface,
  PopoverTrigger,
  Portal,
  PresenceBadge,
  ProgressBar,
  Radio,
  RadioGroup,
  RadioGroupProvider,
  RendererProvider,
  SSRProvider,
  Select2 as Select,
  Slider,
  SpinButton,
  Spinner,
  SplitButton,
  Subtitle1,
  Subtitle2,
  Subtitle2Stronger,
  Switch,
  Tab2 as Tab,
  TabList,
  TabListProvider,
  Table,
  TableBody,
  TableCell,
  TableCellActions,
  TableCellLayout,
  TableContextProvider,
  TableHeader,
  TableHeaderCell,
  TableResizeHandle,
  TableRow,
  TableRowIdContextProvider,
  TableSelectionCell,
  Text,
  Textarea,
  Title1,
  Title2,
  Title3,
  ToggleButton,
  Toolbar,
  ToolbarButton,
  ToolbarDivider,
  ToolbarGroup,
  ToolbarRadioButton,
  ToolbarRadioGroup,
  ToolbarToggleButton,
  Tooltip,
  __css,
  __resetCSS,
  __resetStyles,
  __styles2 as __styles,
  accordionClassNames,
  accordionHeaderClassNames,
  accordionItemClassNames,
  accordionPanelClassNames,
  arrowHeights,
  avatarClassNames,
  avatarGroupClassNames,
  avatarGroupItemClassNames,
  avatarGroupPopoverClassNames,
  badgeClassNames,
  body1ClassNames,
  body1StrongClassNames,
  body1StrongerClassNames,
  body2ClassNames,
  buttonClassNames,
  caption1ClassNames,
  caption1StrongClassNames,
  caption1StrongerClassNames,
  caption2ClassNames,
  caption2StrongClassNames,
  cardCSSVars,
  cardClassNames,
  cardFooterClassNames,
  cardHeaderCSSVars,
  cardHeaderClassNames,
  cardPreviewClassNames,
  checkboxClassNames,
  comboboxClassNames,
  compoundButtonClassNames,
  counterBadgeClassNames,
  createCustomFocusIndicatorStyle,
  createDOMRenderer,
  createDarkTheme,
  createFocusOutlineStyle,
  createHighContrastTheme,
  createLightTheme,
  createTableColumn,
  createTeamsDarkTheme,
  dataGridBodyClassNames,
  dataGridCellClassNames,
  dataGridClassNames,
  dataGridHeaderCellClassNames,
  dataGridHeaderClassNames,
  dataGridRowClassNames,
  dataGridSelectionCellClassNames,
  dialogActionsClassNames,
  dialogBodyClassNames,
  dialogContentClassNames,
  dialogSurfaceClassNames,
  dialogTitleClassNames,
  displayClassNames,
  dividerClassNames,
  dropdownClassNames,
  fluentProviderClassNames,
  getNativeElementProps,
  getPartitionedNativeProps,
  getSlots,
  imageClassNames,
  inputClassNames,
  labelClassNames,
  largeTitleClassNames,
  linkClassNames,
  listboxClassNames,
  makeResetStyles,
  makeStaticStyles,
  makeStyles,
  menuButtonClassNames,
  menuDividerClassNames,
  menuGroupClassNames,
  menuGroupHeaderClassNames,
  menuItemCheckboxClassNames,
  menuItemClassNames,
  menuItemRadioClassNames,
  menuListClassNames,
  menuPopoverClassNames,
  menuSplitGroupClassNames,
  mergeClasses,
  optionClassNames,
  optionGroupClassNames,
  partitionAvatarGroupItems,
  personaClassNames,
  popoverSurfaceClassNames,
  presenceBadgeClassNames,
  progressBarClassNames,
  radioClassNames,
  radioGroupClassNames,
  renderAccordionHeader_unstable,
  renderAccordionItem_unstable,
  renderAccordionPanel_unstable,
  renderAccordion_unstable,
  renderAvatarGroupItem_unstable,
  renderAvatarGroupPopover_unstable,
  renderAvatarGroup_unstable,
  renderAvatar_unstable,
  renderBadge_unstable,
  renderButton_unstable,
  renderCardFooter_unstable,
  renderCardHeader_unstable,
  renderCardPreview_unstable,
  renderCard_unstable,
  renderCheckbox_unstable,
  renderCombobox_unstable,
  renderCompoundButton_unstable,
  renderDataGridBody_unstable,
  renderDataGridCell_unstable,
  renderDataGridHeaderCell_unstable,
  renderDataGridHeader_unstable,
  renderDataGridRow_unstable,
  renderDataGridSelectionCell_unstable,
  renderDataGrid_unstable,
  renderDialogActions_unstable,
  renderDialogBody_unstable,
  renderDialogContent_unstable,
  renderDialogSurface_unstable,
  renderDialogTitle_unstable,
  renderDialogTrigger_unstable,
  renderDialog_unstable,
  renderDivider_unstable,
  renderDropdown_unstable,
  renderFluentProvider_unstable,
  renderImage_unstable,
  renderInput_unstable,
  renderLabel_unstable,
  renderLink_unstable,
  renderListbox_unstable,
  renderMenuButton_unstable,
  renderMenuDivider_unstable,
  renderMenuGroupHeader_unstable,
  renderMenuGroup_unstable,
  renderMenuItemCheckbox_unstable,
  renderMenuItemRadio_unstable,
  renderMenuItem_unstable,
  renderMenuList_unstable,
  renderMenuPopover_unstable,
  renderMenuSplitGroup_unstable,
  renderMenuTrigger_unstable,
  renderMenu_unstable,
  renderOptionGroup_unstable,
  renderOption_unstable,
  renderPersona_unstable,
  renderPopoverSurface_unstable,
  renderPopoverTrigger_unstable,
  renderPopover_unstable,
  renderPortal_unstable,
  renderProgressBar_unstable,
  renderRadioGroup_unstable,
  renderRadio_unstable,
  renderSelect_unstable,
  renderSlider_unstable,
  renderSpinButton_unstable,
  renderSpinner_unstable,
  renderSplitButton_unstable,
  renderSwitch_unstable,
  renderTabList_unstable,
  renderTab_unstable,
  renderTableBody_unstable,
  renderTableCellActions_unstable,
  renderTableCellLayout_unstable,
  renderTableCell_unstable,
  renderTableHeaderCell_unstable,
  renderTableHeader_unstable,
  renderTableResizeHandle_unstable,
  renderTableRow_unstable,
  renderTableSelectionCell_unstable,
  renderTable_unstable,
  renderText_unstable,
  renderTextarea_unstable,
  renderToStyleElements,
  renderButton_unstable as renderToggleButton_unstable,
  renderToolbarGroup_unstable,
  renderToolbar_unstable,
  renderTooltip_unstable,
  resetIdsForTests,
  resolveShorthand,
  selectClassNames,
  shorthands,
  sliderCSSVars,
  sliderClassNames,
  spinButtonClassNames,
  spinnerClassNames,
  splitButtonClassNames,
  subtitle1ClassNames,
  subtitle2ClassNames,
  subtitle2StrongerClassNames,
  switchClassNames,
  tabClassNames,
  tabListClassNames,
  tableBodyClassName,
  tableBodyClassNames,
  tableCellActionsClassNames,
  tableCellClassName,
  tableCellClassNames,
  tableCellLayoutClassNames,
  tableClassName,
  tableClassNames,
  tableHeaderCellClassName,
  tableHeaderCellClassNames,
  tableHeaderClassName,
  tableHeaderClassNames,
  tableResizeHandleClassNames,
  tableRowClassName,
  tableRowClassNames,
  tableSelectionCellClassNames,
  teamsDarkTheme,
  teamsHighContrastTheme,
  teamsLightTheme,
  textClassNames,
  textareaClassNames,
  themeToTokensObject,
  title1ClassNames,
  title2ClassNames,
  title3ClassNames,
  toggleButtonClassNames,
  tokens,
  toolbarClassNames,
  toolbarGroupClassNames,
  tooltipClassNames,
  typographyStyles,
  useAccordionContextValues_unstable,
  useAccordionContext_unstable,
  useAccordionHeaderContextValues_unstable,
  useAccordionHeaderStyles_unstable,
  useAccordionHeader_unstable,
  useAccordionItemContextValues_unstable,
  useAccordionItemContext_unstable,
  useAccordionItemStyles_unstable,
  useAccordionItem_unstable,
  useAccordionPanelStyles_unstable,
  useAccordionPanel_unstable,
  useAccordionStyles_unstable,
  useAccordion_unstable,
  useArrowNavigationGroup,
  useAvatarGroupContextValues,
  useAvatarGroupContext_unstable,
  useAvatarGroupItemStyles_unstable,
  useAvatarGroupItem_unstable,
  useAvatarGroupPopoverStyles_unstable,
  useAvatarGroupPopover_unstable,
  useAvatarGroupStyles_unstable,
  useAvatarGroup_unstable,
  useAvatarStyles_unstable,
  useAvatar_unstable,
  useBadgeStyles_unstable,
  useBadge_unstable,
  useButtonStyles_unstable,
  useButton_unstable,
  useCardFooterStyles_unstable,
  useCardFooter_unstable,
  useCardHeaderStyles_unstable,
  useCardHeader_unstable,
  useCardPreviewStyles_unstable,
  useCardPreview_unstable,
  useCardStyles_unstable,
  useCard_unstable,
  useCheckboxStyles_unstable,
  useCheckbox_unstable,
  useCheckmarkStyles_unstable,
  useComboboxContextValues,
  useComboboxStyles_unstable,
  useCombobox_unstable,
  useCompoundButtonStyles_unstable,
  useCompoundButton_unstable,
  useCounterBadgeStyles_unstable,
  useCounterBadge_unstable,
  useDataGridBodyStyles_unstable,
  useDataGridBody_unstable,
  useDataGridCellStyles_unstable,
  useDataGridCell_unstable,
  useDataGridContextValues_unstable,
  useDataGridHeaderCellStyles_unstable,
  useDataGridHeaderCell_unstable,
  useDataGridHeaderStyles_unstable,
  useDataGridHeader_unstable,
  useDataGridRowStyles_unstable,
  useDataGridRow_unstable,
  useDataGridSelectionCellStyles_unstable,
  useDataGridSelectionCell_unstable,
  useDataGridStyles_unstable,
  useDataGrid_unstable,
  useDialogActionsStyles_unstable,
  useDialogActions_unstable,
  useDialogBodyStyles_unstable,
  useDialogBody_unstable,
  useDialogContentStyles_unstable,
  useDialogContent_unstable,
  useDialogSurfaceStyles_unstable,
  useDialogSurface_unstable,
  useDialogTitleStyles_unstable,
  useDialogTitle_unstable,
  useDialogTrigger_unstable,
  useDialog_unstable,
  useDividerStyles_unstable,
  useDivider_unstable,
  useDropdownStyles_unstable,
  useDropdown_unstable,
  useFluent,
  useFluentProviderContextValues_unstable,
  useFluentProviderStyles_unstable,
  useFluentProvider_unstable,
  useFocusFinders,
  useFocusWithin,
  useFocusableGroup,
  useId2 as useId,
  useImageStyles_unstable,
  useImage_unstable,
  useInputStyles_unstable,
  useInput_unstable,
  useIsOverflowGroupVisible,
  useIsOverflowItemVisible,
  useIsSSR,
  useIsomorphicLayoutEffect,
  useKeyboardNavAttribute,
  useLabelStyles_unstable,
  useLabel_unstable,
  useLinkState_unstable,
  useLinkStyles_unstable,
  useLink_unstable,
  useListboxContextValues,
  useListboxStyles_unstable,
  useListbox_unstable,
  useMenuButtonStyles_unstable,
  useMenuButton_unstable,
  useMenuContextValues_unstable,
  useMenuContext_unstable,
  useMenuDividerStyles_unstable,
  useMenuDivider_unstable,
  useMenuGroupContextValues_unstable,
  useMenuGroupContext_unstable,
  useMenuGroupHeaderStyles_unstable,
  useMenuGroupHeader_unstable,
  useMenuGroupStyles_unstable,
  useMenuGroup_unstable,
  useMenuItemCheckboxStyles_unstable,
  useMenuItemCheckbox_unstable,
  useMenuItemRadioStyles_unstable,
  useMenuItemRadio_unstable,
  useMenuItemStyles_unstable,
  useMenuItem_unstable,
  useMenuListContextValues_unstable,
  useMenuListContext_unstable,
  useMenuListStyles_unstable,
  useMenuList_unstable,
  useMenuPopoverStyles_unstable,
  useMenuPopover_unstable,
  useMenuSplitGroupStyles_unstable,
  useMenuSplitGroup_unstable,
  useMenuTriggerContext_unstable,
  useMenuTrigger_unstable,
  useMenu_unstable,
  useMergedRefs,
  useModalAttributes,
  useOptionGroupStyles_unstable,
  useOptionGroup_unstable,
  useOptionStyles_unstable,
  useOption_unstable,
  useOverflowMenu,
  usePersonaStyles_unstable,
  usePersona_unstable,
  usePopoverContext_unstable,
  usePopoverSurfaceStyles_unstable,
  usePopoverSurface_unstable,
  usePopoverTrigger_unstable,
  usePopover_unstable,
  usePortal_unstable,
  usePresenceBadgeStyles_unstable,
  usePresenceBadge_unstable,
  useProgressBarStyles_unstable,
  useProgressBar_unstable,
  useRadioGroupContextValues,
  useRadioGroupContext_unstable,
  useRadioGroupStyles_unstable,
  useRadioGroup_unstable,
  useRadioStyles_unstable,
  useRadio_unstable,
  useScrollbarWidth,
  useSelectStyles_unstable,
  useSelect_unstable,
  useSliderState_unstable,
  useSliderStyles_unstable,
  useSlider_unstable,
  useSpinButtonStyles_unstable,
  useSpinButton_unstable,
  useSpinnerStyles_unstable,
  useSpinner_unstable,
  useSplitButtonStyles_unstable,
  useSplitButton_unstable,
  useSwitchStyles_unstable,
  useSwitch_unstable,
  useTabListContextValues_unstable,
  useTabListContext_unstable,
  useTabListStyles_unstable,
  useTabList_unstable,
  useTabStyles_unstable,
  useTab_unstable,
  useTableBodyStyles_unstable,
  useTableBody_unstable,
  useTableCellActionsStyles_unstable,
  useTableCellActions_unstable,
  useTableCellLayoutStyles_unstable,
  useTableCellLayout_unstable,
  useTableCellStyles_unstable,
  useTableCell_unstable,
  useTableColumnSizing_unstable,
  useTableContext,
  useTableFeatures,
  useTableHeaderCellStyles_unstable,
  useTableHeaderCell_unstable,
  useTableHeaderStyles_unstable,
  useTableHeader_unstable,
  useTableResizeHandleStyles_unstable,
  useTableResizeHandle_unstable,
  useTableRowIdContext,
  useTableRowStyles_unstable,
  useTableRow_unstable,
  useTableSelection,
  useTableSelectionCellStyles_unstable,
  useTableSelectionCell_unstable,
  useTableSort,
  useTableStyles_unstable,
  useTable_unstable,
  useTextStyles_unstable,
  useText_unstable,
  useTextareaStyles_unstable,
  useTextarea_unstable,
  useThemeClassName,
  useToggleButtonStyles_unstable,
  useToggleButton_unstable,
  useToggleState,
  useToolbarButtonStyles_unstable,
  useToolbarButton_unstable,
  useToolbarDividerStyles_unstable,
  useToolbarDivider_unstable,
  useToolbarGroupStyles_unstable,
  useToolbarGroup_unstable,
  useToolbarRadioButtonStyles_unstable,
  useToolbarRadioButton_unstable,
  useToolbarStyles_unstable,
  useToolbarToggleButtonStyles_unstable,
  useToolbarToggleButton_unstable,
  useToolbar_unstable,
  useTooltipStyles_unstable,
  useTooltipVisibility,
  useTooltip_unstable,
  webDarkTheme,
  webLightTheme
};
/*! Bundled license information:

scheduler/cjs/scheduler.development.js:
  (** @license React v0.20.2
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

keyborg/dist/keyborg.esm.js:
  (*!
   * Copyright (c) Microsoft Corporation. All rights reserved.
   * Licensed under the MIT License.
   *)

keyborg/dist/keyborg.esm.js:
  (*!
   * Copyright (c) Microsoft Corporation. All rights reserved.
   * Licensed under the MIT License.
   *)

tabster/dist/tabster.esm.js:
  (*!
   * Copyright (c) Microsoft Corporation. All rights reserved.
   * Licensed under the MIT License.
   *)

tabster/dist/tabster.esm.js:
  (*!
   * Copyright (c) Microsoft Corporation. All rights reserved.
   * Licensed under the MIT License.
   *)

tabster/dist/tabster.esm.js:
  (*!
   * Copyright (c) Microsoft Corporation. All rights reserved.
   * Licensed under the MIT License.
   *)

tabster/dist/tabster.esm.js:
  (*!
   * Copyright (c) Microsoft Corporation. All rights reserved.
   * Licensed under the MIT License.
   *)

tabster/dist/tabster.esm.js:
  (*!
   * Copyright (c) Microsoft Corporation. All rights reserved.
   * Licensed under the MIT License.
   *)
*/
//# sourceMappingURL=@fluentui_react-components.js.map
