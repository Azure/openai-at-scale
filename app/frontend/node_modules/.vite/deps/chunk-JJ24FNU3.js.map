{
  "version": 3,
  "sources": ["../../@fluentui/react/lib/components/Persona/components/Persona/Persona.base.tsx", "../../@fluentui/react/lib/components/Tooltip/components/Tooltip/Tooltip.base.tsx", "../../@fluentui/react/lib/components/Callout/components/Callout/Callout.tsx", "../../@fluentui/react/lib/components/Callout/components/Callout/CalloutContent.base.tsx", "../../@fluentui/react/lib/common/common/DirectionalHint.ts", "../../@fluentui/react/lib/utilities/positioning/utilities/positioning/positioning.types.ts", "../../@fluentui/react/lib/utilities/positioning/utilities/positioning/positioning.ts", "../../@fluentui/react/lib/components/Popup/components/Popup/Popup.tsx", "../../@fluentui/react-hooks/lib/version.ts", "../../@fluentui/react-hooks/lib/useAsync.ts", "../../@fluentui/react-hooks/lib/useBoolean.ts", "../../@fluentui/react-hooks/lib/useConst.ts", "../../@fluentui/react-hooks/lib/useConstCallback.ts", "../../@fluentui/react-hooks/lib/useControllableValue.ts", "../../@fluentui/react-hooks/lib/useEventCallback.ts", "../../@fluentui/react-hooks/lib/useForceUpdate.ts", "../../@fluentui/react-hooks/lib/useId.ts", "../../@fluentui/react-hooks/lib/useMergedRefs.ts", "../../@fluentui/react-hooks/lib/useMount.ts", "../../@fluentui/react-hooks/lib/useMountSync.ts", "../../@fluentui/react-hooks/lib/useOnEvent.ts", "../../@fluentui/react-hooks/lib/usePrevious.ts", "../../@fluentui/react-hooks/lib/useRefEffect.ts", "../../@fluentui/react-hooks/lib/useSetInterval.ts", "../../@fluentui/react-hooks/lib/useSetTimeout.ts", "../../@fluentui/react-hooks/lib/useTarget.ts", "../../@fluentui/react-window-provider/lib/WindowProvider.tsx", "../../@fluentui/react-window-provider/lib/version.ts", "../../@fluentui/react-hooks/lib/useUnmount.ts", "../../@fluentui/react-hooks/lib/useWarnings.ts", "../../@fluentui/react/lib/components/Callout/components/Callout/CalloutContent.styles.ts", "../../@fluentui/react/lib/components/Callout/components/Callout/CalloutContent.tsx", "../../@fluentui/react-portal-compat-context/src/PortalCompatContext.ts", "../../@fluentui/react/lib/components/Layer/components/Layer/Layer.base.tsx", "../../@fluentui/react/lib/components/Fabric/components/Fabric/Fabric.base.tsx", "../../@fluentui/react/lib/components/Fabric/components/Fabric/Fabric.styles.ts", "../../@fluentui/react/lib/components/Fabric/components/Fabric/Fabric.tsx", "../../@fluentui/react/lib/components/Layer/components/Layer/Layer.notification.ts", "../../@fluentui/react/lib/components/Layer/components/Layer/Layer.styles.ts", "../../@fluentui/react/lib/components/Layer/components/Layer/Layer.tsx", "../../@fluentui/react/lib/components/Layer/components/Layer/LayerHost.tsx", "../../@fluentui/react/lib/components/Callout/components/Callout/FocusTrapCallout.tsx", "../../@fluentui/react/lib/components/FocusTrapZone/components/FocusTrapZone/FocusTrapZone.tsx", "../../@fluentui/react/lib/components/Tooltip/components/Tooltip/Tooltip.styles.ts", "../../@fluentui/react/lib/components/Tooltip/components/Tooltip/Tooltip.tsx", "../../@fluentui/react/lib/components/Tooltip/components/Tooltip/Tooltip.types.ts", "../../@fluentui/react/lib/components/Tooltip/components/Tooltip/TooltipHost.base.tsx", "../../@fluentui/react/lib/components/Tooltip/components/Tooltip/TooltipHost.types.ts", "../../@fluentui/react/lib/components/Tooltip/components/Tooltip/TooltipHost.styles.ts", "../../@fluentui/react/lib/components/Tooltip/components/Tooltip/TooltipHost.ts", "../../@fluentui/react/lib/components/Persona/PersonaCoin/components/Persona/PersonaCoin/PersonaCoin.base.tsx", "../../@fluentui/react/lib/components/Persona/PersonaPresence/components/Persona/PersonaPresence/PersonaPresence.base.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/Icon.base.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/Icon.types.ts", "../../@fluentui/react/lib/components/Image/components/Image/Image.base.tsx", "../../@fluentui/react/lib/components/Image/components/Image/Image.types.ts", "../../@fluentui/react/lib/components/Image/components/Image/Image.styles.ts", "../../@fluentui/react/lib/components/Image/components/Image/Image.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/FontIcon.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/Icon.styles.ts", "../../@fluentui/react/lib/components/Icon/components/Icon/Icon.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/ImageIcon.tsx", "../../@fluentui/react/lib/components/Persona/components/Persona/Persona.types.ts", "../../@fluentui/react/lib/components/Persona/components/Persona/PersonaConsts.tsx", "../../@fluentui/react/lib/components/Persona/PersonaPresence/components/Persona/PersonaPresence/PersonaPresence.styles.ts", "../../@fluentui/react/lib/components/Persona/PersonaPresence/components/Persona/PersonaPresence/PersonaPresence.tsx", "../../@fluentui/react/lib/components/Persona/components/Persona/PersonaInitialsColor.ts", "../../@fluentui/react/lib/components/Persona/PersonaCoin/components/Persona/PersonaCoin/PersonaCoin.styles.ts", "../../@fluentui/react/lib/components/Persona/PersonaCoin/components/Persona/PersonaCoin/PersonaCoin.tsx", "../../@fluentui/react/lib/components/Persona/components/Persona/Persona.styles.ts", "../../@fluentui/react/lib/components/Persona/components/Persona/Persona.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport { classNamesFunction, divProperties, getNativeProps, getPropsWithDefaults } from '../../Utilities';\nimport { TooltipHost, TooltipOverflowMode } from '../../Tooltip';\nimport { PersonaCoin } from './PersonaCoin/PersonaCoin';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from './Persona.types';\nimport { useWarnings, useMergedRefs } from '@fluentui/react-hooks';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { IRenderFunction } from '../../Utilities';\nimport type { IPersonaProps, IPersonaStyleProps, IPersonaStyles, IPersonaCoinProps } from './Persona.types';\n\nconst getClassNames = classNamesFunction<IPersonaStyleProps, IPersonaStyles>();\n\nconst DEFAULT_PROPS = {\n  size: PersonaSize.size48,\n  presence: PersonaPresenceEnum.none,\n  imageAlt: '',\n  showOverflowTooltip: true,\n};\n\nfunction useDebugWarnings(props: IPersonaProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Persona',\n      props,\n      deprecations: { primaryText: 'text' },\n    });\n  }\n}\n\n/**\n * Persona with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport const PersonaBase: React.FunctionComponent<IPersonaProps> = React.forwardRef<HTMLDivElement, IPersonaProps>(\n  (propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n    useDebugWarnings(props);\n    const rootRef = React.useRef<HTMLDivElement>(null);\n    const mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n\n    /**\n     * Deprecation helper for getting text.\n     */\n    const getText = (): string => {\n      // eslint-disable-next-line deprecation/deprecation\n      return props.text || props.primaryText || '';\n    };\n\n    /**\n     * Renders various types of Text (primaryText, secondaryText, etc)\n     * based on the classNames passed\n     * @param elementClassNames - element className\n     * @param renderFunction - render function\n     * @param defaultRenderFunction - default render function\n     */\n    const renderElement = (\n      elementClassNames: string,\n      renderFunction: IRenderFunction<IPersonaProps> | undefined,\n      defaultRenderFunction: IRenderFunction<IPersonaProps> | undefined,\n    ): JSX.Element | undefined => {\n      const content = renderFunction && renderFunction(props, defaultRenderFunction);\n      return content ? (\n        <div dir=\"auto\" className={elementClassNames}>\n          {content}\n        </div>\n      ) : undefined;\n    };\n\n    /**\n     * using closure to wrap the default render behavior\n     * to make it independent of the type of text passed\n     * @param text - text to render\n     */\n    const onRenderText = (text: string | undefined, tooltip = true): IRenderFunction<IPersonaProps> | undefined => {\n      // return default render behavior for valid text or undefined\n      return text\n        ? tooltip\n          ? (): JSX.Element => {\n              // default onRender behavior\n              return (\n                <TooltipHost\n                  content={text}\n                  overflowMode={TooltipOverflowMode.Parent}\n                  directionalHint={DirectionalHint.topLeftEdge}\n                >\n                  {text}\n                </TooltipHost>\n              );\n            }\n          : () => <>{text}</>\n        : undefined;\n    };\n\n    const onInternalRenderPersonaCoin = (providedCoinProps: IPersonaCoinProps): JSX.Element | null => {\n      return <PersonaCoin {...providedCoinProps} />;\n    };\n\n    // wrapping default render behavior based on various props properties\n    const onInternalRenderPrimaryText = onRenderText(getText(), props.showOverflowTooltip);\n    const onInternalRenderSecondaryText = onRenderText(props.secondaryText, props.showOverflowTooltip);\n    const onInternalRenderTertiaryText = onRenderText(props.tertiaryText, props.showOverflowTooltip);\n    const onInternalRenderOptionalText = onRenderText(props.optionalText, props.showOverflowTooltip);\n\n    const {\n      hidePersonaDetails,\n      onRenderOptionalText = onInternalRenderOptionalText,\n      onRenderPrimaryText = onInternalRenderPrimaryText,\n      onRenderSecondaryText = onInternalRenderSecondaryText,\n      onRenderTertiaryText = onInternalRenderTertiaryText,\n      onRenderPersonaCoin = onInternalRenderPersonaCoin,\n    } = props;\n    const size = props.size as PersonaSize;\n\n    // These properties are to be explicitly passed into PersonaCoin because they are the only props directly used\n    const {\n      allowPhoneInitials,\n      className,\n      coinProps,\n      showUnknownPersonaCoin,\n      coinSize,\n      styles,\n      imageAlt,\n      imageInitials,\n      imageShouldFadeIn,\n      imageShouldStartVisible,\n      imageUrl,\n      initialsColor,\n      initialsTextColor,\n      isOutOfOffice,\n      onPhotoLoadingStateChange,\n      // eslint-disable-next-line deprecation/deprecation\n      onRenderCoin,\n      onRenderInitials,\n      presence,\n      presenceTitle,\n      presenceColors,\n      showInitialsUntilImageLoads,\n      showSecondaryText,\n      theme,\n    } = props;\n\n    const personaCoinProps: IPersonaCoinProps = {\n      allowPhoneInitials,\n      showUnknownPersonaCoin,\n      coinSize,\n      imageAlt,\n      imageInitials,\n      imageShouldFadeIn,\n      imageShouldStartVisible,\n      imageUrl,\n      initialsColor,\n      initialsTextColor,\n      onPhotoLoadingStateChange,\n      onRenderCoin,\n      onRenderInitials,\n      presence,\n      presenceTitle,\n      showInitialsUntilImageLoads,\n      size,\n      text: getText(),\n      isOutOfOffice,\n      presenceColors,\n      ...coinProps,\n    };\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      showSecondaryText,\n      presence,\n      size,\n    });\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties);\n    const personaDetails = (\n      <div className={classNames.details}>\n        {renderElement(classNames.primaryText, onRenderPrimaryText, onInternalRenderPrimaryText)}\n        {renderElement(classNames.secondaryText, onRenderSecondaryText, onInternalRenderSecondaryText)}\n        {renderElement(classNames.tertiaryText, onRenderTertiaryText, onInternalRenderTertiaryText)}\n        {renderElement(classNames.optionalText, onRenderOptionalText, onInternalRenderOptionalText)}\n        {props.children}\n      </div>\n    );\n    return (\n      <div\n        {...divProps}\n        ref={mergedRootRef}\n        className={classNames.root}\n        style={coinSize ? { height: coinSize, minWidth: coinSize } : undefined}\n      >\n        {onRenderPersonaCoin(personaCoinProps, onRenderPersonaCoin)}\n        {\n          /* eslint-disable deprecation/deprecation */\n\n          (!hidePersonaDetails ||\n            size === PersonaSize.size8 ||\n            size === PersonaSize.size10 ||\n            size === PersonaSize.tiny) &&\n            personaDetails\n          /* eslint-enable deprecation/deprecation */\n        }\n      </div>\n    );\n  },\n);\nPersonaBase.displayName = 'PersonaBase';\n", "import * as React from 'react';\nimport { classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { ITooltipProps, ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\n\nconst getClassNames = classNamesFunction<ITooltipStyleProps, ITooltipStyles>();\n\nexport class TooltipBase extends React.Component<ITooltipProps, any> {\n  // Specify default props values\n  public static defaultProps: Partial<ITooltipProps> = {\n    directionalHint: DirectionalHint.topCenter,\n    maxWidth: '364px',\n    calloutProps: {\n      isBeakVisible: true,\n      beakWidth: 16,\n      gapSpace: 0,\n      setInitialFocus: true,\n      doNotLayer: false,\n    },\n  };\n\n  private _classNames: IProcessedStyleSet<ITooltipStyles>;\n\n  public render(): JSX.Element {\n    const {\n      className,\n      calloutProps,\n      directionalHint,\n      directionalHintForRTL,\n      styles,\n      id,\n      maxWidth,\n      onRenderContent = this._onRenderContent,\n      targetElement,\n      theme,\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className: className || (calloutProps && calloutProps.className),\n      beakWidth: calloutProps && calloutProps.isBeakVisible ? calloutProps.beakWidth : 0,\n      gapSpace: calloutProps && calloutProps.gapSpace,\n      maxWidth: maxWidth!,\n    });\n\n    return (\n      <Callout\n        target={targetElement}\n        directionalHint={directionalHint}\n        directionalHintForRTL={directionalHintForRTL}\n        {...calloutProps}\n        {...getNativeProps(this.props, divProperties, ['id'])} // omitting ID due to it being used in the div below\n        className={this._classNames.root}\n      >\n        <div\n          className={this._classNames.content}\n          id={id}\n          onFocus={this.props.onFocus}\n          onMouseEnter={this.props.onMouseEnter}\n          onMouseLeave={this.props.onMouseLeave}\n        >\n          {onRenderContent(this.props, this._onRenderContent)}\n        </div>\n      </Callout>\n    );\n  }\n\n  private _onRenderContent = (props: ITooltipProps): JSX.Element => {\n    if (typeof props.content === 'string') {\n      return <p className={this._classNames.subText}>{props.content}</p>;\n    } else {\n      return <div className={this._classNames.subText}>{props.content}</div>;\n    }\n  };\n}\n", "import * as React from 'react';\nimport { CalloutContent } from './CalloutContent';\nimport { Layer } from '../../Layer';\nimport type { ICalloutProps } from './Callout.types';\n\nexport const Callout: React.FunctionComponent<ICalloutProps> = React.forwardRef<HTMLDivElement, ICalloutProps>(\n  ({ layerProps, doNotLayer, ...rest }, forwardedRef) => {\n    const content = <CalloutContent {...rest} doNotLayer={doNotLayer} ref={forwardedRef} />;\n    return doNotLayer ? content : <Layer {...layerProps}>{content}</Layer>;\n  },\n);\nCallout.displayName = 'Callout';\n", "import * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  css,\n  divProperties,\n  elementContains,\n  focusFirstChild,\n  getNativeProps,\n  on,\n  shallowCompare,\n  getPropsWithDefaults,\n  Async,\n} from '../../Utilities';\nimport { positionCallout, RectangleEdge, positionCard, getBoundsFromTargetWindow } from '../../Positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\nimport { useMergedRefs, useAsync, useConst, useTarget, useOnEvent } from '@fluentui/react-hooks';\nimport type { ICalloutProps, ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\nimport type { Point, IRectangle } from '../../Utilities';\nimport type { ICalloutPositionedInfo, IPositionProps, IPosition } from '../../Positioning';\nimport type { Target } from '@fluentui/react-hooks';\n\nconst COMPONENT_NAME = 'CalloutContentBase';\n\nconst ANIMATIONS: { [key: number]: string | undefined } = {\n  [RectangleEdge.top]: AnimationClassNames.slideUpIn10,\n  [RectangleEdge.bottom]: AnimationClassNames.slideDownIn10,\n  [RectangleEdge.left]: AnimationClassNames.slideLeftIn10,\n  [RectangleEdge.right]: AnimationClassNames.slideRightIn10,\n};\n\nconst BEAK_ORIGIN_POSITION = { top: 0, left: 0 };\n// Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\n// Also set pointer-events: none so that the callout will not occlude the element it is\n// going to be positioned against\nconst OFF_SCREEN_STYLE: React.CSSProperties = {\n  opacity: 0,\n  filter: 'opacity(0)',\n  pointerEvents: 'none',\n};\n// role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\nconst ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\n\nconst DEFAULT_PROPS = {\n  preventDismissOnLostFocus: false,\n  preventDismissOnScroll: false,\n  preventDismissOnResize: false,\n  isBeakVisible: true,\n  beakWidth: 16,\n  gapSpace: 0,\n  minPagePadding: 8,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n} as const;\n\nconst getClassNames = classNamesFunction<ICalloutContentStyleProps, ICalloutContentStyles>({\n  disableCaching: true, // disabling caching because stylesProp.position mutates often\n});\n\n/**\n * (Hook) to return a function to lazily fetch the bounds of the target element for the callout.\n */\nfunction useBounds(\n  { bounds, minPagePadding = DEFAULT_PROPS.minPagePadding, target }: ICalloutProps,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  targetWindow: Window | undefined,\n) {\n  const [targetWindowResized, setTargetWindowResized] = React.useState(false);\n  const cachedBounds = React.useRef<IRectangle | undefined>();\n\n  const getBounds = React.useCallback((): IRectangle | undefined => {\n    if (!cachedBounds.current || targetWindowResized) {\n      let currentBounds =\n        typeof bounds === 'function' ? (targetWindow ? bounds(target, targetWindow) : undefined) : bounds;\n\n      if (!currentBounds && targetWindow) {\n        currentBounds = getBoundsFromTargetWindow(targetRef.current, targetWindow);\n        currentBounds = {\n          top: currentBounds.top + minPagePadding,\n          left: currentBounds.left + minPagePadding,\n          right: currentBounds.right! - minPagePadding,\n          bottom: currentBounds.bottom! - minPagePadding,\n          width: currentBounds.width - minPagePadding * 2,\n          height: currentBounds.height - minPagePadding * 2,\n        };\n      }\n      cachedBounds.current = currentBounds;\n      targetWindowResized && setTargetWindowResized(false);\n    }\n\n    return cachedBounds.current;\n  }, [bounds, minPagePadding, target, targetRef, targetWindow, targetWindowResized]);\n\n  const async: Async = useAsync();\n  useOnEvent(\n    targetWindow,\n    'resize',\n    async.debounce(\n      () => {\n        setTargetWindowResized(true);\n      },\n      500,\n      { leading: true },\n    ),\n  );\n\n  return getBounds;\n}\n\n/**\n * (Hook) to return the maximum available height for the Callout to render into.\n */\nfunction useMaxHeight(\n  { calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, hidden }: ICalloutProps,\n  getBounds: () => IRectangle | undefined,\n  positions?: ICalloutPositionedInfo,\n) {\n  const [maxHeight, setMaxHeight] = React.useState<number | undefined>();\n  const { top, bottom } = positions?.elementPosition ?? {};\n\n  React.useEffect(() => {\n    const { top: topBounds, bottom: bottomBounds } = getBounds() ?? {};\n\n    if (!calloutMaxHeight && !hidden) {\n      if (typeof top === 'number' && bottomBounds) {\n        setMaxHeight(bottomBounds - top);\n      } else if (typeof bottom === 'number' && typeof topBounds === 'number' && bottomBounds) {\n        setMaxHeight(bottomBounds - topBounds - bottom);\n      }\n    } else if (calloutMaxHeight) {\n      setMaxHeight(calloutMaxHeight);\n    } else {\n      setMaxHeight(undefined);\n    }\n  }, [bottom, calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, getBounds, hidden, positions, top]);\n\n  return maxHeight;\n}\n\n/**\n * (Hook) to find the current position of Callout. If Callout is resized then a new position is calculated.\n */\nfunction usePositions(\n  props: ICalloutProps,\n  hostElement: React.RefObject<HTMLDivElement>,\n  calloutElement: HTMLDivElement | null,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  getBounds: () => IRectangle | undefined,\n) {\n  const [positions, setPositions] = React.useState<ICalloutPositionedInfo>();\n  const positionAttempts = React.useRef(0);\n  const previousTarget = React.useRef<Target>();\n  const async = useAsync();\n  const { hidden, target, finalHeight, calloutMaxHeight, onPositioned, directionalHint } = props;\n\n  React.useEffect(() => {\n    if (!hidden) {\n      const timerId = async.requestAnimationFrame(() => {\n        if (hostElement.current && calloutElement) {\n          const currentProps: IPositionProps = {\n            ...props,\n            target: targetRef.current!,\n            bounds: getBounds(),\n          };\n\n          // duplicate calloutElement & remove useMaxHeight's maxHeight for position calc\n          const dupeCalloutElement = calloutElement.cloneNode(true) as HTMLElement;\n          dupeCalloutElement.style.maxHeight = calloutMaxHeight ? `${calloutMaxHeight}` : '';\n          dupeCalloutElement.style.visibility = 'hidden';\n          calloutElement.parentElement?.appendChild(dupeCalloutElement);\n\n          const previousPositions = previousTarget.current === target ? positions : undefined;\n\n          // If there is a finalHeight given then we assume that the user knows and will handle\n          // additional positioning adjustments so we should call positionCard\n          const newPositions: ICalloutPositionedInfo = finalHeight\n            ? positionCard(currentProps, hostElement.current, dupeCalloutElement, previousPositions)\n            : positionCallout(currentProps, hostElement.current, dupeCalloutElement, previousPositions);\n\n          // clean up duplicate calloutElement\n          calloutElement.parentElement?.removeChild(dupeCalloutElement);\n\n          // Set the new position only when the positions do not exist or one of the new callout positions\n          // is different. The position should not change if the position is within 2 decimal places.\n          if (\n            (!positions && newPositions) ||\n            (positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5)\n          ) {\n            // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n            // and we should stop trying to reposition to prevent a stack overflow.\n            positionAttempts.current++;\n            setPositions(newPositions);\n          } else if (positionAttempts.current > 0) {\n            // Only call the onPositioned callback if the callout has been re-positioned at least once.\n            positionAttempts.current = 0;\n            onPositioned?.(positions);\n          }\n        }\n      }, calloutElement);\n\n      previousTarget.current = target;\n\n      return () => {\n        async.cancelAnimationFrame(timerId);\n        previousTarget.current = undefined;\n      };\n    } else {\n      // When the callout is hidden, clear position state so that it is not accidentally used next render.\n      setPositions(undefined);\n      positionAttempts.current = 0;\n    }\n  }, [\n    hidden,\n    directionalHint,\n    async,\n    calloutElement,\n    calloutMaxHeight,\n    hostElement,\n    targetRef,\n    finalHeight,\n    getBounds,\n    onPositioned,\n    positions,\n    props,\n    target,\n  ]);\n\n  return positions;\n}\n\n/**\n * (Hook) to set up behavior to automatically focus the callout when it appears, if indicated by props.\n */\nfunction useAutoFocus(\n  { hidden, setInitialFocus }: ICalloutProps,\n  positions: ICalloutPositionedInfo | undefined,\n  calloutElement: HTMLDivElement | null,\n) {\n  const async = useAsync();\n  const hasPositions = !!positions;\n  React.useEffect(() => {\n    if (!hidden && setInitialFocus && hasPositions && calloutElement) {\n      const timerId = async.requestAnimationFrame(() => focusFirstChild(calloutElement), calloutElement);\n\n      return () => async.cancelAnimationFrame(timerId);\n    }\n  }, [hidden, hasPositions, async, calloutElement, setInitialFocus]);\n}\n\n/**\n * (Hook) to set up various handlers to dismiss the popup when it loses focus or the window scrolls or similar cases.\n */\nfunction useDismissHandlers(\n  {\n    hidden,\n    onDismiss,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnScroll,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnResize,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnLostFocus,\n    dismissOnTargetClick,\n    shouldDismissOnWindowFocus,\n    preventDismissOnEvent,\n  }: ICalloutProps,\n  positions: ICalloutPositionedInfo | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  targetWindow: Window | undefined,\n) {\n  const isMouseDownOnPopup = React.useRef(false);\n  const async = useAsync();\n\n  const mouseDownHandlers = useConst([\n    () => {\n      isMouseDownOnPopup.current = true;\n    },\n    () => {\n      isMouseDownOnPopup.current = false;\n    },\n  ] as const);\n\n  const positionsExists = !!positions;\n\n  React.useEffect(() => {\n    const dismissOnScroll = (ev: Event) => {\n      if (positionsExists && !preventDismissOnScroll) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    const dismissOnResize = (ev: Event) => {\n      if (!preventDismissOnResize && !(preventDismissOnEvent && preventDismissOnEvent(ev))) {\n        onDismiss?.(ev);\n      }\n    };\n\n    const dismissOnLostFocus = (ev: Event) => {\n      if (!preventDismissOnLostFocus) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    const dismissOnClickOrScroll = (ev: Event) => {\n      const eventPaths: Array<EventTarget> = ev.composedPath ? ev.composedPath() : [];\n      const target = eventPaths.length > 0 ? (eventPaths[0] as HTMLElement) : (ev.target as HTMLElement);\n      const isEventTargetOutsideCallout = hostElement.current && !elementContains(hostElement.current, target);\n\n      // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n      if (isEventTargetOutsideCallout && isMouseDownOnPopup.current) {\n        isMouseDownOnPopup.current = false;\n        return;\n      }\n\n      if (\n        (!targetRef.current && isEventTargetOutsideCallout) ||\n        (ev.target !== targetWindow &&\n          isEventTargetOutsideCallout &&\n          (!targetRef.current ||\n            'stopPropagation' in targetRef.current ||\n            dismissOnTargetClick ||\n            (target !== targetRef.current && !elementContains(targetRef.current as HTMLElement, target))))\n      ) {\n        if (preventDismissOnEvent && preventDismissOnEvent(ev)) {\n          return;\n        }\n        onDismiss?.(ev);\n      }\n    };\n\n    const dismissOnTargetWindowBlur = (ev: FocusEvent) => {\n      // Do nothing\n      if (!shouldDismissOnWindowFocus) {\n        return;\n      }\n\n      if (\n        ((preventDismissOnEvent && !preventDismissOnEvent(ev)) ||\n          (!preventDismissOnEvent && !preventDismissOnLostFocus)) &&\n        !targetWindow?.document.hasFocus() &&\n        ev.relatedTarget === null\n      ) {\n        onDismiss?.(ev);\n      }\n    };\n\n    // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n    const disposablesPromise = new Promise<() => void>(resolve => {\n      async.setTimeout(() => {\n        if (!hidden && targetWindow) {\n          const disposables = [\n            on(targetWindow, 'scroll', dismissOnScroll, true),\n            on(targetWindow, 'resize', dismissOnResize, true),\n            on(targetWindow.document.documentElement, 'focus', dismissOnLostFocus, true),\n            on(targetWindow.document.documentElement, 'click', dismissOnLostFocus, true),\n            on(targetWindow, 'blur', dismissOnTargetWindowBlur, true),\n          ];\n\n          resolve(() => {\n            disposables.forEach(dispose => dispose());\n          });\n        }\n      }, 0);\n    });\n\n    return () => {\n      disposablesPromise.then(dispose => dispose());\n    };\n  }, [\n    hidden,\n    async,\n    hostElement,\n    targetRef,\n    targetWindow,\n    onDismiss,\n    shouldDismissOnWindowFocus,\n    dismissOnTargetClick,\n    preventDismissOnLostFocus,\n    preventDismissOnResize,\n    preventDismissOnScroll,\n    positionsExists,\n    preventDismissOnEvent,\n  ]);\n\n  return mouseDownHandlers;\n}\n\nexport const CalloutContentBase: React.FunctionComponent<ICalloutProps> = React.memo(\n  React.forwardRef<HTMLDivElement, ICalloutProps>((propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n    const {\n      styles,\n      style,\n      ariaLabel,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      className,\n      isBeakVisible,\n      children,\n      beakWidth,\n      calloutWidth,\n      calloutMaxWidth,\n      calloutMinWidth,\n      doNotLayer,\n      finalHeight,\n      hideOverflow = !!finalHeight,\n      backgroundColor,\n      calloutMaxHeight,\n      onScroll,\n      // eslint-disable-next-line deprecation/deprecation\n      shouldRestoreFocus = true,\n      target,\n      hidden,\n      onLayerMounted,\n      popupProps,\n    } = props;\n\n    const hostElement = React.useRef<HTMLDivElement>(null);\n    const [calloutElement, setCalloutElement] = React.useState<HTMLDivElement | null>(null);\n    const calloutCallback = React.useCallback((calloutEl: any) => {\n      setCalloutElement(calloutEl);\n    }, []);\n    const rootRef = useMergedRefs(hostElement, forwardedRef);\n\n    const [targetRef, targetWindow] = useTarget(props.target, {\n      current: calloutElement,\n    });\n    const getBounds = useBounds(props, targetRef, targetWindow);\n    const positions = usePositions(props, hostElement, calloutElement, targetRef, getBounds);\n    const maxHeight = useMaxHeight(props, getBounds, positions);\n    const [mouseDownOnPopup, mouseUpOnPopup] = useDismissHandlers(\n      props,\n      positions,\n      hostElement,\n      targetRef,\n      targetWindow,\n    );\n\n    // do not set both top and bottom css props from positions\n    // instead, use maxHeight\n    const isForcedInBounds = positions?.elementPosition.top && positions?.elementPosition.bottom;\n    const cssPositions = {\n      ...positions?.elementPosition,\n      maxHeight,\n    };\n    if (isForcedInBounds) {\n      cssPositions.bottom = undefined;\n    }\n\n    useAutoFocus(props, positions, calloutElement);\n\n    React.useEffect(() => {\n      if (!hidden) {\n        onLayerMounted?.();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if hidden changes\n    }, [hidden]);\n\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!targetWindow) {\n      return null;\n    }\n\n    const overflowYHidden = hideOverflow;\n\n    const beakVisible = isBeakVisible && !!target;\n    const classNames = getClassNames(styles!, {\n      theme: props.theme!,\n      className,\n      overflowYHidden: overflowYHidden,\n      calloutWidth,\n      positions,\n      beakWidth,\n      backgroundColor,\n      calloutMaxWidth,\n      calloutMinWidth,\n      doNotLayer,\n    });\n\n    const overflowStyle: React.CSSProperties = {\n      maxHeight: calloutMaxHeight ? calloutMaxHeight : '100%',\n      ...style,\n      ...(overflowYHidden && { overflowY: 'hidden' }),\n    };\n\n    const visibilityStyle: React.CSSProperties | undefined = props.hidden ? { visibility: 'hidden' } : undefined;\n    // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n    return (\n      <div ref={rootRef} className={classNames.container} style={visibilityStyle}>\n        <div\n          {...getNativeProps(props, divProperties, ARIA_ROLE_ATTRIBUTES)}\n          className={css(classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge!])}\n          style={positions ? { ...cssPositions } : OFF_SCREEN_STYLE}\n          // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n          tabIndex={-1}\n          ref={calloutCallback}\n        >\n          {beakVisible && <div className={classNames.beak} style={getBeakPosition(positions)} />}\n          {beakVisible && <div className={classNames.beakCurtain} />}\n          <Popup\n            // don't use getNativeElementProps for role and roledescription because it will also\n            // pass through data-* props (resulting in them being used in two places)\n            role={props.role}\n            aria-roledescription={props['aria-roledescription']}\n            ariaDescribedBy={ariaDescribedBy}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            className={classNames.calloutMain}\n            onDismiss={props.onDismiss}\n            onMouseDown={mouseDownOnPopup}\n            onMouseUp={mouseUpOnPopup}\n            onRestoreFocus={props.onRestoreFocus}\n            onScroll={onScroll}\n            shouldRestoreFocus={shouldRestoreFocus}\n            style={overflowStyle}\n            {...popupProps}\n          >\n            {children}\n          </Popup>\n        </div>\n      </div>\n    );\n  }),\n  (previousProps: ICalloutProps, nextProps: ICalloutProps) => {\n    if (!nextProps.shouldUpdateWhenHidden && previousProps.hidden && nextProps.hidden) {\n      // Do not update when hidden.\n      return true;\n    }\n    return shallowCompare(previousProps, nextProps);\n  },\n);\n\n/**\n * (Utility) to find and return the current `Callout` Beak position.\n *\n * @param positions\n */\nfunction getBeakPosition(positions?: ICalloutPositionedInfo): React.CSSProperties {\n  const beakPositionStyle: React.CSSProperties = {\n    ...positions?.beakPosition?.elementPosition,\n    display: positions?.beakPosition?.hideBeak ? 'none' : undefined,\n  };\n\n  if (!beakPositionStyle.top && !beakPositionStyle.bottom && !beakPositionStyle.left && !beakPositionStyle.right) {\n    beakPositionStyle.left = BEAK_ORIGIN_POSITION.left;\n    beakPositionStyle.top = BEAK_ORIGIN_POSITION.top;\n  }\n\n  return beakPositionStyle;\n}\n\n/**\n * (Utility) used to compare two different elementPositions to determine whether they are equal.\n *\n * @param prevElementPositions\n * @param newElementPosition\n */\nfunction arePositionsEqual(\n  prevElementPositions: ICalloutPositionedInfo,\n  newElementPosition: ICalloutPositionedInfo,\n): boolean {\n  return (\n    comparePositions(prevElementPositions.elementPosition, newElementPosition.elementPosition) &&\n    comparePositions(prevElementPositions.beakPosition.elementPosition, newElementPosition.beakPosition.elementPosition)\n  );\n}\n\n/**\n * (Utility) used in **arePositionsEqual** to compare two different elementPositions.\n *\n * @param prevElementPositions\n * @param newElementPositions\n */\nfunction comparePositions(prevElementPositions: IPosition, newElementPositions: IPosition): boolean {\n  for (const key in newElementPositions) {\n    if (newElementPositions.hasOwnProperty(key)) {\n      const oldPositionEdge = prevElementPositions[key];\n      const newPositionEdge = newElementPositions[key];\n      if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n        if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nCalloutContentBase.displayName = COMPONENT_NAME;\n", "export const DirectionalHint = {\n  /**\n   * Appear above the target element, with the left edges of the callout and target aligning.\n   */\n  topLeftEdge: 0 as 0,\n\n  /**\n   * Appear above the target element, with the centers of the callout and target aligning.\n   */\n  topCenter: 1 as 1,\n\n  /**\n   * Appear above the target element, with the right edges of the callout and target aligning.\n   */\n  topRightEdge: 2 as 2,\n\n  /**\n   * Appear above the target element, aligning with the target element such that the callout tends toward\n   * the center of the screen.\n   */\n  topAutoEdge: 3 as 3,\n\n  /**\n   * Appear below the target element, with the left edges of the callout and target aligning.\n   */\n  bottomLeftEdge: 4 as 4,\n\n  /**\n   * Appear below the target element, with the centers of the callout and target aligning.\n   */\n  bottomCenter: 5 as 5,\n\n  /**\n   * Appear below the target element, with the right edges of the callout and target aligning.\n   */\n  bottomRightEdge: 6 as 6,\n\n  /**\n   * Appear below the target element, aligning with the target element such that the callout tends toward\n   * the center of the screen.\n   */\n  bottomAutoEdge: 7 as 7,\n\n  /**\n   * Appear to the left of the target element, with the top edges of the callout and target aligning.\n   */\n  leftTopEdge: 8 as 8,\n\n  /**\n   * Appear to the left of the target element, with the centers of the callout and target aligning.\n   */\n  leftCenter: 9 as 9,\n\n  /**\n   * Appear to the left of the target element, with the bottom edges of the callout and target aligning.\n   */\n  leftBottomEdge: 10 as 10,\n\n  /**\n   * Appear to the right of the target element, with the top edges of the callout and target aligning.\n   */\n  rightTopEdge: 11 as 11,\n\n  /**\n   * Appear to the right of the target element, with the centers of the callout and target aligning.\n   */\n  rightCenter: 12 as 12,\n\n  /**\n   * Appear to the right of the target element, with the bottom edges of the callout and target aligning.\n   */\n  rightBottomEdge: 13 as 13,\n};\n\nexport type DirectionalHint = (typeof DirectionalHint)[keyof typeof DirectionalHint];\n", "import { DirectionalHint } from '../../common/DirectionalHint';\nimport type { IRectangle, Point } from '../../Utilities';\n\nexport enum RectangleEdge {\n  top = 1,\n  bottom = -1,\n  left = 2,\n  right = -2,\n}\n\nexport enum Position {\n  top = 0,\n  bottom = 1,\n  start = 2,\n  end = 3,\n}\n\n/**\n * Window with typings for experimental features regarding Dual Screen devices.\n */\nexport interface IWindowWithSegments extends Window {\n  getWindowSegments?: () => DOMRect[];\n}\n\nexport interface IPositionProps {\n  target?: Element | MouseEvent | Point;\n  /** how the element should be positioned */\n  directionalHint?: DirectionalHint;\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used instead\n   */\n  directionalHintForRTL?: DirectionalHint;\n  /** The gap between the callout and the target */\n  gapSpace?: number;\n  /**\n   * The bounding rectangle for which  the contextual menu can appear in.\n   */\n  bounds?: IRectangle;\n  /**\n   * If true the position returned will have the menu element cover the target.\n   * If false then it will position next to the target;\n   */\n  coverTarget?: boolean;\n  /**\n   * If true the position will not change edges in an attempt to fit the rectangle within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * If true the positioning logic will prefer flipping edges over nudging the rectangle to fit within bounds,\n   * thus making sure the element align perfectly with target.\n   */\n  alignTargetEdge?: boolean;\n}\n\nexport interface ICalloutPositionProps extends IPositionProps {\n  /**\n   * The width of the beak.\n   */\n  beakWidth?: number;\n\n  /**\n   * Whether or not the beak is visible\n   */\n  isBeakVisible?: boolean;\n}\n\nexport interface IPositionedData {\n  /**\n   * The new position of the element.\n   */\n  elementPosition: IPosition;\n  /**\n   * The finalized target edge that element is aligning to. For instance RectangleEdge.bottom would mean\n   * that the bottom edge of the target is being aligned to by the RectangleEdge.top of the element\n   * that is being positioned.\n   */\n  targetEdge: RectangleEdge;\n  /**\n   * The finalized alignment edge that the element is aligning too. For instance, RectangleEdge.left means\n   * that the left edge of the target should be in line with the left edge of the element being positioned.\n   */\n  alignmentEdge?: RectangleEdge;\n}\n\nexport interface ICalloutPositionedInfo extends IPositionedData {\n  beakPosition: ICalloutBeakPositionedInfo;\n}\n\nexport interface ICalloutBeakPositionedInfo extends IPositionedData {\n  closestEdge: RectangleEdge;\n  hideBeak?: boolean;\n}\n\n/**\n * Gives the position of some element on the page. Only a pair of vertical and horizontal edges need to be\n * given. So top/left or bottom/left is sufficient.\n * The number given is the distance in pixels from whatever host was given..\n * So bottom: 100 would be 100px up from the bottom of the host while top: 100px from the top.\n */\nexport interface IPosition {\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n  [key: string]: number | undefined;\n}\n\nexport interface IPositionDirectionalHintData {\n  targetEdge: RectangleEdge;\n  alignmentEdge?: RectangleEdge;\n  isAuto?: boolean;\n  alignTargetEdge?: boolean;\n}\n\nexport interface IRelativePositions {\n  calloutPosition: IPosition;\n  beakPosition: { position: IPosition | undefined; display: 'block' };\n  directionalClassName: string;\n  submenuDirection: DirectionalHint;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nexport type { Point, IPoint } from '../../Utilities';\n", "import { DirectionalHint } from '../../common/DirectionalHint';\nimport { getScrollbarWidth, getRTL } from '../../Utilities';\nimport { RectangleEdge } from './positioning.types';\nimport { Rectangle } from '../../Utilities';\nimport type { IRectangle, Point } from '../../Utilities';\nimport type {\n  IPositionDirectionalHintData,\n  IPositionedData,\n  ICalloutPositionedInfo,\n  ICalloutBeakPositionedInfo,\n  IPositionProps,\n  ICalloutPositionProps,\n  IWindowWithSegments,\n} from './positioning.types';\n\nfunction _createPositionData(\n  targetEdge: RectangleEdge,\n  alignmentEdge?: RectangleEdge,\n  isAuto?: boolean,\n): IPositionDirectionalHintData {\n  return {\n    targetEdge: targetEdge,\n    alignmentEdge: alignmentEdge,\n    isAuto: isAuto,\n  };\n}\n\n// Currently the beakPercent is set to 50 for all positions meaning that it should tend to the center of the target\nconst DirectionalDictionary: { [key: number]: IPositionDirectionalHintData } = {\n  [DirectionalHint.topLeftEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.left),\n  [DirectionalHint.topCenter]: _createPositionData(RectangleEdge.top),\n  [DirectionalHint.topRightEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.right),\n  [DirectionalHint.topAutoEdge]: _createPositionData(RectangleEdge.top, undefined, true),\n  [DirectionalHint.bottomLeftEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.left),\n  [DirectionalHint.bottomCenter]: _createPositionData(RectangleEdge.bottom),\n  [DirectionalHint.bottomRightEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.right),\n  [DirectionalHint.bottomAutoEdge]: _createPositionData(RectangleEdge.bottom, undefined, true),\n  [DirectionalHint.leftTopEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.top),\n  [DirectionalHint.leftCenter]: _createPositionData(RectangleEdge.left),\n  [DirectionalHint.leftBottomEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.bottom),\n  [DirectionalHint.rightTopEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.top),\n  [DirectionalHint.rightCenter]: _createPositionData(RectangleEdge.right),\n  [DirectionalHint.rightBottomEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.bottom),\n};\n\n/**\n * Do not call methods from this directly, use either positionCallout or positionElement or make another function that\n * utilizes them.\n * START Private functions and interfaces\n */\n\nexport interface IElementPosition {\n  elementRectangle: Rectangle;\n  targetEdge: RectangleEdge;\n  alignmentEdge: RectangleEdge | undefined;\n  forcedInBounds?: boolean;\n}\n\nexport interface IElementPositionInfo extends IElementPosition {\n  targetRectangle: Rectangle;\n}\n\ntype PartialIRectangle = Partial<IRectangle>;\n\ninterface IPartialIRectangle extends PartialIRectangle {\n  [key: string]: number | undefined;\n}\n\nfunction _isRectangleWithinBounds(rect: Rectangle, boundingRect: Rectangle): boolean {\n  if (rect.top < boundingRect.top) {\n    return false;\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    return false;\n  }\n  if (rect.left < boundingRect.left) {\n    return false;\n  }\n  if (rect.right > boundingRect.right) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Gets all of the edges of a rectangle that are outside of the given bounds.\n * If there are no out of bounds edges it returns an empty array.\n */\nfunction _getOutOfBoundsEdges(rect: Rectangle, boundingRect: Rectangle): RectangleEdge[] {\n  const outOfBounds: RectangleEdge[] = [];\n\n  if (rect.top < boundingRect.top) {\n    outOfBounds.push(RectangleEdge.top);\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    outOfBounds.push(RectangleEdge.bottom);\n  }\n  if (rect.left < boundingRect.left) {\n    outOfBounds.push(RectangleEdge.left);\n  }\n  if (rect.right > boundingRect.right) {\n    outOfBounds.push(RectangleEdge.right);\n  }\n\n  return outOfBounds;\n}\n\nfunction _getEdgeValue(rect: Rectangle, edge: RectangleEdge): number {\n  return (rect as any)[RectangleEdge[edge]] as number;\n}\n\nfunction _setEdgeValue(rect: Rectangle, edge: RectangleEdge, value: number) {\n  (rect as any)[RectangleEdge[edge]] = value;\n  return rect;\n}\n\n/**\n * Returns the middle value of an edge. Only returns 1 value rather than xy coordinates as\n * the itself already contains the other coordinate.\n * For instance, a bottom edge's current value is it's y coordinate, so the number returned is the x.\n */\nfunction _getCenterValue(rect: Rectangle, edge: RectangleEdge): number {\n  const edges = _getFlankingEdges(edge);\n  return (_getEdgeValue(rect, edges.positiveEdge) + _getEdgeValue(rect, edges.negativeEdge)) / 2;\n}\n\n/**\n * Flips the value depending on the edge.\n * If the edge is a \"positive\" edge, Top or Left, then the value should stay as it is.\n * If the edge is a \"negative\" edge, Bottom or Right, then the value should be flipped.\n * This is to account for the fact that the coordinates are effectively reserved in certain cases for the\n * \"negative\" edges.\n *\n * For example, when testing to see if a bottom edge 1 is within the bounds of another bottom edge 2:\n * If edge 1 is greater than edge 2 then it is out of bounds. This is reversed for top edge 1 and top edge 2.\n * If top edge 1 is less than edge 2 then it is out of bounds.\n */\nfunction _getRelativeEdgeValue(edge: RectangleEdge, value: number): number {\n  if (edge > 0) {\n    return value;\n  } else {\n    return value * -1;\n  }\n}\n\nfunction _getRelativeRectEdgeValue(edge: RectangleEdge, rect: Rectangle): number {\n  return _getRelativeEdgeValue(edge, _getEdgeValue(rect, edge));\n}\n\nfunction _getRelativeEdgeDifference(rect: Rectangle, hostRect: Rectangle, edge: RectangleEdge): number {\n  const edgeDifference = _getEdgeValue(rect, edge) - _getEdgeValue(hostRect, edge);\n  return _getRelativeEdgeValue(edge, edgeDifference);\n}\n\n/**\n * Moves the edge of a rectangle to the value given. It only moves the edge in a linear direction based on that edge.\n * For example, if it's a bottom edge it will only change y coordinates.\n * if maintainSize is set to false, it will only adjust the specified edge value\n */\nfunction _moveEdge(rect: Rectangle, edge: RectangleEdge, newValue: number, maintainSize = true): Rectangle {\n  const difference = _getEdgeValue(rect, edge) - newValue;\n  let returnRect = _setEdgeValue(rect, edge, newValue);\n  if (maintainSize) {\n    returnRect = _setEdgeValue(rect, edge * -1, _getEdgeValue(rect, edge * -1) - difference);\n  }\n  return returnRect;\n}\n\n/**\n * Aligns the edge on the passed in rect to the target. If there is a gap then it will have that space between the two.\n */\nfunction _alignEdges(rect: Rectangle, target: Rectangle, edge: RectangleEdge, gap: number = 0): Rectangle {\n  return _moveEdge(rect, edge, _getEdgeValue(target, edge) + _getRelativeEdgeValue(edge, gap));\n}\n\n/**\n * Aligns the targetEdge on the passed in target to the rects corresponding opposite edge.\n * For instance if targetEdge is bottom, then the rects top will be moved to match it.\n */\nfunction _alignOppositeEdges(\n  rect: Rectangle,\n  target: Rectangle,\n  targetEdge: RectangleEdge,\n  gap: number = 0,\n): Rectangle {\n  const oppositeEdge = targetEdge * -1;\n  const adjustedGap = _getRelativeEdgeValue(oppositeEdge, gap);\n  return _moveEdge(rect, targetEdge * -1, _getEdgeValue(target, targetEdge) + adjustedGap);\n}\n\n/**\n * Tests to see if the given edge is within the bounds of the given rectangle.\n */\nfunction _isEdgeInBounds(rect: Rectangle, bounds: Rectangle, edge: RectangleEdge): boolean {\n  const adjustedRectValue = _getRelativeRectEdgeValue(edge, rect);\n  return adjustedRectValue > _getRelativeRectEdgeValue(edge, bounds);\n}\n\n/**\n * Returns a measure of how much a rectangle is out of bounds for a given alignment;\n * this can be used to compare which rectangle is more or less out of bounds.\n * A value of 0 means the rectangle is entirely in bounds\n */\nfunction _getOutOfBoundsDegree(rect: Rectangle, bounds: Rectangle) {\n  const breakingEdges = _getOutOfBoundsEdges(rect, bounds);\n  let total = 0;\n  for (const edge of breakingEdges) {\n    total += _getRelativeEdgeDifference(rect, bounds, edge) ** 2;\n  }\n\n  return total;\n}\n\n/**\n * Attempts to move the rectangle through various sides of the target to find a place to fit.\n * If no fit is found, the least bad option should be returned.\n */\nfunction _flipToFit(\n  rect: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n): IElementPosition {\n  const directions: RectangleEdge[] = [\n    RectangleEdge.left,\n    RectangleEdge.right,\n    RectangleEdge.bottom,\n    RectangleEdge.top,\n  ];\n  // In RTL page, RectangleEdge.right has a higher priority than RectangleEdge.left, so the order should be updated.\n  if (getRTL()) {\n    directions[0] *= -1;\n    directions[1] *= -1;\n  }\n  let currentEstimate = rect;\n  let currentEdge = positionData.targetEdge;\n  let currentAlignment = positionData.alignmentEdge;\n\n  // keep track of least bad option, in case no sides fit\n  let oobDegree;\n  let bestEdge = currentEdge;\n  let bestAlignment = currentAlignment;\n\n  // Keep switching sides until one is found with enough space.\n  // If all sides don't fit then return the unmodified element.\n  for (let i = 0; i < 4; i++) {\n    if (!_isEdgeInBounds(currentEstimate, bounding, currentEdge)) {\n      // update least-bad edges\n      const currentOOBDegree = _getOutOfBoundsDegree(currentEstimate, bounding);\n      if (!oobDegree || currentOOBDegree < oobDegree) {\n        oobDegree = currentOOBDegree;\n        bestEdge = currentEdge;\n        bestAlignment = currentAlignment;\n      }\n\n      directions.splice(directions.indexOf(currentEdge), 1);\n      if (directions.length > 0) {\n        if (directions.indexOf(currentEdge * -1) > -1) {\n          currentEdge = currentEdge * -1;\n        } else {\n          currentAlignment = currentEdge;\n          currentEdge = directions.slice(-1)[0];\n        }\n        currentEstimate = _estimatePosition(\n          rect,\n          target,\n          { targetEdge: currentEdge, alignmentEdge: currentAlignment },\n          gap,\n        );\n      }\n    } else {\n      return {\n        elementRectangle: currentEstimate,\n        targetEdge: currentEdge,\n        alignmentEdge: currentAlignment,\n      };\n    }\n  }\n\n  // nothing fits, use least-bad option\n  currentEstimate = _estimatePosition(rect, target, { targetEdge: bestEdge, alignmentEdge: bestAlignment }, gap);\n  return {\n    elementRectangle: currentEstimate,\n    targetEdge: bestEdge,\n    alignmentEdge: bestAlignment,\n  };\n}\n\n/**\n * Flips only the alignment edge of an element rectangle. This is used instead of nudging the alignment edges\n * into position, when `alignTargetEdge` is specified.\n */\nfunction _flipAlignmentEdge(\n  elementEstimate: IElementPosition,\n  target: Rectangle,\n  gap: number,\n  coverTarget?: boolean,\n): IElementPosition {\n  const { alignmentEdge, targetEdge, elementRectangle } = elementEstimate;\n  const oppositeEdge = alignmentEdge! * -1;\n  const newEstimate = _estimatePosition(\n    elementRectangle,\n    target,\n    { targetEdge: targetEdge, alignmentEdge: oppositeEdge },\n    gap,\n    coverTarget,\n  );\n\n  return {\n    elementRectangle: newEstimate,\n    targetEdge: targetEdge,\n    alignmentEdge: oppositeEdge,\n  };\n}\n\n/**\n * Adjusts a element rectangle to fit within the bounds given. If directionalHintFixed or covertarget is passed in\n * then the element will not flip sides on the target. They will, however, be nudged to fit within the bounds given.\n */\nfunction _adjustFitWithinBounds(\n  element: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean,\n): IElementPosition {\n  const { alignmentEdge, alignTargetEdge } = positionData;\n  let elementEstimate: IElementPosition = {\n    elementRectangle: element,\n    targetEdge: positionData.targetEdge,\n    alignmentEdge: alignmentEdge,\n  };\n\n  if (!directionalHintFixed && !coverTarget) {\n    elementEstimate = _flipToFit(element, target, bounding, positionData, gap);\n  }\n  const outOfBounds = _getOutOfBoundsEdges(elementEstimate.elementRectangle, bounding);\n  // if directionalHintFixed is specified, we need to force the target edge to not change\n  // we need *-1 because targetEdge refers to the target's edge; the callout edge is the opposite\n  const fixedEdge = directionalHintFixed ? -elementEstimate.targetEdge : undefined;\n\n  if (outOfBounds.length > 0) {\n    if (alignTargetEdge) {\n      // The edge opposite to the alignment edge might be out of bounds.\n      // Flip alignment to see if we can get it within bounds.\n      if (elementEstimate.alignmentEdge && outOfBounds.indexOf(elementEstimate.alignmentEdge * -1) > -1) {\n        const flippedElementEstimate = _flipAlignmentEdge(elementEstimate, target, gap, coverTarget);\n        if (_isRectangleWithinBounds(flippedElementEstimate.elementRectangle, bounding)) {\n          return flippedElementEstimate;\n        } else {\n          // If the flipped elements edges are still out of bounds, try nudging it.\n          elementEstimate = _alignOutOfBoundsEdges(\n            _getOutOfBoundsEdges(flippedElementEstimate.elementRectangle, bounding),\n            elementEstimate,\n            bounding,\n            fixedEdge,\n          );\n        }\n      } else {\n        elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding, fixedEdge);\n      }\n    } else {\n      elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding, fixedEdge);\n    }\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Iterates through a list of out of bounds edges and tries to nudge and align them.\n * @param outOfBoundsEdges - Array of edges that are out of bounds\n * @param elementEstimate - The current element positioning estimate\n * @param bounding - The current bounds\n * @param preserveEdge - Specify an edge that should not be modified\n */\nfunction _alignOutOfBoundsEdges(\n  outOfBoundsEdges: RectangleEdge[],\n  elementEstimate: IElementPosition,\n  bounding: Rectangle,\n  preserveEdge?: RectangleEdge,\n) {\n  for (const direction of outOfBoundsEdges) {\n    let edgeAttempt;\n\n    // if preserveEdge is specified, do not call _alignEdges, skip directly to _moveEdge\n    // this is because _alignEdges will move the opposite edge\n    if (preserveEdge && preserveEdge === direction * -1) {\n      edgeAttempt = _moveEdge(elementEstimate.elementRectangle, direction, _getEdgeValue(bounding, direction), false);\n      elementEstimate.forcedInBounds = true;\n    } else {\n      edgeAttempt = _alignEdges(elementEstimate.elementRectangle, bounding, direction);\n      const inBounds = _isEdgeInBounds(edgeAttempt, bounding, direction * -1);\n      // only update estimate if the attempt didn't break out of the opposite bounding edge\n      if (!inBounds) {\n        edgeAttempt = _moveEdge(edgeAttempt, direction * -1, _getEdgeValue(bounding, direction * -1), false);\n        elementEstimate.forcedInBounds = true;\n      }\n    }\n\n    elementEstimate.elementRectangle = edgeAttempt;\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Moves the middle point on an edge to the point given.\n * Only moves in one direction. For instance if a bottom edge is passed in, then\n * the bottom edge will be moved in the x axis to match the point.\n */\nfunction _centerEdgeToPoint(rect: Rectangle, edge: RectangleEdge, point: number): Rectangle {\n  const { positiveEdge } = _getFlankingEdges(edge);\n  const elementMiddle = _getCenterValue(rect, edge);\n  const distanceToMiddle = elementMiddle - _getEdgeValue(rect, positiveEdge);\n  return _moveEdge(rect, positiveEdge, point - distanceToMiddle);\n}\n\n/**\n * Moves the element rectangle to be appropriately positioned relative to a given target.\n * Does not flip or adjust the element.\n */\nfunction _estimatePosition(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  coverTarget?: boolean,\n): Rectangle {\n  let estimatedElementPosition = new Rectangle(\n    elementToPosition.left,\n    elementToPosition.right,\n    elementToPosition.top,\n    elementToPosition.bottom,\n  );\n  const { alignmentEdge, targetEdge } = positionData;\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  estimatedElementPosition = coverTarget\n    ? _alignEdges(estimatedElementPosition, target, targetEdge, gap)\n    : _alignOppositeEdges(estimatedElementPosition, target, targetEdge, gap);\n  // if no alignment edge is provided it's supposed to be centered.\n  if (!alignmentEdge) {\n    const targetMiddlePoint = _getCenterValue(target, targetEdge);\n    estimatedElementPosition = _centerEdgeToPoint(estimatedElementPosition, elementEdge, targetMiddlePoint);\n  } else {\n    estimatedElementPosition = _alignEdges(estimatedElementPosition, target, alignmentEdge);\n  }\n\n  return estimatedElementPosition;\n}\n\n/**\n * Returns the non-opposite edges of the target edge.\n * For instance if bottom is passed in then left and right will be returned.\n */\nfunction _getFlankingEdges(edge: RectangleEdge): { positiveEdge: RectangleEdge; negativeEdge: RectangleEdge } {\n  if (edge === RectangleEdge.top || edge === RectangleEdge.bottom) {\n    return {\n      positiveEdge: RectangleEdge.left,\n      negativeEdge: RectangleEdge.right,\n    };\n  } else {\n    return {\n      positiveEdge: RectangleEdge.top,\n      negativeEdge: RectangleEdge.bottom,\n    };\n  }\n}\n\n/**\n * Retrieve the final value for the return edge of `elementRectangle`. If the `elementRectangle` is closer to one side\n * of the bounds versus the other, the return edge is flipped to grow inward.\n */\nfunction _finalizeReturnEdge(\n  elementRectangle: Rectangle,\n  returnEdge: RectangleEdge,\n  bounds?: Rectangle,\n): RectangleEdge {\n  if (\n    bounds &&\n    Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge)) >\n      Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge * -1))\n  ) {\n    return returnEdge * -1;\n  }\n\n  return returnEdge;\n}\n\n/**\n * Whether or not the considered edge of the elementRectangle is lying on the edge of the bounds\n * @param elementRectangle The rectangle whose edge we are considering\n * @param bounds The rectangle marking the bounds\n * @param edge The target edge we're considering\n * @returns If the target edge of the elementRectangle is in the same location as that edge of the bounds\n */\nfunction _isEdgeOnBounds(elementRectangle: Rectangle, edge: RectangleEdge, bounds?: Rectangle): boolean {\n  return bounds !== undefined && _getEdgeValue(elementRectangle, edge) === _getEdgeValue(bounds, edge);\n}\n\n/**\n * Finalizes the element position based on the hostElement. Only returns the\n * rectangle values to position such that they are anchored to the target.\n * This helps prevent resizing from looking very strange.\n * For instance, if the target edge is top and aligned with the left side then\n * the bottom and left values are returned so as the Callout shrinks it shrinks towards that corner.\n */\nfunction _finalizeElementPosition(\n  elementRectangle: Rectangle,\n  hostElement: HTMLElement,\n  targetEdge: RectangleEdge,\n  bounds?: Rectangle,\n  alignmentEdge?: RectangleEdge,\n  coverTarget?: boolean,\n  doNotFinalizeReturnEdge?: boolean,\n  forceWithinBounds?: boolean,\n): IPartialIRectangle {\n  const returnValue: IPartialIRectangle = {};\n\n  const hostRect: Rectangle = _getRectangleFromElement(hostElement);\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  let returnEdge = alignmentEdge ? alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge;\n\n  // If we are finalizing the return edge, choose the edge such that we grow away from the bounds\n  // If we are not finalizing the return edge but the opposite edge is flush against the bounds,\n  // choose that as the anchor edge so the element rect can grow away from the bounds' edge\n  // In this case there will not be a visual difference because there is no more room for the elementRectangle to grow\n  // in the usual direction\n  if (!doNotFinalizeReturnEdge || _isEdgeOnBounds(elementRectangle, getOppositeEdge(returnEdge), bounds)) {\n    returnEdge = _finalizeReturnEdge(elementRectangle, returnEdge, bounds);\n  }\n\n  returnValue[RectangleEdge[elementEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, elementEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, returnEdge);\n\n  // if the positioned element will still overflow, return all four edges with in-bounds values\n  if (forceWithinBounds) {\n    returnValue[RectangleEdge[elementEdge * -1]] = _getRelativeEdgeDifference(\n      elementRectangle,\n      hostRect,\n      elementEdge * -1,\n    );\n    returnValue[RectangleEdge[returnEdge * -1]] = _getRelativeEdgeDifference(\n      elementRectangle,\n      hostRect,\n      returnEdge * -1,\n    );\n  }\n\n  return returnValue;\n}\n\n// Since the beak is rotated 45 degrees the actual height/width is the length of the diagonal.\n// We still want to position the beak based on it's midpoint which does not change. It will\n// be at (beakwidth / 2, beakwidth / 2)\nfunction _calculateActualBeakWidthInPixels(beakWidth: number): number {\n  return Math.sqrt(beakWidth * beakWidth * 2);\n}\n\n/**\n * Returns the appropriate IPositionData based on the props altered for RTL.\n * If directionalHintForRTL is passed in that is used if the page is RTL.\n * If directionalHint is specified, no directionalHintForRTL is available, and the page is RTL, the hint will be\n * flipped (e.g. bottomLeftEdge would become bottomRightEdge).\n *\n * If there is no directionalHint passed in, bottomAutoEdge is chosen automatically.\n */\nfunction _getPositionData(\n  directionalHint: DirectionalHint = DirectionalHint.bottomAutoEdge,\n  directionalHintForRTL?: DirectionalHint,\n  previousPositions?: IPositionDirectionalHintData,\n): IPositionDirectionalHintData {\n  if (previousPositions) {\n    return {\n      alignmentEdge: previousPositions.alignmentEdge,\n      isAuto: previousPositions.isAuto,\n      targetEdge: previousPositions.targetEdge,\n    };\n  }\n  const positionInformation: IPositionDirectionalHintData = { ...DirectionalDictionary[directionalHint] };\n  if (getRTL()) {\n    // If alignment edge exists and that alignment edge is -2 or 2, right or left, then flip it.\n    if (positionInformation.alignmentEdge && positionInformation.alignmentEdge % 2 === 0) {\n      positionInformation.alignmentEdge = positionInformation.alignmentEdge * -1;\n    }\n\n    return directionalHintForRTL !== undefined ? DirectionalDictionary[directionalHintForRTL] : positionInformation;\n  }\n  return positionInformation;\n}\n\n/**\n * Gets the alignment data for the given information. This only really matters if the positioning is Auto.\n * If it is auto then the alignmentEdge should be chosen based on the target edge's position relative to\n * the center of the page.\n */\nfunction _getAlignmentData(\n  positionData: IPositionDirectionalHintData,\n  target: Rectangle,\n  boundingRect: Rectangle,\n  coverTarget?: boolean,\n  alignTargetEdge?: boolean,\n): IPositionDirectionalHintData {\n  if (positionData.isAuto) {\n    positionData.alignmentEdge = getClosestEdge(positionData.targetEdge, target, boundingRect);\n  }\n\n  positionData.alignTargetEdge = alignTargetEdge;\n  return positionData;\n}\n\nfunction getClosestEdge(targetEdge: RectangleEdge, target: Rectangle, boundingRect: Rectangle): RectangleEdge {\n  const targetCenter: number = _getCenterValue(target, targetEdge);\n  const boundingCenter: number = _getCenterValue(boundingRect, targetEdge);\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(targetEdge);\n  if (targetCenter <= boundingCenter) {\n    return positiveEdge;\n  } else {\n    return negativeEdge;\n  }\n}\n\nfunction _positionElementWithinBounds(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean,\n): IElementPosition {\n  const estimatedElementPosition: Rectangle = _estimatePosition(\n    elementToPosition,\n    target,\n    positionData,\n    gap,\n    coverTarget,\n  );\n  if (_isRectangleWithinBounds(estimatedElementPosition, bounding)) {\n    return {\n      elementRectangle: estimatedElementPosition,\n      targetEdge: positionData.targetEdge,\n      alignmentEdge: positionData.alignmentEdge,\n    };\n  } else {\n    return _adjustFitWithinBounds(\n      estimatedElementPosition,\n      target,\n      bounding,\n      positionData,\n      gap,\n      directionalHintFixed,\n      coverTarget,\n    );\n  }\n}\n\nfunction _finalizeBeakPosition(\n  elementPosition: IElementPositionInfo,\n  positionedBeak: Rectangle,\n  bounds?: Rectangle,\n): ICalloutBeakPositionedInfo {\n  const targetEdge = elementPosition.targetEdge * -1;\n  // The \"host\" element that we will use to help position the beak.\n  const actualElement = new Rectangle(\n    0,\n    elementPosition.elementRectangle.width,\n    0,\n    elementPosition.elementRectangle.height,\n  );\n  const returnValue: IPartialIRectangle = {};\n  const returnEdge = _finalizeReturnEdge(\n    elementPosition.elementRectangle,\n    elementPosition.alignmentEdge ? elementPosition.alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge,\n    bounds,\n  );\n\n  // only show the beak if the callout is not fully covering the target\n  const beakEdgeDifference = _getRelativeEdgeDifference(\n    elementPosition.elementRectangle,\n    elementPosition.targetRectangle,\n    targetEdge,\n  );\n  const showBeak = beakEdgeDifference > Math.abs(_getEdgeValue(positionedBeak, targetEdge));\n\n  returnValue[RectangleEdge[targetEdge]] = _getEdgeValue(positionedBeak, targetEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(positionedBeak, actualElement, returnEdge);\n\n  return {\n    elementPosition: { ...returnValue },\n    closestEdge: getClosestEdge(elementPosition.targetEdge, positionedBeak, actualElement),\n    targetEdge: targetEdge,\n    hideBeak: !showBeak,\n  };\n}\n\nfunction _positionBeak(beakWidth: number, elementPosition: IElementPositionInfo): Rectangle {\n  const target = elementPosition.targetRectangle;\n  /**\n   * Note about beak positioning: The actual beak width only matters for getting the gap between the callout and\n   * target, it does not impact the beak placement within the callout. For example example, if the beakWidth is 8,\n   * then the actual beakWidth is sqrroot(8^2 + 8^2) = 11.31x11.31. So the callout will need to be an extra 3 pixels\n   * away from its target. While the beak is being positioned in the callout it still acts as though it were 8x8.\n   */\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(elementPosition.targetEdge);\n  const beakTargetPoint = _getCenterValue(target, elementPosition.targetEdge);\n  const elementBounds = new Rectangle(\n    beakWidth / 2,\n    elementPosition.elementRectangle.width - beakWidth / 2,\n    beakWidth / 2,\n    elementPosition.elementRectangle.height - beakWidth / 2,\n  );\n\n  let beakPosition: Rectangle = new Rectangle(0, beakWidth, 0, beakWidth);\n\n  beakPosition = _moveEdge(beakPosition, elementPosition.targetEdge * -1, -beakWidth / 2);\n\n  beakPosition = _centerEdgeToPoint(\n    beakPosition,\n    elementPosition.targetEdge * -1,\n    beakTargetPoint - _getRelativeRectEdgeValue(positiveEdge, elementPosition.elementRectangle),\n  );\n\n  if (!_isEdgeInBounds(beakPosition, elementBounds, positiveEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, positiveEdge);\n  } else if (!_isEdgeInBounds(beakPosition, elementBounds, negativeEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, negativeEdge);\n  }\n\n  return beakPosition;\n}\n\nfunction _getRectangleFromElement(element: Element): Rectangle {\n  const clientRect: ClientRect = element.getBoundingClientRect();\n\n  return new Rectangle(clientRect.left, clientRect.right, clientRect.top, clientRect.bottom);\n}\n\nfunction _getRectangleFromIRect(rect: IRectangle): Rectangle {\n  return new Rectangle(rect.left, rect.right, rect.top, rect.bottom);\n}\n\nfunction _getTargetRect(bounds: Rectangle, target: Element | MouseEvent | Point | Rectangle | undefined): Rectangle {\n  let targetRectangle: Rectangle;\n  if (target) {\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!(target as MouseEvent).preventDefault) {\n      const ev = target as MouseEvent;\n      targetRectangle = new Rectangle(ev.clientX, ev.clientX, ev.clientY, ev.clientY);\n      // eslint-disable-next-line no-extra-boolean-cast\n    } else if (!!(target as Element).getBoundingClientRect) {\n      targetRectangle = _getRectangleFromElement(target as Element);\n      // HTMLImgElements can have x and y values. The check for it being a point must go last.\n    } else {\n      const rectOrPoint: Point & Rectangle = target as Point & Rectangle;\n      // eslint-disable-next-line deprecation/deprecation\n      const left = rectOrPoint.left || rectOrPoint.x;\n      // eslint-disable-next-line deprecation/deprecation\n      const top = rectOrPoint.top || rectOrPoint.y;\n      const right = rectOrPoint.right || left;\n      const bottom = rectOrPoint.bottom || top;\n      targetRectangle = new Rectangle(left, right, top, bottom);\n    }\n\n    if (!_isRectangleWithinBounds(targetRectangle, bounds)) {\n      const outOfBounds: RectangleEdge[] = _getOutOfBoundsEdges(targetRectangle, bounds);\n\n      for (const direction of outOfBounds) {\n        (targetRectangle as any)[RectangleEdge[direction]] = (bounds as any)[RectangleEdge[direction]];\n      }\n    }\n  } else {\n    targetRectangle = new Rectangle(0, 0, 0, 0);\n  }\n\n  return targetRectangle;\n}\n\n/**\n * If max height is less than zero it returns the bounds height instead.\n */\nfunction _getMaxHeightFromTargetRectangle(\n  targetRectangle: Rectangle,\n  targetEdge: DirectionalHint,\n  gapSpace: number,\n  bounds: Rectangle,\n  coverTarget?: boolean,\n) {\n  let maxHeight = 0;\n  const directionalHint = DirectionalDictionary[targetEdge];\n\n  // If cover target is set, then the max height should be calculated using the opposite of the target edge since\n  // that's the direction that the callout will expand in.\n  // For instance, if the directionalhint is bottomLeftEdge then the callout will position so it's bottom edge\n  // is aligned with the bottom of the target and expand up towards the top of the screen and the calculated max height\n  // is (bottom of target) - (top of screen) - gapSpace.\n  const target = coverTarget ? directionalHint.targetEdge * -1 : directionalHint.targetEdge;\n\n  if (target === RectangleEdge.top) {\n    maxHeight = _getEdgeValue(targetRectangle, directionalHint.targetEdge) - bounds.top - gapSpace;\n  } else if (target === RectangleEdge.bottom) {\n    maxHeight = bounds.bottom - _getEdgeValue(targetRectangle, directionalHint.targetEdge) - gapSpace;\n  } else {\n    maxHeight = bounds.bottom - targetRectangle.top - gapSpace;\n  }\n\n  return maxHeight > 0 ? maxHeight : bounds.height;\n}\n\nfunction _positionElementRelative(\n  props: IPositionProps,\n  elementToPosition: HTMLElement,\n  boundingRect: Rectangle,\n  previousPositions?: IPositionedData,\n): IElementPositionInfo {\n  const gap: number = props.gapSpace ? props.gapSpace : 0;\n  const targetRect: Rectangle = _getTargetRect(boundingRect, props.target);\n  const positionData: IPositionDirectionalHintData = _getAlignmentData(\n    _getPositionData(props.directionalHint, props.directionalHintForRTL, previousPositions)!,\n    targetRect,\n    boundingRect,\n    props.coverTarget,\n    props.alignTargetEdge,\n  );\n  const positionedElement: IElementPosition = _positionElementWithinBounds(\n    _getRectangleFromElement(elementToPosition),\n    targetRect,\n    boundingRect,\n    positionData,\n    gap,\n    props.directionalHintFixed,\n    props.coverTarget,\n  );\n  return { ...positionedElement, targetRectangle: targetRect };\n}\n\nfunction _finalizePositionData(\n  positionedElement: IElementPosition,\n  hostElement: HTMLElement,\n  bounds?: Rectangle,\n  coverTarget?: boolean,\n  doNotFinalizeReturnEdge?: boolean,\n): IPositionedData {\n  const finalizedElement: IPartialIRectangle = _finalizeElementPosition(\n    positionedElement.elementRectangle,\n    hostElement,\n    positionedElement.targetEdge,\n    bounds,\n    positionedElement.alignmentEdge,\n    coverTarget,\n    doNotFinalizeReturnEdge,\n    positionedElement.forcedInBounds,\n  );\n  return {\n    elementPosition: finalizedElement,\n    targetEdge: positionedElement.targetEdge,\n    alignmentEdge: positionedElement.alignmentEdge,\n  };\n}\n\nfunction _positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData,\n): IPositionedData {\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPosition = _positionElementRelative(\n    props,\n    elementToPosition,\n    boundingRect,\n    previousPositions,\n  );\n  return _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget);\n}\n\nfunction _positionCallout(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n  doNotFinalizeReturnEdge?: boolean,\n): ICalloutPositionedInfo {\n  const beakWidth: number = props.isBeakVisible ? props.beakWidth || 0 : 0;\n  const gap: number = _calculateActualBeakWidthInPixels(beakWidth) / 2 + (props.gapSpace ? props.gapSpace : 0);\n  const positionProps: IPositionProps = props;\n  positionProps.gapSpace = gap;\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPositionInfo = _positionElementRelative(\n    positionProps,\n    callout,\n    boundingRect,\n    previousPositions,\n  );\n\n  const beakPositioned: Rectangle = _positionBeak(beakWidth, positionedElement);\n  const finalizedBeakPosition: ICalloutBeakPositionedInfo = _finalizeBeakPosition(\n    positionedElement,\n    beakPositioned,\n    boundingRect,\n  );\n\n  return {\n    ..._finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget, doNotFinalizeReturnEdge),\n    beakPosition: finalizedBeakPosition,\n  };\n}\n\nfunction _positionCard(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, callout, previousPositions, true);\n}\n// END PRIVATE FUNCTIONS\n\nexport const __positioningTestPackage = {\n  _finalizePositionData,\n  _finalizeBeakPosition,\n  _calculateActualBeakWidthInPixels,\n  _positionElementWithinBounds,\n  _positionBeak,\n  _getPositionData,\n  _getMaxHeightFromTargetRectangle,\n};\n\n/**\n * Used to position an element relative to the given positioning props.\n * If positioning has been completed before, previousPositions can be passed to ensure that the positioning element\n * repositions based on its previous targets rather than starting with directionalhint.\n */\nexport function positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData,\n): IPositionedData {\n  return _positionElement(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCallout(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCard(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCard(props, hostElement, elementToPosition, previousPositions);\n}\n\n/**\n * Gets the maximum height that a rectangle can have in order to fit below or above a target.\n * If the directional hint specifies a left or right edge (i.e. leftCenter) it will limit the height to the topBorder\n * of the target given.\n * If no bounds are provided then the window is treated as the bounds.\n */\nexport function getMaxHeight(\n  target: Element | MouseEvent | Point | Rectangle,\n  targetEdge: DirectionalHint,\n  gapSpace: number = 0,\n  bounds?: IRectangle,\n  coverTarget?: boolean,\n): number {\n  const mouseTarget: MouseEvent = target as MouseEvent;\n  const elementTarget: Element = target as Element;\n  const rectOrPointTarget: Point & Rectangle = target as Point & Rectangle;\n  let targetRect: Rectangle;\n  const boundingRectangle = bounds\n    ? _getRectangleFromIRect(bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n\n  // eslint-disable-next-line deprecation/deprecation\n  const left = rectOrPointTarget.left || rectOrPointTarget.x;\n  // eslint-disable-next-line deprecation/deprecation\n  const top = rectOrPointTarget.top || rectOrPointTarget.y;\n  const right = rectOrPointTarget.right || left;\n  const bottom = rectOrPointTarget.bottom || top;\n\n  // eslint-disable-next-line no-extra-boolean-cast -- may not actually be a MouseEvent\n  if (!!mouseTarget.stopPropagation) {\n    targetRect = new Rectangle(mouseTarget.clientX, mouseTarget.clientX, mouseTarget.clientY, mouseTarget.clientY);\n  } else if (left !== undefined && top !== undefined) {\n    targetRect = new Rectangle(left, right, top, bottom);\n  } else {\n    targetRect = _getRectangleFromElement(elementTarget);\n  }\n\n  return _getMaxHeightFromTargetRectangle(targetRect, targetEdge, gapSpace, boundingRectangle, coverTarget);\n}\n\n/**\n * Returns the opposite edge of the given RectangleEdge.\n */\nexport function getOppositeEdge(edge: RectangleEdge): RectangleEdge {\n  return edge * -1;\n}\n\nfunction _getBoundsFromTargetWindow(\n  target: Element | MouseEvent | Point | Rectangle | null,\n  targetWindow: IWindowWithSegments,\n): IRectangle {\n  let segments = undefined;\n  if (targetWindow.getWindowSegments) {\n    segments = targetWindow.getWindowSegments();\n  }\n\n  // Identify if we're dealing with single screen scenarios.\n  if (segments === undefined || segments.length <= 1) {\n    return {\n      top: 0,\n      left: 0,\n      right: targetWindow.innerWidth,\n      bottom: targetWindow.innerHeight,\n      width: targetWindow.innerWidth,\n      height: targetWindow.innerHeight,\n    };\n  }\n\n  // Logic for determining dual screen scenarios.\n  let x: number | undefined = 0;\n  let y: number | undefined = 0;\n\n  // If the target is an Element get coordinates for its center.\n  if (target !== null && !!(target as Element).getBoundingClientRect) {\n    const clientRect = (target as Element).getBoundingClientRect();\n    x = (clientRect.left + clientRect.right) / 2;\n    y = (clientRect.top + clientRect.bottom) / 2;\n  }\n  // If the target is not null get x-axis and y-axis coordinates directly.\n  else if (target !== null) {\n    // eslint-disable-next-line deprecation/deprecation\n    x = (target as Point).left || (target as MouseEvent | Point).x;\n    // eslint-disable-next-line deprecation/deprecation\n    y = (target as Point).top || (target as MouseEvent | Point).y;\n  }\n\n  let bounds = { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n\n  // Define which window segment are the coordinates in and calculate bounds based on that.\n  for (const segment of segments) {\n    if (x && segment.left <= x && segment.right >= x && y && segment.top <= y && segment.bottom >= y) {\n      bounds = {\n        top: segment.top,\n        left: segment.left,\n        right: segment.right,\n        bottom: segment.bottom,\n        width: segment.width,\n        height: segment.height,\n      };\n    }\n  }\n\n  return bounds;\n}\n\nexport function getBoundsFromTargetWindow(\n  target: Element | MouseEvent | Point | Rectangle | null,\n  targetWindow: IWindowWithSegments,\n): IRectangle {\n  return _getBoundsFromTargetWindow(target, targetWindow);\n}\n", "import * as React from 'react';\nimport {\n  KeyCodes,\n  divProperties,\n  doesElementContainFocus,\n  getDocument,\n  getNativeProps,\n  getPropsWithDefaults,\n  getWindow,\n  modalize,\n} from '../../Utilities';\nimport { useMergedRefs, useAsync, useOnEvent } from '@fluentui/react-hooks';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport type { IPopupProps, IPopupRestoreFocusParams } from './Popup.types';\n\nfunction useScrollbarAsync(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  const async = useAsync();\n  const [needsVerticalScrollBarState, setNeedsVerticalScrollBar] = React.useState(false);\n  React.useEffect(() => {\n    async.requestAnimationFrame(() => {\n      // If overflowY is overridden, don't waste time calculating whether the scrollbar is necessary.\n      if (props.style && props.style.overflowY) {\n        return;\n      }\n\n      let needsVerticalScrollBar = false;\n      if (root && root.current && root.current?.firstElementChild) {\n        // ClientHeight returns the client height of an element rounded to an\n        // integer. On some browsers at different zoom levels this rounding\n        // can generate different results for the root container and child even\n        // though they are the same height. This causes us to show a scroll bar\n        // when not needed. Ideally we would use BoundingClientRect().height\n        // instead however seems that the API is 90% slower than using ClientHeight.\n        // Therefore instead we will calculate the difference between heights and\n        // allow for a 1px difference to still be considered ok and not show the\n        // scroll bar.\n        const rootHeight = root.current.clientHeight;\n        const firstChildHeight = root.current.firstElementChild.clientHeight;\n        if (rootHeight > 0 && firstChildHeight > rootHeight) {\n          needsVerticalScrollBar = firstChildHeight - rootHeight > 1;\n        }\n      }\n      if (needsVerticalScrollBarState !== needsVerticalScrollBar) {\n        setNeedsVerticalScrollBar(needsVerticalScrollBar);\n      }\n    });\n\n    return () => async.dispose();\n  });\n\n  return needsVerticalScrollBarState;\n}\n\nfunction defaultFocusRestorer(options: IPopupRestoreFocusParams) {\n  const { originalElement, containsFocus } = options;\n\n  if (originalElement && containsFocus && originalElement !== getWindow()) {\n    // Make sure that the focus method actually exists\n    // In some cases the object might exist but not be a real element.\n    // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n    // This is wrapped in a setTimeout because of a React 16 bug that is resolved in 17.\n    // Once we move to 17, the setTimeout should be removed (ref: https://github.com/facebook/react/issues/17894#issuecomment-656094405)\n    setTimeout(() => {\n      originalElement.focus?.();\n    }, 0);\n  }\n}\n\nfunction useRestoreFocus(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  const { onRestoreFocus = defaultFocusRestorer } = props;\n  const originalFocusedElement = React.useRef<HTMLElement>();\n  const containsFocus = React.useRef(false);\n\n  React.useEffect(() => {\n    originalFocusedElement.current = getDocument()!.activeElement as HTMLElement;\n\n    if (doesElementContainFocus(root.current!)) {\n      containsFocus.current = true;\n    }\n\n    return () => {\n      onRestoreFocus?.({\n        originalElement: originalFocusedElement.current,\n        containsFocus: containsFocus.current,\n        documentContainsFocus: getDocument()?.hasFocus() || false,\n      });\n\n      // De-reference DOM Node to avoid retainment via transpiled closure of _onKeyDown\n      originalFocusedElement.current = undefined;\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useOnEvent(\n    root,\n    'focus',\n    React.useCallback((): void => {\n      containsFocus.current = true;\n    }, []),\n    true,\n  );\n\n  useOnEvent(\n    root,\n    'blur',\n    React.useCallback((ev: FocusEvent): void => {\n      /** The popup should update this._containsFocus when:\n       * relatedTarget exists AND\n       * the relatedTarget is not contained within the popup.\n       * If the relatedTarget is within the popup, that means the popup still has focus\n       * and focused moved from one element to another within the popup.\n       * If relatedTarget is undefined or null that usually means that a\n       * keyboard event occurred and focus didn't change\n       */\n      if (root.current && ev.relatedTarget && !root.current.contains(ev.relatedTarget as HTMLElement)) {\n        containsFocus.current = false;\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []),\n    true,\n  );\n}\n\nfunction useHideSiblingNodes(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  // eslint-disable-next-line deprecation/deprecation\n  const shouldHideSiblings = String(props['aria-modal']).toLowerCase() === 'true' && props.enableAriaHiddenSiblings;\n\n  React.useEffect(() => {\n    if (!(shouldHideSiblings && root.current)) {\n      return;\n    }\n\n    const unmodalize = modalize(root.current);\n    return unmodalize;\n  }, [root, shouldHideSiblings]);\n}\n\n/**\n * This adds accessibility to Dialog and Panel controls\n */\nexport const Popup: React.FunctionComponent<IPopupProps> = React.forwardRef<HTMLDivElement, IPopupProps>(\n  (propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(\n      { shouldRestoreFocus: true, enableAriaHiddenSiblings: true },\n      propsWithoutDefaults,\n    );\n\n    const root = React.useRef<HTMLDivElement>();\n    const mergedRootRef = useMergedRefs(root, forwardedRef) as React.Ref<HTMLDivElement>;\n\n    useHideSiblingNodes(props, root);\n    useRestoreFocus(props, root);\n\n    const { role, className, ariaLabel, ariaLabelledBy, ariaDescribedBy, style, children, onDismiss } = props;\n    const needsVerticalScrollBar = useScrollbarAsync(props, root);\n\n    const onKeyDown = React.useCallback(\n      (ev: React.KeyboardEvent<HTMLElement> | KeyboardEvent): void => {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n          case KeyCodes.escape:\n            if (onDismiss) {\n              onDismiss(ev);\n\n              ev.preventDefault();\n              ev.stopPropagation();\n            }\n\n            break;\n        }\n      },\n      [onDismiss],\n    );\n\n    const win = useWindow();\n    useOnEvent(win, 'keydown', onKeyDown as (ev: Event) => void);\n\n    return (\n      <div\n        ref={mergedRootRef}\n        {...getNativeProps(props, divProperties)}\n        className={className}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        onKeyDown={onKeyDown}\n        style={{ overflowY: needsVerticalScrollBar ? 'scroll' : undefined, outline: 'none', ...style }}\n      >\n        {children}\n      </div>\n    );\n  },\n);\nPopup.displayName = 'Popup';\n", "// Do not modify this file; it is generated as part of publish.\n// The checked in version is a placeholder only and will not be updated.\nimport { setVersion } from '@fluentui/set-version';\nsetVersion('@fluentui/react-hooks', '8.6.20');", "import { Async } from '@fluentui/utilities';\nimport * as React from 'react';\n\n/**\n * Hook to provide an Async instance that is automatically cleaned up on dismount.\n */\nexport function useAsync() {\n  const asyncRef = React.useRef<Async>();\n  if (!asyncRef.current) {\n    asyncRef.current = new Async();\n  }\n  React.useEffect(() => {\n    return () => {\n      asyncRef.current?.dispose();\n      asyncRef.current = undefined;\n    };\n  }, []);\n  return asyncRef.current;\n}\n", "import * as React from 'react';\nimport { useConst } from './useConst';\n\n/** Updater callbacks returned by `useBoolean`. */\nexport interface IUseBooleanCallbacks {\n  /** Set the value to true. Always has the same identity. */\n  setTrue: () => void;\n  /** Set the value to false. Always has the same identity. */\n  setFalse: () => void;\n  /** Toggle the value. Always has the same identity. */\n  toggle: () => void;\n}\n\n/**\n * Hook to store a value and generate callbacks for setting the value to true or false.\n * The identity of the callbacks will always stay the same.\n *\n * @param initialState - Initial value\n * @returns Array with the current value and an object containing the updater callbacks.\n */\nexport function useBoolean(initialState: boolean): [boolean, IUseBooleanCallbacks] {\n  const [value, setValue] = React.useState(initialState);\n\n  const setTrue = useConst(() => () => {\n    setValue(true);\n  });\n  const setFalse = useConst(() => () => {\n    setValue(false);\n  });\n  const toggle = useConst(() => () => {\n    setValue(currentValue => !currentValue);\n  });\n\n  return [value, { setTrue, setFalse, toggle }];\n}\n", "import * as React from 'react';\n\n/**\n * Hook to initialize and return a constant value. Unlike `React.useMemo`, this is guaranteed to\n * always return the same value (and if the initializer is a function, only call it once).\n * This is similar to setting a private member in a class constructor.\n *\n * If the value should ever change based on dependencies, use `React.useMemo` instead.\n *\n * @param initialValue - Initial value, or function to get the initial value. Similar to `useState`,\n * only the value/function passed in the first time this is called is respected.\n * @returns The value. The identity of this value will always be the same.\n */\nexport function useConst<T>(initialValue: T | (() => T)): T {\n  // Use useRef to store the value because it's the least expensive built-in hook that works here\n  // (we could also use `const [value] = React.useState(initialValue)` but that's more expensive\n  // internally due to reducer handling which we don't need)\n  const ref = React.useRef<{ value: T }>();\n  if (ref.current === undefined) {\n    // Box the value in an object so we can tell if it's initialized even if the initializer\n    // returns/is undefined\n    ref.current = {\n      value: typeof initialValue === 'function' ? (initialValue as Function)() : initialValue,\n    };\n  }\n  return ref.current.value;\n}\n", "import * as React from 'react';\n\n/**\n * @deprecated Deprecated due to potential for misuse. Generally, use `React.useCallback` instead.\n * If you need a callback reference that never changes, consider `useEventCallback`.\n *\n * This hook was intended for creating callbacks which have no dependencies, and therefore never\n * need to change. It works fine if everyone using it is extremely mindful of how closures work,\n * but that's not a safe assumption--so in practice, usage of this hook tends to result in bugs\n * like unintentionally capturing the first value of a prop and not respecting updates (when\n * updates should be respected).\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useConstCallback<T extends (...args: any[]) => any>(callback: T): T {\n  const ref = React.useRef<T>();\n  if (!ref.current) {\n    ref.current = callback;\n  }\n  return ref.current;\n}\n", "import * as React from 'react';\nimport { useConst } from './useConst';\n\nexport type ChangeCallback<\n  TElement extends HTMLElement,\n  TValue,\n  TEvent extends React.SyntheticEvent<TElement> | undefined,\n> = (ev: TEvent, newValue: TValue | undefined) => void;\n\n/**\n * Hook to manage a value that could be either controlled or uncontrolled, such as a checked state or\n * text box string.\n * @param controlledValue - The controlled value passed in the props. This value will always be used if provided,\n * and the internal state will be updated to reflect it.\n * @param defaultUncontrolledValue - Initial value for the internal state in the uncontrolled case.\n * @returns An array of the current value and an updater callback. Like `React.useState`, the updater\n * callback always has the same identity, and it can take either a new value, or a function which\n * is passed the previous value and returns the new value.\n * @see https://reactjs.org/docs/uncontrolled-components.html\n */\nexport function useControllableValue<TValue, TElement extends HTMLElement>(\n  controlledValue: TValue | undefined,\n  defaultUncontrolledValue: TValue | undefined,\n): Readonly<[TValue | undefined, (update: React.SetStateAction<TValue | undefined>) => void]>;\nexport function useControllableValue<\n  TValue,\n  TElement extends HTMLElement,\n  TEvent extends React.SyntheticEvent<TElement> | undefined,\n>(\n  controlledValue: TValue | undefined,\n  defaultUncontrolledValue: TValue | undefined,\n  onChange: ChangeCallback<TElement, TValue, TEvent> | undefined,\n): Readonly<\n  [TValue | undefined, (update: React.SetStateAction<TValue | undefined>, ev?: React.FormEvent<TElement>) => void]\n>;\nexport function useControllableValue<\n  TValue,\n  TElement extends HTMLElement,\n  TEvent extends React.SyntheticEvent<TElement> | undefined,\n>(\n  controlledValue: TValue | undefined,\n  defaultUncontrolledValue: TValue | undefined,\n  onChange?: ChangeCallback<TElement, TValue, TEvent>,\n) {\n  const [value, setValue] = React.useState<TValue | undefined>(defaultUncontrolledValue);\n  const isControlled = useConst<boolean>(controlledValue !== undefined);\n  const currentValue = isControlled ? controlledValue : value;\n\n  // Duplicate the current value and onChange in refs so they're accessible from\n  // setValueOrCallOnChange without creating a new callback every time\n  const valueRef = React.useRef(currentValue);\n  const onChangeRef = React.useRef(onChange);\n  React.useEffect(() => {\n    valueRef.current = currentValue;\n    onChangeRef.current = onChange;\n  });\n\n  // To match the behavior of the setter returned by React.useState, this callback's identity\n  // should never change. This means it MUST NOT directly reference variables that can change.\n  const setValueOrCallOnChange = useConst(() => (update: React.SetStateAction<TValue | undefined>, ev?: TEvent) => {\n    // Assuming here that TValue is not a function, because a controllable value will typically\n    // be something a user can enter as input\n    const newValue = typeof update === 'function' ? (update as Function)(valueRef.current) : update;\n\n    if (onChangeRef.current) {\n      onChangeRef.current(ev!, newValue);\n    }\n\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  });\n\n  return [currentValue, setValueOrCallOnChange] as const;\n}\n", "import * as React from 'react';\nimport { useConst } from './useConst';\nimport { useIsomorphicLayoutEffect } from '@fluentui/utilities';\n\n/**\n * Modified `useCallback` that returns the same function reference every time, but internally calls\n * the most-recently passed callback implementation. Can be useful in situations such as:\n * - Event handler dependencies change too frequently, such as user props which might change on\n *   every render, or volatile values such as useState/useDispatch\n * - Callback must be referenced in a captured context (such as a window event handler or unmount\n *   handler that's registered once) but needs access to the latest props\n *\n * In general, prefer `useCallback` unless you've encountered one of the problems above.\n *\n * https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n *\n * @param fn - The callback function that will be used\n * @returns A function which is referentially stable but internally calls the most recently passed callback\n */\nexport function useEventCallback<Args extends unknown[], Return>(fn: (...args: Args) => Return) {\n  const callbackRef = React.useRef<typeof fn>(() => {\n    throw new Error('Cannot call an event handler while rendering');\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    callbackRef.current = fn;\n  }, [fn]);\n\n  // useConst rather than useCallback to ensure the reference is always stable\n  // (useCallback's deps list is an optimization, not a guarantee)\n  return useConst(() => (...args: Args) => {\n    const callback = callbackRef.current;\n    return callback(...args);\n  });\n}\n", "import * as React from 'react';\nimport { useConst } from './useConst';\n\n/**\n * Hook to force update a function component by updating a dummy state.\n */\nexport function useForceUpdate(): () => void {\n  const [, setValue] = React.useState(0);\n  const forceUpdate = useConst(() => () => setValue(value => ++value));\n  return forceUpdate;\n}\n", "import * as React from 'react';\nimport { getId } from '@fluentui/utilities';\n\n/**\n * Hook to generate a unique ID in the global scope (spanning across duplicate copies of the same library).\n *\n * @param prefix - Optional prefix for the ID\n * @param providedId - Optional id provided by a parent component. Defaults to the provided value if present,\n *  without conditioning the hook call\n * @returns The ID\n */\nexport function useId(prefix?: string, providedId?: string): string {\n  // getId should only be called once since it updates the global constant for the next ID value.\n  // (While an extra update isn't likely to cause problems in practice, it's better to avoid it.)\n  const ref = React.useRef<string | undefined>(providedId);\n  if (!ref.current) {\n    ref.current = getId(prefix);\n  }\n  return ref.current;\n}\n", "import * as React from 'react';\n\n/**\n * A Ref function which can be treated like a ref object in that it has an attached\n * current property, which will be updated as the ref is evaluated.\n */\nexport type RefObjectFunction<T> = React.RefObject<T> & ((value: T) => void);\n\n/**\n * React hook to merge multiple React refs (either MutableRefObjects or ref callbacks) into a single ref callback that\n * updates all provided refs\n * @param refs - Refs to collectively update with one ref value.\n * @returns A function with an attached \"current\" prop, so that it can be treated like a RefObject.\n */\nexport function useMergedRefs<T>(...refs: (React.Ref<T> | undefined)[]): RefObjectFunction<T> {\n  const mergedCallback: RefObjectFunction<T> = React.useCallback(\n    (value: T) => {\n      // Update the \"current\" prop hanging on the function.\n      (mergedCallback as unknown as React.MutableRefObject<T>).current = value;\n\n      for (const ref of refs) {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref) {\n          // work around the immutability of the React.Ref type\n          (ref as unknown as React.MutableRefObject<T>).current = value;\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- already exhaustive\n    [...refs],\n  ) as unknown as RefObjectFunction<T>;\n\n  return mergedCallback;\n}\n", "import * as React from 'react';\n\n/**\n * Hook which asynchronously executes a callback once the component has been mounted.\n *\n * @param callback - Function to call before mount.\n */\nexport const useMount = (callback: () => void) => {\n  const mountRef = React.useRef(callback);\n  mountRef.current = callback;\n  React.useEffect(() => {\n    mountRef.current?.();\n  }, []);\n};\n", "import * as React from 'react';\n\n/**\n * Hook which synchronously executes a callback once the component has been mounted.\n *\n * `WARNING` This should only be used if you need to perform an action after the component has been mounted and\n * before the browser paints. useMountSync will trigger debug warnings in server-rendered scenarios and should be used\n * sparingly.\n *\n * @deprecated Consider to use React.useEffect() or React.useLayoutEffect() directly based on a use case\n *\n * @param callback - Function to call once the component has been mounted.\n */\nexport const useMountSync = (callback: () => void) => {\n  const mountRef = React.useRef(callback);\n  mountRef.current = callback;\n  // eslint-disable-next-line no-restricted-properties\n  React.useLayoutEffect(() => {\n    mountRef.current?.();\n  }, []);\n};\n", "import { on } from '@fluentui/utilities';\nimport * as React from 'react';\n\n/**\n * Hook to attach an event handler on mount and handle cleanup.\n * @param element - Element (or ref to an element) to attach the event handler to\n * @param eventName - The event to attach a handler for\n * @param callback - The handler for the event\n * @param useCapture - Whether or not to attach the handler for the capture phase\n */\nexport function useOnEvent<TElement extends Element, TEvent extends Event>(\n  element: React.RefObject<TElement | undefined | null> | TElement | Window | Document | undefined | null,\n  eventName: string,\n  callback: (ev: TEvent) => void,\n  useCapture?: boolean,\n) {\n  // Use a ref for the callback to prevent repeatedly attaching/unattaching callbacks that are unstable across renders\n  const callbackRef = React.useRef(callback);\n  callbackRef.current = callback;\n\n  React.useEffect(() => {\n    const actualElement = element && 'current' in element ? element.current : element;\n    if (!actualElement) {\n      return;\n    }\n\n    const dispose = on(actualElement, eventName, (ev: TEvent) => callbackRef.current(ev), useCapture);\n    return dispose;\n  }, [element, eventName, useCapture]);\n}\n", "import { useRef, useEffect } from 'react';\n\n/**\n * Hook keeping track of a given value from a previous execution of the component the Hook is used in.\n *\n * See [React Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state)\n */\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T | undefined>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n", "import * as React from 'react';\n\n/**\n * A callback ref function that also has a .current member for the ref's current value.\n */\nexport type RefCallback<T> = ((value: T | null) => void) & React.RefObject<T>;\n\n/**\n * Creates a ref, and calls a callback whenever the ref changes to a non-null value. The callback can optionally return\n * a cleanup function that'll be called before the value changes, and when the ref is unmounted.\n *\n * This can be used to work around a limitation that useEffect cannot depend on `ref.current` (see\n * https://github.com/facebook/react/issues/14387#issuecomment-503616820).\n *\n * Usage example:\n * ```ts\n * const myRef = useRefEffect<HTMLElement>(element => {\n *  ...\n *  return () => { ... cleanup ... };\n * });\n * ```\n * ```jsx\n * <div ref={myRef} />\n * ```\n *\n * @param callback - Called whenever the ref's value changes to non-null. Can optionally return a cleanup function.\n * @param initial - (Optional) The initial value for the ref.\n *\n * @returns A function that should be called to set the ref's value. The object also has a `.current` member that can be\n * used to access the ref's value (like a normal RefObject). It can be hooked up to an element's `ref` property.\n */\nexport function useRefEffect<T>(callback: (value: T) => (() => void) | void, initial: T | null = null): RefCallback<T> {\n  type RefData = {\n    ref: ((value: T | null) => void) & React.MutableRefObject<T | null>;\n    callback: (value: T) => (() => void) | void;\n    cleanup?: (() => void) | void;\n  };\n\n  const createRefCallback = () => {\n    const refCallback = (value: T | null) => {\n      if (data.ref.current !== value) {\n        if (data.cleanup) {\n          data.cleanup();\n          data.cleanup = undefined;\n        }\n\n        data.ref.current = value;\n\n        if (value !== null) {\n          data.cleanup = data.callback(value);\n        }\n      }\n    };\n\n    refCallback.current = initial;\n    return refCallback;\n  };\n\n  const data = React.useRef<RefData>({\n    ref: createRefCallback(),\n    callback,\n  }).current;\n\n  data.callback = callback;\n\n  return data.ref;\n}\n", "import * as React from 'react';\nimport { useConst } from './useConst';\n\nexport type UseSetIntervalReturnType = {\n  setInterval: (callback: () => void, duration: number) => number;\n  clearInterval: (id: number) => void;\n};\n\n/**\n *  Returns a wrapper function for `setInterval` which automatically handles disposal.\n */\nexport const useSetInterval = (): UseSetIntervalReturnType => {\n  const intervalIds = useConst<Record<number, number>>({});\n\n  React.useEffect(\n    () => () => {\n      for (const id of Object.keys(intervalIds)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        clearInterval(id as any);\n      }\n    },\n    // useConst ensures this will never change, but react-hooks/exhaustive-deps doesn't know that\n    [intervalIds],\n  );\n\n  return useConst({\n    setInterval: (func: () => void, duration: number): number => {\n      const id = setInterval(func, duration) as unknown as number;\n\n      intervalIds[id] = 1;\n\n      return id;\n    },\n\n    clearInterval: (id: number): void => {\n      delete intervalIds[id];\n      clearInterval(id);\n    },\n  });\n};\n", "import * as React from 'react';\nimport { useConst } from './useConst';\n\nexport type UseSetTimeoutReturnType = {\n  setTimeout: (callback: () => void, duration: number) => number;\n  clearTimeout: (id: number) => void;\n};\n\n/**\n *  Returns a wrapper function for `setTimeout` which automatically handles disposal.\n */\nexport const useSetTimeout = (): UseSetTimeoutReturnType => {\n  const timeoutIds = useConst<Record<number, number>>({});\n\n  // Cleanup function.\n  React.useEffect(\n    () => () => {\n      for (const id of Object.keys(timeoutIds)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        clearTimeout(id as any);\n      }\n    },\n    // useConst ensures this will never change, but react-hooks/exhaustive-deps doesn't know that\n    [timeoutIds],\n  );\n\n  // Return wrapper which will auto cleanup.\n  return useConst({\n    setTimeout: (func: () => void, duration: number): number => {\n      const id = setTimeout(func, duration) as unknown as number;\n\n      timeoutIds[id] = 1;\n\n      return id;\n    },\n\n    clearTimeout: (id: number): void => {\n      delete timeoutIds[id];\n      clearTimeout(id);\n    },\n  });\n};\n", "import { getDocument, Rectangle } from '@fluentui/utilities';\nimport * as React from 'react';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport type { Point } from '@fluentui/utilities';\n\nexport type Target = Element | string | MouseEvent | Point | Rectangle | null | React.RefObject<Element>;\n\n/**\n * Hook to calculate and cache the target element specified by the given target attribute,\n * as well as the target element's (or host element's) parent window\n * @param target- Target selector passed to the component as a property, describing the element that\n * the callout should target\n * @param hostElement- The callout's host element, used for determining the parent window.\n */\nexport function useTarget<TElement extends HTMLElement = HTMLElement>(\n  target: Target | undefined,\n  hostElement?: React.RefObject<TElement | null>,\n): Readonly<[React.RefObject<Element | MouseEvent | Point | Rectangle | null>, Window | undefined]> {\n  const previousTargetProp = React.useRef<\n    Element | string | MouseEvent | Point | Rectangle | React.RefObject<Element> | null | undefined\n  >();\n\n  const targetRef = React.useRef<Element | MouseEvent | Point | Rectangle | null>(null);\n  /**\n   * Stores an instance of Window, used to check\n   * for server side rendering and if focus was lost.\n   */\n  const targetWindow = useWindow();\n\n  // If the target element changed, find the new one. If we are tracking\n  // target with class name, always find element because we do not know if\n  // fabric has rendered a new element and disposed the old element.\n  if (!target || target !== previousTargetProp.current || typeof target === 'string') {\n    const currentElement = hostElement?.current;\n    if (target) {\n      if (typeof target === 'string') {\n        const currentDoc: Document = getDocument(currentElement)!;\n        targetRef.current = currentDoc ? currentDoc.querySelector(target) : null;\n      } else if ('stopPropagation' in target) {\n        targetRef.current = target;\n      } else if ('getBoundingClientRect' in target) {\n        targetRef.current = target;\n      } else if ('current' in target) {\n        targetRef.current = target.current;\n      } else {\n        targetRef.current = target;\n      }\n    }\n    previousTargetProp.current = target;\n  }\n\n  return [targetRef, targetWindow] as const;\n}\n", "import * as React from 'react';\n\n/**\n * Props for the WindowProvider component.\n */\nexport type WindowProviderProps = {\n  /**\n   * Provide the active window.\n   */\n  window: Window | undefined;\n  children?: React.ReactNode;\n};\n\n/**\n * Context for providing the window.\n */\n// eslint-disable-next-line @fluentui/no-context-default-value\nexport const WindowContext = React.createContext<WindowProviderProps>({\n  window: typeof window === 'object' ? window : undefined,\n});\n\n/**\n * Hook to access the window object. This can be overridden contextually using the `WindowProvider`.\n */\nexport const useWindow = (): Window | undefined => React.useContext(WindowContext).window;\n\n/**\n * Hook to access the document object. This can be overridden contextually using the `WindowProvider`.\n */\nexport const useDocument = (): Document | undefined => React.useContext(WindowContext).window?.document;\n\n/**\n * Component to provide the window object contextually. This is useful when rendering content to an element\n * contained within a child window or iframe element, where event handlers and styling must be projected\n * to an alternative window or document.\n */\nexport const WindowProvider: React.FunctionComponent<WindowProviderProps> = props => {\n  return <WindowContext.Provider value={props}>{props.children}</WindowContext.Provider>;\n};\n", "// Do not modify this file; it is generated as part of publish.\n// The checked in version is a placeholder only and will not be updated.\nimport { setVersion } from '@fluentui/set-version';\nsetVersion('@fluentui/react-window-provider', '2.2.9');", "import * as React from 'react';\n\n/**\n * Hook which synchronously executes a callback when the component is about to unmount.\n *\n * @param callback - Function to call during unmount.\n */\nexport const useUnmount = (callback: () => void) => {\n  const unmountRef = React.useRef(callback);\n  unmountRef.current = callback;\n  React.useEffect(\n    () => () => {\n      unmountRef.current?.();\n    },\n    [],\n  );\n};\n", "import * as React from 'react';\nimport {\n  warn,\n  warnControlledUsage,\n  warnConditionallyRequiredProps,\n  warnDeprecations,\n  warnMutuallyExclusive,\n} from '@fluentui/utilities';\nimport { usePrevious } from './usePrevious';\nimport { useConst } from './useConst';\nimport type { ISettingsMap, IWarnControlledUsageParams } from '@fluentui/utilities';\n\nexport interface IWarningOptions<P> {\n  /** Name of the component */\n  name: string;\n\n  /** Current component props */\n  props: P;\n\n  /** Generic messages */\n  other?: string[];\n\n  /** Warns when props are required if a condition is met */\n  conditionallyRequired?: {\n    /** Props required when the condition is met */\n    requiredProps: string[];\n    /** Name of the prop that the condition is based on */\n    conditionalPropName: string;\n    /** Whether the condition is met */\n    condition: boolean;\n  }[];\n\n  /**\n   * Warns when deprecated props are being used. Each key is a prop name and each value is\n   * either undefined or a replacement prop name.\n   */\n  deprecations?: ISettingsMap<P>;\n\n  /**\n   * Warns when two props which are mutually exclusive are both being used.\n   * The key is one prop name and the value is the other.\n   */\n  mutuallyExclusive?: ISettingsMap<P>;\n\n  /**\n   * Check for and warn on the following error conditions with a form component:\n   * - A value prop is provided (indicated it's being used as controlled) without a change handler,\n   *    and the component is not read-only\n   * - Both the value and defaultValue props are provided\n   * - The component is attempting to switch between controlled and uncontrolled\n   *\n   * The messages mimic the warnings React gives for these error conditions on input elements.\n   * The warning will only be displayed once per component instance.\n   */\n  controlledUsage?: Pick<\n    IWarnControlledUsageParams<P>,\n    'valueProp' | 'defaultValueProp' | 'onChangeProp' | 'readOnlyProp'\n  >;\n}\n\nlet warningId = 0;\n\n/**\n * Only in development mode, display console warnings when certain conditions are met.\n * Note that all warnings except `controlledUsage` will only be shown on first render\n * (new `controlledUsage` warnings may be shown later due to prop changes).\n */\nexport function useWarnings<P>(options: IWarningOptions<P>) {\n  if (process.env.NODE_ENV !== 'production') {\n    const {\n      name,\n      props,\n      other = [],\n      conditionallyRequired,\n      deprecations,\n      mutuallyExclusive,\n      controlledUsage,\n    } = options;\n\n    /* eslint-disable react-hooks/rules-of-hooks -- build-time conditional */\n    const hasWarnedRef = React.useRef(false);\n    const componentId = useConst(() => `useWarnings_${warningId++}`);\n    const oldProps = usePrevious(props);\n    /* eslint-enable react-hooks/rules-of-hooks */\n\n    // Warn synchronously (not in useEffect) on first render to make debugging easier.\n    if (!hasWarnedRef.current) {\n      hasWarnedRef.current = true;\n\n      for (const warning of other) {\n        warn(warning);\n      }\n\n      if (conditionallyRequired) {\n        for (const req of conditionallyRequired) {\n          warnConditionallyRequiredProps(name, props, req.requiredProps, req.conditionalPropName, req.condition);\n        }\n      }\n\n      deprecations && warnDeprecations(name, props, deprecations);\n\n      mutuallyExclusive && warnMutuallyExclusive(name, props, mutuallyExclusive);\n    }\n\n    // Controlled usage warnings may be displayed on either first or subsequent renders due to\n    // prop changes. Note that it's safe to run this synchronously (not in useEffect) even in\n    // concurrent mode because `warnControlledUsage` internally tracks which warnings have been\n    // displayed for each component instance (so nothing will be displayed twice).\n    controlledUsage && warnControlledUsage({ ...controlledUsage, componentId, props, componentName: name, oldProps });\n  }\n}\n", "import { HighContrastSelector, focusClear, getGlobalClassNames, ZIndexes } from '../../Styling';\nimport type { IRawStyle } from '../../Styling';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\n\nfunction getBeakStyle(beakWidth?: number): IRawStyle {\n  return {\n    height: beakWidth,\n    width: beakWidth,\n  };\n}\n\nconst GlobalClassNames = {\n  container: 'ms-Callout-container',\n  root: 'ms-Callout',\n  beak: 'ms-Callout-beak',\n  beakCurtain: 'ms-Callout-beakCurtain',\n  calloutMain: 'ms-Callout-main',\n};\n\nexport const getStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  const {\n    theme,\n    className,\n    overflowYHidden,\n    calloutWidth,\n    beakWidth,\n    backgroundColor,\n    calloutMaxWidth,\n    calloutMinWidth,\n    doNotLayer,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { semanticColors, effects } = theme;\n\n  return {\n    container: [\n      classNames.container,\n      {\n        position: 'relative',\n      },\n    ],\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        position: 'absolute',\n        display: 'flex',\n        zIndex: doNotLayer ? ZIndexes.Layer : undefined,\n        boxSizing: 'border-box',\n        borderRadius: effects.roundedCorner2,\n        boxShadow: effects.elevation16,\n        selectors: {\n          [HighContrastSelector]: {\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: 'WindowText',\n          },\n        },\n      },\n      focusClear(),\n      className,\n      !!calloutWidth && { width: calloutWidth },\n      !!calloutMaxWidth && { maxWidth: calloutMaxWidth },\n      !!calloutMinWidth && { minWidth: calloutMinWidth },\n    ],\n    beak: [\n      classNames.beak,\n      {\n        position: 'absolute',\n        backgroundColor: semanticColors.menuBackground,\n        boxShadow: 'inherit',\n        border: 'inherit',\n        boxSizing: 'border-box',\n        transform: 'rotate(45deg)',\n      },\n      getBeakStyle(beakWidth),\n      backgroundColor && {\n        backgroundColor: backgroundColor,\n      },\n    ],\n    beakCurtain: [\n      classNames.beakCurtain,\n      {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        backgroundColor: semanticColors.menuBackground,\n        borderRadius: effects.roundedCorner2,\n      },\n    ],\n    calloutMain: [\n      classNames.calloutMain,\n      {\n        backgroundColor: semanticColors.menuBackground,\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        position: 'relative',\n        width: '100%',\n        borderRadius: effects.roundedCorner2,\n      },\n      overflowYHidden && {\n        overflowY: 'hidden',\n      },\n      backgroundColor && {\n        backgroundColor: backgroundColor,\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { CalloutContentBase } from './CalloutContent.base';\nimport { getStyles } from './CalloutContent.styles';\nimport type { ICalloutProps } from './Callout.types';\n\nexport const CalloutContent: React.FunctionComponent<ICalloutProps> = styled(CalloutContentBase, getStyles, undefined, {\n  scope: 'CalloutContent',\n});\n", "import * as React from 'react';\nimport type { RegisterPortalFn } from './types';\n\nconst PortalCompatContext = React.createContext<RegisterPortalFn | undefined>(\n  undefined,\n) as React.Context<RegisterPortalFn>;\n\nconst portalCompatContextDefaultValue = () => () => undefined;\n\nexport const PortalCompatContextProvider = PortalCompatContext.Provider;\n\nexport function usePortalCompat() {\n  return React.useContext(PortalCompatContext) ?? portalCompatContextDefaultValue;\n}\n", "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \"react-portal-compat-context\" uses v9 configs via path aliases\nimport { usePortalCompat } from '@fluentui/react-portal-compat-context';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport {\n  classNamesFunction,\n  css,\n  getDocument,\n  setPortalAttribute,\n  setVirtualParent,\n  FocusRectsProvider,\n} from '../../Utilities';\nimport {\n  registerLayer,\n  getDefaultTarget,\n  unregisterLayer,\n  getLayerHost,\n  createDefaultLayerHost,\n} from './Layer.notification';\nimport { useIsomorphicLayoutEffect, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport type { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nconst getClassNames = classNamesFunction<ILayerStyleProps, ILayerStyles>();\n\nexport const LayerBase: React.FunctionComponent<ILayerProps> = React.forwardRef<HTMLDivElement, ILayerProps>(\n  (props, ref) => {\n    const registerPortalEl = usePortalCompat();\n\n    const rootRef = React.useRef<HTMLSpanElement>(null);\n    const mergedRef = useMergedRefs(rootRef, ref);\n    const layerRef = React.useRef<HTMLDivElement>();\n    const fabricElementRef = React.useRef<HTMLDivElement>(null);\n\n    // Tracks if the layer mount events need to be raised.\n    // Required to allow the DOM to render after the layer element is added.\n    const [needRaiseLayerMount, setNeedRaiseLayerMount] = React.useState(false);\n\n    const {\n      children,\n      className,\n      eventBubblingEnabled,\n      fabricProps,\n      hostId,\n      insertFirst,\n      onLayerDidMount = () => undefined,\n      // eslint-disable-next-line deprecation/deprecation\n      onLayerMounted = () => undefined,\n      onLayerWillUnmount,\n      styles,\n      theme,\n    } = props;\n\n    const fabricRef = useMergedRefs(fabricElementRef, fabricProps?.ref);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isNotHost: !hostId,\n    });\n\n    // Returns the user provided hostId props element, the default target selector,\n    // or undefined if document doesn't exist.\n    const getHost = (doc: Document): Node | null => {\n      if (hostId) {\n        const layerHost = getLayerHost(hostId);\n\n        if (layerHost) {\n          return layerHost.rootRef.current ?? null;\n        }\n\n        return doc.getElementById(hostId) ?? null;\n      } else {\n        const defaultHostSelector = getDefaultTarget();\n\n        // Find the host.\n        let host: Node | null = defaultHostSelector ? (doc.querySelector(defaultHostSelector) as Node) : null;\n\n        // If no host is available, create a container for injecting layers in.\n        // Having a container scopes layout computation.\n        if (!host) {\n          host = createDefaultLayerHost(doc);\n        }\n\n        return host;\n      }\n    };\n\n    // Removes the current layer element's parentNode and runs onLayerWillUnmount prop if provided.\n    const removeLayerElement = (): void => {\n      onLayerWillUnmount?.();\n\n      const elem = layerRef.current;\n\n      // Clear ref before removing from the DOM\n      layerRef.current = undefined;\n\n      if (elem && elem.parentNode) {\n        elem.parentNode.removeChild(elem);\n      }\n    };\n\n    // If a doc or host exists, it will remove and update layer parentNodes.\n    const createLayerElement = () => {\n      const doc = getDocument(rootRef.current);\n\n      if (!doc) {\n        return;\n      }\n\n      const host = getHost(doc);\n\n      if (!host) {\n        return;\n      }\n\n      // Remove and re-create any previous existing layer elements.\n      removeLayerElement();\n\n      const el = (host.ownerDocument ?? doc).createElement('div');\n\n      el.className = classNames.root!;\n      setPortalAttribute(el);\n      setVirtualParent(el, rootRef.current!);\n\n      insertFirst ? host.insertBefore(el, host.firstChild) : host.appendChild(el);\n      layerRef.current = el;\n      setNeedRaiseLayerMount(true);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      createLayerElement();\n      // Check if the user provided a hostId prop and register the layer with the ID.\n      if (hostId) {\n        registerLayer(hostId, createLayerElement);\n      }\n\n      const unregisterPortalEl = layerRef.current ? registerPortalEl(layerRef.current) : undefined;\n\n      return () => {\n        if (unregisterPortalEl) {\n          unregisterPortalEl();\n        }\n\n        removeLayerElement();\n\n        if (hostId) {\n          unregisterLayer(hostId, createLayerElement);\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should run if the hostId updates.\n    }, [hostId]);\n\n    React.useEffect(() => {\n      if (layerRef.current && needRaiseLayerMount) {\n        onLayerMounted?.();\n        onLayerDidMount?.();\n        setNeedRaiseLayerMount(false);\n      }\n    }, [needRaiseLayerMount, onLayerMounted, onLayerDidMount]);\n\n    useDebugWarnings(props);\n\n    return (\n      <span className=\"ms-layer\" ref={mergedRef}>\n        {layerRef.current &&\n          ReactDOM.createPortal(\n            <FocusRectsProvider layerRoot providerRef={fabricRef}>\n              {/* eslint-disable deprecation/deprecation */}\n              <Fabric\n                {...(!eventBubblingEnabled && getFilteredEvents())}\n                {...fabricProps}\n                className={css(classNames.content, fabricProps?.className)}\n                ref={fabricRef}\n              >\n                {children}\n              </Fabric>\n              {/* eslint-enable deprecation/deprecation */}\n            </FocusRectsProvider>,\n            layerRef.current,\n          )}\n      </span>\n    );\n  },\n);\nLayerBase.displayName = 'LayerBase';\n\nlet filteredEventProps: { [key: string]: (ev: React.SyntheticEvent<HTMLElement, Event>) => void };\n\nconst onFilterEvent = (ev: React.SyntheticEvent<HTMLElement>): void => {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (\n    ev.eventPhase === Event.BUBBLING_PHASE &&\n    ev.type !== 'mouseenter' &&\n    ev.type !== 'mouseleave' &&\n    ev.type !== 'touchstart' &&\n    ev.type !== 'touchend'\n  ) {\n    ev.stopPropagation();\n  }\n};\n\nfunction getFilteredEvents() {\n  if (!filteredEventProps) {\n    filteredEventProps = {} as any;\n    [\n      'onClick',\n      'onContextMenu',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOver',\n      'onMouseOut',\n      'onMouseUp',\n      'onTouchMove',\n      'onTouchStart',\n      'onTouchCancel',\n      'onTouchEnd',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onInvalid',\n      'onSubmit',\n    ].forEach(name => (filteredEventProps[name] = onFilterEvent));\n  }\n  return filteredEventProps;\n}\n\nfunction useDebugWarnings(props: ILayerProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Layer',\n      props,\n      deprecations: { onLayerMounted: 'onLayerDidMount' },\n    });\n  }\n}\n", "import * as React from 'react';\nimport {\n  classNamesFunction,\n  divProperties,\n  getDocument,\n  getNativeProps,\n  getRTL,\n  memoizeFunction,\n  Customizer,\n  FocusRectsProvider,\n} from '../../Utilities';\nimport { createTheme } from '../../Styling';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\nimport type { IProcessedStyleSet } from '@fluentui/merge-styles';\nimport type { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\nconst getFabricTheme = memoizeFunction((theme?: ITheme, isRTL?: boolean) => createTheme({ ...theme, rtl: isRTL }));\n\nconst getDir = ({ theme, dir }: IFabricProps) => {\n  const contextDir = getRTL(theme) ? 'rtl' : 'ltr';\n  const pageDir = getRTL() ? 'rtl' : 'ltr';\n  const componentDir = dir ? dir : contextDir;\n  return {\n    // If Fabric dir !== contextDir\n    // Or If contextDir !== pageDir\n    // Then we need to set dir of the Fabric root\n    rootDir: componentDir !== contextDir || componentDir !== pageDir ? componentDir : dir,\n    // If dir !== contextDir || pageDir\n    // then set contextual theme around content\n    needsTheme: componentDir !== contextDir,\n  };\n};\n\nexport const FabricBase: React.FunctionComponent<IFabricProps> = React.forwardRef<HTMLDivElement, IFabricProps>(\n  (props, ref) => {\n    const { className, theme, applyTheme, applyThemeToBody, styles } = props;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      applyTheme: applyTheme,\n      className,\n    });\n\n    const rootElement = React.useRef<HTMLDivElement>(null);\n    useApplyThemeToBody(applyThemeToBody, classNames, rootElement);\n\n    return <>{useRenderedContent(props, classNames, rootElement, ref)}</>;\n  },\n);\nFabricBase.displayName = 'FabricBase';\n\nfunction useRenderedContent(\n  props: IFabricProps,\n  { root }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const { as: Root = 'div', dir, theme } = props;\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, ['dir']);\n\n  const { rootDir, needsTheme } = getDir(props);\n\n  let renderedContent = (\n    <FocusRectsProvider providerRef={rootElement}>\n      <Root dir={rootDir} {...divProps} className={root} ref={useMergedRefs(rootElement, ref)} />\n    </FocusRectsProvider>\n  );\n\n  // Create the contextual theme if component direction does not match parent direction.\n  if (needsTheme) {\n    // Disabling ThemeProvider here because theme doesn't need to be re-provided by ThemeProvider if dir has changed.\n    renderedContent = (\n      // eslint-disable-next-line deprecation/deprecation\n      <Customizer settings={{ theme: getFabricTheme(theme, dir === 'rtl') }}>{renderedContent}</Customizer>\n    );\n  }\n\n  return renderedContent;\n}\n\nfunction useApplyThemeToBody(\n  applyThemeToBody: boolean | undefined,\n  { bodyThemed }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement | undefined>,\n) {\n  React.useEffect((): void | (() => void) => {\n    if (applyThemeToBody) {\n      const currentDoc = getDocument(rootElement.current);\n      if (currentDoc) {\n        currentDoc.body.classList.add(bodyThemed);\n        return () => {\n          currentDoc.body.classList.remove(bodyThemed);\n        };\n      }\n    }\n  }, [bodyThemed, applyThemeToBody, rootElement]);\n\n  return rootElement;\n}\n", "import { getGlobalClassNames } from '../../Styling';\nimport type { IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst inheritFont = { fontFamily: 'inherit' };\n\nconst GlobalClassNames = {\n  root: 'ms-Fabric',\n  bodyThemed: 'ms-Fabric-bodyThemed',\n};\n\nexport interface IFabricClassNames {\n  root: string;\n  bodyThemed: string;\n}\n\nexport const getStyles = (props: IFabricStyleProps): IFabricStyles => {\n  const { applyTheme, className, preventBlanketFontInheritance, theme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: theme.palette.neutralPrimary,\n      },\n      !preventBlanketFontInheritance && {\n        '& button': inheritFont,\n        '& input': inheritFont,\n        '& textarea': inheritFont,\n      },\n      // apply theme to only if applyTheme is true\n      applyTheme && {\n        color: theme.semanticColors.bodyText,\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n      className,\n    ],\n    bodyThemed: [\n      {\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { FabricBase } from './Fabric.base';\nimport { getStyles } from './Fabric.styles';\nimport type { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\n/**\n * @deprecated This component is deprecated as of `@fluentui/react` version 8. Use `ThemeProvider` instead.\n */\nexport const Fabric: React.FunctionComponent<IFabricProps> = styled<IFabricProps, IFabricStyleProps, IFabricStyles>(\n  FabricBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Fabric',\n  },\n);\n", "import { ILayerHost } from './LayerHost.types';\n\nconst _layersByHostId: { [hostId: string]: (() => void)[] } = {};\nconst _layerHostsById: { [hostId: string]: ILayerHost[] } = {};\n\nconst defaultHostId = 'fluent-default-layer-host';\nlet _defaultHostSelector: string | undefined = `#${defaultHostId}`;\n\n/**\n * Register a layer for a given host id\n * @param hostId - Id of the layer host\n * @param layer - Layer instance\n */\nexport function registerLayer(hostId: string, callback: () => void) {\n  if (!_layersByHostId[hostId]) {\n    _layersByHostId[hostId] = [];\n  }\n\n  _layersByHostId[hostId].push(callback);\n\n  const layerHosts = _layerHostsById[hostId];\n\n  if (layerHosts) {\n    for (const layerHost of layerHosts) {\n      layerHost.notifyLayersChanged();\n    }\n  }\n}\n\n/**\n * Unregister a layer for a given host id\n * @param hostId - Id of the layer host\n * @param layer - Layer instance\n */\nexport function unregisterLayer(hostId: string, callback: () => void) {\n  const layers = _layersByHostId[hostId];\n\n  if (layers) {\n    const idx = layers.indexOf(callback);\n    if (idx >= 0) {\n      layers.splice(idx, 1);\n\n      if (layers.length === 0) {\n        delete _layersByHostId[hostId];\n      }\n    }\n  }\n\n  const layerHosts = _layerHostsById[hostId];\n\n  if (layerHosts) {\n    for (const layerHost of layerHosts) {\n      layerHost.notifyLayersChanged();\n    }\n  }\n}\n\n/**\n * Gets the number of layers currently registered with a host id.\n * @param hostId - Id of the layer host.\n * @returns The number of layers currently registered with the host.\n */\nexport function getLayerCount(hostId: string): number {\n  const layers = _layerHostsById[hostId];\n\n  return layers ? layers.length : 0;\n}\n\n/**\n * Gets the Layer Host instance associated with a hostId, if applicable.\n * @param hostId - Id of the layer host\n * @returns A component ref for the associated layer host.\n */\nexport function getLayerHost(hostId: string): ILayerHost | undefined {\n  const layerHosts = _layerHostsById[hostId];\n\n  return (layerHosts && layerHosts[0]) || undefined;\n}\n\n/**\n * Registers a Layer Host with an associated hostId.\n * @param hostId - Id of the layer host\n * @param layerHost - layer host instance\n */\nexport function registerLayerHost(hostId: string, layerHost: ILayerHost): void {\n  const layerHosts = _layerHostsById[hostId] || (_layerHostsById[hostId] = []);\n\n  // Insert this at the start of an array to avoid race conditions between mount and unmount.\n  // If a LayerHost is re-mounted, and mount of the new instance may occur before the unmount of the old one.\n  // Putting the new instance at the start of this array ensures that calls to `getLayerHost` will immediately\n  // get the new one even if the old one is around briefly.\n  layerHosts.unshift(layerHost);\n}\n\n/**\n * Unregisters a Layer Host from the associated hostId.\n * @param hostId - Id of the layer host\n * @param layerHost - layer host instance\n */\nexport function unregisterLayerHost(hostId: string, layerHost: ILayerHost): void {\n  const layerHosts = _layerHostsById[hostId];\n\n  if (layerHosts) {\n    const idx = layerHosts.indexOf(layerHost);\n\n    if (idx >= 0) {\n      layerHosts.splice(idx, 1);\n    }\n\n    if (layerHosts.length === 0) {\n      delete _layerHostsById[hostId];\n    }\n  }\n}\n\n/**\n * When no default layer host is provided, this function is executed to create the default host.\n */\nexport function createDefaultLayerHost(doc: Document): Node | null {\n  const host = doc.createElement('div');\n  host.setAttribute('id', defaultHostId);\n  (host as HTMLElement).style.cssText = 'position:fixed;z-index:1000000';\n\n  doc?.body.appendChild(host);\n\n  return host;\n}\n\n/**\n * This function can be optionally called to clean up the default layer host as needed.\n */\nexport function cleanupDefaultLayerHost(doc: Document) {\n  const host = doc.querySelector(`#${defaultHostId}`);\n\n  if (host) {\n    doc.removeChild(host);\n  }\n}\n\n/**\n * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\n * care about the specific host.\n */\nexport function notifyHostChanged(id: string) {\n  if (_layersByHostId[id]) {\n    _layersByHostId[id].forEach(callback => callback());\n  }\n}\n\n/**\n * Sets the default target selector to use when determining the host in which\n * Layered content will be injected into. If not provided, an element will be\n * created at the end of the document body.\n *\n * Passing in a falsy value will clear the default target and reset back to\n * using a created element at the end of document body.\n */\nexport function setDefaultTarget(selector?: string) {\n  _defaultHostSelector = selector;\n}\n\n/**\n * Get the default target selector when determining a host\n */\nexport function getDefaultTarget(): string | undefined {\n  return _defaultHostSelector;\n}\n", "import { ZIndexes, getGlobalClassNames } from '../../Styling';\nimport type { ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Layer',\n  rootNoHost: 'ms-Layer--fixed',\n  content: 'ms-Layer-content',\n};\n\nexport const getStyles = (props: ILayerStyleProps): ILayerStyles => {\n  const { className, isNotHost, theme } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isNotHost && [\n        classNames.rootNoHost,\n        {\n          position: 'fixed',\n          zIndex: ZIndexes.Layer,\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          visibility: 'hidden',\n        },\n      ],\n      className,\n    ],\n    content: [\n      classNames.content,\n      {\n        visibility: 'visible',\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { LayerBase } from './Layer.base';\nimport { getStyles } from './Layer.styles';\nimport type { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nexport const Layer: React.FunctionComponent<ILayerProps> = styled<ILayerProps, ILayerStyleProps, ILayerStyles>(\n  LayerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Layer',\n    fields: ['hostId', 'theme', 'styles'],\n  },\n);\n", "import * as React from 'react';\nimport { useUnmount } from '@fluentui/react-hooks';\nimport { css, getId } from '../../Utilities';\nimport { notifyHostChanged, registerLayerHost, unregisterLayerHost } from './Layer.notification';\nimport type { ILayerHost, ILayerHostProps } from './LayerHost.types';\n\nexport const LayerHost: React.FunctionComponent<ILayerHostProps> = props => {\n  const { className } = props;\n\n  const [layerHostId] = React.useState(() => getId());\n\n  const { id: hostId = layerHostId } = props;\n\n  const layerHostRef = React.useRef<ILayerHost>({\n    hostId,\n    rootRef: React.useRef<HTMLDivElement | null>(null),\n    notifyLayersChanged: () => {\n      // Nothing, since the default implementation of Layer Host does not need to react to layer changes.\n    },\n  });\n\n  React.useImperativeHandle(props.componentRef, () => layerHostRef.current);\n\n  React.useEffect(() => {\n    registerLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useUnmount(() => {\n    unregisterLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n  });\n\n  return <div {...props} className={css('ms-LayerHost', className)} ref={layerHostRef.current.rootRef} />;\n};\n", "import * as React from 'react';\n\nimport { Callout } from './Callout';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nimport type { IFocusTrapCalloutProps } from './FocusTrapCallout.types';\n\n/**\n * A special Callout that uses FocusTrapZone to trap focus\n * @param props - Props for the component\n */\nexport const FocusTrapCallout: React.FunctionComponent<IFocusTrapCalloutProps> = (\n  props: IFocusTrapCalloutProps,\n): JSX.Element => {\n  return (\n    <Callout {...props}>\n      <FocusTrapZone disabled={props.hidden} {...props.focusTrapProps}>\n        {props.children}\n      </FocusTrapZone>\n    </Callout>\n  );\n};\n", "import * as React from 'react';\nimport {\n  elementContains,\n  getNativeProps,\n  divProperties,\n  getFirstTabbable,\n  getLastTabbable,\n  getNextElement,\n  focusAsync,\n  getPropsWithDefaults,\n  modalize,\n  on,\n} from '../../Utilities';\nimport { useId, useConst, useMergedRefs, useEventCallback, usePrevious, useUnmount } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\nimport type { IRefObject } from '../../Utilities';\nimport type { IFocusTrapZoneProps, IFocusTrapZone } from './FocusTrapZone.types';\n\ninterface IFocusTrapZoneInternalState {\n  previouslyFocusedElementInTrapZone?: HTMLElement;\n  hasFocus: boolean;\n  /** ID tracked in focusStack. Don't respect prop updates in case the ID changes while the FTZ is active. */\n  focusStackId: string;\n}\n\nconst COMPONENT_NAME = 'FocusTrapZone';\n\nconst DEFAULT_PROPS = {\n  disabled: false,\n  disableFirstFocus: false,\n  forceFocusInsideTrap: true,\n  isClickableOutsideFocusTrap: false,\n};\n\nconst useComponentRef = (\n  componentRef: IRefObject<IFocusTrapZone> | undefined,\n  previouslyFocusedElement: HTMLElement | undefined,\n  focusFTZ: () => void,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      get previouslyFocusedElement() {\n        return previouslyFocusedElement;\n      },\n      focus: focusFTZ,\n    }),\n    [focusFTZ, previouslyFocusedElement],\n  );\n};\n\nexport const FocusTrapZone: React.FunctionComponent<IFocusTrapZoneProps> & {\n  /**\n   * Stack of active FocusTrapZone identifiers, exposed for testing purposes only.\n   * (This is always set, just marked as optional to avoid a cast in the component definition.)\n   * @internal\n   */\n  focusStack?: string[];\n} = React.forwardRef<HTMLDivElement, IFocusTrapZoneProps>((propsWithoutDefaults, ref) => {\n  const root = React.useRef<HTMLDivElement>(null);\n  const firstBumper = React.useRef<HTMLDivElement>(null);\n  const lastBumper = React.useRef<HTMLDivElement>(null);\n  const mergedRootRef = useMergedRefs(root, ref) as React.Ref<HTMLDivElement>;\n  const doc = useDocument();\n\n  const isFirstRender = usePrevious(false) ?? true;\n\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n  const internalState = useConst<IFocusTrapZoneInternalState>({\n    hasFocus: false,\n    focusStackId: useId('ftz-', props.id),\n  });\n\n  const {\n    children,\n    componentRef,\n    disabled,\n    disableFirstFocus,\n    forceFocusInsideTrap,\n    focusPreviouslyFocusedInnerElement,\n    // eslint-disable-next-line deprecation/deprecation\n    firstFocusableSelector,\n    firstFocusableTarget,\n    // eslint-disable-next-line deprecation/deprecation\n    disableRestoreFocus = props.ignoreExternalFocusing,\n    isClickableOutsideFocusTrap,\n    enableAriaHiddenSiblings,\n  } = props;\n\n  const bumperProps = {\n    'aria-hidden': true,\n    style: {\n      pointerEvents: 'none',\n      position: 'fixed', // 'fixed' prevents browsers from scrolling to bumpers when viewport does not contain them\n    },\n    tabIndex: disabled ? -1 : 0, // make bumpers tabbable only when enabled\n    'data-is-visible': true,\n    'data-is-focus-trap-zone-bumper': true,\n  } as React.HTMLAttributes<HTMLDivElement>;\n\n  const focusElementAsync = React.useCallback((element: HTMLElement) => {\n    if (element !== firstBumper.current && element !== lastBumper.current) {\n      focusAsync(element);\n    }\n  }, []);\n\n  /**\n   * Callback to force focus into FTZ (named to avoid overlap with global focus() callback).\n   * useEventCallback always returns the same callback reference but updates the implementation\n   * every render to avoid stale captured values.\n   */\n  const focusFTZ = useEventCallback(() => {\n    if (!root.current) {\n      return; // not done mounting\n    }\n\n    const { previouslyFocusedElementInTrapZone } = internalState;\n    if (\n      focusPreviouslyFocusedInnerElement &&\n      previouslyFocusedElementInTrapZone &&\n      elementContains(root.current, previouslyFocusedElementInTrapZone)\n    ) {\n      // focus on the last item that had focus in the zone before we left the zone\n      focusElementAsync(previouslyFocusedElementInTrapZone);\n      return;\n    }\n\n    let firstFocusableChild: HTMLElement | null = null;\n\n    if (typeof firstFocusableTarget === 'string') {\n      firstFocusableChild = root.current.querySelector(firstFocusableTarget);\n    } else if (firstFocusableTarget) {\n      firstFocusableChild = firstFocusableTarget(root.current);\n    } else if (firstFocusableSelector) {\n      const focusSelector =\n        typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector();\n      firstFocusableChild = root.current.querySelector('.' + focusSelector);\n    }\n\n    // Fall back to first element if query selector did not match any elements.\n    if (!firstFocusableChild) {\n      firstFocusableChild = getNextElement(\n        root.current,\n        root.current.firstChild as HTMLElement,\n        false,\n        false,\n        false,\n        true,\n      );\n    }\n\n    if (firstFocusableChild) {\n      focusElementAsync(firstFocusableChild);\n    }\n  });\n\n  /** Used in root div focus/blur handlers */\n  const focusBumper = (isFirstBumper: boolean) => {\n    if (disabled || !root.current) {\n      return;\n    }\n\n    const nextFocusable =\n      isFirstBumper === internalState.hasFocus\n        ? getLastTabbable(root.current, lastBumper.current!, true, false)\n        : getFirstTabbable(root.current, firstBumper.current!, true, false);\n\n    if (nextFocusable) {\n      if (nextFocusable === firstBumper.current || nextFocusable === lastBumper.current) {\n        // This can happen when FTZ contains no tabbable elements.\n        // focusFTZ() will take care of finding a focusable element in FTZ.\n        focusFTZ();\n      } else {\n        nextFocusable.focus();\n      }\n    }\n  };\n\n  /** Root div blur handler (doesn't need useCallback since it's for a native element) */\n  const onRootBlurCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    props.onBlurCapture?.(ev);\n    let relatedTarget = ev.relatedTarget;\n    if (ev.relatedTarget === null) {\n      // In IE11, due to lack of support, event.relatedTarget is always\n      // null making every onBlur call to be \"outside\" of the root\n      // even when it's not. Using document.activeElement is another way\n      // for us to be able to get what the relatedTarget without relying\n      // on the event\n      relatedTarget = doc!.activeElement as Element;\n    }\n    if (!elementContains(root.current, relatedTarget as HTMLElement)) {\n      internalState.hasFocus = false;\n    }\n  };\n\n  /** Root div focus handler (doesn't need useCallback since it's for a native element) */\n  const onRootFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    props.onFocusCapture?.(ev);\n\n    if (ev.target === firstBumper.current) {\n      focusBumper(true);\n    } else if (ev.target === lastBumper.current) {\n      focusBumper(false);\n    }\n\n    internalState.hasFocus = true;\n\n    if (ev.target !== ev.currentTarget && !(ev.target === firstBumper.current || ev.target === lastBumper.current)) {\n      // every time focus changes within the trap zone, remember the focused element so that\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\n      internalState.previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\n    }\n  };\n\n  /** Called to restore focus on unmount or props change. (useEventCallback ensures latest prop values are used.) */\n  const returnFocusToInitiator = useEventCallback((elementToFocusOnDismiss: HTMLElement | null) => {\n    FocusTrapZone.focusStack = FocusTrapZone.focusStack!.filter(value => internalState.focusStackId !== value);\n\n    if (!doc) {\n      return;\n    }\n\n    const activeElement = doc.activeElement as HTMLElement;\n    if (\n      !disableRestoreFocus &&\n      typeof elementToFocusOnDismiss?.focus === 'function' &&\n      // only restore focus if the current focused element is within the FTZ, or if nothing is focused\n      (elementContains(root.current, activeElement) || activeElement === doc.body)\n    ) {\n      focusElementAsync(elementToFocusOnDismiss);\n    }\n  });\n\n  /** Called in window event handlers. (useEventCallback ensures latest prop values are used.) */\n  const forceFocusOrClickInTrap = useEventCallback((ev: FocusEvent | MouseEvent): void => {\n    // be sure to use the latest values here\n    if (disabled) {\n      return;\n    }\n    if (internalState.focusStackId === FocusTrapZone.focusStack!.slice(-1)[0]) {\n      const targetElement = ev.target as HTMLElement | null;\n      if (targetElement && !elementContains(root.current, targetElement)) {\n        if (doc && doc.activeElement === doc.body) {\n          setTimeout(() => {\n            if (doc && doc.activeElement === doc.body) {\n              focusFTZ();\n              internalState.hasFocus = true; // set focus here since we stop event propagation\n            }\n          }, 0);\n        } else {\n          focusFTZ();\n          internalState.hasFocus = true; // set focus here since we stop event propagation\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  });\n\n  // Update window event handlers when relevant props change\n  React.useEffect(() => {\n    const disposables: Array<() => void> = [];\n\n    if (forceFocusInsideTrap) {\n      disposables.push(on(window, 'focus', forceFocusOrClickInTrap, true));\n    }\n    if (!isClickableOutsideFocusTrap) {\n      disposables.push(on(window, 'click', forceFocusOrClickInTrap, true));\n    }\n\n    return () => {\n      disposables.forEach(dispose => dispose());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when these two props change\n  }, [forceFocusInsideTrap, isClickableOutsideFocusTrap]);\n\n  // On prop change or first render, focus the FTZ and update focusStack if appropriate\n  React.useEffect(() => {\n    // Do nothing if disabled, or if it's a re-render and forceFocusInsideTrap is false\n    // (to match existing behavior, the FTZ handles first focus even if forceFocusInsideTrap\n    // is false, though it's debatable whether it should do this)\n    if (disabled || (!isFirstRender && !forceFocusInsideTrap) || !root.current) {\n      return;\n    }\n\n    // Transition from forceFocusInsideTrap / FTZ disabled to enabled (or initial mount)\n    FocusTrapZone.focusStack!.push(internalState.focusStackId);\n\n    const elementToFocusOnDismiss = props.elementToFocusOnDismiss || (doc!.activeElement as HTMLElement | null);\n\n    if (!disableFirstFocus && !elementContains(root.current, elementToFocusOnDismiss)) {\n      focusFTZ();\n    }\n\n    // To match existing behavior, always return focus on cleanup (even if we didn't handle\n    // initial focus), but it's debatable whether that's correct\n    return () => returnFocusToInitiator(elementToFocusOnDismiss);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when these two props change\n  }, [forceFocusInsideTrap, disabled]);\n\n  // Handle modalization separately from first focus\n  React.useEffect(() => {\n    if (!disabled && enableAriaHiddenSiblings) {\n      const unmodalize = modalize(root.current!);\n      return unmodalize;\n    }\n  }, [disabled, enableAriaHiddenSiblings, root]);\n\n  // Cleanup lifecyle method for internalState.\n  useUnmount(() => {\n    // Dispose of element references so the DOM Nodes can be garbage-collected\n    delete internalState.previouslyFocusedElementInTrapZone;\n  });\n\n  useComponentRef(componentRef, internalState.previouslyFocusedElementInTrapZone, focusFTZ);\n\n  return (\n    <div\n      // this is above the native props spread so props['aria-labelledby'] will override it if provided\n      aria-labelledby={props.ariaLabelledBy}\n      // native props include onFocus, onBlur, className\n      {...getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties)}\n      ref={mergedRootRef}\n      onFocusCapture={onRootFocusCapture}\n      onBlurCapture={onRootBlurCapture}\n    >\n      <div {...bumperProps} ref={firstBumper} />\n      {children}\n      <div {...bumperProps} ref={lastBumper} />\n    </div>\n  );\n});\n\nFocusTrapZone.displayName = COMPONENT_NAME;\nFocusTrapZone.focusStack = [];\n", "import { AnimationClassNames } from '../../Styling';\nimport type { ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\n\nexport const getStyles = (props: ITooltipStyleProps): ITooltipStyles => {\n  const { className, beakWidth = 16, gapSpace = 0, maxWidth, theme } = props;\n  const { semanticColors, fonts, effects } = theme;\n\n  // The math here is done to account for the 45 degree rotation of the beak\n  // and sub-pixel rounding that differs across browsers, which is more noticeable when\n  // the device pixel ratio is larger\n  const tooltipGapSpace = -(Math.sqrt((beakWidth * beakWidth) / 2) + gapSpace) + 1 / window.devicePixelRatio;\n\n  return {\n    root: [\n      'ms-Tooltip',\n      theme.fonts.medium,\n      AnimationClassNames.fadeIn200,\n      {\n        background: semanticColors.menuBackground,\n        boxShadow: effects.elevation8,\n        padding: '8px',\n        maxWidth: maxWidth,\n        selectors: {\n          ':after': {\n            content: `''`,\n            position: 'absolute',\n            bottom: tooltipGapSpace,\n            left: tooltipGapSpace,\n            right: tooltipGapSpace,\n            top: tooltipGapSpace,\n            zIndex: 0,\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      'ms-Tooltip-content',\n      fonts.small,\n      {\n        position: 'relative',\n        zIndex: 1,\n        color: semanticColors.menuItemText,\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n        overflow: 'hidden',\n      },\n    ],\n    subText: [\n      'ms-Tooltip-subtext',\n      {\n        // Using inherit here to avoid unintentional global overrides of the <p> tag.\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        color: 'inherit',\n        margin: 0,\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { TooltipBase } from './Tooltip.base';\nimport { getStyles } from './Tooltip.styles';\nimport type { ITooltipProps, ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\n\nexport const Tooltip: React.FunctionComponent<ITooltipProps> = styled<\n  ITooltipProps,\n  ITooltipStyleProps,\n  ITooltipStyles\n>(TooltipBase, getStyles, undefined, {\n  scope: 'Tooltip',\n});\n", "import * as React from 'react';\nimport { TooltipBase } from './Tooltip.base';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { ICalloutProps } from '../../Callout';\nimport type { IRenderFunction, IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IStyle, ITheme } from '../../Styling';\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltip {}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipProps extends React.HTMLAttributes<HTMLDivElement | TooltipBase> {\n  /**\n   * Optional callback to access the ITooltip interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ITooltip>;\n\n  /**\n   * Properties to pass through for Callout.\n   * @defaultvalue `{ isBeakVisible: true, beakWidth: 16, gapSpace: 0, setInitialFocus: true, doNotLayer: false }`\n   */\n  calloutProps?: ICalloutProps;\n\n  /**\n   * Content to be passed to the tooltip\n   */\n  content?: string | JSX.Element | JSX.Element[];\n\n  /**\n   * Render function to populate tooltip content.\n   */\n  onRenderContent?: IRenderFunction<ITooltipProps>;\n\n  /**\n   * Length of delay. Set to `TooltipDelay.zero` if you do not want a delay.\n   * @defaultvalue TooltipDelay.medium\n   */\n  delay?: TooltipDelay;\n\n  /**\n   * Max width of tooltip\n   * @defaultvalue 364px\n   */\n  maxWidth?: string | null;\n\n  /**\n   * Element to anchor the Tooltip to.\n   */\n  targetElement?: HTMLElement;\n\n  /**\n   * How the tooltip should be anchored to its `targetElement`.\n   * @defaultvalue DirectionalHint.topCenter\n   */\n  directionalHint?: DirectionalHint;\n\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used instead\n   */\n  directionalHintForRTL?: DirectionalHint;\n\n  /**\n   * Theme provided by higher-order component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<ITooltipStyleProps, ITooltipStyles>;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport enum TooltipDelay {\n  zero = 0,\n  /** 300 ms delay before showing the tooltip */\n  medium = 1,\n  /** 500 ms delay before showing the tooltip */\n  long = 2,\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipStyleProps {\n  theme: ITheme;\n\n  className?: string;\n\n  /**\n   * Delay before tooltip appears.\n   * @deprecated Delay logic moved to TooltipHost vs relying on animation delay.\n   */\n  delay?: TooltipDelay;\n\n  /**\n   * Maximum width of tooltip.\n   */\n  maxWidth?: string;\n\n  /**\n   * The gap between the Callout and the target\n   * @defaultvalue 0\n   */\n  gapSpace?: number;\n\n  /**\n   * The width of the Callout's beak\n   * @defaultvalue 16\n   */\n  beakWidth?: number;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipStyles {\n  /**\n   * Style for the root element.\n   */\n  root: IStyle;\n\n  /**\n   * Style for the content element.\n   */\n  content: IStyle;\n\n  /**\n   * Style for the subtext element.\n   */\n  subText: IStyle;\n}\n", "import * as React from 'react';\nimport { hiddenContentStyle } from '../../Styling';\nimport {\n  initializeComponentRef,\n  Async,\n  divProperties,\n  getNativeProps,\n  getId,\n  assign,\n  hasOverflow,\n  portalContainsElement,\n  classNamesFunction,\n  KeyCodes,\n} from '../../Utilities';\nimport { TooltipOverflowMode } from './TooltipHost.types';\nimport { Tooltip } from './Tooltip';\nimport { TooltipDelay } from './Tooltip.types';\nimport type { ITooltipHostProps, ITooltipHostStyles, ITooltipHostStyleProps, ITooltipHost } from './TooltipHost.types';\n\nexport interface ITooltipHostState {\n  /** @deprecated No longer used internally */\n  isAriaPlaceholderRendered: boolean;\n  isTooltipVisible: boolean;\n}\n\nconst getClassNames = classNamesFunction<ITooltipHostStyleProps, ITooltipHostStyles>();\n\nexport class TooltipHostBase extends React.Component<ITooltipHostProps, ITooltipHostState> implements ITooltipHost {\n  public static defaultProps = {\n    delay: TooltipDelay.medium,\n  };\n\n  private static _currentVisibleTooltip: ITooltipHost | undefined;\n\n  // The wrapping div that gets the hover events\n  private _tooltipHost = React.createRef<HTMLDivElement>();\n\n  private _classNames: { [key in keyof ITooltipHostStyles]: string };\n  private _async: Async;\n  private _dismissTimerId: number;\n  private _openTimerId: number;\n  private _defaultTooltipId = getId('tooltip');\n  private _ignoreNextFocusEvent: boolean;\n\n  // Constructor\n  constructor(props: ITooltipHostProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    this.state = {\n      isAriaPlaceholderRendered: false,\n      isTooltipVisible: false,\n    };\n\n    this._async = new Async(this);\n  }\n\n  // Render\n  public render(): JSX.Element {\n    const {\n      calloutProps,\n      children,\n      content,\n      directionalHint,\n      directionalHintForRTL,\n      hostClassName: className,\n      id,\n      // eslint-disable-next-line deprecation/deprecation\n      setAriaDescribedBy = true,\n      tooltipProps,\n      styles,\n      theme,\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    const { isTooltipVisible } = this.state;\n    const tooltipId = id || this._defaultTooltipId;\n\n    const tooltipRenderProps = {\n      id: `${tooltipId}--tooltip`,\n      content,\n      targetElement: this._getTargetElement(),\n      directionalHint,\n      directionalHintForRTL,\n      calloutProps: assign({}, calloutProps, {\n        onDismiss: this._hideTooltip,\n        onFocus: this._onTooltipContentFocus,\n        onMouseEnter: this._onTooltipMouseEnter,\n        onMouseLeave: this._onTooltipMouseLeave,\n      }),\n      onMouseEnter: this._onTooltipMouseEnter,\n      onMouseLeave: this._onTooltipMouseLeave,\n      ...getNativeProps(this.props, divProperties, ['id']), // Make sure we use the id above\n      ...tooltipProps,\n    };\n\n    // Get the content of the tooltip for use in the hidden div used for screen readers\n    const tooltipContent = tooltipProps?.onRenderContent\n      ? tooltipProps.onRenderContent(tooltipRenderProps, props => (props?.content ? <>{props.content}</> : null))\n      : content;\n    const showTooltip = isTooltipVisible && !!tooltipContent;\n    const ariaDescribedBy = setAriaDescribedBy && isTooltipVisible && !!tooltipContent ? tooltipId : undefined;\n\n    return (\n      <div\n        className={this._classNames.root}\n        ref={this._tooltipHost}\n        {...{ onFocusCapture: this._onTooltipFocus }}\n        {...{ onBlurCapture: this._onTooltipBlur }}\n        onMouseEnter={this._onTooltipMouseEnter}\n        onMouseLeave={this._onTooltipMouseLeave}\n        onKeyDown={this._onTooltipKeyDown}\n        role=\"none\"\n        // WARNING: aria-describedby on this node provides no value, since it isn't allowed generic elements\n        aria-describedby={ariaDescribedBy}\n      >\n        {children}\n        {showTooltip && <Tooltip {...tooltipRenderProps} />}\n        <div hidden={true} id={tooltipId} style={hiddenContentStyle as React.CSSProperties}>\n          {tooltipContent}\n        </div>\n      </div>\n    );\n  }\n\n  public componentWillUnmount(): void {\n    if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip === this) {\n      TooltipHostBase._currentVisibleTooltip = undefined;\n    }\n\n    this._async.dispose();\n  }\n\n  public show = (): void => {\n    this._toggleTooltip(true);\n  };\n\n  public dismiss = (): void => {\n    this._hideTooltip();\n  };\n\n  private _getTargetElement = (): HTMLElement | undefined => {\n    if (!this._tooltipHost.current) {\n      return undefined;\n    }\n\n    const { overflowMode } = this.props;\n\n    // Select target element based on overflow mode. For parent mode, you want to position the tooltip relative\n    // to the parent element, otherwise it might look off.\n    if (overflowMode !== undefined) {\n      switch (overflowMode) {\n        case TooltipOverflowMode.Parent:\n          return this._tooltipHost.current.parentElement!;\n\n        case TooltipOverflowMode.Self:\n          return this._tooltipHost.current;\n      }\n    }\n\n    return this._tooltipHost.current;\n  };\n\n  private _onTooltipFocus = (ev: React.FocusEvent<HTMLElement>) => {\n    if (this._ignoreNextFocusEvent) {\n      this._ignoreNextFocusEvent = false;\n      return;\n    }\n\n    this._onTooltipMouseEnter(ev);\n  };\n\n  private _onTooltipContentFocus = (ev: React.FocusEvent<HTMLElement>) => {\n    if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== this) {\n      TooltipHostBase._currentVisibleTooltip.dismiss();\n    }\n    TooltipHostBase._currentVisibleTooltip = this;\n\n    this._clearDismissTimer();\n    this._clearOpenTimer();\n  };\n\n  private _onTooltipBlur = (ev: React.FocusEvent<HTMLElement>) => {\n    // The focused element gets a blur event when the document loses focus\n    // (e.g. switching tabs in the browser), but we don't want to show the\n    // tooltip again when the document gets focus back. Handle this case by\n    // checking if the blurred element is still the document's activeElement,\n    // and ignoring when it next gets focus back.\n    // See https://github.com/microsoft/fluentui/issues/13541\n    this._ignoreNextFocusEvent = document?.activeElement === ev.target;\n\n    this._dismissTimerId = this._async.setTimeout(() => {\n      this._hideTooltip();\n    }, 0);\n  };\n\n  // Show Tooltip\n  private _onTooltipMouseEnter = (ev: any): void => {\n    const { overflowMode, delay } = this.props;\n\n    if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== this) {\n      TooltipHostBase._currentVisibleTooltip.dismiss();\n    }\n    TooltipHostBase._currentVisibleTooltip = this;\n\n    if (overflowMode !== undefined) {\n      const overflowElement = this._getTargetElement();\n      if (overflowElement && !hasOverflow(overflowElement)) {\n        return;\n      }\n    }\n\n    if (ev.target && portalContainsElement(ev.target as HTMLElement, this._getTargetElement())) {\n      // Do not show tooltip when target is inside a portal relative to TooltipHost.\n      return;\n    }\n\n    this._clearDismissTimer();\n    this._clearOpenTimer();\n\n    if (delay !== TooltipDelay.zero) {\n      const delayTime = this._getDelayTime(delay!); // non-null assertion because we set it in `defaultProps`\n\n      this._openTimerId = this._async.setTimeout(() => {\n        this._toggleTooltip(true);\n      }, delayTime);\n    } else {\n      this._toggleTooltip(true);\n    }\n  };\n\n  // Hide Tooltip\n  private _onTooltipMouseLeave = (ev: any): void => {\n    const { closeDelay } = this.props;\n\n    this._clearDismissTimer();\n    this._clearOpenTimer();\n\n    if (closeDelay) {\n      this._dismissTimerId = this._async.setTimeout(() => {\n        this._toggleTooltip(false);\n      }, closeDelay);\n    } else {\n      this._toggleTooltip(false);\n    }\n\n    if (TooltipHostBase._currentVisibleTooltip === this) {\n      TooltipHostBase._currentVisibleTooltip = undefined;\n    }\n  };\n\n  private _onTooltipKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if ((ev.which === KeyCodes.escape || ev.ctrlKey) && this.state.isTooltipVisible) {\n      this._hideTooltip();\n      ev.stopPropagation();\n    }\n  };\n\n  private _clearDismissTimer = (): void => {\n    this._async.clearTimeout(this._dismissTimerId);\n  };\n\n  private _clearOpenTimer = (): void => {\n    this._async.clearTimeout(this._openTimerId);\n  };\n\n  // Hide Tooltip\n  private _hideTooltip = (): void => {\n    this._clearOpenTimer();\n    this._clearDismissTimer();\n    this._toggleTooltip(false);\n  };\n\n  private _toggleTooltip = (isTooltipVisible: boolean): void => {\n    if (this.state.isTooltipVisible !== isTooltipVisible) {\n      this.setState(\n        { isTooltipVisible },\n        () => this.props.onTooltipToggle && this.props.onTooltipToggle(isTooltipVisible),\n      );\n    }\n  };\n\n  private _getDelayTime = (delay: TooltipDelay): number => {\n    switch (delay) {\n      case TooltipDelay.medium:\n        return 300;\n      case TooltipDelay.long:\n        return 500;\n      default:\n        return 0;\n    }\n  };\n}\n", "import * as React from 'react';\nimport { TooltipHostBase } from './TooltipHost.base';\nimport { TooltipDelay } from './Tooltip.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { ITooltipProps } from './Tooltip.types';\nimport type { ICalloutProps } from '../../Callout';\nimport type { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IStyle, ITheme } from '../../Styling';\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipHost {\n  /**\n   * Shows the tooltip.\n   */\n  show: () => void;\n\n  /**\n   * Dismisses the tooltip.\n   */\n  dismiss: () => void;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport enum TooltipOverflowMode {\n  /** Only show tooltip if parent DOM element is overflowing */\n  Parent,\n\n  /**\n   * Only show tooltip if tooltip host's content is overflowing.\n   * Note that this does not check the children for overflow, only the TooltipHost root.\n   */\n  Self,\n}\n\n/**\n * TooltipHost props. Note that native props (such as `id`, `className`, and `aria-` props) are\n * passed through to the Tooltip itself, rather than being used on the host element.\n * {@docCategory Tooltip}\n */\nexport interface ITooltipHostProps extends React.HTMLAttributes<HTMLDivElement | TooltipHostBase> {\n  /**\n   * Optional callback to access the ITooltipHost interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ITooltipHost>;\n\n  /**\n   * Additional properties to pass through for Callout.\n   */\n  calloutProps?: ICalloutProps;\n\n  /**\n   * Number of milliseconds to delay closing the tooltip, so that the user has time to hover over\n   * the tooltip and interact with it. Hovering over the tooltip will count as hovering over the\n   * host, so that the tooltip will stay open if the user is actively interacting with it.\n   */\n  closeDelay?: number;\n\n  /**\n   * Content to display in the Tooltip.\n   */\n  content?: string | JSX.Element | JSX.Element[];\n\n  /**\n   * Length of delay before showing the tooltip on hover.\n   * @defaultvalue TooltipDelay.medium\n   */\n  delay?: TooltipDelay;\n\n  /**\n   * How the tooltip should be anchored to its `targetElement`.\n   * @defaultvalue DirectionalHint.topCenter\n   */\n  directionalHint?: DirectionalHint;\n\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used.\n   */\n  directionalHintForRTL?: DirectionalHint;\n\n  /**\n   * Class name to apply to tooltip host.\n   */\n  hostClassName?: string;\n\n  /**\n   * Class name to apply to the *tooltip itself*, not the host.\n   * To apply a class to the host, use `hostClassName` or `styles.root`.\n   */\n  className?: string;\n\n  /**\n   * If this is unset (the default), the tooltip is always shown even if there's no overflow.\n   *\n   * If set, only show the tooltip if the specified element (`Self` or `Parent`) has overflow.\n   * When set to `Parent`, the parent element is also used as the tooltip's target element.\n   *\n   * Note that even with `Self` mode, the TooltipHost *does not* check whether any children have overflow.\n   */\n  overflowMode?: TooltipOverflowMode;\n\n  /**\n   * Whether or not to mark the TooltipHost root element as described by the tooltip.\n   * Since this applies aria-describedby to a generic <div>, the description will not be\n   * read by screen readers. Instead, the caller should pass an `id` to the TooltipHost\n   * (to be passed through to the Tooltip) and mark the appropriate element as `aria-describedby`\n   * with the `id`.\n   * @defaultvalue true\n   * @deprecated use aria-describedby on the appropriate element instead\n   */\n  setAriaDescribedBy?: boolean;\n\n  /**\n   * Additional properties to pass through for Tooltip.\n   */\n  tooltipProps?: ITooltipProps;\n\n  /**\n   * Optional ID to pass through to the tooltip (not used on the host itself).\n   * Auto-generated if not provided.\n   */\n  id?: string;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<ITooltipHostStyleProps, ITooltipHostStyles>;\n\n  /**\n   * Theme provided by higher-order component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Notifies when tooltip becomes visible or hidden, whatever the trigger was.\n   */\n  onTooltipToggle?(isTooltipVisible: boolean): void;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipHostStyleProps {\n  theme: ITheme;\n  className?: string;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipHostStyles {\n  /**\n   * Style for the host wrapper element.\n   */\n  root: IStyle;\n}\n", "import { getGlobalClassNames } from '../../Styling';\nimport type { ITooltipHostStyleProps, ITooltipHostStyles } from './TooltipHost.types';\n\nconst GlobalClassNames = {\n  root: 'ms-TooltipHost',\n  ariaPlaceholder: 'ms-TooltipHost-aria-placeholder',\n};\n\nexport const getStyles = (props: ITooltipHostStyleProps): ITooltipHostStyles => {\n  const { className, theme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'inline',\n      },\n      className,\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { TooltipHostBase } from './TooltipHost.base';\nimport { getStyles } from './TooltipHost.styles';\nimport type { ITooltipHostProps, ITooltipHostStyleProps, ITooltipHostStyles } from './TooltipHost.types';\n\nexport const TooltipHost: React.FunctionComponent<ITooltipHostProps> = styled<\n  ITooltipHostProps,\n  ITooltipHostStyleProps,\n  ITooltipHostStyles\n>(TooltipHostBase, getStyles, undefined, {\n  scope: 'TooltipHost',\n});\n", "import * as React from 'react';\nimport {\n  classNamesFunction,\n  divProperties,\n  memoizeFunction,\n  getInitials,\n  getNativeProps,\n  getRTL,\n  getPropsWithDefaults,\n} from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport { PersonaInitialsColor, PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\nimport { useWarnings } from '@fluentui/react-hooks';\nimport type {\n  IPersonaCoinProps,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n  IPersonaPresenceProps,\n} from '../Persona.types';\n\nconst getClassNames = classNamesFunction<IPersonaCoinStyleProps, IPersonaCoinStyles>({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nconst getInitialsStyles = memoizeFunction(\n  (\n    className: string,\n    initialsColor: PersonaInitialsColor | string | undefined,\n    initialsTextColor: string | undefined,\n    text: string | undefined,\n    primaryText: string | undefined,\n    showUnknownPersonaCoin: boolean | undefined,\n  ) =>\n    mergeStyles(\n      className,\n      !showUnknownPersonaCoin && {\n        backgroundColor: getPersonaInitialsColor({ text, initialsColor, primaryText }),\n        color: initialsTextColor,\n      },\n    ),\n);\n\nconst DEFAULT_PROPS = {\n  size: PersonaSize.size48,\n  presence: PersonaPresenceEnum.none,\n  imageAlt: '',\n};\n\nfunction useDebugWarnings(props: IPersonaCoinProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'PersonaCoin',\n      props,\n      deprecations: { primaryText: 'text' },\n    });\n  }\n}\n\nfunction useImageLoadState({ onPhotoLoadingStateChange, imageUrl }: IPersonaCoinProps) {\n  const [imageLoadState, setImageLoadstate] = React.useState<ImageLoadState>(ImageLoadState.notLoaded);\n\n  React.useEffect(() => {\n    setImageLoadstate(ImageLoadState.notLoaded);\n  }, [imageUrl]);\n\n  const onLoadingStateChange = (loadState: ImageLoadState) => {\n    setImageLoadstate(loadState);\n\n    onPhotoLoadingStateChange?.(loadState);\n  };\n\n  return [imageLoadState, onLoadingStateChange] as const;\n}\n\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport const PersonaCoinBase: React.FunctionComponent<IPersonaCoinProps> = React.forwardRef<\n  HTMLDivElement,\n  IPersonaCoinProps\n>((propsWithoutDefaults, forwardedRef) => {\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n  useDebugWarnings(props);\n\n  const [imageLoadState, onLoadingStateChange] = useImageLoadState(props);\n\n  const renderCoin = getCoinRenderer(onLoadingStateChange);\n\n  const {\n    className,\n    coinProps,\n    showUnknownPersonaCoin,\n    coinSize,\n    styles,\n    imageUrl,\n    initialsColor,\n    initialsTextColor,\n    isOutOfOffice,\n    // eslint-disable-next-line deprecation/deprecation\n    onRenderCoin = renderCoin,\n    // eslint-disable-next-line deprecation/deprecation\n    onRenderPersonaCoin = onRenderCoin,\n    onRenderInitials = renderPersonaCoinInitials,\n    presence,\n    presenceTitle,\n    presenceColors,\n    // eslint-disable-next-line deprecation/deprecation\n    primaryText,\n    showInitialsUntilImageLoads,\n    text,\n    theme,\n    size,\n  } = props;\n\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties);\n  const divCoinProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(coinProps || {}, divProperties);\n  const coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\n  const hideImage = showUnknownPersonaCoin;\n\n  const personaPresenceProps: IPersonaPresenceProps = {\n    coinSize,\n    isOutOfOffice,\n    presence,\n    presenceTitle,\n    presenceColors,\n    size,\n    theme,\n  };\n\n  // Use getStyles from props, or fall back to getStyles from styles file.\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: coinProps && coinProps.className ? coinProps.className : className,\n    size,\n    coinSize,\n    showUnknownPersonaCoin,\n  });\n\n  const shouldRenderInitials = Boolean(\n    imageLoadState !== ImageLoadState.loaded &&\n      ((showInitialsUntilImageLoads && imageUrl) || !imageUrl || imageLoadState === ImageLoadState.error || hideImage),\n  );\n\n  return (\n    <div role=\"presentation\" {...divProps} className={classNames.coin} ref={forwardedRef}>\n      {\n        // Render PersonaCoin if size is not size8. size10 and tiny need to removed after a deprecation cleanup.\n        // eslint-disable-next-line deprecation/deprecation\n        size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? (\n          <div role=\"presentation\" {...divCoinProps} className={classNames.imageArea} style={coinSizeStyle}>\n            {shouldRenderInitials && (\n              <div\n                className={getInitialsStyles(\n                  classNames.initials,\n                  initialsColor,\n                  initialsTextColor,\n                  text,\n                  primaryText,\n                  showUnknownPersonaCoin,\n                )}\n                style={coinSizeStyle}\n                aria-hidden=\"true\"\n              >\n                {onRenderInitials(props, renderPersonaCoinInitials)}\n              </div>\n            )}\n            {!hideImage && onRenderPersonaCoin(props, renderCoin)}\n            <PersonaPresence {...personaPresenceProps} />\n          </div>\n        ) : // Otherwise, render just PersonaPresence.\n        props.presence ? (\n          <PersonaPresence {...personaPresenceProps} />\n        ) : (\n          // Just render Contact Icon if there isn't a Presence prop.\n          <Icon iconName=\"Contact\" className={classNames.size10WithoutPresenceIcon} />\n        )\n      }\n      {props.children}\n    </div>\n  );\n});\nPersonaCoinBase.displayName = 'PersonaCoinBase';\n\nconst getCoinRenderer =\n  (onLoadingStateChange: (loadState: ImageLoadState) => void) =>\n  ({\n    coinSize,\n    styles,\n    imageUrl,\n    imageAlt,\n    imageShouldFadeIn,\n    imageShouldStartVisible,\n    theme,\n    showUnknownPersonaCoin,\n    size = DEFAULT_PROPS.size,\n  }: IPersonaCoinProps): JSX.Element | null => {\n    // Render the Image component only if an image URL is provided\n    if (!imageUrl) {\n      return null;\n    }\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      size,\n      showUnknownPersonaCoin,\n    });\n    const dimension = coinSize || sizeToPixels[size];\n    return (\n      <Image\n        className={classNames.image}\n        imageFit={ImageFit.cover}\n        src={imageUrl}\n        width={dimension}\n        height={dimension}\n        alt={imageAlt}\n        shouldFadeIn={imageShouldFadeIn}\n        shouldStartVisible={imageShouldStartVisible}\n        onLoadingStateChange={onLoadingStateChange}\n      />\n    );\n  };\n\nconst renderPersonaCoinInitials = ({\n  imageInitials,\n  allowPhoneInitials,\n  showUnknownPersonaCoin,\n  text,\n  // eslint-disable-next-line deprecation/deprecation\n  primaryText,\n  theme,\n}: IPersonaCoinProps): JSX.Element => {\n  if (showUnknownPersonaCoin) {\n    return <Icon iconName=\"Help\" />;\n  }\n\n  const isRTL = getRTL(theme);\n\n  imageInitials = imageInitials || getInitials(text || primaryText || '', isRTL, allowPhoneInitials);\n\n  return imageInitials !== '' ? <span>{imageInitials}</span> : <Icon iconName=\"Contact\" />;\n};\n", "import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { IPersonaPresenceProps, IPersonaPresenceStyleProps, IPersonaPresenceStyles } from '../Persona.types';\n\nconst coinSizeFontScaleFactor = 6;\nconst coinSizePresenceScaleFactor = 3;\nconst presenceMaxSize = 40;\nconst presenceFontMaxSize = 20;\n\nconst getClassNames = classNamesFunction<IPersonaPresenceStyleProps, IPersonaPresenceStyles>({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport const PersonaPresenceBase: React.FunctionComponent<IPersonaPresenceProps> = React.forwardRef<\n  HTMLDivElement,\n  IPersonaPresenceProps\n>((props, forwardedRef) => {\n  const {\n    coinSize,\n    isOutOfOffice,\n    styles, // Use getStyles from props.\n    presence,\n    theme,\n    presenceTitle,\n    presenceColors,\n  } = props;\n\n  const rootRef = React.useRef<HTMLDivElement>(null);\n  const mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n\n  const size = sizeBoolean(props.size as PersonaSize);\n\n  // Render Presence Icon if Persona is above size 32.\n  const renderIcon =\n    !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) &&\n    (coinSize ? coinSize > 32 : true);\n\n  const presenceHeightWidth: string = coinSize\n    ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize\n      ? coinSize / coinSizePresenceScaleFactor + 'px'\n      : presenceMaxSize + 'px'\n    : '';\n  const presenceFontSize: string = coinSize\n    ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize\n      ? coinSize / coinSizeFontScaleFactor + 'px'\n      : presenceFontMaxSize + 'px'\n    : '';\n  const coinSizeWithPresenceIconStyle = coinSize\n    ? { fontSize: presenceFontSize, lineHeight: presenceHeightWidth }\n    : undefined;\n  const coinSizeWithPresenceStyle = coinSize ? { width: presenceHeightWidth, height: presenceHeightWidth } : undefined;\n\n  // Use getStyles from props, or fall back to getStyles from styles file.\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    presence,\n    size: props.size,\n    isOutOfOffice,\n    presenceColors,\n  });\n\n  if (presence === PersonaPresenceEnum.none) {\n    return null;\n  }\n\n  return (\n    <div\n      role=\"presentation\"\n      className={classNames.presence}\n      style={coinSizeWithPresenceStyle}\n      title={presenceTitle}\n      ref={mergedRootRef}\n    >\n      {renderIcon && (\n        <Icon\n          className={classNames.presenceIcon}\n          iconName={determineIcon(props.presence, props.isOutOfOffice)}\n          style={coinSizeWithPresenceIconStyle}\n        />\n      )}\n    </div>\n  );\n});\nPersonaPresenceBase.displayName = 'PersonaPresenceBase';\n\nfunction determineIcon(\n  presence: PersonaPresenceEnum | undefined,\n  isOutOfOffice: boolean | undefined,\n): string | undefined {\n  if (!presence) {\n    return undefined;\n  }\n\n  const oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n    case 'dnd':\n      return 'SkypeMinus';\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}\n", "import * as React from 'react';\n\nimport { IconType } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { ImageLoadState } from '../Image/Image.types';\nimport { getNativeProps, htmlElementProperties, classNamesFunction } from '../../Utilities';\nimport { getIconContent } from './FontIcon';\nimport type { IIconProps, IIconStyleProps, IIconStyles } from './Icon.types';\nimport type { IImageProps } from '../Image/Image.types';\n\nexport interface IIconState {\n  imageLoadError: boolean;\n}\n\nconst getClassNames = classNamesFunction<IIconStyleProps, IIconStyles>({\n  // Icon is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Icon.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class IconBase extends React.Component<IIconProps, IIconState> {\n  constructor(props: IIconProps) {\n    super(props);\n    this.state = {\n      imageLoadError: false,\n    };\n  }\n\n  public render() {\n    const { children, className, styles, iconName, imageErrorAs, theme } = this.props;\n    const isPlaceholder = typeof iconName === 'string' && iconName.length === 0;\n    const isImage =\n      // eslint-disable-next-line deprecation/deprecation\n      !!this.props.imageProps || this.props.iconType === IconType.image || this.props.iconType === IconType.Image;\n    const iconContent = getIconContent(iconName) || {};\n    const { iconClassName, children: iconContentChildren, mergeImageProps } = iconContent;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      iconClassName,\n      isImage,\n      isPlaceholder,\n    });\n\n    const RootType = isImage ? 'span' : 'i';\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, htmlElementProperties, [\n      'aria-label',\n    ]);\n    const { imageLoadError } = this.state;\n    const imageProps: IImageProps = {\n      ...this.props.imageProps,\n      onLoadingStateChange: this._onImageLoadingStateChange,\n    };\n    const ImageType = (imageLoadError && imageErrorAs) || Image;\n\n    // eslint-disable-next-line deprecation/deprecation\n    const ariaLabel = this.props['aria-label'] || this.props.ariaLabel;\n    const accessibleName = imageProps.alt || ariaLabel || this.props.title;\n    const hasName = !!(\n      accessibleName ||\n      this.props['aria-labelledby'] ||\n      imageProps['aria-label'] ||\n      imageProps['aria-labelledby']\n    );\n    const containerProps = hasName\n      ? {\n          role: isImage || mergeImageProps ? undefined : 'img',\n          'aria-label': isImage || mergeImageProps ? undefined : accessibleName,\n        }\n      : {\n          'aria-hidden': true,\n        };\n\n    let finalIconContentChildren = iconContentChildren;\n\n    if (mergeImageProps && iconContentChildren && typeof iconContentChildren === 'object' && accessibleName) {\n      finalIconContentChildren = React.cloneElement(iconContentChildren, {\n        alt: accessibleName,\n      });\n    }\n\n    return (\n      <RootType\n        data-icon-name={iconName}\n        {...containerProps}\n        {...nativeProps}\n        {...(mergeImageProps\n          ? {\n              title: undefined,\n              'aria-label': undefined,\n            }\n          : {})}\n        className={classNames.root}\n      >\n        {isImage ? <ImageType {...imageProps} /> : children || finalIconContentChildren}\n      </RootType>\n    );\n  }\n\n  private _onImageLoadingStateChange = (state: ImageLoadState): void => {\n    if (this.props.imageProps && this.props.imageProps.onLoadingStateChange) {\n      this.props.imageProps.onLoadingStateChange(state);\n    }\n    if (state === ImageLoadState.error) {\n      this.setState({ imageLoadError: true });\n    }\n  };\n}\n", "import * as React from 'react';\nimport type { IImageProps } from '../Image/Image.types';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IBaseProps, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n * {@docCategory Icon}\n */\nexport enum IconType {\n  /**\n   * Render using the fabric icon font.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  default = 0,\n\n  /**\n   * Render using an image, where imageProps would be used.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  image = 1,\n\n  /**\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  Default = 100000,\n\n  /**\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  Image = 100001,\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconProps extends IBaseProps, React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * The aria label of the icon for the benefit of screen readers.\n   * @deprecated Use the native prop `aria-label`\n   */\n  ariaLabel?: string;\n\n  /**\n   * The type of icon to render (image or icon font).\n   * @deprecated Inferred based on the presence of `imageProps`\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  iconType?: IconType;\n\n  /**\n   * If rendering an image icon, these props will be passed to the Image component.\n   */\n  imageProps?: IImageProps;\n\n  /**\n   * If rendering an image icon, this component will be rendered in the event that loading the image fails.\n   */\n  imageErrorAs?: React.ComponentType<IImageProps>;\n\n  /**\n   * Gets the styles for an Icon.\n   */\n  styles?: IStyleFunctionOrObject<IIconStyleProps, IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyleProps {\n  className?: string;\n  iconClassName?: string;\n  isPlaceholder: boolean;\n  isImage: boolean;\n  styles?: Partial<IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyles {\n  root?: IStyle;\n\n  /**\n   * @deprecated Use `root`.\n   */\n  imageContainer?: IStyle;\n}\n\n/**\n * Props for a basic icon component which only supports font glyphs and can't be targeted by customizations.\n * {@docCategory Icon}\n */\nexport interface IFontIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n\n/**\n * Props for a basic image icon component which doesn't directly provide image load error handling\n * and can't be targeted by customizations.\n * {@docCategory Icon}\n */\nexport interface IImageIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Props passed to the Image component.\n   */\n  imageProps: IImageProps;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n", "import * as React from 'react';\nimport { classNamesFunction, getNativeProps, imgProperties } from '../../Utilities';\nimport { ImageCoverStyle, ImageFit, ImageLoadState } from './Image.types';\nimport { useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-hooks';\nimport type { IImageProps, IImageStyleProps, IImageStyles } from './Image.types';\n\nconst getClassNames = classNamesFunction<IImageStyleProps, IImageStyles>();\n\nexport interface IImageState {\n  loadState?: ImageLoadState;\n}\n\nconst SVG_REGEX = /\\.svg$/i;\nconst KEY_PREFIX = 'fabricImage';\n\nfunction useLoadState(\n  props: IImageProps,\n  imageElement: React.RefObject<HTMLImageElement>,\n): readonly [\n  ImageLoadState,\n  /* onImageLoad */ (ev: React.SyntheticEvent<HTMLImageElement>) => void,\n  /* onImageError */ (ev: React.SyntheticEvent<HTMLImageElement>) => void,\n] {\n  const { onLoadingStateChange, onLoad, onError, src } = props;\n\n  const [loadState, setLoadState] = React.useState<ImageLoadState>(ImageLoadState.notLoaded);\n\n  useIsomorphicLayoutEffect(() => {\n    // If the src property changes, reset the load state\n    // (does nothing if the load state is already notLoaded)\n    setLoadState(ImageLoadState.notLoaded);\n  }, [src]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- intended to run every render\n  React.useEffect(() => {\n    if (loadState === ImageLoadState.notLoaded) {\n      // testing if naturalWidth and naturalHeight are greater than zero is better than checking\n      // .complete, because .complete will also be set to true if the image breaks. However,\n      // for some browsers, SVG images do not have a naturalWidth or naturalHeight, so fall back\n      // to checking .complete for these images.\n      const isLoaded: boolean = imageElement.current\n        ? (src && imageElement.current.naturalWidth > 0 && imageElement.current.naturalHeight > 0) ||\n          (imageElement.current.complete && SVG_REGEX.test(src!))\n        : false;\n\n      if (isLoaded) {\n        setLoadState(ImageLoadState.loaded);\n      }\n    }\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChange?.(loadState);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when loadState changes\n  }, [loadState]);\n\n  const onImageLoaded = React.useCallback(\n    (ev: React.SyntheticEvent<HTMLImageElement>) => {\n      onLoad?.(ev);\n      if (src) {\n        setLoadState(ImageLoadState.loaded);\n      }\n    },\n    [src, onLoad],\n  );\n\n  const onImageError = React.useCallback(\n    (ev: React.SyntheticEvent<HTMLImageElement>) => {\n      onError?.(ev);\n      setLoadState(ImageLoadState.error);\n    },\n    [onError],\n  );\n\n  return [loadState, onImageLoaded, onImageError] as const;\n}\n\nexport const ImageBase: React.FunctionComponent<IImageProps> = React.forwardRef<HTMLImageElement, IImageProps>(\n  (props, forwardedRef) => {\n    const frameElement = React.useRef<HTMLDivElement>() as React.RefObject<HTMLDivElement>;\n    const imageElement = React.useRef<HTMLImageElement>() as React.RefObject<HTMLImageElement>;\n    const [loadState, onImageLoaded, onImageError] = useLoadState(props, imageElement);\n\n    const imageProps = getNativeProps<React.ImgHTMLAttributes<HTMLImageElement>>(props, imgProperties, [\n      'width',\n      'height',\n    ]);\n    const {\n      src,\n      alt,\n      width,\n      height,\n      shouldFadeIn = true,\n      shouldStartVisible,\n      className,\n      imageFit,\n      role,\n      maximizeFrame,\n      styles,\n      theme,\n      loading,\n    } = props;\n    const coverStyle = useCoverStyle(props, loadState, imageElement, frameElement);\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      width,\n      height,\n      maximizeFrame,\n      shouldFadeIn,\n      shouldStartVisible,\n      isLoaded:\n        loadState === ImageLoadState.loaded || (loadState === ImageLoadState.notLoaded && props.shouldStartVisible),\n      isLandscape: coverStyle === ImageCoverStyle.landscape,\n      isCenter: imageFit === ImageFit.center,\n      isCenterContain: imageFit === ImageFit.centerContain,\n      isCenterCover: imageFit === ImageFit.centerCover,\n      isContain: imageFit === ImageFit.contain,\n      isCover: imageFit === ImageFit.cover,\n      isNone: imageFit === ImageFit.none,\n      isError: loadState === ImageLoadState.error,\n      isNotImageFit: imageFit === undefined,\n    });\n\n    // If image dimensions aren't specified, the natural size of the image is used.\n    return (\n      <div className={classNames.root} style={{ width: width, height: height }} ref={frameElement}>\n        <img\n          {...imageProps}\n          onLoad={onImageLoaded}\n          onError={onImageError}\n          key={KEY_PREFIX + props.src || ''}\n          className={classNames.image}\n          ref={useMergedRefs(imageElement, forwardedRef)}\n          src={src}\n          alt={alt}\n          role={role}\n          loading={loading}\n        />\n      </div>\n    );\n  },\n);\nImageBase.displayName = 'ImageBase';\n\nfunction useCoverStyle(\n  props: IImageProps,\n  loadState: ImageLoadState,\n  imageElement: React.RefObject<HTMLImageElement>,\n  frameElement: React.RefObject<HTMLDivElement>,\n) {\n  const previousLoadState = React.useRef(loadState);\n  const coverStyle = React.useRef<ImageCoverStyle | undefined>();\n\n  if (\n    coverStyle === undefined ||\n    (previousLoadState.current === ImageLoadState.notLoaded && loadState === ImageLoadState.loaded)\n  ) {\n    coverStyle.current = computeCoverStyle(props, loadState, imageElement, frameElement);\n  }\n\n  previousLoadState.current = loadState;\n\n  return coverStyle.current!;\n}\n\nfunction computeCoverStyle(\n  props: IImageProps,\n  loadState: ImageLoadState,\n  imageElement: React.RefObject<HTMLImageElement>,\n  frameElement: React.RefObject<HTMLDivElement>,\n): ImageCoverStyle {\n  const { imageFit, width, height } = props;\n\n  // Do not compute cover style if it was already specified in props\n  if (props.coverStyle !== undefined) {\n    return props.coverStyle;\n  } else if (\n    loadState === ImageLoadState.loaded &&\n    (imageFit === ImageFit.cover ||\n      imageFit === ImageFit.contain ||\n      imageFit === ImageFit.centerContain ||\n      imageFit === ImageFit.centerCover) &&\n    imageElement.current &&\n    frameElement.current\n  ) {\n    // Determine the desired ratio using the width and height props.\n    // If those props aren't available, measure measure the frame.\n    let desiredRatio;\n    if (\n      typeof width === 'number' &&\n      typeof height === 'number' &&\n      imageFit !== ImageFit.centerContain &&\n      imageFit !== ImageFit.centerCover\n    ) {\n      desiredRatio = width / height;\n    } else {\n      desiredRatio = frameElement.current.clientWidth / frameElement.current.clientHeight;\n    }\n\n    // Examine the source image to determine its original ratio.\n    const naturalRatio = imageElement.current.naturalWidth / imageElement.current.naturalHeight;\n\n    // Should we crop from the top or the sides?\n    if (naturalRatio > desiredRatio) {\n      return ImageCoverStyle.landscape;\n    }\n  }\n  return ImageCoverStyle.portrait;\n}\n", "import * as React from 'react';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory Image}\n */\nexport interface IImage {}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageProps extends React.ImgHTMLAttributes<HTMLImageElement>, React.RefAttributes<HTMLImageElement> {\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IImageStyleProps, IImageStyles>;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Component\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * Used to determine how the image is scaled and cropped to fit the frame.\n   *\n   * @defaultvalue If both dimensions are provided, then the image is fit using `ImageFit.scale`.\n   * Otherwise, the image won't be scaled or cropped.\n   */\n  imageFit?: ImageFit;\n\n  /**\n   * @deprecated Not used. Use `onLoadingStateChange` and re-render the Image with a different src.\n   */\n  errorSrc?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * Optional callback method for when the image load state has changed.\n   * The 'loadState' parameter indicates the current state of the Image.\n   */\n  onLoadingStateChange?: (loadState: ImageLoadState) => void;\n\n  /**\n   * Specifies the cover style to be used for this image. If not\n   * specified, this will be dynamically calculated based on the\n   * aspect ratio for the image.\n   */\n  coverStyle?: ImageCoverStyle;\n\n  /**\n   * Allows for browser-level image lazy-loading.\n   */\n  loading?: 'lazy' | 'eager';\n}\n\n/**\n * The possible methods that can be used to fit the image.\n * {@docCategory Image}\n */\nexport enum ImageFit {\n  /**\n   * The image is not scaled. The image is centered and cropped within the content box.\n   */\n  center = 0,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while being fully contained within the frame. The image will\n   * be centered horizontally and vertically within the frame. The space in the top and bottom or in the sides of\n   * the frame will be empty depending on the difference in aspect ratio between the image and the frame.\n   */\n  contain = 1,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while filling the frame. Portions of the image will be cropped\n   * from the top and bottom, or the sides, depending on the difference in aspect ratio between the image and the frame.\n   */\n  cover = 2,\n\n  /**\n   * Neither the image nor the frame are scaled. If their sizes do not match, the image will either be cropped or the\n   * frame will have empty space.\n   */\n  none = 3,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height or width is less than the Image frame's height or width,\n   * but if both natural height and width are larger than the frame it will behave as ImageFit.cover.\n   */\n  centerCover = 4,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height and width is less than the Image frame's height and width,\n   * but if either natural height or width are larger than the frame it will behave as ImageFit.contain.\n   */\n  centerContain = 5,\n}\n\n/**\n * The cover style to be used on the image\n * {@docCategory Image}\n */\nexport enum ImageCoverStyle {\n  /**\n   * The image will be shown at 100% height of container and the width will be scaled accordingly\n   */\n  landscape = 0,\n\n  /**\n   * The image will be shown at 100% width of container and the height will be scaled accordingly\n   */\n  portrait = 1,\n}\n\n/**\n * {@docCategory Image}\n */\nexport enum ImageLoadState {\n  /**\n   * The image has not yet been loaded, and there is no error yet.\n   */\n  notLoaded = 0,\n\n  /**\n   * The image has been loaded successfully.\n   */\n  loaded = 1,\n\n  /**\n   * An error has been encountered while loading the image.\n   */\n  error = 2,\n\n  /**\n   * @deprecated Not used. Use `onLoadingStateChange` and re-render the Image with a different src.\n   */\n  errorLoaded = 3,\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * If true, the image is loaded\n   */\n  isLoaded?: boolean;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * If true the image is coverStyle landscape instead of portrait\n   */\n  isLandscape?: boolean;\n\n  /**\n   * ImageFit booleans for center, cover, contain, centerContain, centerCover, none\n   */\n  isCenter?: boolean;\n  isContain?: boolean;\n  isCover?: boolean;\n  isCenterContain?: boolean;\n  isCenterCover?: boolean;\n  isNone?: boolean;\n\n  /**\n   * if true image load is in error\n   */\n  isError?: boolean;\n\n  /**\n   * if true, imageFit is undefined\n   */\n  isNotImageFit?: boolean;\n\n  /**\n   * Image width value\n   */\n  width?: number | string;\n\n  /**\n   * Image height value\n   */\n  height?: number | string;\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyles {\n  /**\n   * Style set for the root div element.\n   */\n  root: IStyle;\n  /**\n   * Style set for the img element.\n   */\n  image: IStyle;\n}\n", "import { AnimationClassNames, getGlobalClassNames } from '../../Styling';\nimport { getWindow } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { IImageStyleProps, IImageStyles } from './Image.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait',\n};\n\nexport const getStyles = (props: IImageStyleProps): IImageStyles => {\n  const {\n    className,\n    width,\n    height,\n    maximizeFrame,\n    isLoaded,\n    shouldFadeIn,\n    shouldStartVisible,\n    isLandscape,\n    isCenter,\n    isContain,\n    isCover,\n    isCenterContain,\n    isCenterCover,\n    isNone,\n    isError,\n    isNotImageFit,\n    theme,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ImageFitStyles: IStyle = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)', // @todo test RTL renders transform: translate(50%,-50%);\n  };\n\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  const window: Window | undefined = getWindow();\n  const supportsObjectFit: boolean = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  const fallbackObjectFitStyles =\n    (isContain && isLandscape) || (isCover && !isLandscape)\n      ? { width: '100%', height: 'auto' }\n      : { width: 'auto', height: '100%' };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        overflow: 'hidden',\n      },\n      maximizeFrame && [\n        classNames.rootMaximizeFrame,\n        {\n          height: '100%',\n          width: '100%',\n        },\n      ],\n      isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n      (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n        position: 'relative',\n      },\n      className,\n    ],\n    image: [\n      classNames.image,\n      {\n        display: 'block',\n        opacity: 0,\n      },\n      isLoaded && [\n        'is-loaded',\n        {\n          opacity: 1,\n        },\n      ],\n      isCenter && [classNames.imageCenter, ImageFitStyles],\n      isContain && [\n        classNames.imageContain,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        !supportsObjectFit && ImageFitStyles,\n      ],\n      isCover && [\n        classNames.imageCover,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        !supportsObjectFit && ImageFitStyles,\n      ],\n      isCenterContain && [\n        classNames.imageCenterContain,\n        isLandscape && {\n          maxWidth: '100%',\n        },\n        !isLandscape && {\n          maxHeight: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isCenterCover && [\n        classNames.imageCenterCover,\n        isLandscape && {\n          maxHeight: '100%',\n        },\n        !isLandscape && {\n          maxWidth: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isNone && [\n        classNames.imageNone,\n        {\n          width: 'auto',\n          height: 'auto',\n        },\n      ],\n      isNotImageFit && [\n        !!width &&\n          !height && {\n            height: 'auto',\n            width: '100%',\n          },\n        !width &&\n          !!height && {\n            height: '100%',\n            width: 'auto',\n          },\n        !!width &&\n          !!height && {\n            height: '100%',\n            width: '100%',\n          },\n      ],\n      isLandscape && classNames.imageLandscape,\n      !isLandscape && classNames.imagePortrait,\n      !isLoaded && 'is-notLoaded',\n      shouldFadeIn && 'is-fadeIn',\n      isError && 'is-error',\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ImageBase } from './Image.base';\nimport { getStyles } from './Image.styles';\nimport type { IImageProps, IImageStyleProps, IImageStyles } from './Image.types';\n\nexport const Image: React.FunctionComponent<IImageProps> = styled<IImageProps, IImageStyleProps, IImageStyles>(\n  ImageBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Image',\n  },\n  true,\n);\nImage.displayName = 'Image';\n", "import * as React from 'react';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport { css, getNativeProps, htmlElementProperties, memoizeFunction } from '../../Utilities';\nimport { getIcon } from '../../Styling';\nimport type { IFontIconProps } from './Icon.types';\nimport type { IIconRecord, IIconSubsetRecord } from '../../Styling';\n\nexport interface IIconContent {\n  children?: string | JSX.Element;\n  iconClassName?: string;\n  fontFamily?: string;\n  mergeImageProps?: boolean;\n}\n\nexport const getIconContent = memoizeFunction(\n  (iconName?: string): IIconContent | null => {\n    const { code, subset }: Pick<IIconRecord, 'code'> & { subset: Partial<IIconSubsetRecord> } = getIcon(iconName) || {\n      subset: {},\n      code: undefined,\n    };\n\n    if (!code) {\n      return null;\n    }\n\n    return {\n      children: code,\n      iconClassName: subset.className,\n      fontFamily: subset.fontFace && subset.fontFace.fontFamily,\n      mergeImageProps: subset.mergeImageProps,\n    };\n  },\n  undefined,\n  true /*ignoreNullOrUndefinedResult */,\n);\n\n/**\n * Fast icon component which only supports font glyphs (not images) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const FontIcon: React.FunctionComponent<IFontIconProps> = props => {\n  const { iconName, className, style = {} } = props;\n  const iconContent = getIconContent(iconName) || {};\n  const { iconClassName, children, fontFamily, mergeImageProps } = iconContent;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLElement>>(props, htmlElementProperties);\n  const accessibleName = props['aria-label'] || props.title;\n  const containerProps =\n    props['aria-label'] || props['aria-labelledby'] || props.title\n      ? {\n          role: mergeImageProps ? undefined : 'img',\n        }\n      : {\n          'aria-hidden': true,\n        };\n\n  let finalChildren = children;\n\n  if (mergeImageProps) {\n    if (typeof children === 'object' && typeof children.props === 'object' && accessibleName) {\n      finalChildren = React.cloneElement(children, { alt: accessibleName });\n    }\n  }\n\n  return (\n    <i\n      data-icon-name={iconName}\n      {...containerProps}\n      {...nativeProps}\n      {...(mergeImageProps\n        ? {\n            title: undefined,\n            'aria-label': undefined,\n          }\n        : {})}\n      className={css(MS_ICON, classNames.root, iconClassName, !iconName && classNames.placeholder, className)}\n      // Apply the font family this way to ensure it doesn't get overridden by Fabric Core ms-Icon styles\n      // https://github.com/microsoft/fluentui/issues/10449\n      style={{ fontFamily, ...style }}\n    >\n      {finalChildren}\n    </i>\n  );\n};\n\n/**\n * Memoized helper for rendering a FontIcon.\n * @param iconName - The name of the icon to use from the icon font.\n * @param className - Class name for styling the icon.\n * @param ariaLabel - Label for the icon for the benefit of screen readers.\n * {@docCategory Icon}\n */\nexport const getFontIcon = memoizeFunction((iconName: string, className?: string, ariaLabel?: string) => {\n  return FontIcon({ iconName, className, 'aria-label': ariaLabel });\n});\n", "import { mergeStyleSets } from '../../Styling';\nimport type { IIconStyleProps, IIconStyles } from './Icon.types';\n\n/** Class names used in themeable and non-themeable Icon components */\nexport const classNames = mergeStyleSets({\n  root: {\n    display: 'inline-block',\n  },\n  placeholder: [\n    'ms-Icon-placeHolder',\n    {\n      width: '1em',\n    },\n  ],\n  image: [\n    'ms-Icon-imageContainer',\n    {\n      overflow: 'hidden',\n    },\n  ],\n});\n/** Class name used only in non-themeable Icon components */\nexport const MS_ICON = 'ms-Icon';\n\nexport const getStyles = (props: IIconStyleProps): IIconStyles => {\n  const { className, iconClassName, isPlaceholder, isImage, styles } = props;\n\n  return {\n    root: [\n      isPlaceholder && classNames.placeholder,\n      classNames.root,\n      isImage && classNames.image,\n      iconClassName,\n      className,\n      styles && styles.root,\n      // eslint-disable-next-line deprecation/deprecation\n      styles && styles.imageContainer,\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IconBase } from './Icon.base';\nimport { getStyles } from './Icon.styles';\nimport type { IIconProps, IIconStyleProps, IIconStyles } from './Icon.types';\n\n/**\n * Legacy Icon component which can be targeted by customization. It's recommended to use `FontIcon`\n * or `ImageIcon` instead, especially in scenarios where rendering performance is important.\n * {@docCategory Icon}\n */\nexport const Icon: React.FunctionComponent<IIconProps> = styled<IIconProps, IIconStyleProps, IIconStyles>(\n  IconBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Icon',\n  },\n  true,\n);\nIcon.displayName = 'Icon';\n", "import * as React from 'react';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport type { IImageIconProps } from './Icon.types';\n\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const ImageIcon: React.FunctionComponent<IImageIconProps> = props => {\n  const { className, imageProps } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, htmlElementProperties, [\n    'aria-label',\n    'aria-labelledby',\n    'title',\n    'aria-describedby',\n  ]);\n  const altText = imageProps.alt || props['aria-label'];\n  const hasName =\n    altText ||\n    props['aria-labelledby'] ||\n    props.title ||\n    imageProps['aria-label'] ||\n    imageProps['aria-labelledby'] ||\n    imageProps.title;\n\n  // move naming or describing attributes from the container (where they are invalid) to the image\n  const imageNameProps = {\n    'aria-labelledby': props['aria-labelledby'],\n    'aria-describedby': props['aria-describedby'],\n    title: props.title,\n  };\n\n  const containerProps = hasName\n    ? {}\n    : {\n        'aria-hidden': true,\n      };\n\n  return (\n    <div {...containerProps} {...nativeProps} className={css(MS_ICON, classNames.root, classNames.image, className)}>\n      <Image {...imageNameProps} {...imageProps} alt={hasName ? altText : ''} />\n    </div>\n  );\n};\n", "import * as React from 'react';\nimport { ImageLoadState } from '../../Image';\nimport type { IRefObject, IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IStyle, ITheme } from '../../Styling';\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersona {}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaSharedProps extends React.HTMLAttributes<HTMLDivElement>, React.RefAttributes<HTMLDivElement> {\n  /**\n   * Primary text to display, usually the name of the person.\n   */\n  text?: string;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Optional custom renderer for the coin\n   * @deprecated Use `onRenderPersonaCoin` for custom rendering instead\n   */\n  onRenderCoin?: IRenderFunction<IPersonaSharedProps>;\n\n  /**\n   * Optional custom renderer for the coin\n   */\n  onRenderPersonaCoin?: IRenderFunction<IPersonaSharedProps>;\n\n  /**\n   * If true, adds the css class 'is-fadeIn' to the image.\n   */\n  imageShouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables imageShouldFadeIn.\n   * @defaultvalue false\n   */\n  imageShouldStartVisible?: boolean;\n\n  /**\n   * Url to the image to use, should be a square aspect ratio and big enough to fit in the image area.\n   */\n  imageUrl?: string;\n\n  /**\n   * Alt text for the image to use.\n   * @default `''` (empty string)\n   */\n  imageAlt?: string;\n\n  /**\n   * The user's initials to display in the image area when there is no image.\n   * @defaultvalue Derived from `text`\n   */\n  imageInitials?: string;\n\n  /**\n   * Whether initials are calculated for phone numbers and number sequences.\n   * Example: Set property to true to get initials for project names consisting of numbers only.\n   * @defaultvalue false\n   */\n  allowPhoneInitials?: boolean;\n\n  /**\n   * Optional custom renderer for the initials\n   */\n  onRenderInitials?: IRenderFunction<IPersonaSharedProps>;\n\n  /**\n   * Optional callback for when loading state of the photo changes\n   */\n  onPhotoLoadingStateChange?: (newImageLoadState: ImageLoadState) => void;\n\n  /**\n   * The background color when the user's initials are displayed.\n   * @defaultvalue Derived from `text`\n   */\n  initialsColor?: PersonaInitialsColor | string;\n\n  /**\n   * The text color when the user's initials are displayed\n   */\n  initialsTextColor?: string;\n\n  /** The colors to be used for the presence-icon and it's background */\n  presenceColors?: {\n    available: string;\n    away: string;\n    busy: string;\n    dnd: string;\n    offline: string;\n    oof: string;\n    background: string;\n  };\n\n  /**\n   * Presence of the person to display - will not display presence if undefined.\n   * @defaultvalue PersonaPresence.none\n   */\n  presence?: PersonaPresence;\n\n  /**\n   * Presence title to be shown as a tooltip on hover over the presence icon.\n   */\n  presenceTitle?: string;\n\n  /**\n   * This flag can be used to signal the persona is out of office.\n   * This will change the way the presence icon looks for statuses that support dual-presence.\n   */\n  isOutOfOffice?: boolean;\n\n  /**\n   * Secondary text to display, usually the role of the user.\n   */\n  secondaryText?: string;\n\n  /**\n   * Controls whether clipped overflow text should render in a tooltip\n   * @defaultvalue true\n   */\n  showOverflowTooltip?: boolean;\n\n  /**\n   * Tertiary text to display, usually the status of the user.\n   * The tertiary text will only be shown when using size72 or size100.\n   */\n  tertiaryText?: string;\n\n  /**\n   * Optional text to display, usually a custom message set. The optional text will only be shown when using size100.\n   */\n  optionalText?: string;\n\n  /**\n   * Whether to not render persona details, and just render the persona image/initials.\n   */\n  hidePersonaDetails?: boolean;\n\n  /*\n   * If true, show the secondary text line regardless of the size of the persona\n   */\n  showSecondaryText?: boolean;\n\n  /**\n   * If true, show the special coin for unknown persona.\n   * It has '?' in place of initials, with static font and background colors\n   */\n  showUnknownPersonaCoin?: boolean;\n\n  /**\n   * If true renders the initials while the image is loading.\n   * This only applies when an imageUrl is provided.\n   * @defaultvalue false\n   */\n  showInitialsUntilImageLoads?: boolean;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Optional HTML element props for Persona coin.\n   */\n  coinProps?: IPersonaCoinProps;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Primary text to display, usually the name of the person.\n   * @deprecated Use `text` instead.\n   */\n  primaryText?: string;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaProps extends IPersonaSharedProps {\n  /**\n   * Optional callback to access the IPersona interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IPersona>;\n\n  /**\n   * Additional CSS class(es) to apply to the Persona\n   */\n  className?: string;\n\n  /**\n   * Call to provide customized styling that will layer on top of variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaStyleProps, IPersonaStyles>;\n\n  /**\n   * Optional custom renderer for the primary text.\n   */\n  onRenderPrimaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the secondary text.\n   */\n  onRenderSecondaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the tertiary text.\n   */\n  onRenderTertiaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the optional text.\n   */\n  onRenderOptionalText?: IRenderFunction<IPersonaProps>;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Custom class name.\n   */\n  className?: string;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Presence of the person to display - will not display presence if undefined.\n   * @defaultvalue PersonaPresence.none\n   */\n  presence?: PersonaPresence;\n\n  /*\n   * If true, show the secondary text line regardless of the size of the persona\n   */\n  showSecondaryText?: boolean;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaStyles {\n  root: IStyle;\n  details: IStyle;\n  primaryText: IStyle;\n  secondaryText: IStyle;\n  tertiaryText: IStyle;\n  optionalText: IStyle;\n  textContent: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinProps extends IPersonaSharedProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaCoinStyleProps, IPersonaCoinStyles>;\n\n  /**\n   * Additional css class to apply to the PersonaCoin\n   * @defaultvalue undefined\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Custom class name.\n   */\n  className?: string;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Decides whether to display coin for unknown persona\n   */\n  showUnknownPersonaCoin?: boolean;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinStyles {\n  coin: IStyle;\n  imageArea: IStyle;\n  image: IStyle;\n  initials: IStyle;\n  size10WithoutPresenceIcon: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaPresenceProps extends IPersonaSharedProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaPresenceStyleProps, IPersonaPresenceStyles>;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport type IPersonaPresenceStyleProps = Required<Pick<IPersonaSharedProps, 'theme'>> &\n  Pick<IPersonaSharedProps, 'presence' | 'isOutOfOffice' | 'size' | 'presenceColors'> &\n  Pick<IPersonaProps, 'className'>;\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaPresenceStyles {\n  presence: IStyle;\n  presenceIcon: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaSize {\n  /**\n   * Deprecated in favor of standardized numeric sizing.\n   * @deprecated Use `size8` instead.\n   */\n  tiny = 0,\n\n  /**\n   * Deprecated in favor of standardized numeric sizing.\n   * @deprecated Use `size24` instead.\n   */\n  extraExtraSmall = 1,\n\n  /**\n   * Deprecated in favor of standardized numeric sizing.\n   * @deprecated Use `size32` instead.\n   */\n  extraSmall = 2,\n\n  /**\n   * Deprecated in favor of standardized numeric sizing.\n   * @deprecated Use `size40` instead.\n   */\n  small = 3,\n\n  /**\n   * Deprecated in favor of standardized numeric sizing.\n   * @deprecated Use `size48` instead.\n   */\n  regular = 4,\n\n  /**\n   * Deprecated in favor of standardized numeric sizing.\n   * @deprecated Use `size72` instead.\n   */\n  large = 5,\n\n  /**\n   * Deprecated in favor of standardized numeric sizing.\n   * @deprecated Use `size100` instead.\n   */\n  extraLarge = 6,\n\n  /**\n   * No `PersonaCoin` is rendered.\n   */\n  size8 = 17,\n\n  /**\n   * No `PersonaCoin` is rendered. Deprecated to align with design specifications.\n   * @deprecated Use `size8` instead.\n   */\n  size10 = 9,\n\n  /**\n   * Renders a 16px `PersonaCoin`.\n   * @deprecated Deprecated due to not being in the design specification.\n   */\n  size16 = 8,\n\n  /**\n   * Renders a 24px `PersonaCoin`.\n   */\n  size24 = 10,\n\n  /**\n   * Renders a 28px `PersonaCoin`.\n   * @deprecated Deprecated due to not being in the design specification.\n   */\n  size28 = 7,\n\n  /**\n   * Renders a 32px `PersonaCoin`.\n   */\n  size32 = 11,\n\n  /**\n   * Renders a 40px `PersonaCoin`.\n   */\n  size40 = 12,\n\n  /**\n   * Renders a 48px `PersonaCoin`.\n   */\n  size48 = 13,\n\n  /**\n   * Renders a 56px `PersonaCoin`.\n   */\n  size56 = 16,\n\n  /**\n   * Renders a 72px `PersonaCoin`.\n   */\n  size72 = 14,\n\n  /**\n   * Renders a 100px `PersonaCoin`.\n   */\n  size100 = 15,\n\n  /**\n   * Renders a 120px `PersonaCoin`.\n   */\n  size120 = 18,\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaPresence {\n  none = 0,\n  offline = 1,\n  online = 2,\n  away = 3,\n  dnd = 4,\n  blocked = 5,\n  busy = 6,\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaInitialsColor {\n  lightBlue = 0,\n  blue = 1,\n  darkBlue = 2,\n  teal = 3,\n  lightGreen = 4,\n  green = 5,\n  darkGreen = 6,\n  lightPink = 7,\n  pink = 8,\n  magenta = 9,\n  purple = 10,\n  /**\n   * @deprecated `black` is a color that can result in offensive persona coins with some initials combinations,\n   * so it can only be set with overrides. Will be removed in a future major release.\n   */\n  black = 11,\n  orange = 12,\n  /**\n   * @deprecated `red` is a color that often has a special meaning, so it is considered a reserved color and\n   * can only be set with overrides. Will be removed in a future major release.\n   */\n  red = 13,\n  darkRed = 14,\n  /**\n   * Transparent is not intended to be used with typical initials due to accessibility issues.\n   * Its primary use is for overflow buttons, so it is considered a reserved color and can only be set with overrides.\n   */\n  transparent = 15,\n  violet = 16,\n  lightRed = 17,\n  gold = 18,\n  burgundy = 19,\n  warmGray = 20,\n  coolGray = 21,\n  /**\n   * `gray` is a color that can result in offensive persona coins with some initials combinations,\n   * so it can only be set with overrides.\n   */\n  gray = 22,\n  cyan = 23,\n  rust = 24,\n}\n", "import { PersonaPresence, PersonaSize } from './Persona.types';\n\n// Persona Sizes\nexport namespace personaSize {\n  export const size8 = '20px';\n  // TODO: remove in a future major release as it's deprecated.\n  export const size10 = '20px';\n  // TODO: remove in a future major release as it's deprecated.\n  export const size16 = '16px';\n  export const size24 = '24px';\n  // TODO: remove in a future major release as it's deprecated.\n  export const size28 = '28px';\n  export const size32 = '32px';\n  export const size40 = '40px';\n  export const size48 = '48px';\n  export const size56 = '56px';\n  export const size72 = '72px';\n  export const size100 = '100px';\n  export const size120 = '120px';\n}\n\n// Persona Presence Sizes\nexport namespace personaPresenceSize {\n  export const size6 = '6px';\n  export const size8 = '8px';\n  export const size12 = '12px';\n  export const size16 = '16px';\n  export const size20 = '20px';\n  export const size28 = '28px';\n  export const size32 = '32px';\n\n  /**\n   * @deprecated This is now unused\n   */\n  export const border = '2px';\n}\n\n// TODO: remove the deprecated parts in a future major release.\nexport const sizeBoolean = (size: PersonaSize) => ({\n  isSize8: size === PersonaSize.size8,\n  /* eslint-disable deprecation/deprecation */\n  isSize10: size === PersonaSize.size10 || size === PersonaSize.tiny,\n  isSize16: size === PersonaSize.size16,\n  isSize24: size === PersonaSize.size24 || size === PersonaSize.extraExtraSmall,\n  isSize28: size === PersonaSize.size28 || size === PersonaSize.extraSmall,\n  isSize32: size === PersonaSize.size32,\n  isSize40: size === PersonaSize.size40 || size === PersonaSize.small,\n  isSize48: size === PersonaSize.size48 || size === PersonaSize.regular,\n  isSize56: size === PersonaSize.size56,\n  isSize72: size === PersonaSize.size72 || size === PersonaSize.large,\n  isSize100: size === PersonaSize.size100 || size === PersonaSize.extraLarge,\n  isSize120: size === PersonaSize.size120,\n});\n\nexport const sizeToPixels: { [key: number]: number } = {\n  // Old deprecated sizes\n  [PersonaSize.tiny]: 10,\n  [PersonaSize.extraExtraSmall]: 24,\n  [PersonaSize.extraSmall]: 28,\n  [PersonaSize.small]: 40,\n  [PersonaSize.regular]: 48,\n  [PersonaSize.large]: 72,\n  [PersonaSize.extraLarge]: 100,\n  // New sizes\n  [PersonaSize.size8]: 8,\n  [PersonaSize.size10]: 10, // TODO: deprecated (not in the design specs)\n  [PersonaSize.size16]: 16, // TODO: deprecated (not in the design specs)\n  [PersonaSize.size24]: 24,\n  [PersonaSize.size28]: 28, // TODO: deprecated (not in the design specs)\n  /* eslint-enable deprecation/deprecation */\n  [PersonaSize.size32]: 32,\n  [PersonaSize.size40]: 40,\n  [PersonaSize.size48]: 48,\n  [PersonaSize.size56]: 56,\n  [PersonaSize.size72]: 72,\n  [PersonaSize.size100]: 100,\n  [PersonaSize.size120]: 120,\n};\n\nexport const presenceBoolean = (presence: PersonaPresence) => ({\n  isAvailable: presence === PersonaPresence.online,\n  isAway: presence === PersonaPresence.away,\n  isBlocked: presence === PersonaPresence.blocked,\n  isBusy: presence === PersonaPresence.busy,\n  isDoNotDisturb: presence === PersonaPresence.dnd,\n  isOffline: presence === PersonaPresence.offline,\n});\n", "import { PersonaPresence, PersonaSize } from '../Persona.types';\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { personaPresenceSize, presenceBoolean, sizeBoolean } from '../PersonaConsts';\nimport type { IPersonaPresenceStyleProps, IPersonaPresenceStyles } from '../Persona.types';\nimport type { IRawStyle } from '../../../Styling';\n\nconst GlobalClassNames = {\n  presence: 'ms-Persona-presence',\n  presenceIcon: 'ms-Persona-presenceIcon',\n};\n\nexport const getStyles = (props: IPersonaPresenceStyleProps): IPersonaPresenceStyles => {\n  const { theme, presenceColors } = props;\n  const { semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const size = sizeBoolean(props.size as PersonaSize);\n  const presence = presenceBoolean(props.presence as PersonaPresence);\n\n  // Presence colors\n  const presenceColorAvailable = (presenceColors && presenceColors.available) || '#6BB700';\n  const presenceColorAway = (presenceColors && presenceColors.away) || '#FFAA44';\n  const presenceColorBusy = (presenceColors && presenceColors.busy) || '#C43148';\n  const presenceColorDnd = (presenceColors && presenceColors.dnd) || '#C50F1F';\n  const presenceColorOffline = (presenceColors && presenceColors.offline) || '#8A8886';\n  const presenceColorOof = (presenceColors && presenceColors.oof) || '#B4009E';\n  const presenceColorBackground = (presenceColors && presenceColors.background) || semanticColors.bodyBackground;\n\n  const isOpenCirclePresence =\n    presence.isOffline ||\n    (props.isOutOfOffice && (presence.isAvailable || presence.isBusy || presence.isAway || presence.isDoNotDisturb));\n\n  const borderSizeForSmallPersonas = '1px';\n  const borderSizeForLargePersonas = '2px';\n\n  const borderSize = size.isSize72 || size.isSize100 ? borderSizeForLargePersonas : borderSizeForSmallPersonas;\n\n  return {\n    presence: [\n      classNames.presence,\n      {\n        position: 'absolute',\n        height: personaPresenceSize.size12,\n        width: personaPresenceSize.size12,\n        borderRadius: '50%',\n        top: 'auto',\n        right: '-2px',\n        bottom: '-2px',\n        border: `2px solid ${presenceColorBackground}`,\n        textAlign: 'center',\n        boxSizing: 'content-box',\n        backgroundClip: 'border-box',\n        ...getHighContrastNoAdjustStyle(),\n\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Window',\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n\n      (size.isSize8 || size.isSize10) && {\n        right: 'auto',\n        top: '7px',\n        left: 0,\n        border: 0,\n\n        selectors: {\n          [HighContrastSelector]: {\n            top: '9px',\n            border: '1px solid WindowText',\n          },\n        },\n      },\n\n      (size.isSize8 || size.isSize10 || size.isSize24 || size.isSize28 || size.isSize32) &&\n        makeSizeStyle(personaPresenceSize.size8),\n\n      (size.isSize40 || size.isSize48) && makeSizeStyle(personaPresenceSize.size12),\n\n      size.isSize16 && {\n        height: personaPresenceSize.size6,\n        width: personaPresenceSize.size6,\n        borderWidth: '1.5px',\n      },\n\n      size.isSize56 && makeSizeStyle(personaPresenceSize.size16),\n\n      size.isSize72 && makeSizeStyle(personaPresenceSize.size20),\n\n      size.isSize100 && makeSizeStyle(personaPresenceSize.size28),\n\n      size.isSize120 && makeSizeStyle(personaPresenceSize.size32),\n\n      presence.isAvailable && {\n        backgroundColor: presenceColorAvailable,\n\n        selectors: {\n          [HighContrastSelector]: backgroundColor('Highlight'),\n        },\n      },\n\n      presence.isAway && backgroundColor(presenceColorAway),\n\n      presence.isBlocked && [\n        {\n          selectors: {\n            // Only show :after at larger sizes\n            ':after':\n              size.isSize40 || size.isSize48 || size.isSize72 || size.isSize100\n                ? {\n                    content: '\"\"',\n                    width: '100%',\n                    height: borderSize,\n                    backgroundColor: presenceColorBusy,\n                    transform: 'translateY(-50%) rotate(-45deg)',\n                    position: 'absolute',\n                    top: '50%',\n                    left: 0,\n                  }\n                : undefined,\n\n            [HighContrastSelector]: {\n              selectors: {\n                ':after': {\n                  width: `calc(100% - 4px)`,\n                  left: '2px',\n                  backgroundColor: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n\n      presence.isBusy && backgroundColor(presenceColorBusy),\n\n      presence.isDoNotDisturb && backgroundColor(presenceColorDnd),\n\n      presence.isOffline && backgroundColor(presenceColorOffline),\n\n      (isOpenCirclePresence || presence.isBlocked) && [\n        {\n          backgroundColor: presenceColorBackground,\n\n          selectors: {\n            ':before': {\n              content: '\"\"',\n              width: '100%',\n              height: '100%',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              border: `${borderSize} solid ${presenceColorBusy}`,\n              borderRadius: '50%',\n              boxSizing: 'border-box',\n            },\n            [HighContrastSelector]: {\n              backgroundColor: 'WindowText',\n\n              selectors: {\n                ':before': {\n                  width: `calc(100% - 2px)`,\n                  height: `calc(100% - 2px)`,\n                  top: '1px',\n                  left: '1px',\n                  borderColor: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n\n      isOpenCirclePresence && presence.isAvailable && makeBeforeBorderStyle(borderSize, presenceColorAvailable),\n\n      isOpenCirclePresence && presence.isBusy && makeBeforeBorderStyle(borderSize, presenceColorBusy),\n\n      isOpenCirclePresence && presence.isAway && makeBeforeBorderStyle(borderSize, presenceColorOof),\n\n      isOpenCirclePresence && presence.isDoNotDisturb && makeBeforeBorderStyle(borderSize, presenceColorDnd),\n\n      isOpenCirclePresence && presence.isOffline && makeBeforeBorderStyle(borderSize, presenceColorOffline),\n\n      isOpenCirclePresence &&\n        presence.isOffline &&\n        props.isOutOfOffice &&\n        makeBeforeBorderStyle(borderSize, presenceColorOof),\n    ],\n\n    presenceIcon: [\n      classNames.presenceIcon,\n      {\n        color: presenceColorBackground,\n        fontSize: '6px', // exception case where we don't have an available theme.fonts variable to match it.\n        lineHeight: personaPresenceSize.size12,\n        verticalAlign: 'top',\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Window',\n          },\n        },\n      },\n\n      size.isSize56 && {\n        fontSize: '8px', // exception case where we don't have an available theme.fonts variable to match it.\n        lineHeight: personaPresenceSize.size16,\n      },\n\n      size.isSize72 && {\n        fontSize: fonts.small.fontSize,\n        lineHeight: personaPresenceSize.size20,\n      },\n\n      size.isSize100 && {\n        fontSize: fonts.medium.fontSize,\n        lineHeight: personaPresenceSize.size28,\n      },\n\n      size.isSize120 && {\n        fontSize: fonts.medium.fontSize,\n        lineHeight: personaPresenceSize.size32,\n      },\n\n      presence.isAway && {\n        position: 'relative',\n        left: isOpenCirclePresence ? undefined : '1px',\n      },\n\n      isOpenCirclePresence && presence.isAvailable && makeOpenCircleIconStyle(presenceColorAvailable),\n\n      isOpenCirclePresence && presence.isBusy && makeOpenCircleIconStyle(presenceColorBusy),\n\n      isOpenCirclePresence && presence.isAway && makeOpenCircleIconStyle(presenceColorOof),\n\n      isOpenCirclePresence && presence.isDoNotDisturb && makeOpenCircleIconStyle(presenceColorDnd),\n\n      isOpenCirclePresence && presence.isOffline && makeOpenCircleIconStyle(presenceColorOffline),\n\n      isOpenCirclePresence && presence.isOffline && props.isOutOfOffice && makeOpenCircleIconStyle(presenceColorOof),\n    ],\n  };\n};\n\nfunction makeOpenCircleIconStyle(color: string): IRawStyle {\n  return {\n    color,\n    borderColor: color,\n  };\n}\n\nfunction makeBeforeBorderStyle(borderSize: string, color: string): IRawStyle {\n  return {\n    selectors: {\n      ':before': {\n        border: `${borderSize} solid ${color}`,\n      },\n    },\n  };\n}\n\nfunction makeSizeStyle(size: string): IRawStyle {\n  return {\n    height: size,\n    width: size,\n  };\n}\n\nfunction backgroundColor(color: string): IRawStyle {\n  return { backgroundColor: color };\n}\n", "import * as React from 'react';\nimport { styled } from '../../../Utilities';\nimport { PersonaPresenceBase } from './PersonaPresence.base';\nimport { getStyles } from './PersonaPresence.styles';\nimport type { IPersonaPresenceProps, IPersonaPresenceStyleProps, IPersonaPresenceStyles } from '../Persona.types';\n\n/**\n * PersonaPresence is used to render an individual's presence.\n */\nexport const PersonaPresence: React.FunctionComponent<IPersonaPresenceProps> = styled<\n  IPersonaPresenceProps,\n  IPersonaPresenceStyleProps,\n  IPersonaPresenceStyles\n>(PersonaPresenceBase, getStyles, undefined, { scope: 'PersonaPresence' });\n", "import { PersonaInitialsColor } from './Persona.types';\nimport type { IPersonaProps } from './Persona.types';\n\n/**\n * Following colors are considered reserved and can only be set with overrides, so they are excluded from this set:\n * - `gray` and `black` can result in offensive persona coins with some initials combinations\n * - `red` often has a special meaning\n * - `transparent` is not intended to be used with typical initials due to accessibility issues;\n *   its primary use is for Facepile overflow buttons.\n */\nconst COLOR_SWATCHES_LOOKUP: PersonaInitialsColor[] = [\n  PersonaInitialsColor.lightBlue,\n  PersonaInitialsColor.blue,\n  PersonaInitialsColor.darkBlue,\n  PersonaInitialsColor.teal,\n  PersonaInitialsColor.green,\n  PersonaInitialsColor.darkGreen,\n  PersonaInitialsColor.lightPink,\n  PersonaInitialsColor.pink,\n  PersonaInitialsColor.magenta,\n  PersonaInitialsColor.purple,\n  PersonaInitialsColor.orange,\n  PersonaInitialsColor.lightRed,\n  PersonaInitialsColor.darkRed,\n  PersonaInitialsColor.violet,\n  PersonaInitialsColor.gold,\n  PersonaInitialsColor.burgundy,\n  PersonaInitialsColor.warmGray,\n  PersonaInitialsColor.cyan,\n  PersonaInitialsColor.rust,\n  PersonaInitialsColor.coolGray,\n];\n\nconst COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\n\nfunction getInitialsColorFromName(displayName: string | undefined): PersonaInitialsColor {\n  let color = PersonaInitialsColor.blue;\n  if (!displayName) {\n    return color;\n  }\n\n  let hashCode = 0;\n  for (let iLen: number = displayName.length - 1; iLen >= 0; iLen--) {\n    const ch: number = displayName.charCodeAt(iLen);\n    const shift: number = iLen % 8;\n    // eslint-disable-next-line no-bitwise\n    hashCode ^= (ch << shift) + (ch >> (8 - shift));\n  }\n\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n\n  return color;\n}\n\nfunction personaInitialsColorToHexCode(personaInitialsColor: PersonaInitialsColor): string {\n  switch (personaInitialsColor) {\n    case PersonaInitialsColor.lightBlue:\n      return '#4F6BED';\n    case PersonaInitialsColor.blue:\n      return '#0078D4';\n    case PersonaInitialsColor.darkBlue:\n      return '#004E8C';\n    case PersonaInitialsColor.teal:\n      return '#038387';\n    case PersonaInitialsColor.lightGreen:\n    case PersonaInitialsColor.green:\n      return '#498205';\n    case PersonaInitialsColor.darkGreen:\n      return '#0B6A0B';\n    case PersonaInitialsColor.lightPink:\n      return '#C239B3';\n    case PersonaInitialsColor.pink:\n      return '#E3008C';\n    case PersonaInitialsColor.magenta:\n      return '#881798';\n    case PersonaInitialsColor.purple:\n      return '#5C2E91';\n    case PersonaInitialsColor.orange:\n      return '#CA5010';\n    // eslint-disable-next-line deprecation/deprecation\n    case PersonaInitialsColor.red:\n      return '#EE1111';\n    case PersonaInitialsColor.lightRed:\n      return '#D13438';\n    case PersonaInitialsColor.darkRed:\n      return '#A4262C';\n    case PersonaInitialsColor.transparent:\n      return 'transparent';\n    case PersonaInitialsColor.violet:\n      return '#8764B8';\n    case PersonaInitialsColor.gold:\n      return '#986F0B';\n    case PersonaInitialsColor.burgundy:\n      return '#750B1C';\n    case PersonaInitialsColor.warmGray:\n      return '#7A7574';\n    case PersonaInitialsColor.cyan:\n      return '#005B70';\n    case PersonaInitialsColor.rust:\n      return '#8E562E';\n    case PersonaInitialsColor.coolGray:\n      return '#69797E';\n    // eslint-disable-next-line deprecation/deprecation\n    case PersonaInitialsColor.black:\n      return '#1D1D1D';\n    case PersonaInitialsColor.gray:\n      return '#393939';\n  }\n}\n\n/** @deprecated Use `getPersonaInitialsColor` */\nexport function initialsColorPropToColorCode(props: IPersonaProps): string {\n  return getPersonaInitialsColor(props);\n}\n\n/**\n * Gets the hex color string (prefixed with #) for the given persona props.\n * This is the logic used internally by the Persona control.\n * @param props - Current persona props\n * @returns Hex color string prefixed with #\n */\nexport function getPersonaInitialsColor(props: Pick<IPersonaProps, 'primaryText' | 'text' | 'initialsColor'>): string {\n  // eslint-disable-next-line deprecation/deprecation\n  const { primaryText, text } = props;\n  let { initialsColor } = props;\n  let initialsColorCode: string;\n  if (typeof initialsColor === 'string') {\n    initialsColorCode = initialsColor;\n  } else {\n    initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(text || primaryText);\n    initialsColorCode = personaInitialsColorToHexCode(initialsColor);\n  }\n\n  return initialsColorCode;\n}\n", "import { PersonaSize } from '../Persona.types';\nimport { HighContrastSelector, FontWeights, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { sizeBoolean, sizeToPixels } from '../PersonaConsts';\nimport type { IPersonaCoinStyleProps, IPersonaCoinStyles } from '../Persona.types';\n\nconst GlobalClassNames = {\n  coin: 'ms-Persona-coin',\n  imageArea: 'ms-Persona-imageArea',\n  image: 'ms-Persona-image',\n  initials: 'ms-Persona-initials',\n  size8: 'ms-Persona--size8',\n  size10: 'ms-Persona--size10',\n  size16: 'ms-Persona--size16',\n  size24: 'ms-Persona--size24',\n  size28: 'ms-Persona--size28',\n  size32: 'ms-Persona--size32',\n  size40: 'ms-Persona--size40',\n  size48: 'ms-Persona--size48',\n  size56: 'ms-Persona--size56',\n  size72: 'ms-Persona--size72',\n  size100: 'ms-Persona--size100',\n  size120: 'ms-Persona--size120',\n};\n\nexport const getStyles = (props: IPersonaCoinStyleProps): IPersonaCoinStyles => {\n  const { className, theme, coinSize } = props;\n\n  const { palette, fonts } = theme;\n\n  const size = sizeBoolean(props.size as PersonaSize);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Static colors used when displaying 'unknown persona' coin\n  const unknownPersonaBackgroundColor = 'rgb(234, 234, 234)';\n  const unknownPersonaFontColor = 'rgb(168, 0, 0)';\n\n  const dimension = coinSize || (props.size && sizeToPixels[props.size]) || 48;\n\n  return {\n    coin: [\n      classNames.coin,\n      fonts.medium,\n      size.isSize8 && classNames.size8,\n      size.isSize10 && classNames.size10,\n      size.isSize16 && classNames.size16,\n      size.isSize24 && classNames.size24,\n      size.isSize28 && classNames.size28,\n      size.isSize32 && classNames.size32,\n      size.isSize40 && classNames.size40,\n      size.isSize48 && classNames.size48,\n      size.isSize56 && classNames.size56,\n      size.isSize72 && classNames.size72,\n      size.isSize100 && classNames.size100,\n      size.isSize120 && classNames.size120,\n      className,\n    ],\n\n    size10WithoutPresenceIcon: {\n      fontSize: fonts.xSmall.fontSize,\n      position: 'absolute',\n      top: '5px',\n      right: 'auto',\n      left: 0,\n    },\n\n    imageArea: [\n      classNames.imageArea,\n      {\n        position: 'relative',\n        textAlign: 'center',\n        flex: '0 0 auto',\n        height: dimension,\n        width: dimension,\n      },\n\n      dimension <= 10 && {\n        overflow: 'visible',\n        background: 'transparent',\n        height: 0,\n        width: 0,\n      },\n    ],\n\n    image: [\n      classNames.image,\n      {\n        marginRight: '10px',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        border: 0,\n        borderRadius: '50%',\n        perspective: '1px',\n      },\n\n      dimension <= 10 && {\n        overflow: 'visible',\n        background: 'transparent',\n        height: 0,\n        width: 0,\n      },\n\n      dimension > 10 && {\n        height: dimension,\n        width: dimension,\n      },\n    ],\n\n    initials: [\n      classNames.initials,\n      {\n        borderRadius: '50%',\n        color: props.showUnknownPersonaCoin ? unknownPersonaFontColor : palette.white,\n        fontSize: fonts.large.fontSize,\n        fontWeight: FontWeights.semibold,\n        // copying the logic for the dimensions; defaulted to 46 for size48\n        lineHeight: dimension === 48 ? 46 : dimension,\n        height: dimension,\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: '1px solid WindowText',\n            ...getHighContrastNoAdjustStyle(),\n            color: 'WindowText',\n            boxSizing: 'border-box',\n            backgroundColor: 'Window !important',\n          },\n          i: {\n            fontWeight: FontWeights.semibold,\n          },\n        },\n      },\n\n      props.showUnknownPersonaCoin && {\n        backgroundColor: unknownPersonaBackgroundColor,\n      },\n\n      dimension < 32 && {\n        fontSize: fonts.xSmall.fontSize,\n      },\n\n      dimension >= 32 &&\n        dimension < 40 && {\n          fontSize: fonts.medium.fontSize,\n        },\n\n      dimension >= 40 &&\n        dimension < 56 && {\n          fontSize: fonts.mediumPlus.fontSize,\n        },\n\n      dimension >= 56 &&\n        dimension < 72 && {\n          fontSize: fonts.xLarge.fontSize,\n        },\n\n      dimension >= 72 &&\n        dimension < 100 && {\n          fontSize: fonts.xxLarge.fontSize,\n        },\n\n      dimension >= 100 && {\n        fontSize: fonts.superLarge.fontSize,\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../../Utilities';\nimport { PersonaCoinBase } from './PersonaCoin.base';\nimport { getStyles } from './PersonaCoin.styles';\nimport type { IPersonaCoinProps, IPersonaCoinStyleProps, IPersonaCoinStyles } from '../Persona.types';\n\n/**\n * PersonaCoin is used to render an individual's avatar and presence.\n */\nexport const PersonaCoin: React.FunctionComponent<IPersonaCoinProps> = styled<\n  IPersonaCoinProps,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles\n>(PersonaCoinBase, getStyles, undefined, {\n  scope: 'PersonaCoin',\n});\n", "import { PersonaPresence, PersonaSize } from './Persona.types';\nimport { FontWeights, normalize, noWrap, getGlobalClassNames } from '../../Styling';\nimport { personaSize, presenceBoolean, sizeBoolean } from './PersonaConsts';\nimport type { IPersonaStyleProps, IPersonaStyles } from './Persona.types';\nimport type { IStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Persona',\n  size8: 'ms-Persona--size8',\n  size10: 'ms-Persona--size10',\n  size16: 'ms-Persona--size16',\n  size24: 'ms-Persona--size24',\n  size28: 'ms-Persona--size28',\n  size32: 'ms-Persona--size32',\n  size40: 'ms-Persona--size40',\n  size48: 'ms-Persona--size48',\n  size56: 'ms-Persona--size56',\n  size72: 'ms-Persona--size72',\n  size100: 'ms-Persona--size100',\n  size120: 'ms-Persona--size120',\n  available: 'ms-Persona--online',\n  away: 'ms-Persona--away',\n  blocked: 'ms-Persona--blocked',\n  busy: 'ms-Persona--busy',\n  doNotDisturb: 'ms-Persona--donotdisturb',\n  offline: 'ms-Persona--offline',\n  details: 'ms-Persona-details',\n  primaryText: 'ms-Persona-primaryText',\n  secondaryText: 'ms-Persona-secondaryText',\n  tertiaryText: 'ms-Persona-tertiaryText',\n  optionalText: 'ms-Persona-optionalText',\n  textContent: 'ms-Persona-textContent',\n};\n\nexport const getStyles = (props: IPersonaStyleProps): IPersonaStyles => {\n  const { className, showSecondaryText, theme } = props;\n\n  const { semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const size = sizeBoolean(props.size as PersonaSize);\n  const presence = presenceBoolean(props.presence as PersonaPresence);\n\n  const showSecondaryTextDefaultHeight = '16px';\n\n  const sharedTextStyles: IStyle = {\n    color: semanticColors.bodySubtext,\n    fontWeight: FontWeights.regular,\n    fontSize: fonts.small.fontSize,\n  };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      normalize,\n      {\n        color: semanticColors.bodyText,\n        position: 'relative',\n        height: personaSize.size48,\n        minWidth: personaSize.size48,\n        display: 'flex',\n        alignItems: 'center',\n\n        selectors: {\n          '.contextualHost': {\n            display: 'none',\n          },\n        },\n      },\n\n      size.isSize8 && [\n        classNames.size8,\n        {\n          height: personaSize.size8,\n          minWidth: personaSize.size8,\n        },\n      ],\n\n      // TODO: Deprecated size and needs to be removed in a future major release.\n      size.isSize10 && [\n        classNames.size10,\n        {\n          height: personaSize.size10,\n          minWidth: personaSize.size10,\n        },\n      ],\n\n      // TODO: Deprecated size and needs to be removed in a future major release.\n      size.isSize16 && [\n        classNames.size16,\n        {\n          height: personaSize.size16,\n          minWidth: personaSize.size16,\n        },\n      ],\n\n      size.isSize24 && [\n        classNames.size24,\n        {\n          height: personaSize.size24,\n          minWidth: personaSize.size24,\n        },\n      ],\n\n      size.isSize24 &&\n        showSecondaryText && {\n          height: '36px',\n        },\n\n      // TODO: Deprecated size and needs to be removed in a future major release.\n      size.isSize28 && [\n        classNames.size28,\n        {\n          height: personaSize.size28,\n          minWidth: personaSize.size28,\n        },\n      ],\n\n      size.isSize28 &&\n        showSecondaryText && {\n          height: '32px',\n        },\n\n      size.isSize32 && [\n        classNames.size32,\n        {\n          height: personaSize.size32,\n          minWidth: personaSize.size32,\n        },\n      ],\n\n      size.isSize40 && [\n        classNames.size40,\n        {\n          height: personaSize.size40,\n          minWidth: personaSize.size40,\n        },\n      ],\n\n      size.isSize48 && classNames.size48,\n\n      size.isSize56 && [\n        classNames.size56,\n        {\n          height: personaSize.size56,\n          minWidth: personaSize.size56,\n        },\n      ],\n\n      size.isSize72 && [\n        classNames.size72,\n        {\n          height: personaSize.size72,\n          minWidth: personaSize.size72,\n        },\n      ],\n\n      size.isSize100 && [\n        classNames.size100,\n        {\n          height: personaSize.size100,\n          minWidth: personaSize.size100,\n        },\n      ],\n\n      size.isSize120 && [\n        classNames.size120,\n        {\n          height: personaSize.size120,\n          minWidth: personaSize.size120,\n        },\n      ],\n\n      /**\n       * Modifiers: presence\n       */\n      presence.isAvailable && classNames.available,\n      presence.isAway && classNames.away,\n      presence.isBlocked && classNames.blocked,\n      presence.isBusy && classNames.busy,\n      presence.isDoNotDisturb && classNames.doNotDisturb,\n      presence.isOffline && classNames.offline,\n      className,\n    ],\n\n    details: [\n      classNames.details,\n      {\n        padding: '0 24px 0 16px',\n        minWidth: 0,\n        width: '100%',\n        textAlign: 'left',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n      },\n\n      (size.isSize8 || size.isSize10) && {\n        paddingLeft: 17, // increased padding because we don't render a coin at this size\n      },\n\n      (size.isSize24 || size.isSize28 || size.isSize32) && {\n        padding: '0 8px',\n      },\n\n      (size.isSize40 || size.isSize48) && {\n        padding: '0 12px',\n      },\n    ],\n\n    primaryText: [\n      classNames.primaryText,\n      noWrap,\n      {\n        color: semanticColors.bodyText,\n        fontWeight: FontWeights.regular,\n        fontSize: fonts.medium.fontSize,\n        selectors: {\n          ':hover': {\n            color: semanticColors.inputTextHovered,\n          },\n        },\n      },\n\n      showSecondaryText && {\n        height: showSecondaryTextDefaultHeight,\n        lineHeight: showSecondaryTextDefaultHeight,\n        overflowX: 'hidden',\n      },\n\n      (size.isSize8 || size.isSize10) && {\n        fontSize: fonts.small.fontSize,\n        lineHeight: personaSize.size8,\n      },\n\n      size.isSize16 && {\n        lineHeight: personaSize.size28,\n      },\n\n      (size.isSize24 || size.isSize28 || size.isSize32 || size.isSize40 || size.isSize48) &&\n        showSecondaryText && {\n          height: 18,\n        },\n\n      (size.isSize56 || size.isSize72 || size.isSize100 || size.isSize120) && {\n        fontSize: fonts.xLarge.fontSize,\n      },\n\n      (size.isSize56 || size.isSize72 || size.isSize100 || size.isSize120) &&\n        showSecondaryText && {\n          height: 22,\n        },\n    ],\n\n    secondaryText: [\n      classNames.secondaryText,\n      noWrap,\n      sharedTextStyles,\n\n      (size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) && {\n        display: 'none',\n      },\n\n      showSecondaryText && {\n        display: 'block',\n        height: showSecondaryTextDefaultHeight,\n        lineHeight: showSecondaryTextDefaultHeight,\n        overflowX: 'hidden',\n      },\n\n      size.isSize24 &&\n        showSecondaryText && {\n          height: 18,\n        },\n\n      (size.isSize56 || size.isSize72 || size.isSize100 || size.isSize120) && {\n        fontSize: fonts.medium.fontSize,\n      },\n\n      (size.isSize56 || size.isSize72 || size.isSize100 || size.isSize120) &&\n        showSecondaryText && {\n          height: 18,\n        },\n    ],\n\n    tertiaryText: [\n      classNames.tertiaryText,\n      noWrap,\n      sharedTextStyles,\n      {\n        display: 'none',\n        fontSize: fonts.medium.fontSize,\n      },\n\n      (size.isSize72 || size.isSize100 || size.isSize120) && {\n        display: 'block',\n      },\n    ],\n\n    optionalText: [\n      classNames.optionalText,\n      noWrap,\n      sharedTextStyles,\n      {\n        display: 'none',\n        fontSize: fonts.medium.fontSize,\n      },\n\n      (size.isSize100 || size.isSize120) && {\n        display: 'block',\n      },\n    ],\n\n    textContent: [classNames.textContent, noWrap],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { PersonaBase } from './Persona.base';\nimport { getStyles } from './Persona.styles';\nimport type { IPersonaProps, IPersonaStyleProps, IPersonaStyles } from './Persona.types';\n\n/**\n * Personas are used for rendering an individual's avatar, presence and details.\n * They are used within the PeoplePicker components.\n */\nexport const Persona: React.FunctionComponent<IPersonaProps> = styled<\n  IPersonaProps,\n  IPersonaStyleProps,\n  IPersonaStyles\n>(PersonaBase, getStyles, undefined, {\n  scope: 'Persona',\n});\n"],
  "mappings": "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",
  "names": ["React", "React", "React", "React", "RectangleEdge", "Position", "_a", "React", "_a", "React", "React", "_a", "React", "React", "_a", "React", "React", "React", "React", "_i", "React", "React", "React", "React", "React", "React", "_a", "React", "React", "_a", "React", "_a", "React", "_a", "_a", "_a", "_b", "backgroundColor", "classNames", "backgroundColor", "classNames", "_a", "React", "PortalCompatContext", "createContext", "undefined", "portalCompatContextDefaultValue", "PortalCompatContextProvider", "Provider", "usePortalCompat", "_React_useContext", "useContext", "React", "React", "getClassNames", "_a", "classNames", "GlobalClassNames", "getStyles", "classNames", "getStyles", "getClassNames", "_a", "classNames", "_b", "GlobalClassNames", "getStyles", "classNames", "getStyles", "React", "_a", "_a", "React", "React", "COMPONENT_NAME", "DEFAULT_PROPS", "_a", "getClassNames", "TooltipBase", "_a", "getStyles", "_a", "getStyles", "TooltipDelay", "React", "TooltipOverflowMode", "getClassNames", "TooltipHostBase", "_a", "GlobalClassNames", "getStyles", "classNames", "getStyles", "React", "React", "React", "IconType", "React", "ImageFit", "ImageCoverStyle", "ImageLoadState", "getClassNames", "_a", "classNames", "GlobalClassNames", "getStyles", "classNames", "window", "getStyles", "React", "getStyles", "_a", "getClassNames", "IconBase", "_a", "classNames", "getStyles", "React", "PersonaSize", "PersonaPresence", "PersonaInitialsColor", "personaSize", "personaPresenceSize", "_a", "getClassNames", "classNames", "GlobalClassNames", "getStyles", "classNames", "_a", "PersonaPresence", "getStyles", "getClassNames", "DEFAULT_PROPS", "useDebugWarnings", "_a", "classNames", "PersonaPresence", "GlobalClassNames", "getStyles", "classNames", "_a", "getStyles", "getClassNames", "DEFAULT_PROPS", "useDebugWarnings", "_a", "classNames", "GlobalClassNames", "getStyles", "classNames", "getStyles"]
}
