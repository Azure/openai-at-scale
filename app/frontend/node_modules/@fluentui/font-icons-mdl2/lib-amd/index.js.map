{"version":3,"file":"index.js","sourceRoot":"../src/","sources":["index.ts"],"names":[],"mappings":";;;;IAuBA,IAAM,gBAAgB,GAAM,qCAAmB,mBAAgB,CAAC;IAmChE,IAAM,GAAG,GAAG,qBAAS,EAAE,CAAC;IAExB,SAAgB,eAAe,CAC7B,OAAsG,EACtG,OAAsB;;QADtB,wBAAA,EAAA,UAAkB,CAAA,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,YAAY,0CAAE,WAAW,MAAI,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,YAAY,0CAAE,WAAW,CAAA,IAAI,gBAAgB;QAGtG,CAAC,8BAAC,EAAE,gCAAE,EAAE,gCAAE,EAAE,gCAAE,EAAE,gCAAE,EAAE,gCAAE,EAAE,gCAAE,EAAE,gCAAE,EAAE,gCAAE,EAAE,gCAAE,EAAE,gCAAE,EAAE,iCAAG,EAAE,iCAAG,EAAE,iCAAG,EAAE,iCAAG,EAAE,iCAAG,EAAE,iCAAG,EAAE,iCAAG,EAAE,iCAAG,CAAC,CAAC,OAAO,CACzF,UAAC,UAAyD,IAAK,OAAA,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,EAA5B,CAA4B,CAC5F,CAAC;QAEF,iCAAmB,EAAE,CAAC;IACxB,CAAC;IATD,0CASC","sourcesContent":["import { initializeIcons as i } from './fabric-icons';\nimport { initializeIcons as i0 } from './fabric-icons-0';\nimport { initializeIcons as i1 } from './fabric-icons-1';\nimport { initializeIcons as i2 } from './fabric-icons-2';\nimport { initializeIcons as i3 } from './fabric-icons-3';\nimport { initializeIcons as i4 } from './fabric-icons-4';\nimport { initializeIcons as i5 } from './fabric-icons-5';\nimport { initializeIcons as i6 } from './fabric-icons-6';\nimport { initializeIcons as i7 } from './fabric-icons-7';\nimport { initializeIcons as i8 } from './fabric-icons-8';\nimport { initializeIcons as i9 } from './fabric-icons-9';\nimport { initializeIcons as i10 } from './fabric-icons-10';\nimport { initializeIcons as i11 } from './fabric-icons-11';\nimport { initializeIcons as i12 } from './fabric-icons-12';\nimport { initializeIcons as i13 } from './fabric-icons-13';\nimport { initializeIcons as i14 } from './fabric-icons-14';\nimport { initializeIcons as i15 } from './fabric-icons-15';\nimport { initializeIcons as i16 } from './fabric-icons-16';\nimport { initializeIcons as i17 } from './fabric-icons-17';\nimport { IIconOptions, FLUENT_CDN_BASE_URL } from '@fluentui/style-utilities';\nimport { registerIconAliases } from './iconAliases';\nimport { getWindow } from '@fluentui/utilities';\n\nconst DEFAULT_BASE_URL = `${FLUENT_CDN_BASE_URL}/assets/icons/`;\n\n/*\n * The Window variable has the iconBaseUrl prop in order to allow for users to redirect icon font downloads to a new\n * URL. The config can be burned on the page to ensure there are no race conditions which might load resources on\n * script load.\n */\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  interface Window {\n    /**\n     * The FabricConfig options can be burned on the page prior to script load to provide\n     * alternative defaults at script load time. This helps avoid race conditions by calling\n     * `initializeIcons` too late, or in cases where you can't control the `initializeIcons` call,\n     * such as using the pre-created Fluent bundle.\n     */\n    FabricConfig?: {\n      /**\n       * Controls the base url of the font files. This is useful for scenarios where the fonts\n       * are stored on a private CDN other than the default SharePoint CDN.\n       */\n      fontBaseUrl?: string;\n\n      /**\n       * Controls the base url of the icon font files. This is useful for scenarios where the icons\n       * are stored on a private CDN other than the default SharePoint CDN. Note that in prior\n       * iterations, `fontBaseUrl` was used to control both font and icon base urls. While you can\n       * still use `fontBaseUrl` to provide a single base url for both, the `iconBaseUrl` will be\n       * used first if available.\n       */\n      iconBaseUrl?: string;\n    };\n  }\n}\n\nconst win = getWindow();\n\nexport function initializeIcons(\n  baseUrl: string = win?.FabricConfig?.iconBaseUrl || win?.FabricConfig?.fontBaseUrl || DEFAULT_BASE_URL,\n  options?: IIconOptions,\n): void {\n  [i, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17].forEach(\n    (initialize: (url: string, options?: IIconOptions) => void) => initialize(baseUrl, options),\n  );\n\n  registerIconAliases();\n}\n\n/* eslint-disable deprecation/deprecation */\nexport type { IconNamesInput } from './IconNames';\nexport { IconNames } from './IconNames';\n/* eslint-enable deprecation/deprecation */\n\nimport './version';\n"]}