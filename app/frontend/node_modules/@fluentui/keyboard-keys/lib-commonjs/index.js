// https://github.com/microsoft/rushstack/issues/2780
// API extractor can't support namespace exports
// export * as keyCodes from './keyCodes';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    keyCodes: ()=>_keyCodes,
    AVRInput: ()=>_keys.AVRInput,
    AVRPower: ()=>_keys.AVRPower,
    Accept: ()=>_keys.Accept,
    Again: ()=>_keys.Again,
    AllCandidates: ()=>_keys.AllCandidates,
    Alphanumeric: ()=>_keys.Alphanumeric,
    Alt: ()=>_keys.Alt,
    AltGraph: ()=>_keys.AltGraph,
    AppSwitch: ()=>_keys.AppSwitch,
    ArrowDown: ()=>_keys.ArrowDown,
    ArrowLeft: ()=>_keys.ArrowLeft,
    ArrowRight: ()=>_keys.ArrowRight,
    ArrowUp: ()=>_keys.ArrowUp,
    Attn: ()=>_keys.Attn,
    AudioBalanceLeft: ()=>_keys.AudioBalanceLeft,
    AudioBalanceRight: ()=>_keys.AudioBalanceRight,
    AudioBassBoostDown: ()=>_keys.AudioBassBoostDown,
    AudioBassBoostToggle: ()=>_keys.AudioBassBoostToggle,
    AudioBassBoostUp: ()=>_keys.AudioBassBoostUp,
    AudioFaderFront: ()=>_keys.AudioFaderFront,
    AudioFaderRear: ()=>_keys.AudioFaderRear,
    AudioSurroundModeNext: ()=>_keys.AudioSurroundModeNext,
    AudioTrebleDown: ()=>_keys.AudioTrebleDown,
    AudioTrebleUp: ()=>_keys.AudioTrebleUp,
    AudioVolumeDown: ()=>_keys.AudioVolumeDown,
    AudioVolumeMute: ()=>_keys.AudioVolumeMute,
    AudioVolumeUp: ()=>_keys.AudioVolumeUp,
    Backspace: ()=>_keys.Backspace,
    BrightnessDown: ()=>_keys.BrightnessDown,
    BrightnessUp: ()=>_keys.BrightnessUp,
    BrowserBack: ()=>_keys.BrowserBack,
    BrowserFavorites: ()=>_keys.BrowserFavorites,
    BrowserForward: ()=>_keys.BrowserForward,
    BrowserHome: ()=>_keys.BrowserHome,
    BrowserRefresh: ()=>_keys.BrowserRefresh,
    BrowserSearch: ()=>_keys.BrowserSearch,
    BrowserStop: ()=>_keys.BrowserStop,
    Call: ()=>_keys.Call,
    Camera: ()=>_keys.Camera,
    CameraFocus: ()=>_keys.CameraFocus,
    Cancel: ()=>_keys.Cancel,
    CapsLock: ()=>_keys.CapsLock,
    ChannelDown: ()=>_keys.ChannelDown,
    ChannelUp: ()=>_keys.ChannelUp,
    Clear: ()=>_keys.Clear,
    Close: ()=>_keys.Close,
    ClosedCaptionToggle: ()=>_keys.ClosedCaptionToggle,
    CodeInput: ()=>_keys.CodeInput,
    ColorF0Red: ()=>_keys.ColorF0Red,
    ColorF1Green: ()=>_keys.ColorF1Green,
    ColorF2Yellow: ()=>_keys.ColorF2Yellow,
    ColorF3Blue: ()=>_keys.ColorF3Blue,
    ColorF4Grey: ()=>_keys.ColorF4Grey,
    ColorF5Brown: ()=>_keys.ColorF5Brown,
    Compose: ()=>_keys.Compose,
    ContextMenu: ()=>_keys.ContextMenu,
    Control: ()=>_keys.Control,
    Convert: ()=>_keys.Convert,
    Copy: ()=>_keys.Copy,
    CrSel: ()=>_keys.CrSel,
    Cut: ()=>_keys.Cut,
    DVR: ()=>_keys.DVR,
    Dead: ()=>_keys.Dead,
    Delete: ()=>_keys.Delete,
    Dimmer: ()=>_keys.Dimmer,
    DisplaySwap: ()=>_keys.DisplaySwap,
    Eisu: ()=>_keys.Eisu,
    Eject: ()=>_keys.Eject,
    End: ()=>_keys.End,
    EndCall: ()=>_keys.EndCall,
    Enter: ()=>_keys.Enter,
    EraseEof: ()=>_keys.EraseEof,
    Escape: ()=>_keys.Escape,
    ExSel: ()=>_keys.ExSel,
    Execute: ()=>_keys.Execute,
    Exit: ()=>_keys.Exit,
    F1: ()=>_keys.F1,
    F10: ()=>_keys.F10,
    F11: ()=>_keys.F11,
    F12: ()=>_keys.F12,
    F2: ()=>_keys.F2,
    F3: ()=>_keys.F3,
    F4: ()=>_keys.F4,
    F5: ()=>_keys.F5,
    F6: ()=>_keys.F6,
    F7: ()=>_keys.F7,
    F8: ()=>_keys.F8,
    F9: ()=>_keys.F9,
    FavoriteClear0: ()=>_keys.FavoriteClear0,
    FavoriteClear1: ()=>_keys.FavoriteClear1,
    FavoriteClear2: ()=>_keys.FavoriteClear2,
    FavoriteClear3: ()=>_keys.FavoriteClear3,
    FavoriteRecall0: ()=>_keys.FavoriteRecall0,
    FavoriteRecall1: ()=>_keys.FavoriteRecall1,
    FavoriteRecall2: ()=>_keys.FavoriteRecall2,
    FavoriteRecall3: ()=>_keys.FavoriteRecall3,
    FavoriteStore0: ()=>_keys.FavoriteStore0,
    FavoriteStore1: ()=>_keys.FavoriteStore1,
    FavoriteStore2: ()=>_keys.FavoriteStore2,
    FavoriteStore3: ()=>_keys.FavoriteStore3,
    FinalMode: ()=>_keys.FinalMode,
    Find: ()=>_keys.Find,
    Fn: ()=>_keys.Fn,
    FnLock: ()=>_keys.FnLock,
    GoBack: ()=>_keys.GoBack,
    GoHome: ()=>_keys.GoHome,
    GroupFirst: ()=>_keys.GroupFirst,
    GroupLast: ()=>_keys.GroupLast,
    GroupNext: ()=>_keys.GroupNext,
    GroupPrevious: ()=>_keys.GroupPrevious,
    Guide: ()=>_keys.Guide,
    GuideNextDay: ()=>_keys.GuideNextDay,
    GuidePreviousDay: ()=>_keys.GuidePreviousDay,
    HangulMode: ()=>_keys.HangulMode,
    HanjaMode: ()=>_keys.HanjaMode,
    Hankaku: ()=>_keys.Hankaku,
    HeadsetHook: ()=>_keys.HeadsetHook,
    Help: ()=>_keys.Help,
    Hibernate: ()=>_keys.Hibernate,
    Hiragana: ()=>_keys.Hiragana,
    HiraganaKatakana: ()=>_keys.HiraganaKatakana,
    Home: ()=>_keys.Home,
    Hyper: ()=>_keys.Hyper,
    Info: ()=>_keys.Info,
    Insert: ()=>_keys.Insert,
    InstantReplay: ()=>_keys.InstantReplay,
    JunjaMode: ()=>_keys.JunjaMode,
    KanaMode: ()=>_keys.KanaMode,
    KanjiMode: ()=>_keys.KanjiMode,
    Katakana: ()=>_keys.Katakana,
    Key11: ()=>_keys.Key11,
    Key12: ()=>_keys.Key12,
    LastNumberRedial: ()=>_keys.LastNumberRedial,
    LaunchApplication1: ()=>_keys.LaunchApplication1,
    LaunchApplication2: ()=>_keys.LaunchApplication2,
    LaunchCalendar: ()=>_keys.LaunchCalendar,
    LaunchContacts: ()=>_keys.LaunchContacts,
    LaunchMail: ()=>_keys.LaunchMail,
    LaunchMediaPlayer: ()=>_keys.LaunchMediaPlayer,
    LaunchMusicPlayer: ()=>_keys.LaunchMusicPlayer,
    LaunchPhone: ()=>_keys.LaunchPhone,
    LaunchScreenSaver: ()=>_keys.LaunchScreenSaver,
    LaunchSpreadsheet: ()=>_keys.LaunchSpreadsheet,
    LaunchWebBrowser: ()=>_keys.LaunchWebBrowser,
    LaunchWebCam: ()=>_keys.LaunchWebCam,
    LaunchWordProcessor: ()=>_keys.LaunchWordProcessor,
    Link: ()=>_keys.Link,
    ListProgram: ()=>_keys.ListProgram,
    LiveContent: ()=>_keys.LiveContent,
    Lock: ()=>_keys.Lock,
    LogOff: ()=>_keys.LogOff,
    MailForward: ()=>_keys.MailForward,
    MailReply: ()=>_keys.MailReply,
    MailSend: ()=>_keys.MailSend,
    MannerMode: ()=>_keys.MannerMode,
    MediaApps: ()=>_keys.MediaApps,
    MediaAudioTrack: ()=>_keys.MediaAudioTrack,
    MediaClose: ()=>_keys.MediaClose,
    MediaFastForward: ()=>_keys.MediaFastForward,
    MediaLast: ()=>_keys.MediaLast,
    MediaNextTrack: ()=>_keys.MediaNextTrack,
    MediaPause: ()=>_keys.MediaPause,
    MediaPlay: ()=>_keys.MediaPlay,
    MediaPlayPause: ()=>_keys.MediaPlayPause,
    MediaPreviousTrack: ()=>_keys.MediaPreviousTrack,
    MediaRecord: ()=>_keys.MediaRecord,
    MediaRewind: ()=>_keys.MediaRewind,
    MediaSkipBackward: ()=>_keys.MediaSkipBackward,
    MediaSkipForward: ()=>_keys.MediaSkipForward,
    MediaStepBackward: ()=>_keys.MediaStepBackward,
    MediaStepForward: ()=>_keys.MediaStepForward,
    MediaStop: ()=>_keys.MediaStop,
    MediaTopMenu: ()=>_keys.MediaTopMenu,
    MediaTrackNext: ()=>_keys.MediaTrackNext,
    MediaTrackPrevious: ()=>_keys.MediaTrackPrevious,
    Meta: ()=>_keys.Meta,
    MicrophoneToggle: ()=>_keys.MicrophoneToggle,
    MicrophoneVolumeDown: ()=>_keys.MicrophoneVolumeDown,
    MicrophoneVolumeMute: ()=>_keys.MicrophoneVolumeMute,
    MicrophoneVolumeUp: ()=>_keys.MicrophoneVolumeUp,
    ModeChange: ()=>_keys.ModeChange,
    NavigateIn: ()=>_keys.NavigateIn,
    NavigateNext: ()=>_keys.NavigateNext,
    NavigateOut: ()=>_keys.NavigateOut,
    NavigatePrevious: ()=>_keys.NavigatePrevious,
    New: ()=>_keys.New,
    NextCandidate: ()=>_keys.NextCandidate,
    NextFavoriteChannel: ()=>_keys.NextFavoriteChannel,
    NextUserProfile: ()=>_keys.NextUserProfile,
    NonConvert: ()=>_keys.NonConvert,
    Notification: ()=>_keys.Notification,
    NumLock: ()=>_keys.NumLock,
    OnDemand: ()=>_keys.OnDemand,
    Open: ()=>_keys.Open,
    PageDown: ()=>_keys.PageDown,
    PageUp: ()=>_keys.PageUp,
    Pairing: ()=>_keys.Pairing,
    Paste: ()=>_keys.Paste,
    Pause: ()=>_keys.Pause,
    PinPDown: ()=>_keys.PinPDown,
    PinPMove: ()=>_keys.PinPMove,
    PinPToggle: ()=>_keys.PinPToggle,
    PinPUp: ()=>_keys.PinPUp,
    Play: ()=>_keys.Play,
    PlaySpeedDown: ()=>_keys.PlaySpeedDown,
    PlaySpeedReset: ()=>_keys.PlaySpeedReset,
    PlaySpeedUp: ()=>_keys.PlaySpeedUp,
    Power: ()=>_keys.Power,
    PowerOff: ()=>_keys.PowerOff,
    PreviousCandidate: ()=>_keys.PreviousCandidate,
    Print: ()=>_keys.Print,
    PrintScreen: ()=>_keys.PrintScreen,
    Process: ()=>_keys.Process,
    Props: ()=>_keys.Props,
    RandomToggle: ()=>_keys.RandomToggle,
    RcLowBattery: ()=>_keys.RcLowBattery,
    RecordSpeedNext: ()=>_keys.RecordSpeedNext,
    Redo: ()=>_keys.Redo,
    RfBypass: ()=>_keys.RfBypass,
    Romaji: ()=>_keys.Romaji,
    STBInput: ()=>_keys.STBInput,
    STBPower: ()=>_keys.STBPower,
    Save: ()=>_keys.Save,
    ScanChannelsToggle: ()=>_keys.ScanChannelsToggle,
    ScreenModeNext: ()=>_keys.ScreenModeNext,
    ScrollLock: ()=>_keys.ScrollLock,
    Select: ()=>_keys.Select,
    Settings: ()=>_keys.Settings,
    Shift: ()=>_keys.Shift,
    SingleCandidate: ()=>_keys.SingleCandidate,
    Soft1: ()=>_keys.Soft1,
    Soft2: ()=>_keys.Soft2,
    Soft3: ()=>_keys.Soft3,
    Soft4: ()=>_keys.Soft4,
    Space: ()=>_keys.Space,
    SpeechCorrectionList: ()=>_keys.SpeechCorrectionList,
    SpeechInputToggle: ()=>_keys.SpeechInputToggle,
    SpellCheck: ()=>_keys.SpellCheck,
    SplitScreenToggle: ()=>_keys.SplitScreenToggle,
    Standby: ()=>_keys.Standby,
    Subtitle: ()=>_keys.Subtitle,
    Super: ()=>_keys.Super,
    Symbol: ()=>_keys.Symbol,
    SymbolLock: ()=>_keys.SymbolLock,
    TV: ()=>_keys.TV,
    TV3DMode: ()=>_keys.TV3DMode,
    TVAntennaCable: ()=>_keys.TVAntennaCable,
    TVAudioDescription: ()=>_keys.TVAudioDescription,
    TVAudioDescriptionMixDown: ()=>_keys.TVAudioDescriptionMixDown,
    TVAudioDescriptionMixUp: ()=>_keys.TVAudioDescriptionMixUp,
    TVContentsMenu: ()=>_keys.TVContentsMenu,
    TVDataService: ()=>_keys.TVDataService,
    TVInput: ()=>_keys.TVInput,
    TVInputComponent1: ()=>_keys.TVInputComponent1,
    TVInputComponent2: ()=>_keys.TVInputComponent2,
    TVInputComposite1: ()=>_keys.TVInputComposite1,
    TVInputComposite2: ()=>_keys.TVInputComposite2,
    TVInputHDMI1: ()=>_keys.TVInputHDMI1,
    TVInputHDMI2: ()=>_keys.TVInputHDMI2,
    TVInputHDMI3: ()=>_keys.TVInputHDMI3,
    TVInputHDMI4: ()=>_keys.TVInputHDMI4,
    TVInputVGA1: ()=>_keys.TVInputVGA1,
    TVMediaContext: ()=>_keys.TVMediaContext,
    TVNetwork: ()=>_keys.TVNetwork,
    TVNumberEntry: ()=>_keys.TVNumberEntry,
    TVPower: ()=>_keys.TVPower,
    TVRadioService: ()=>_keys.TVRadioService,
    TVSatellite: ()=>_keys.TVSatellite,
    TVSatelliteBS: ()=>_keys.TVSatelliteBS,
    TVSatelliteCS: ()=>_keys.TVSatelliteCS,
    TVSatelliteToggle: ()=>_keys.TVSatelliteToggle,
    TVTerrestrialAnalog: ()=>_keys.TVTerrestrialAnalog,
    TVTerrestrialDigital: ()=>_keys.TVTerrestrialDigital,
    TVTimer: ()=>_keys.TVTimer,
    Tab: ()=>_keys.Tab,
    Teletext: ()=>_keys.Teletext,
    Undo: ()=>_keys.Undo,
    Unidentified: ()=>_keys.Unidentified,
    VideoModeNext: ()=>_keys.VideoModeNext,
    VoiceDial: ()=>_keys.VoiceDial,
    WakeUp: ()=>_keys.WakeUp,
    Wink: ()=>_keys.Wink,
    Zenkaku: ()=>_keys.Zenkaku,
    ZenkakuHankaku: ()=>_keys.ZenkakuHankaku,
    ZoomIn: ()=>_keys.ZoomIn,
    ZoomOut: ()=>_keys.ZoomOut,
    ZoomToggle: ()=>_keys.ZoomToggle
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _keyCodes = /*#__PURE__*/ _interopRequireWildcard(require("./keyCodes"));
const _keys = require("./keys");
 //# sourceMappingURL=index.js.map

//# sourceMappingURL=index.js.map