{"version":3,"sources":["../../../lib/components/Accordion/useAccordion.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\n/**\n * Returns the props and state required to render the component\n * @param props - Accordion properties\n * @param ref - reference to root HTMLElement of Accordion\n */\nexport const useAccordion_unstable = (props, ref) => {\n  const {\n    openItems: controlledOpenItems,\n    defaultOpenItems,\n    multiple = false,\n    collapsible = false,\n    onToggle,\n    navigation\n  } = props;\n  const [openItems, setOpenItems] = useControllableState({\n    state: React.useMemo(() => normalizeValues(controlledOpenItems), [controlledOpenItems]),\n    defaultState: () => initializeUncontrolledOpenItems({\n      defaultOpenItems,\n      multiple\n    }),\n    initialState: []\n  });\n  const arrowNavigationProps = useArrowNavigationGroup({\n    circular: navigation === 'circular',\n    tabbable: true\n  });\n  const requestToggle = useEventCallback((event, data) => {\n    onToggle === null || onToggle === void 0 ? void 0 : onToggle(event, data);\n    setOpenItems(previousOpenItems => updateOpenItems(data.value, previousOpenItems, multiple, collapsible));\n  });\n  return {\n    collapsible,\n    navigation,\n    openItems,\n    requestToggle,\n    components: {\n      root: 'div'\n    },\n    root: getNativeElementProps('div', {\n      ...props,\n      ...(navigation ? arrowNavigationProps : {}),\n      ref\n    })\n  };\n};\n/**\n * Initial value for the uncontrolled case of the list of open indexes\n */\nfunction initializeUncontrolledOpenItems({\n  defaultOpenItems,\n  multiple\n}) {\n  if (defaultOpenItems !== undefined) {\n    if (Array.isArray(defaultOpenItems)) {\n      return multiple ? defaultOpenItems : [defaultOpenItems[0]];\n    }\n    return [defaultOpenItems];\n  }\n  return [];\n}\n/**\n * Updates the list of open indexes based on an index that changes\n * @param value - the index that will change\n * @param previousOpenItems - list of current open indexes\n * @param multiple - if Accordion support multiple Panels opened at the same time\n * @param collapsible - if Accordion support multiple Panels closed at the same time\n */\nfunction updateOpenItems(value, previousOpenItems, multiple, collapsible) {\n  if (multiple) {\n    if (previousOpenItems.includes(value)) {\n      if (previousOpenItems.length > 1 || collapsible) {\n        return previousOpenItems.filter(i => i !== value);\n      }\n    } else {\n      return [...previousOpenItems, value].sort();\n    }\n  } else {\n    return previousOpenItems[0] === value && collapsible ? [] : [value];\n  }\n  return previousOpenItems;\n}\n/**\n * Normalizes Accordion index into an array of indexes\n */\nfunction normalizeValues(index) {\n  if (index === undefined) {\n    return undefined;\n  }\n  return Array.isArray(index) ? index : [index];\n}\n//# sourceMappingURL=useAccordion.js.map"],"names":["useAccordion_unstable","props","ref","openItems","controlledOpenItems","defaultOpenItems","multiple","collapsible","onToggle","navigation","setOpenItems","useControllableState","state","React","useMemo","normalizeValues","defaultState","initializeUncontrolledOpenItems","initialState","arrowNavigationProps","useArrowNavigationGroup","circular","tabbable","requestToggle","useEventCallback","event","data","previousOpenItems","updateOpenItems","value","components","root","getNativeElementProps","undefined","Array","isArray","includes","length","filter","i","sort","index"],"mappings":";;;;+BAQaA;;aAAAA;;;6DARU;gCACuD;8BACtC;AAMjC,MAAMA,wBAAwB,CAACC,OAAOC,MAAQ;IACnD,MAAM,EACJC,WAAWC,oBAAmB,EAC9BC,iBAAgB,EAChBC,UAAW,KAAK,CAAA,EAChBC,aAAc,KAAK,CAAA,EACnBC,SAAQ,EACRC,WAAU,EACX,GAAGR;IACJ,MAAM,CAACE,WAAWO,aAAa,GAAGC,IAAAA,oCAAoB,EAAC;QACrDC,OAAOC,OAAMC,OAAO,CAAC,IAAMC,gBAAgBX,sBAAsB;YAACA;SAAoB;QACtFY,cAAc,IAAMC,gCAAgC;gBAClDZ;gBACAC;YACF;QACAY,cAAc,EAAE;IAClB;IACA,MAAMC,uBAAuBC,IAAAA,qCAAuB,EAAC;QACnDC,UAAUZ,eAAe;QACzBa,UAAU,IAAI;IAChB;IACA,MAAMC,gBAAgBC,IAAAA,gCAAgB,EAAC,CAACC,OAAOC,OAAS;QACtDlB,aAAa,IAAI,IAAIA,aAAa,KAAK,IAAI,KAAK,IAAIA,SAASiB,OAAOC,KAAK;QACzEhB,aAAaiB,CAAAA,oBAAqBC,gBAAgBF,KAAKG,KAAK,EAAEF,mBAAmBrB,UAAUC;IAC7F;IACA,OAAO;QACLA;QACAE;QACAN;QACAoB;QACAO,YAAY;YACVC,MAAM;QACR;QACAA,MAAMC,IAAAA,qCAAqB,EAAC,OAAO;YACjC,GAAG/B,KAAK;YACR,GAAIQ,aAAaU,uBAAuB,CAAC,CAAC;YAC1CjB;QACF;IACF;AACF;AACA;;CAEC,GACD,SAASe,gCAAgC,EACvCZ,iBAAgB,EAChBC,SAAQ,EACT,EAAE;IACD,IAAID,qBAAqB4B,WAAW;QAClC,IAAIC,MAAMC,OAAO,CAAC9B,mBAAmB;YACnC,OAAOC,WAAWD,mBAAmB;gBAACA,gBAAgB,CAAC,EAAE;aAAC;QAC5D,CAAC;QACD,OAAO;YAACA;SAAiB;IAC3B,CAAC;IACD,OAAO,EAAE;AACX;AACA;;;;;;CAMC,GACD,SAASuB,gBAAgBC,KAAK,EAAEF,iBAAiB,EAAErB,QAAQ,EAAEC,WAAW,EAAE;IACxE,IAAID,UAAU;QACZ,IAAIqB,kBAAkBS,QAAQ,CAACP,QAAQ;YACrC,IAAIF,kBAAkBU,MAAM,GAAG,KAAK9B,aAAa;gBAC/C,OAAOoB,kBAAkBW,MAAM,CAACC,CAAAA,IAAKA,MAAMV;YAC7C,CAAC;QACH,OAAO;YACL,OAAO;mBAAIF;gBAAmBE;aAAM,CAACW,IAAI;QAC3C,CAAC;IACH,OAAO;QACL,OAAOb,iBAAiB,CAAC,EAAE,KAAKE,SAAStB,cAAc,EAAE,GAAG;YAACsB;SAAM;IACrE,CAAC;IACD,OAAOF;AACT;AACA;;CAEC,GACD,SAASZ,gBAAgB0B,KAAK,EAAE;IAC9B,IAAIA,UAAUR,WAAW;QACvB,OAAOA;IACT,CAAC;IACD,OAAOC,MAAMC,OAAO,CAACM,SAASA,QAAQ;QAACA;KAAM;AAC/C,EACA,wCAAwC"}