{"version":3,"sources":["../../../lib/components/Alert/useAlert.js"],"sourcesContent":["import * as React from 'react';\nimport { Avatar } from '@fluentui/react-avatar';\nimport { Button } from '@fluentui/react-button';\nimport { CheckmarkCircleFilled, DismissCircleFilled, InfoFilled, WarningFilled } from '@fluentui/react-icons';\nimport { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';\n/**\n * Create the state required to render Alert.\n *\n * The returned state can be modified with hooks such as useAlertStyles_unstable,\n * before being passed to renderAlert_unstable.\n *\n * @param props - props from this instance of Alert\n * @param ref - reference to root HTMLElement of Alert\n */\nexport const useAlert_unstable = (props, ref) => {\n  const {\n    appearance = 'primary',\n    intent\n  } = props;\n  /** Determine the role and icon to render based on the intent */\n  let defaultIcon;\n  let defaultRole = 'status';\n  switch (intent) {\n    case 'success':\n      defaultIcon = /*#__PURE__*/React.createElement(CheckmarkCircleFilled, null);\n      break;\n    case 'error':\n      defaultIcon = /*#__PURE__*/React.createElement(DismissCircleFilled, null);\n      defaultRole = 'alert';\n      break;\n    case 'warning':\n      defaultIcon = /*#__PURE__*/React.createElement(WarningFilled, null);\n      defaultRole = 'alert';\n      break;\n    case 'info':\n      defaultIcon = /*#__PURE__*/React.createElement(InfoFilled, null);\n      break;\n  }\n  const action = resolveShorthand(props.action, {\n    defaultProps: {\n      appearance: 'transparent'\n    }\n  });\n  const avatar = resolveShorthand(props.avatar);\n  let icon;\n  /** Avatar prop takes precedence over the icon or intent prop */\n  if (!avatar) {\n    icon = resolveShorthand(props.icon, {\n      defaultProps: {\n        children: defaultIcon\n      },\n      required: !!props.intent\n    });\n  }\n  return {\n    action,\n    appearance,\n    avatar,\n    components: {\n      root: 'div',\n      icon: 'span',\n      action: Button,\n      avatar: Avatar\n    },\n    icon,\n    intent,\n    root: getNativeElementProps('div', {\n      ref,\n      role: defaultRole,\n      children: props.children,\n      ...props\n    })\n  };\n};\n//# sourceMappingURL=useAlert.js.map"],"names":["useAlert_unstable","props","ref","appearance","intent","defaultIcon","defaultRole","React","createElement","CheckmarkCircleFilled","DismissCircleFilled","WarningFilled","InfoFilled","action","resolveShorthand","defaultProps","avatar","icon","children","required","components","root","Button","Avatar","getNativeElementProps","role"],"mappings":";;;;+BAcaA;;aAAAA;;;6DAdU;6BACA;6BACA;4BAC+D;gCAC9B;AAUjD,MAAMA,oBAAoB,CAACC,OAAOC,MAAQ;IAC/C,MAAM,EACJC,YAAa,UAAS,EACtBC,OAAM,EACP,GAAGH;IACJ,8DAA8D,GAC9D,IAAII;IACJ,IAAIC,cAAc;IAClB,OAAQF;QACN,KAAK;YACHC,cAAc,WAAW,GAAEE,OAAMC,aAAa,CAACC,iCAAqB,EAAE,IAAI;YAC1E,KAAM;QACR,KAAK;YACHJ,cAAc,WAAW,GAAEE,OAAMC,aAAa,CAACE,+BAAmB,EAAE,IAAI;YACxEJ,cAAc;YACd,KAAM;QACR,KAAK;YACHD,cAAc,WAAW,GAAEE,OAAMC,aAAa,CAACG,yBAAa,EAAE,IAAI;YAClEL,cAAc;YACd,KAAM;QACR,KAAK;YACHD,cAAc,WAAW,GAAEE,OAAMC,aAAa,CAACI,sBAAU,EAAE,IAAI;YAC/D,KAAM;IACV;IACA,MAAMC,SAASC,IAAAA,gCAAgB,EAACb,MAAMY,MAAM,EAAE;QAC5CE,cAAc;YACZZ,YAAY;QACd;IACF;IACA,MAAMa,SAASF,IAAAA,gCAAgB,EAACb,MAAMe,MAAM;IAC5C,IAAIC;IACJ,8DAA8D,GAC9D,IAAI,CAACD,QAAQ;QACXC,OAAOH,IAAAA,gCAAgB,EAACb,MAAMgB,IAAI,EAAE;YAClCF,cAAc;gBACZG,UAAUb;YACZ;YACAc,UAAU,CAAC,CAAClB,MAAMG,MAAM;QAC1B;IACF,CAAC;IACD,OAAO;QACLS;QACAV;QACAa;QACAI,YAAY;YACVC,MAAM;YACNJ,MAAM;YACNJ,QAAQS,mBAAM;YACdN,QAAQO,mBAAM;QAChB;QACAN;QACAb;QACAiB,MAAMG,IAAAA,qCAAqB,EAAC,OAAO;YACjCtB;YACAuB,MAAMnB;YACNY,UAAUjB,MAAMiB,QAAQ;YACxB,GAAGjB,KAAK;QACV;IACF;AACF,GACA,oCAAoC"}