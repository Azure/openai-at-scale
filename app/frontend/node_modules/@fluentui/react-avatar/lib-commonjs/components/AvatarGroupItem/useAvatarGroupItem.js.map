{"version":3,"sources":["../../../lib/components/AvatarGroupItem/useAvatarGroupItem.js"],"sourcesContent":["import * as React from 'react';\nimport { Avatar } from '../Avatar/Avatar';\nimport { AvatarGroupContext, useAvatarGroupContext_unstable } from '../../contexts/AvatarGroupContext';\nimport { defaultAvatarGroupSize } from '../AvatarGroup/useAvatarGroup';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\n/**\n * Create the state required to render AvatarGroupItem.\n *\n * The returned state can be modified with hooks such as useAvatarGroupItemStyles_unstable,\n * before being passed to renderAvatarGroupItem_unstable.\n *\n * @param props - props from this instance of AvatarGroupItem\n * @param ref - reference to root HTMLElement of AvatarGroupItem\n */\nexport const useAvatarGroupItem_unstable = (props, ref) => {\n  const groupIsOverflow = useAvatarGroupContext_unstable(ctx => ctx.isOverflow);\n  const groupSize = useAvatarGroupContext_unstable(ctx => ctx.size);\n  const layout = useAvatarGroupContext_unstable(ctx => ctx.layout);\n  // Since the primary slot is not an intrinsic element, getPartitionedNativeProps cannot be used here.\n  const {\n    style,\n    className,\n    ...avatarSlotProps\n  } = props;\n  const size = groupSize !== null && groupSize !== void 0 ? groupSize : defaultAvatarGroupSize;\n  const hasAvatarGroupContext = useHasParentContext(AvatarGroupContext);\n  if (process.env.NODE_ENV !== 'production' && !hasAvatarGroupContext) {\n    // eslint-disable-next-line no-console\n    console.warn('AvatarGroupItem must only be used inside an AvatarGroup component.');\n  }\n  return {\n    isOverflowItem: groupIsOverflow,\n    layout,\n    size,\n    components: {\n      root: groupIsOverflow ? 'li' : 'div',\n      avatar: Avatar,\n      overflowLabel: 'span'\n    },\n    root: resolveShorthand(props.root, {\n      required: true,\n      defaultProps: {\n        style,\n        className\n      }\n    }),\n    avatar: resolveShorthand(props.avatar, {\n      required: true,\n      defaultProps: {\n        ref,\n        size,\n        color: 'colorful',\n        ...avatarSlotProps\n      }\n    }),\n    overflowLabel: resolveShorthand(props.overflowLabel, {\n      required: true,\n      defaultProps: {\n        // Avatar already has its aria-label set to the name, this will prevent the name to be read twice.\n        'aria-hidden': true,\n        children: props.name\n      }\n    })\n  };\n};\n//# sourceMappingURL=useAvatarGroupItem.js.map"],"names":["useAvatarGroupItem_unstable","props","ref","groupIsOverflow","useAvatarGroupContext_unstable","ctx","isOverflow","groupSize","size","layout","style","className","avatarSlotProps","defaultAvatarGroupSize","hasAvatarGroupContext","useHasParentContext","AvatarGroupContext","process","env","NODE_ENV","console","warn","isOverflowItem","components","root","avatar","Avatar","overflowLabel","resolveShorthand","required","defaultProps","color","children","name"],"mappings":";;;;+BAeaA;;aAAAA;;;6DAfU;wBACA;oCAC4C;gCAC5B;gCACN;sCACG;AAU7B,MAAMA,8BAA8B,CAACC,OAAOC,MAAQ;IACzD,MAAMC,kBAAkBC,IAAAA,kDAA8B,EAACC,CAAAA,MAAOA,IAAIC,UAAU;IAC5E,MAAMC,YAAYH,IAAAA,kDAA8B,EAACC,CAAAA,MAAOA,IAAIG,IAAI;IAChE,MAAMC,SAASL,IAAAA,kDAA8B,EAACC,CAAAA,MAAOA,IAAII,MAAM;IAC/D,qGAAqG;IACrG,MAAM,EACJC,MAAK,EACLC,UAAS,EACT,GAAGC,iBACJ,GAAGX;IACJ,MAAMO,OAAOD,cAAc,IAAI,IAAIA,cAAc,KAAK,IAAIA,YAAYM,sCAAsB;IAC5F,MAAMC,wBAAwBC,IAAAA,yCAAmB,EAACC,sCAAkB;IACpE,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBAAgB,CAACL,uBAAuB;QACnE,sCAAsC;QACtCM,QAAQC,IAAI,CAAC;IACf,CAAC;IACD,OAAO;QACLC,gBAAgBnB;QAChBM;QACAD;QACAe,YAAY;YACVC,MAAMrB,kBAAkB,OAAO,KAAK;YACpCsB,QAAQC,cAAM;YACdC,eAAe;QACjB;QACAH,MAAMI,IAAAA,gCAAgB,EAAC3B,MAAMuB,IAAI,EAAE;YACjCK,UAAU,IAAI;YACdC,cAAc;gBACZpB;gBACAC;YACF;QACF;QACAc,QAAQG,IAAAA,gCAAgB,EAAC3B,MAAMwB,MAAM,EAAE;YACrCI,UAAU,IAAI;YACdC,cAAc;gBACZ5B;gBACAM;gBACAuB,OAAO;gBACP,GAAGnB,eAAe;YACpB;QACF;QACAe,eAAeC,IAAAA,gCAAgB,EAAC3B,MAAM0B,aAAa,EAAE;YACnDE,UAAU,IAAI;YACdC,cAAc;gBACZ,kGAAkG;gBAClG,eAAe,IAAI;gBACnBE,UAAU/B,MAAMgC,IAAI;YACtB;QACF;IACF;AACF,GACA,8CAA8C"}