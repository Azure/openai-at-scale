{"version":3,"sources":["../../../lib/components/AvatarGroupPopover/useAvatarGroupPopover.js"],"sourcesContent":["import * as React from 'react';\nimport { useAvatarGroupContext_unstable } from '../../contexts/AvatarGroupContext';\nimport { defaultAvatarGroupSize } from '../AvatarGroup/useAvatarGroup';\nimport { resolveShorthand, useControllableState } from '@fluentui/react-utilities';\nimport { MoreHorizontalRegular } from '@fluentui/react-icons';\nimport { Popover, PopoverSurface } from '@fluentui/react-popover';\nimport { Tooltip } from '@fluentui/react-tooltip';\n/**\n * Create the state required to render AvatarGroupPopover.\n *\n * The returned state can be modified with hooks such as useAvatarGroupPopoverStyles_unstable,\n * before being passed to renderAvatarGroupPopover_unstable.\n *\n * @param props - props from this instance of AvatarGroupPopover\n */\nexport const useAvatarGroupPopover_unstable = props => {\n  var _useAvatarGroupContext_unstable;\n  const size = (_useAvatarGroupContext_unstable = useAvatarGroupContext_unstable(ctx => ctx.size)) !== null && _useAvatarGroupContext_unstable !== void 0 ? _useAvatarGroupContext_unstable : defaultAvatarGroupSize;\n  const layout = useAvatarGroupContext_unstable(ctx => ctx.layout);\n  const {\n    indicator = size < 24 ? 'icon' : 'count',\n    count = React.Children.count(props.children),\n    children,\n    ...restOfProps\n  } = props;\n  const [popoverOpen, setPopoverOpen] = useControllableState({\n    state: props.open,\n    defaultState: props.defaultOpen,\n    initialState: false\n  });\n  const handleOnPopoverChange = (e, data) => {\n    var _restOfProps_onOpenChange;\n    (_restOfProps_onOpenChange = restOfProps.onOpenChange) === null || _restOfProps_onOpenChange === void 0 ? void 0 : _restOfProps_onOpenChange.call(restOfProps, e, data);\n    setPopoverOpen(data.open);\n  };\n  let triggerButtonChildren;\n  if (layout === 'pie') {\n    triggerButtonChildren = null;\n  } else if (indicator === 'icon') {\n    triggerButtonChildren = /*#__PURE__*/React.createElement(MoreHorizontalRegular, null);\n  } else {\n    triggerButtonChildren = count > 99 ? '99+' : `+${count}`;\n  }\n  return {\n    count,\n    indicator,\n    layout,\n    popoverOpen,\n    size,\n    components: {\n      root: Popover,\n      triggerButton: 'button',\n      content: 'ul',\n      popoverSurface: PopoverSurface,\n      tooltip: Tooltip\n    },\n    root: {\n      // Popover expects a child for its children. The children are added in the renderAvatarGroupPopover.\n      children: /*#__PURE__*/React.createElement(React.Fragment, null),\n      size: 'small',\n      trapFocus: true,\n      ...restOfProps,\n      open: popoverOpen,\n      onOpenChange: handleOnPopoverChange\n    },\n    triggerButton: resolveShorthand(props.triggerButton, {\n      required: true,\n      defaultProps: {\n        children: triggerButtonChildren,\n        type: 'button'\n      }\n    }),\n    content: resolveShorthand(props.content, {\n      required: true,\n      defaultProps: {\n        children,\n        role: 'list'\n      }\n    }),\n    popoverSurface: resolveShorthand(props.popoverSurface, {\n      required: true,\n      defaultProps: {\n        'aria-label': 'Overflow',\n        tabIndex: 0\n      }\n    }),\n    tooltip: resolveShorthand(props.tooltip, {\n      required: true,\n      defaultProps: {\n        content: 'View more people.',\n        relationship: 'label'\n      }\n    })\n  };\n};\n//# sourceMappingURL=useAvatarGroupPopover.js.map"],"names":["useAvatarGroupPopover_unstable","props","_useAvatarGroupContext_unstable","size","useAvatarGroupContext_unstable","ctx","defaultAvatarGroupSize","layout","indicator","count","React","Children","children","restOfProps","popoverOpen","setPopoverOpen","useControllableState","state","open","defaultState","defaultOpen","initialState","handleOnPopoverChange","e","data","_restOfProps_onOpenChange","onOpenChange","call","triggerButtonChildren","createElement","MoreHorizontalRegular","components","root","Popover","triggerButton","content","popoverSurface","PopoverSurface","tooltip","Tooltip","Fragment","trapFocus","resolveShorthand","required","defaultProps","type","role","tabIndex","relationship"],"mappings":";;;;+BAeaA;;aAAAA;;;6DAfU;oCACwB;gCACR;gCACgB;4BACjB;8BACE;8BAChB;AASjB,MAAMA,iCAAiCC,CAAAA,QAAS;IACrD,IAAIC;IACJ,MAAMC,OAAO,AAACD,CAAAA,kCAAkCE,IAAAA,kDAA8B,EAACC,CAAAA,MAAOA,IAAIF,IAAI,CAAA,MAAO,IAAI,IAAID,oCAAoC,KAAK,IAAIA,kCAAkCI,sCAAsB;IAClN,MAAMC,SAASH,IAAAA,kDAA8B,EAACC,CAAAA,MAAOA,IAAIE,MAAM;IAC/D,MAAM,EACJC,WAAYL,OAAO,KAAK,SAAS,OAAO,CAAA,EACxCM,OAAQC,OAAMC,QAAQ,CAACF,KAAK,CAACR,MAAMW,QAAQ,EAAC,EAC5CA,SAAQ,EACR,GAAGC,aACJ,GAAGZ;IACJ,MAAM,CAACa,aAAaC,eAAe,GAAGC,IAAAA,oCAAoB,EAAC;QACzDC,OAAOhB,MAAMiB,IAAI;QACjBC,cAAclB,MAAMmB,WAAW;QAC/BC,cAAc,KAAK;IACrB;IACA,MAAMC,wBAAwB,CAACC,GAAGC,OAAS;QACzC,IAAIC;QACHA,CAAAA,4BAA4BZ,YAAYa,YAAY,AAAD,MAAO,IAAI,IAAID,8BAA8B,KAAK,IAAI,KAAK,IAAIA,0BAA0BE,IAAI,CAACd,aAAaU,GAAGC,KAAK;QACvKT,eAAeS,KAAKN,IAAI;IAC1B;IACA,IAAIU;IACJ,IAAIrB,WAAW,OAAO;QACpBqB,wBAAwB,IAAI;IAC9B,OAAO,IAAIpB,cAAc,QAAQ;QAC/BoB,wBAAwB,WAAW,GAAElB,OAAMmB,aAAa,CAACC,iCAAqB,EAAE,IAAI;IACtF,OAAO;QACLF,wBAAwBnB,QAAQ,KAAK,QAAQ,CAAC,CAAC,EAAEA,MAAM,CAAC;IAC1D,CAAC;IACD,OAAO;QACLA;QACAD;QACAD;QACAO;QACAX;QACA4B,YAAY;YACVC,MAAMC,qBAAO;YACbC,eAAe;YACfC,SAAS;YACTC,gBAAgBC,4BAAc;YAC9BC,SAASC,qBAAO;QAClB;QACAP,MAAM;YACJ,oGAAoG;YACpGpB,UAAU,WAAW,GAAEF,OAAMmB,aAAa,CAACnB,OAAM8B,QAAQ,EAAE,IAAI;YAC/DrC,MAAM;YACNsC,WAAW,IAAI;YACf,GAAG5B,WAAW;YACdK,MAAMJ;YACNY,cAAcJ;QAChB;QACAY,eAAeQ,IAAAA,gCAAgB,EAACzC,MAAMiC,aAAa,EAAE;YACnDS,UAAU,IAAI;YACdC,cAAc;gBACZhC,UAAUgB;gBACViB,MAAM;YACR;QACF;QACAV,SAASO,IAAAA,gCAAgB,EAACzC,MAAMkC,OAAO,EAAE;YACvCQ,UAAU,IAAI;YACdC,cAAc;gBACZhC;gBACAkC,MAAM;YACR;QACF;QACAV,gBAAgBM,IAAAA,gCAAgB,EAACzC,MAAMmC,cAAc,EAAE;YACrDO,UAAU,IAAI;YACdC,cAAc;gBACZ,cAAc;gBACdG,UAAU;YACZ;QACF;QACAT,SAASI,IAAAA,gCAAgB,EAACzC,MAAMqC,OAAO,EAAE;YACvCK,UAAU,IAAI;YACdC,cAAc;gBACZT,SAAS;gBACTa,cAAc;YAChB;QACF;IACF;AACF,GACA,iDAAiD"}