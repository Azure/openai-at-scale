{"version":3,"sources":["../../lib/utils/getInitials.js"],"sourcesContent":["/**\n * Regular expressions matching characters to ignore when calculating the initials.\n */ /**\n    * Regular expression matching characters within various types of enclosures, including the enclosures themselves\n    *  so for example, (xyz) [xyz] {xyz} all would be ignored\n    */const UNWANTED_ENCLOSURES_REGEX = /[\\(\\[\\{][^\\)\\]\\}]*[\\)\\]\\}]/g;\n/**\n * Regular expression matching special ASCII characters except space, plus some unicode special characters.\n * Applies after unwanted enclosures have been removed\n */\nconst UNWANTED_CHARS_REGEX = /[\\0-\\u001F\\!-/:-@\\[-`\\{-\\u00BF\\u0250-\\u036F\\uD800-\\uFFFF]/g;\n/**\n * Regular expression matching phone numbers. Applied after chars matching UNWANTED_CHARS_REGEX have been removed\n * and number has been trimmed for whitespaces\n */\nconst PHONENUMBER_REGEX = /^\\d+[\\d\\s]*(:?ext|x|)\\s*\\d+$/i;\n/** Regular expression matching one or more spaces. */\nconst MULTIPLE_WHITESPACES_REGEX = /\\s+/g;\n/**\n * Regular expression matching languages for which we currently don't support initials.\n * Arabic:   Arabic, Arabic Supplement, Arabic Extended-A.\n * Korean:   Hangul Jamo, Hangul Compatibility Jamo, Hangul Jamo Extended-A, Hangul Syllables, Hangul Jamo Extended-B.\n * Japanese: Hiragana, Katakana.\n * CJK:      CJK Unified Ideographs Extension A, CJK Unified Ideographs, CJK Compatibility Ideographs,\n *             CJK Unified Ideographs Extension B\n */ // eslint-disable-next-line @fluentui/max-len\nconst UNSUPPORTED_TEXT_REGEX = /[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\u1100-\\u11FF\\u3130-\\u318F\\uA960-\\uA97F\\uAC00-\\uD7AF\\uD7B0-\\uD7FF\\u3040-\\u309F\\u30A0-\\u30FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD869][\\uDC00-\\uDED6]/;\nfunction getInitialsLatin(displayName, isRtl, firstInitialOnly) {\n  let initials = '';\n  const splits = displayName.split(' ');\n  if (splits.length !== 0) {\n    initials += splits[0].charAt(0).toUpperCase();\n  }\n  if (!firstInitialOnly) {\n    if (splits.length === 2) {\n      initials += splits[1].charAt(0).toUpperCase();\n    } else if (splits.length === 3) {\n      initials += splits[2].charAt(0).toUpperCase();\n    }\n  }\n  if (isRtl && initials.length > 1) {\n    return initials.charAt(1) + initials.charAt(0);\n  }\n  return initials;\n}\nfunction cleanupDisplayName(displayName) {\n  displayName = displayName.replace(UNWANTED_ENCLOSURES_REGEX, '');\n  displayName = displayName.replace(UNWANTED_CHARS_REGEX, '');\n  displayName = displayName.replace(MULTIPLE_WHITESPACES_REGEX, ' ');\n  displayName = displayName.trim();\n  return displayName;\n}\n/**\n * Get (up to 2 characters) initials based on display name of the persona.\n *\n * @param displayName - The full name of the person or entity\n * @param isRtl - Whether the display is in RTL\n * @param options - Extra options to control the behavior of getInitials\n *\n * @returns The 1 or 2 character initials based on the name. Or an empty string if no initials\n * could be derived from the name.\n *\n * @internal\n */\nexport function getInitials(displayName, isRtl, options) {\n  if (!displayName) {\n    return '';\n  }\n  displayName = cleanupDisplayName(displayName);\n  // For names containing CJK characters, and phone numbers, we don't display initials\n  if (UNSUPPORTED_TEXT_REGEX.test(displayName) || !(options === null || options === void 0 ? void 0 : options.allowPhoneInitials) && PHONENUMBER_REGEX.test(displayName)) {\n    return '';\n  }\n  return getInitialsLatin(displayName, isRtl, options === null || options === void 0 ? void 0 : options.firstInitialOnly);\n}\n//# sourceMappingURL=getInitials.js.map"],"names":["getInitials","UNWANTED_ENCLOSURES_REGEX","UNWANTED_CHARS_REGEX","PHONENUMBER_REGEX","MULTIPLE_WHITESPACES_REGEX","UNSUPPORTED_TEXT_REGEX","getInitialsLatin","displayName","isRtl","firstInitialOnly","initials","splits","split","length","charAt","toUpperCase","cleanupDisplayName","replace","trim","options","test","allowPhoneInitials"],"mappings":"AAAA;;CAEC,GAAG;;;IAGA;;;;+BA2DYA;;aAAAA;;AA3DV,MAAMC,4BAA4B;AACxC;;;CAGC,GACD,MAAMC,uBAAuB;AAC7B;;;CAGC,GACD,MAAMC,oBAAoB;AAC1B,oDAAoD,GACpD,MAAMC,6BAA6B;AACnC;;;;;;;CAOC,GAAG,6CAA6C;AACjD,MAAMC,yBAAyB;AAC/B,SAASC,iBAAiBC,WAAW,EAAEC,KAAK,EAAEC,gBAAgB,EAAE;IAC9D,IAAIC,WAAW;IACf,MAAMC,SAASJ,YAAYK,KAAK,CAAC;IACjC,IAAID,OAAOE,MAAM,KAAK,GAAG;QACvBH,YAAYC,MAAM,CAAC,EAAE,CAACG,MAAM,CAAC,GAAGC,WAAW;IAC7C,CAAC;IACD,IAAI,CAACN,kBAAkB;QACrB,IAAIE,OAAOE,MAAM,KAAK,GAAG;YACvBH,YAAYC,MAAM,CAAC,EAAE,CAACG,MAAM,CAAC,GAAGC,WAAW;QAC7C,OAAO,IAAIJ,OAAOE,MAAM,KAAK,GAAG;YAC9BH,YAAYC,MAAM,CAAC,EAAE,CAACG,MAAM,CAAC,GAAGC,WAAW;QAC7C,CAAC;IACH,CAAC;IACD,IAAIP,SAASE,SAASG,MAAM,GAAG,GAAG;QAChC,OAAOH,SAASI,MAAM,CAAC,KAAKJ,SAASI,MAAM,CAAC;IAC9C,CAAC;IACD,OAAOJ;AACT;AACA,SAASM,mBAAmBT,WAAW,EAAE;IACvCA,cAAcA,YAAYU,OAAO,CAAChB,2BAA2B;IAC7DM,cAAcA,YAAYU,OAAO,CAACf,sBAAsB;IACxDK,cAAcA,YAAYU,OAAO,CAACb,4BAA4B;IAC9DG,cAAcA,YAAYW,IAAI;IAC9B,OAAOX;AACT;AAaO,SAASP,YAAYO,WAAW,EAAEC,KAAK,EAAEW,OAAO,EAAE;IACvD,IAAI,CAACZ,aAAa;QAChB,OAAO;IACT,CAAC;IACDA,cAAcS,mBAAmBT;IACjC,oFAAoF;IACpF,IAAIF,uBAAuBe,IAAI,CAACb,gBAAgB,CAAEY,CAAAA,YAAY,IAAI,IAAIA,YAAY,KAAK,IAAI,KAAK,IAAIA,QAAQE,kBAAkB,AAAD,KAAMlB,kBAAkBiB,IAAI,CAACb,cAAc;QACtK,OAAO;IACT,CAAC;IACD,OAAOD,iBAAiBC,aAAaC,OAAOW,YAAY,IAAI,IAAIA,YAAY,KAAK,IAAI,KAAK,IAAIA,QAAQV,gBAAgB;AACxH,EACA,uCAAuC"}