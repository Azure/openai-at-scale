{"version":3,"sources":["../../lib/utils/partitionAvatarGroupItems.js"],"sourcesContent":["/**\n * Get the inline items and overflowing items based on the array of AvatarGroupItems needed for AvatarGroup.\n *\n * @param options - Configure the partition options\n *\n * @returns Two arrays split into inline items and overflow items based on maxInlineItems.\n */export const partitionAvatarGroupItems = options => {\n  const {\n    items\n  } = options;\n  const isPie = options.layout === 'pie';\n  if (isPie) {\n    return {\n      inlineItems: items.slice(0, 3),\n      overflowItems: items.length > 0 ? items : undefined\n    };\n  }\n  var _options_maxInlineItems;\n  const maxInlineItems = (_options_maxInlineItems = options.maxInlineItems) !== null && _options_maxInlineItems !== void 0 ? _options_maxInlineItems : 5;\n  const inlineCount = -(maxInlineItems - (items.length > maxInlineItems ? 1 : 0));\n  const overflowItems = items.slice(0, inlineCount);\n  return {\n    inlineItems: items.slice(inlineCount),\n    overflowItems: overflowItems.length > 0 ? overflowItems : undefined\n  };\n};\n//# sourceMappingURL=partitionAvatarGroupItems.js.map"],"names":["partitionAvatarGroupItems","options","items","isPie","layout","inlineItems","slice","overflowItems","length","undefined","_options_maxInlineItems","maxInlineItems","inlineCount"],"mappings":"AAAA;;;;;;CAMC;;;;+BAAeA;;aAAAA;;AAAN,MAAMA,4BAA4BC,CAAAA,UAAW;IACrD,MAAM,EACJC,MAAK,EACN,GAAGD;IACJ,MAAME,QAAQF,QAAQG,MAAM,KAAK;IACjC,IAAID,OAAO;QACT,OAAO;YACLE,aAAaH,MAAMI,KAAK,CAAC,GAAG;YAC5BC,eAAeL,MAAMM,MAAM,GAAG,IAAIN,QAAQO,SAAS;QACrD;IACF,CAAC;IACD,IAAIC;IACJ,MAAMC,iBAAiB,AAACD,CAAAA,0BAA0BT,QAAQU,cAAc,AAAD,MAAO,IAAI,IAAID,4BAA4B,KAAK,IAAIA,0BAA0B,CAAC;IACtJ,MAAME,cAAc,CAAED,CAAAA,iBAAkBT,CAAAA,MAAMM,MAAM,GAAGG,iBAAiB,IAAI,CAAC,AAAD,CAAC;IAC7E,MAAMJ,gBAAgBL,MAAMI,KAAK,CAAC,GAAGM;IACrC,OAAO;QACLP,aAAaH,MAAMI,KAAK,CAACM;QACzBL,eAAeA,cAAcC,MAAM,GAAG,IAAID,gBAAgBE,SAAS;IACrE;AACF,GACA,qDAAqD"}