"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useCardPreview_unstable", {
    enumerable: true,
    get: ()=>useCardPreview_unstable
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _reactUtilities = require("@fluentui/react-utilities");
const _cardContext = require("../Card/CardContext");
const _useCardPreviewStyles = require("./useCardPreviewStyles");
const useCardPreview_unstable = (props, ref)=>{
    const { logo  } = props;
    const { selectableA11yProps: { referenceLabel , referenceId , setReferenceLabel , setReferenceId  }  } = (0, _cardContext.useCardContext_unstable)();
    const previewRef = (0, _reactUtilities.useMergedRefs)(ref, _react.useRef(null));
    _react.useEffect(()=>{
        if (referenceLabel && referenceId) {
            return;
        }
        if (previewRef.current && previewRef.current.parentNode) {
            const img = previewRef.current.parentNode.querySelector(`.${_useCardPreviewStyles.cardPreviewClassNames.root} > img`);
            if (img) {
                const ariaLabel = img.getAttribute('aria-label');
                const ariaDescribedby = img.getAttribute('aria-describedby');
                if (ariaDescribedby) {
                    setReferenceId(ariaDescribedby);
                } else if (img.alt) {
                    setReferenceLabel(img.alt);
                } else if (ariaLabel) {
                    setReferenceLabel(ariaLabel);
                }
            }
        }
    }, [
        setReferenceLabel,
        referenceLabel,
        previewRef,
        referenceId,
        setReferenceId
    ]);
    return {
        components: {
            root: 'div',
            logo: 'div'
        },
        root: (0, _reactUtilities.getNativeElementProps)('div', {
            ref: previewRef,
            ...props
        }),
        logo: (0, _reactUtilities.resolveShorthand)(logo)
    };
}; //# sourceMappingURL=useCardPreview.js.map

//# sourceMappingURL=useCardPreview.js.map