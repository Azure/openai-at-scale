{"version":3,"sources":["../../../lib/components/CardPreview/useCardPreview.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useMergedRefs } from '@fluentui/react-utilities';\nimport { useCardContext_unstable } from '../Card/CardContext';\nimport { cardPreviewClassNames } from './useCardPreviewStyles';\n/**\n * Create the state required to render CardPreview.\n *\n * The returned state can be modified with hooks such as useCardPreviewStyles_unstable,\n * before being passed to renderCardPreview_unstable.\n *\n * @param props - props from this instance of CardPreview\n * @param ref - reference to root HTMLElement of CardPreview\n */\nexport const useCardPreview_unstable = (props, ref) => {\n  const {\n    logo\n  } = props;\n  const {\n    selectableA11yProps: {\n      referenceLabel,\n      referenceId,\n      setReferenceLabel,\n      setReferenceId\n    }\n  } = useCardContext_unstable();\n  const previewRef = useMergedRefs(ref, React.useRef(null));\n  React.useEffect(() => {\n    if (referenceLabel && referenceId) {\n      return;\n    }\n    if (previewRef.current && previewRef.current.parentNode) {\n      const img = previewRef.current.parentNode.querySelector(`.${cardPreviewClassNames.root} > img`);\n      if (img) {\n        const ariaLabel = img.getAttribute('aria-label');\n        const ariaDescribedby = img.getAttribute('aria-describedby');\n        if (ariaDescribedby) {\n          setReferenceId(ariaDescribedby);\n        } else if (img.alt) {\n          setReferenceLabel(img.alt);\n        } else if (ariaLabel) {\n          setReferenceLabel(ariaLabel);\n        }\n      }\n    }\n  }, [setReferenceLabel, referenceLabel, previewRef, referenceId, setReferenceId]);\n  return {\n    components: {\n      root: 'div',\n      logo: 'div'\n    },\n    root: getNativeElementProps('div', {\n      ref: previewRef,\n      ...props\n    }),\n    logo: resolveShorthand(logo)\n  };\n};\n//# sourceMappingURL=useCardPreview.js.map"],"names":["useCardPreview_unstable","props","ref","logo","selectableA11yProps","referenceLabel","referenceId","setReferenceLabel","setReferenceId","useCardContext_unstable","previewRef","useMergedRefs","React","useRef","useEffect","current","parentNode","img","querySelector","cardPreviewClassNames","root","ariaLabel","getAttribute","ariaDescribedby","alt","components","getNativeElementProps","resolveShorthand"],"mappings":";;;;+BAaaA;;aAAAA;;;6DAbU;gCACgD;6BAC/B;sCACF;AAU/B,MAAMA,0BAA0B,CAACC,OAAOC,MAAQ;IACrD,MAAM,EACJC,KAAI,EACL,GAAGF;IACJ,MAAM,EACJG,qBAAqB,EACnBC,eAAc,EACdC,YAAW,EACXC,kBAAiB,EACjBC,eAAc,EACf,CAAA,EACF,GAAGC,IAAAA,oCAAuB;IAC3B,MAAMC,aAAaC,IAAAA,6BAAa,EAACT,KAAKU,OAAMC,MAAM,CAAC,IAAI;IACvDD,OAAME,SAAS,CAAC,IAAM;QACpB,IAAIT,kBAAkBC,aAAa;YACjC;QACF,CAAC;QACD,IAAII,WAAWK,OAAO,IAAIL,WAAWK,OAAO,CAACC,UAAU,EAAE;YACvD,MAAMC,MAAMP,WAAWK,OAAO,CAACC,UAAU,CAACE,aAAa,CAAC,CAAC,CAAC,EAAEC,2CAAqB,CAACC,IAAI,CAAC,MAAM,CAAC;YAC9F,IAAIH,KAAK;gBACP,MAAMI,YAAYJ,IAAIK,YAAY,CAAC;gBACnC,MAAMC,kBAAkBN,IAAIK,YAAY,CAAC;gBACzC,IAAIC,iBAAiB;oBACnBf,eAAee;gBACjB,OAAO,IAAIN,IAAIO,GAAG,EAAE;oBAClBjB,kBAAkBU,IAAIO,GAAG;gBAC3B,OAAO,IAAIH,WAAW;oBACpBd,kBAAkBc;gBACpB,CAAC;YACH,CAAC;QACH,CAAC;IACH,GAAG;QAACd;QAAmBF;QAAgBK;QAAYJ;QAAaE;KAAe;IAC/E,OAAO;QACLiB,YAAY;YACVL,MAAM;YACNjB,MAAM;QACR;QACAiB,MAAMM,IAAAA,qCAAqB,EAAC,OAAO;YACjCxB,KAAKQ;YACL,GAAGT,KAAK;QACV;QACAE,MAAMwB,IAAAA,gCAAgB,EAACxB;IACzB;AACF,GACA,0CAA0C"}