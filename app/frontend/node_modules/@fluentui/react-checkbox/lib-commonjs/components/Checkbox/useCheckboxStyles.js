"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    checkboxClassNames: ()=>checkboxClassNames,
    useCheckboxStyles_unstable: ()=>useCheckboxStyles_unstable
});
const _react = require("@griffel/react");
const checkboxClassNames = {
    root: 'fui-Checkbox',
    label: 'fui-Checkbox__label',
    input: 'fui-Checkbox__input',
    indicator: 'fui-Checkbox__indicator'
};
// The indicator size is used by the indicator and label styles
const indicatorSizeMedium = '16px';
const indicatorSizeLarge = '20px';
const useRootBaseClassName = /*#__PURE__*/ (0, _react["__resetStyles"])("ripp6we", "r1b86e4p", [
    ".ripp6we{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;color:var(--colorNeutralForeground3);}",
    ".ripp6we:focus{outline-style:none;}",
    ".ripp6we:focus-visible{outline-style:none;}",
    ".ripp6we[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}",
    ".ripp6we[data-fui-focus-within]:focus-within::after{content:\"\";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:2px;border-right-width:2px;border-bottom-width:2px;border-left-width:2px;border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;left:-2px;right:-2px;}",
    ".r1b86e4p{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;color:var(--colorNeutralForeground3);}",
    ".r1b86e4p:focus{outline-style:none;}",
    ".r1b86e4p:focus-visible{outline-style:none;}",
    ".r1b86e4p[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}",
    ".r1b86e4p[data-fui-focus-within]:focus-within::after{content:\"\";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:2px;border-left-width:2px;border-bottom-width:2px;border-right-width:2px;border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;right:-2px;left:-2px;}"
]);
const useRootStyles = /*#__PURE__*/ (0, _react["__styles"])({
    unchecked: {
        Bi91k9c: "f3p8bqa",
        ns3gzv: "ffqb913",
        n5iecx: [
            "f42z0vd",
            "f1j37kh1"
        ],
        Bq2lx2j: "f10v6cc1",
        Bv7p3up: [
            "f1j37kh1",
            "f42z0vd"
        ],
        lj723h: "f1r2dosr",
        B6u2zzw: "f1oarbgq",
        Be5wueo: [
            "fo8gord",
            "f18ci1af"
        ],
        Cgwcxn: "fviagcr",
        Btnvhkj: [
            "f18ci1af",
            "fo8gord"
        ]
    },
    checked: {
        sj55zd: "f19n0e5",
        Bvs3sgl: "f5opsb9",
        opw9sb: "fpaw01r",
        C5wppx: "f1gqj827",
        B32epof: [
            "fub94a2",
            "f13mj44e"
        ],
        Bphahg7: "f1qq5vh1",
        Jctw66: [
            "f13mj44e",
            "fub94a2"
        ],
        Bq0zqd5: "f5x9vvn",
        ns3gzv: "fub8hyy",
        n5iecx: [
            "fffzknn",
            "f172bh4s"
        ],
        Bq2lx2j: "f6tipb1",
        Bv7p3up: [
            "f172bh4s",
            "fffzknn"
        ],
        Bgesukf: "f8adco2",
        B6u2zzw: "f1lepnt8",
        Be5wueo: [
            "f80ygm0",
            "frrkusm"
        ],
        Cgwcxn: "f1gg953z",
        Btnvhkj: [
            "frrkusm",
            "f80ygm0"
        ]
    },
    mixed: {
        sj55zd: "f19n0e5",
        C5wppx: "f12fgbth",
        B32epof: [
            "f171e6fm",
            "fttsnhr"
        ],
        Bphahg7: "f1fyk1ks",
        Jctw66: [
            "fttsnhr",
            "f171e6fm"
        ],
        opw9sb: "fvvg2h8",
        ns3gzv: "f1nlwys0",
        n5iecx: [
            "f1bhstg2",
            "f6tsdgz"
        ],
        Bq2lx2j: "fqxbw9v",
        Bv7p3up: [
            "f6tsdgz",
            "f1bhstg2"
        ],
        cc1l3s: "f1r38qqt",
        B6u2zzw: "f12q3i2l",
        Be5wueo: [
            "f9g1hxu",
            "f1o4ic5t"
        ],
        Cgwcxn: "f1c3thm1",
        Btnvhkj: [
            "f1o4ic5t",
            "f9g1hxu"
        ],
        km5s60: "ffd07pq"
    },
    disabled: {
        Bceei9c: "f158kwzp",
        sj55zd: "f1s2aq7o",
        C5wppx: "fgiuqeu",
        B32epof: [
            "f1q4sfkt",
            "f71co73"
        ],
        Bphahg7: "f1u7lsiy",
        Jctw66: [
            "f71co73",
            "f1q4sfkt"
        ],
        opw9sb: "f3vxa14",
        Bbusuzp: "f1dcs8yz",
        B7bxudy: "f1lmtjkn"
    }
}, {
    h: [
        ".f3p8bqa:hover{color:var(--colorNeutralForeground2);}",
        ".ffqb913:hover>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeAccessibleHover);}",
        ".f42z0vd:hover>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeAccessibleHover);}",
        ".f1j37kh1:hover>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeAccessibleHover);}",
        ".f10v6cc1:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeAccessibleHover);}",
        ".f5x9vvn:hover>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackgroundHover);}",
        ".fub8hyy:hover>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackgroundHover);}",
        ".fffzknn:hover>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackgroundHover);}",
        ".f172bh4s:hover>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackgroundHover);}",
        ".f6tipb1:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackgroundHover);}",
        ".f1nlwys0:hover>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStrokeHover);}",
        ".f1bhstg2:hover>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStrokeHover);}",
        ".f6tsdgz:hover>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStrokeHover);}",
        ".fqxbw9v:hover>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStrokeHover);}",
        ".f1r38qqt:hover>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1Hover);}"
    ],
    a: [
        ".f1r2dosr:active{color:var(--colorNeutralForeground1);}",
        ".f1oarbgq:active>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeAccessiblePressed);}",
        ".fo8gord:active>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeAccessiblePressed);}",
        ".f18ci1af:active>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeAccessiblePressed);}",
        ".fviagcr:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeAccessiblePressed);}",
        ".f8adco2:active>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);}",
        ".f1lepnt8:active>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackgroundPressed);}",
        ".f80ygm0:active>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackgroundPressed);}",
        ".frrkusm:active>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackgroundPressed);}",
        ".f1gg953z:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackgroundPressed);}",
        ".f12q3i2l:active>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStrokePressed);}",
        ".f9g1hxu:active>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStrokePressed);}",
        ".f1o4ic5t:active>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStrokePressed);}",
        ".f1c3thm1:active>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStrokePressed);}",
        ".ffd07pq:active>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1Pressed);}"
    ],
    d: [
        ".f19n0e5{color:var(--colorNeutralForeground1);}",
        ".f5opsb9>.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackground);}",
        ".fpaw01r>.fui-Checkbox__indicator{color:var(--colorNeutralForegroundInverted);}",
        ".f1gqj827>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandBackground);}",
        ".fub94a2>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandBackground);}",
        ".f13mj44e>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandBackground);}",
        ".f1qq5vh1>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandBackground);}",
        ".f12fgbth>.fui-Checkbox__indicator{border-top-color:var(--colorCompoundBrandStroke);}",
        ".f171e6fm>.fui-Checkbox__indicator{border-right-color:var(--colorCompoundBrandStroke);}",
        ".fttsnhr>.fui-Checkbox__indicator{border-left-color:var(--colorCompoundBrandStroke);}",
        ".f1fyk1ks>.fui-Checkbox__indicator{border-bottom-color:var(--colorCompoundBrandStroke);}",
        ".fvvg2h8>.fui-Checkbox__indicator{color:var(--colorCompoundBrandForeground1);}",
        ".f158kwzp{cursor:default;}",
        ".f1s2aq7o{color:var(--colorNeutralForegroundDisabled);}",
        ".fgiuqeu>.fui-Checkbox__indicator{border-top-color:var(--colorNeutralStrokeDisabled);}",
        ".f1q4sfkt>.fui-Checkbox__indicator{border-right-color:var(--colorNeutralStrokeDisabled);}",
        ".f71co73>.fui-Checkbox__indicator{border-left-color:var(--colorNeutralStrokeDisabled);}",
        ".f1u7lsiy>.fui-Checkbox__indicator{border-bottom-color:var(--colorNeutralStrokeDisabled);}",
        ".f3vxa14>.fui-Checkbox__indicator{color:var(--colorNeutralForegroundDisabled);}"
    ],
    m: [
        [
            "@media (forced-colors: active){.f1dcs8yz{color:GrayText;}}",
            {
                m: "(forced-colors: active)"
            }
        ],
        [
            "@media (forced-colors: active){.f1lmtjkn>.fui-Checkbox__indicator{color:GrayText;}}",
            {
                m: "(forced-colors: active)"
            }
        ]
    ]
});
const useInputBaseClassName = /*#__PURE__*/ (0, _react["__resetStyles"])("ruo9svu", null, [
    ".ruo9svu{box-sizing:border-box;cursor:inherit;height:100%;margin:0;opacity:0;position:absolute;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));}"
]);
const useInputStyles = /*#__PURE__*/ (0, _react["__styles"])({
    before: {
        j35jbq: [
            "f1e31b4d",
            "f1vgc2s3"
        ]
    },
    after: {
        oyh7mz: [
            "f1vgc2s3",
            "f1e31b4d"
        ]
    },
    large: {
        a9b677: "f1mq5jt6"
    }
}, {
    d: [
        ".f1e31b4d{right:0;}",
        ".f1vgc2s3{left:0;}",
        ".f1mq5jt6{width:calc(20px + 2 * var(--spacingHorizontalS));}"
    ]
});
const useIndicatorBaseClassName = /*#__PURE__*/ (0, _react["__resetStyles"])("rrh91wr", null, [
    ".rrh91wr{-webkit-align-self:flex-start;-ms-flex-item-align:flex-start;align-self:flex-start;box-sizing:border-box;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;overflow:hidden;border:var(--strokeWidthThin) solid var(--colorNeutralStrokeAccessible);border-radius:var(--borderRadiusSmall);margin:var(--spacingVerticalS) var(--spacingHorizontalS);fill:currentColor;pointer-events:none;font-size:12px;height:16px;width:16px;}"
]);
const useIndicatorStyles = /*#__PURE__*/ (0, _react["__styles"])({
    large: {
        Be2twd7: "f4ybsrx",
        Bqenvij: "fjamq6b",
        a9b677: "f64fuq3"
    },
    circular: {
        Bbmb7ep: [
            "f8fbkgy",
            "f1nfllo7"
        ],
        Beyfa6y: [
            "f1nfllo7",
            "f8fbkgy"
        ],
        B7oj6ja: [
            "f1djnp8u",
            "f1s8kh49"
        ],
        Btl43ni: [
            "f1s8kh49",
            "f1djnp8u"
        ]
    }
}, {
    d: [
        ".f4ybsrx{font-size:16px;}",
        ".fjamq6b{height:20px;}",
        ".f64fuq3{width:20px;}",
        ".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}",
        ".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}",
        ".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}",
        ".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}"
    ]
});
// Can't use makeResetStyles here because Label is a component that may itself use makeResetStyles.
const useLabelStyles = /*#__PURE__*/ (0, _react["__styles"])({
    base: {
        qb2dma: "f7nlbp4",
        sj55zd: "f1ym3bx4",
        Bceei9c: "fpo1scq",
        z8tnut: "f1kwiid1",
        z189sj: [
            "f1vdfbxk",
            "f1f5gg8d"
        ],
        Byoj8tv: "f5b47ha",
        uwmqm3: [
            "f1f5gg8d",
            "f1vdfbxk"
        ]
    },
    before: {
        z189sj: [
            "f7x41pl",
            "fruq291"
        ]
    },
    after: {
        uwmqm3: [
            "fruq291",
            "f7x41pl"
        ]
    },
    medium: {
        B6of3ja: "fjzwpt6",
        jrapky: "fh6j2fo"
    },
    large: {
        B6of3ja: "f1xlvstr",
        jrapky: "f49ad5g"
    }
}, {
    d: [
        ".f7nlbp4{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;}",
        ".f1ym3bx4{color:inherit;}",
        ".fpo1scq{cursor:inherit;}",
        ".f1kwiid1{padding-top:var(--spacingVerticalS);}",
        ".f1vdfbxk{padding-right:var(--spacingHorizontalS);}",
        ".f1f5gg8d{padding-left:var(--spacingHorizontalS);}",
        ".f5b47ha{padding-bottom:var(--spacingVerticalS);}",
        ".f7x41pl{padding-right:var(--spacingHorizontalXS);}",
        ".fruq291{padding-left:var(--spacingHorizontalXS);}",
        ".fjzwpt6{margin-top:calc((16px - var(--lineHeightBase300)) / 2);}",
        ".fh6j2fo{margin-bottom:calc((16px - var(--lineHeightBase300)) / 2);}",
        ".f1xlvstr{margin-top:calc((20px - var(--lineHeightBase300)) / 2);}",
        ".f49ad5g{margin-bottom:calc((20px - var(--lineHeightBase300)) / 2);}"
    ]
});
const useCheckboxStyles_unstable = (state)=>{
    const { checked , disabled , labelPosition , shape , size  } = state;
    const rootBaseClassName = useRootBaseClassName();
    const rootStyles = useRootStyles();
    state.root.className = (0, _react.mergeClasses)(checkboxClassNames.root, rootBaseClassName, disabled ? rootStyles.disabled : checked === 'mixed' ? rootStyles.mixed : checked ? rootStyles.checked : rootStyles.unchecked, state.root.className);
    const inputBaseClassName = useInputBaseClassName();
    const inputStyles = useInputStyles();
    state.input.className = (0, _react.mergeClasses)(checkboxClassNames.input, inputBaseClassName, size === 'large' && inputStyles.large, inputStyles[labelPosition], state.input.className);
    const indicatorBaseClassName = useIndicatorBaseClassName();
    const indicatorStyles = useIndicatorStyles();
    if (state.indicator) {
        state.indicator.className = (0, _react.mergeClasses)(checkboxClassNames.indicator, indicatorBaseClassName, size === 'large' && indicatorStyles.large, shape === 'circular' && indicatorStyles.circular, state.indicator.className);
    }
    const labelStyles = useLabelStyles();
    if (state.label) {
        state.label.className = (0, _react.mergeClasses)(checkboxClassNames.label, labelStyles.base, labelStyles[size], labelStyles[labelPosition], state.label.className);
    }
    return state;
}; //# sourceMappingURL=useCheckboxStyles.js.map

//# sourceMappingURL=useCheckboxStyles.js.map