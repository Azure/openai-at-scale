{"version":3,"sources":["../../lib/utils/useSelection.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useControllableState } from '@fluentui/react-utilities';\nexport const useSelection = props => {\n  const {\n    defaultSelectedOptions,\n    multiselect,\n    onOptionSelect\n  } = props;\n  const [selectedOptions, setSelectedOptions] = useControllableState({\n    state: props.selectedOptions,\n    defaultState: defaultSelectedOptions,\n    initialState: []\n  });\n  const selectOption = useCallback((event, option) => {\n    // if the option is disabled, do nothing\n    if (option.disabled) {\n      return;\n    }\n    // for single-select, always return the selected option\n    let newSelection = [option.value];\n    // toggle selected state of the option for multiselect\n    if (multiselect) {\n      const selectedIndex = selectedOptions.findIndex(o => o === option.value);\n      if (selectedIndex > -1) {\n        // deselect option\n        newSelection = [...selectedOptions.slice(0, selectedIndex), ...selectedOptions.slice(selectedIndex + 1)];\n      } else {\n        // select option\n        newSelection = [...selectedOptions, option.value];\n      }\n    }\n    setSelectedOptions(newSelection);\n    onOptionSelect === null || onOptionSelect === void 0 ? void 0 : onOptionSelect(event, {\n      optionValue: option.value,\n      optionText: option.text,\n      selectedOptions: newSelection\n    });\n  }, [onOptionSelect, multiselect, selectedOptions, setSelectedOptions]);\n  const clearSelection = event => {\n    setSelectedOptions([]);\n    onOptionSelect === null || onOptionSelect === void 0 ? void 0 : onOptionSelect(event, {\n      optionValue: undefined,\n      optionText: undefined,\n      selectedOptions: []\n    });\n  };\n  return {\n    clearSelection,\n    selectOption,\n    selectedOptions\n  };\n};\n//# sourceMappingURL=useSelection.js.map"],"names":["useSelection","props","defaultSelectedOptions","multiselect","onOptionSelect","selectedOptions","setSelectedOptions","useControllableState","state","defaultState","initialState","selectOption","useCallback","event","option","disabled","newSelection","value","selectedIndex","findIndex","o","slice","optionValue","optionText","text","clearSelection","undefined"],"mappings":";;;;+BAEaA;;aAAAA;;uBAFe;gCACS;AAC9B,MAAMA,eAAeC,CAAAA,QAAS;IACnC,MAAM,EACJC,uBAAsB,EACtBC,YAAW,EACXC,eAAc,EACf,GAAGH;IACJ,MAAM,CAACI,iBAAiBC,mBAAmB,GAAGC,IAAAA,oCAAoB,EAAC;QACjEC,OAAOP,MAAMI,eAAe;QAC5BI,cAAcP;QACdQ,cAAc,EAAE;IAClB;IACA,MAAMC,eAAeC,IAAAA,kBAAW,EAAC,CAACC,OAAOC,SAAW;QAClD,wCAAwC;QACxC,IAAIA,OAAOC,QAAQ,EAAE;YACnB;QACF,CAAC;QACD,uDAAuD;QACvD,IAAIC,eAAe;YAACF,OAAOG,KAAK;SAAC;QACjC,sDAAsD;QACtD,IAAId,aAAa;YACf,MAAMe,gBAAgBb,gBAAgBc,SAAS,CAACC,CAAAA,IAAKA,MAAMN,OAAOG,KAAK;YACvE,IAAIC,gBAAgB,CAAC,GAAG;gBACtB,kBAAkB;gBAClBF,eAAe;uBAAIX,gBAAgBgB,KAAK,CAAC,GAAGH;uBAAmBb,gBAAgBgB,KAAK,CAACH,gBAAgB;iBAAG;YAC1G,OAAO;gBACL,gBAAgB;gBAChBF,eAAe;uBAAIX;oBAAiBS,OAAOG,KAAK;iBAAC;YACnD,CAAC;QACH,CAAC;QACDX,mBAAmBU;QACnBZ,mBAAmB,IAAI,IAAIA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeS,OAAO;YACpFS,aAAaR,OAAOG,KAAK;YACzBM,YAAYT,OAAOU,IAAI;YACvBnB,iBAAiBW;QACnB,EAAE;IACJ,GAAG;QAACZ;QAAgBD;QAAaE;QAAiBC;KAAmB;IACrE,MAAMmB,iBAAiBZ,CAAAA,QAAS;QAC9BP,mBAAmB,EAAE;QACrBF,mBAAmB,IAAI,IAAIA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeS,OAAO;YACpFS,aAAaI;YACbH,YAAYG;YACZrB,iBAAiB,EAAE;QACrB,EAAE;IACJ;IACA,OAAO;QACLoB;QACAd;QACAN;IACF;AACF,GACA,wCAAwC"}