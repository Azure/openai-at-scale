{"version":3,"sources":["../../../lib/components/DialogSurface/useDialogSurface.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useEventCallback, useMergedRefs, isResolvedShorthand } from '@fluentui/react-utilities';\nimport { useDialogContext_unstable } from '../../contexts';\nimport { isEscapeKeyDismiss } from '../../utils';\nimport { useModalAttributes } from '@fluentui/react-tabster';\n/**\n * Create the state required to render DialogSurface.\n *\n * The returned state can be modified with hooks such as useDialogSurfaceStyles_unstable,\n * before being passed to renderDialogSurface_unstable.\n *\n * @param props - props from this instance of DialogSurface\n * @param ref - reference to root HTMLElement of DialogSurface\n */\nexport const useDialogSurface_unstable = (props, ref) => {\n  const {\n    backdrop,\n    as\n  } = props;\n  const modalType = useDialogContext_unstable(ctx => ctx.modalType);\n  const inertTrapFocus = useDialogContext_unstable(ctx => ctx.inertTrapFocus);\n  const dialogRef = useDialogContext_unstable(ctx => ctx.dialogRef);\n  const open = useDialogContext_unstable(ctx => ctx.open);\n  const requestOpenChange = useDialogContext_unstable(ctx => ctx.requestOpenChange);\n  const dialogTitleID = useDialogContext_unstable(ctx => ctx.dialogTitleId);\n  const handledBackdropClick = useEventCallback(event => {\n    if (isResolvedShorthand(props.backdrop)) {\n      var _props_backdrop, _props_backdrop_onClick;\n      (_props_backdrop_onClick = (_props_backdrop = props.backdrop).onClick) === null || _props_backdrop_onClick === void 0 ? void 0 : _props_backdrop_onClick.call(_props_backdrop, event);\n    }\n    if (modalType === 'modal' && !event.isDefaultPrevented()) {\n      requestOpenChange({\n        event,\n        open: false,\n        type: 'backdropClick'\n      });\n    }\n  });\n  const handleKeyDown = useEventCallback(event => {\n    var _props_onKeyDown;\n    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);\n    if (isEscapeKeyDismiss(event, modalType)) {\n      requestOpenChange({\n        event,\n        open: false,\n        type: 'escapeKeyDown'\n      });\n      // stop propagation to avoid conflicting with other elements that listen for `Escape`\n      // e,g: nested Dialog, Popover, Menu and Tooltip\n      event.stopPropagation();\n    }\n  });\n  const {\n    modalAttributes\n  } = useModalAttributes({\n    trapFocus: modalType !== 'non-modal',\n    legacyTrapFocus: !inertTrapFocus\n  });\n  return {\n    components: {\n      backdrop: 'div',\n      root: 'div'\n    },\n    backdrop: resolveShorthand(backdrop, {\n      required: open && modalType !== 'non-modal',\n      defaultProps: {\n        'aria-hidden': 'true',\n        onClick: handledBackdropClick\n      }\n    }),\n    root: getNativeElementProps(as !== null && as !== void 0 ? as : 'div', {\n      tabIndex: -1,\n      'aria-modal': modalType !== 'non-modal',\n      role: modalType === 'alert' ? 'alertdialog' : 'dialog',\n      'aria-labelledby': props['aria-label'] ? undefined : dialogTitleID,\n      ...props,\n      ...modalAttributes,\n      onKeyDown: handleKeyDown,\n      ref: useMergedRefs(ref, dialogRef)\n    })\n  };\n};\n//# sourceMappingURL=useDialogSurface.js.map"],"names":["useDialogSurface_unstable","props","ref","backdrop","as","modalType","useDialogContext_unstable","ctx","inertTrapFocus","dialogRef","open","requestOpenChange","dialogTitleID","dialogTitleId","handledBackdropClick","useEventCallback","event","isResolvedShorthand","_props_backdrop","_props_backdrop_onClick","onClick","call","isDefaultPrevented","type","handleKeyDown","_props_onKeyDown","onKeyDown","isEscapeKeyDismiss","stopPropagation","modalAttributes","useModalAttributes","trapFocus","legacyTrapFocus","components","root","resolveShorthand","required","defaultProps","getNativeElementProps","tabIndex","role","undefined","useMergedRefs"],"mappings":";;;;+BAcaA;;aAAAA;;;6DAdU;gCACuF;0BACpE;uBACP;8BACA;AAU5B,MAAMA,4BAA4B,CAACC,OAAOC,MAAQ;IACvD,MAAM,EACJC,SAAQ,EACRC,GAAE,EACH,GAAGH;IACJ,MAAMI,YAAYC,IAAAA,mCAAyB,EAACC,CAAAA,MAAOA,IAAIF,SAAS;IAChE,MAAMG,iBAAiBF,IAAAA,mCAAyB,EAACC,CAAAA,MAAOA,IAAIC,cAAc;IAC1E,MAAMC,YAAYH,IAAAA,mCAAyB,EAACC,CAAAA,MAAOA,IAAIE,SAAS;IAChE,MAAMC,OAAOJ,IAAAA,mCAAyB,EAACC,CAAAA,MAAOA,IAAIG,IAAI;IACtD,MAAMC,oBAAoBL,IAAAA,mCAAyB,EAACC,CAAAA,MAAOA,IAAII,iBAAiB;IAChF,MAAMC,gBAAgBN,IAAAA,mCAAyB,EAACC,CAAAA,MAAOA,IAAIM,aAAa;IACxE,MAAMC,uBAAuBC,IAAAA,gCAAgB,EAACC,CAAAA,QAAS;QACrD,IAAIC,IAAAA,mCAAmB,EAAChB,MAAME,QAAQ,GAAG;YACvC,IAAIe,iBAAiBC;YACpBA,CAAAA,0BAA0B,AAACD,CAAAA,kBAAkBjB,MAAME,QAAQ,AAAD,EAAGiB,OAAO,AAAD,MAAO,IAAI,IAAID,4BAA4B,KAAK,IAAI,KAAK,IAAIA,wBAAwBE,IAAI,CAACH,iBAAiBF,MAAM;QACvL,CAAC;QACD,IAAIX,cAAc,WAAW,CAACW,MAAMM,kBAAkB,IAAI;YACxDX,kBAAkB;gBAChBK;gBACAN,MAAM,KAAK;gBACXa,MAAM;YACR;QACF,CAAC;IACH;IACA,MAAMC,gBAAgBT,IAAAA,gCAAgB,EAACC,CAAAA,QAAS;QAC9C,IAAIS;QACHA,CAAAA,mBAAmBxB,MAAMyB,SAAS,AAAD,MAAO,IAAI,IAAID,qBAAqB,KAAK,IAAI,KAAK,IAAIA,iBAAiBJ,IAAI,CAACpB,OAAOe,MAAM;QAC3H,IAAIW,IAAAA,yBAAkB,EAACX,OAAOX,YAAY;YACxCM,kBAAkB;gBAChBK;gBACAN,MAAM,KAAK;gBACXa,MAAM;YACR;YACA,qFAAqF;YACrF,gDAAgD;YAChDP,MAAMY,eAAe;QACvB,CAAC;IACH;IACA,MAAM,EACJC,gBAAe,EAChB,GAAGC,IAAAA,gCAAkB,EAAC;QACrBC,WAAW1B,cAAc;QACzB2B,iBAAiB,CAACxB;IACpB;IACA,OAAO;QACLyB,YAAY;YACV9B,UAAU;YACV+B,MAAM;QACR;QACA/B,UAAUgC,IAAAA,gCAAgB,EAAChC,UAAU;YACnCiC,UAAU1B,QAAQL,cAAc;YAChCgC,cAAc;gBACZ,eAAe;gBACfjB,SAASN;YACX;QACF;QACAoB,MAAMI,IAAAA,qCAAqB,EAAClC,OAAO,IAAI,IAAIA,OAAO,KAAK,IAAIA,KAAK,KAAK,EAAE;YACrEmC,UAAU,CAAC;YACX,cAAclC,cAAc;YAC5BmC,MAAMnC,cAAc,UAAU,gBAAgB,QAAQ;YACtD,mBAAmBJ,KAAK,CAAC,aAAa,GAAGwC,YAAY7B,aAAa;YAClE,GAAGX,KAAK;YACR,GAAG4B,eAAe;YAClBH,WAAWF;YACXtB,KAAKwC,IAAAA,6BAAa,EAACxC,KAAKO;QAC1B;IACF;AACF,GACA,4CAA4C"}