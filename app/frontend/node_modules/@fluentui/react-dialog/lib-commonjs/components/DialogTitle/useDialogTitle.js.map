{"version":3,"sources":["../../../lib/components/DialogTitle/useDialogTitle.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useDialogContext_unstable } from '../../contexts/dialogContext';\nimport { Dismiss24Regular } from '@fluentui/react-icons';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { DialogTrigger } from '../DialogTrigger/DialogTrigger';\nimport { useDialogTitleInternalStyles } from './useDialogTitleStyles';\n/**\n * Create the state required to render DialogTitle.\n *\n * The returned state can be modified with hooks such as useDialogTitleStyles_unstable,\n * before being passed to renderDialogTitle_unstable.\n *\n * @param props - props from this instance of DialogTitle\n * @param ref - reference to root HTMLElement of DialogTitle\n */\nexport const useDialogTitle_unstable = (props, ref) => {\n  const {\n    as,\n    action\n  } = props;\n  const modalType = useDialogContext_unstable(ctx => ctx.modalType);\n  const internalStyles = useDialogTitleInternalStyles();\n  return {\n    components: {\n      root: 'div',\n      action: 'div'\n    },\n    root: getNativeElementProps(as !== null && as !== void 0 ? as : 'div', {\n      ref,\n      id: useDialogContext_unstable(ctx => ctx.dialogTitleId),\n      ...props\n    }),\n    action: resolveShorthand(action, {\n      required: modalType === 'non-modal',\n      defaultProps: {\n        children: /*#__PURE__*/React.createElement(DialogTrigger, {\n          disableButtonEnhancement: true,\n          action: \"close\"\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: internalStyles.button,\n          // TODO: find a better way to add internal labels\n          \"aria-label\": \"close\"\n        }, /*#__PURE__*/React.createElement(Dismiss24Regular, null)))\n      }\n    })\n  };\n};\n//# sourceMappingURL=useDialogTitle.js.map"],"names":["useDialogTitle_unstable","props","ref","as","action","modalType","useDialogContext_unstable","ctx","internalStyles","useDialogTitleInternalStyles","components","root","getNativeElementProps","id","dialogTitleId","resolveShorthand","required","defaultProps","children","React","createElement","DialogTrigger","disableButtonEnhancement","type","className","button","Dismiss24Regular"],"mappings":";;;;+BAgBaA;;aAAAA;;;6DAhBU;gCACe;+BACI;4BACT;+BAEH;sCACe;AAUtC,MAAMA,0BAA0B,CAACC,OAAOC,MAAQ;IACrD,MAAM,EACJC,GAAE,EACFC,OAAM,EACP,GAAGH;IACJ,MAAMI,YAAYC,IAAAA,wCAAyB,EAACC,CAAAA,MAAOA,IAAIF,SAAS;IAChE,MAAMG,iBAAiBC,IAAAA,kDAA4B;IACnD,OAAO;QACLC,YAAY;YACVC,MAAM;YACNP,QAAQ;QACV;QACAO,MAAMC,IAAAA,qCAAqB,EAACT,OAAO,IAAI,IAAIA,OAAO,KAAK,IAAIA,KAAK,KAAK,EAAE;YACrED;YACAW,IAAIP,IAAAA,wCAAyB,EAACC,CAAAA,MAAOA,IAAIO,aAAa;YACtD,GAAGb,KAAK;QACV;QACAG,QAAQW,IAAAA,gCAAgB,EAACX,QAAQ;YAC/BY,UAAUX,cAAc;YACxBY,cAAc;gBACZC,UAAU,WAAW,GAAEC,OAAMC,aAAa,CAACC,4BAAa,EAAE;oBACxDC,0BAA0B,IAAI;oBAC9BlB,QAAQ;gBACV,GAAG,WAAW,GAAEe,OAAMC,aAAa,CAAC,UAAU;oBAC5CG,MAAM;oBACNC,WAAWhB,eAAeiB,MAAM;oBAChC,iDAAiD;oBACjD,cAAc;gBAChB,GAAG,WAAW,GAAEN,OAAMC,aAAa,CAACM,4BAAgB,EAAE,IAAI;YAC5D;QACF;IACF;AACF,GACA,0CAA0C"}