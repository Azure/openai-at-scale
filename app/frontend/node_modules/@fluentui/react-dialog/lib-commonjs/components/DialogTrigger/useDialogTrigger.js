"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useDialogTrigger_unstable", {
    enumerable: true,
    get: ()=>useDialogTrigger_unstable
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _reactTabster = require("@fluentui/react-tabster");
const _reactUtilities = require("@fluentui/react-utilities");
const _contexts = require("../../contexts");
const _reactAria = require("@fluentui/react-aria");
const useDialogTrigger_unstable = (props)=>{
    const isInsideSurfaceDialog = (0, _contexts.useDialogSurfaceContext_unstable)();
    const { children , disableButtonEnhancement =false , action =isInsideSurfaceDialog ? 'close' : 'open'  } = props;
    const child = (0, _reactUtilities.getTriggerChild)(children);
    const requestOpenChange = (0, _contexts.useDialogContext_unstable)((ctx)=>ctx.requestOpenChange);
    const open = (0, _contexts.useDialogContext_unstable)((ctx)=>ctx.open);
    const { triggerAttributes  } = (0, _reactTabster.useModalAttributes)();
    const handleClick = (0, _reactUtilities.useEventCallback)((event)=>{
        var _child_props, _child_props_onClick;
        (_child_props_onClick = (_child_props = child === null || child === void 0 ? void 0 : child.props).onClick) === null || _child_props_onClick === void 0 ? void 0 : _child_props_onClick.call(_child_props, event);
        if (!event.isDefaultPrevented()) {
            requestOpenChange({
                event,
                type: 'triggerClick',
                open: action === 'open'
            });
        }
    });
    const triggerChildProps = {
        ...child === null || child === void 0 ? void 0 : child.props,
        'aria-expanded': open,
        ref: child === null || child === void 0 ? void 0 : child.ref,
        onClick: handleClick,
        ...triggerAttributes
    };
    const ariaButtonTriggerChildProps = (0, _reactAria.useARIAButtonProps)((child === null || child === void 0 ? void 0 : child.type) === 'button' || (child === null || child === void 0 ? void 0 : child.type) === 'a' ? child.type : 'div', {
        ...triggerChildProps,
        type: 'button'
    });
    return {
        children: (0, _reactUtilities.applyTriggerPropsToChildren)(children, disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)
    };
}; //# sourceMappingURL=useDialogTrigger.js.map

//# sourceMappingURL=useDialogTrigger.js.map