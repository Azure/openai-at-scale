"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useFocusFirstElement", {
    enumerable: true,
    get: ()=>useFocusFirstElement
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _reactTabster = require("@fluentui/react-tabster");
const _reactSharedContexts = require("@fluentui/react-shared-contexts");
function useFocusFirstElement(open, modalType) {
    const { findFirstFocusable  } = (0, _reactTabster.useFocusFinders)();
    const { targetDocument  } = (0, _reactSharedContexts.useFluent_unstable)();
    const dialogRef = _react.useRef(null);
    const triggerRef = _react.useRef();
    _react.useEffect(()=>{
        if (!open) {
            var _triggerRef_current;
            return (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();
        }
        triggerRef.current = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;
        const element = dialogRef.current && findFirstFocusable(dialogRef.current);
        if (element) {
            element.focus();
        } else {
            var _dialogRef_current;
            (_dialogRef_current = dialogRef.current) === null || _dialogRef_current === void 0 ? void 0 : _dialogRef_current.focus(); // https://github.com/microsoft/fluentui/issues/25150
            if (process.env.NODE_ENV !== 'production') {
                // eslint-disable-next-line no-console
                console.warn([
                    '@fluentui/react-dialog: a Dialog should have at least one focusable element inside DialogSurface.',
                    'Please add at least a close button either on `DialogTitle` action slot or inside `DialogActions`'
                ].join('\n'));
            }
        }
    }, [
        findFirstFocusable,
        open,
        modalType,
        targetDocument
    ]);
    return dialogRef;
} //# sourceMappingURL=useFocusFirstElement.js.map

//# sourceMappingURL=useFocusFirstElement.js.map