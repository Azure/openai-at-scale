{"version":3,"sources":["../../../lib/components/MenuSplitGroup/useMenuSplitGroup.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, getRTLSafeKey, useMergedRefs } from '@fluentui/react-utilities';\nimport { useFocusFinders } from '@fluentui/react-tabster';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { ArrowRight, ArrowLeft } from '@fluentui/keyboard-keys';\n/**\n * Create the state required to render MenuSplitGroup.\n *\n * The returned state can be modified with hooks such as useMenuSplitGroupStyles_unstable,\n * before being passed to renderMenuSplitGroup_unstable.\n *\n * @param props - props from this instance of MenuSplitGroup\n * @param ref - reference to root HTMLElement of MenuSplitGroup\n */\nexport const useMenuSplitGroup_unstable = (props, ref) => {\n  const innerRef = React.useRef();\n  const {\n    dir,\n    targetDocument\n  } = useFluent();\n  const nextArrowKey = getRTLSafeKey(ArrowRight, dir);\n  const prevArrowKey = getRTLSafeKey(ArrowLeft, dir);\n  const {\n    findNextFocusable,\n    findPrevFocusable\n  } = useFocusFinders();\n  const onKeyDown = React.useCallback(e => {\n    var _innerRef_current;\n    const activeElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (!((_innerRef_current = innerRef.current) === null || _innerRef_current === void 0 ? void 0 : _innerRef_current.contains(activeElement))) {\n      return;\n    }\n    if (e.key === nextArrowKey) {\n      const next = findNextFocusable(activeElement, {\n        container: innerRef.current\n      });\n      next === null || next === void 0 ? void 0 : next.focus();\n    }\n    if (e.key === prevArrowKey) {\n      const prev = findPrevFocusable(activeElement, {\n        container: innerRef.current\n      });\n      prev === null || prev === void 0 ? void 0 : prev.focus();\n    }\n  }, [findNextFocusable, findPrevFocusable, targetDocument, nextArrowKey, prevArrowKey]);\n  return {\n    components: {\n      root: 'div'\n    },\n    root: getNativeElementProps('div', {\n      role: 'group',\n      ref: useMergedRefs(ref, innerRef),\n      onKeyDown,\n      ...props\n    })\n  };\n};\n//# sourceMappingURL=useMenuSplitGroup.js.map"],"names":["useMenuSplitGroup_unstable","props","ref","innerRef","React","useRef","dir","targetDocument","useFluent","nextArrowKey","getRTLSafeKey","ArrowRight","prevArrowKey","ArrowLeft","findNextFocusable","findPrevFocusable","useFocusFinders","onKeyDown","useCallback","e","_innerRef_current","activeElement","current","contains","key","next","container","focus","prev","components","root","getNativeElementProps","role","useMergedRefs"],"mappings":";;;;+BAcaA;;aAAAA;;;6DAdU;gCAC6C;8BACpC;qCACgB;8BACV;AAU/B,MAAMA,6BAA6B,CAACC,OAAOC,MAAQ;IACxD,MAAMC,WAAWC,OAAMC,MAAM;IAC7B,MAAM,EACJC,IAAG,EACHC,eAAc,EACf,GAAGC,IAAAA,uCAAS;IACb,MAAMC,eAAeC,IAAAA,6BAAa,EAACC,wBAAU,EAAEL;IAC/C,MAAMM,eAAeF,IAAAA,6BAAa,EAACG,uBAAS,EAAEP;IAC9C,MAAM,EACJQ,kBAAiB,EACjBC,kBAAiB,EAClB,GAAGC,IAAAA,6BAAe;IACnB,MAAMC,YAAYb,OAAMc,WAAW,CAACC,CAAAA,IAAK;QACvC,IAAIC;QACJ,MAAMC,gBAAgBd,mBAAmB,IAAI,IAAIA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAec,aAAa;QAClH,IAAI,CAACA,eAAe;YAClB;QACF,CAAC;QACD,IAAI,CAAE,CAAA,AAACD,CAAAA,oBAAoBjB,SAASmB,OAAO,AAAD,MAAO,IAAI,IAAIF,sBAAsB,KAAK,IAAI,KAAK,IAAIA,kBAAkBG,QAAQ,CAACF,cAAc,AAAD,GAAI;YAC3I;QACF,CAAC;QACD,IAAIF,EAAEK,GAAG,KAAKf,cAAc;YAC1B,MAAMgB,OAAOX,kBAAkBO,eAAe;gBAC5CK,WAAWvB,SAASmB,OAAO;YAC7B;YACAG,SAAS,IAAI,IAAIA,SAAS,KAAK,IAAI,KAAK,IAAIA,KAAKE,KAAK,EAAE;QAC1D,CAAC;QACD,IAAIR,EAAEK,GAAG,KAAKZ,cAAc;YAC1B,MAAMgB,OAAOb,kBAAkBM,eAAe;gBAC5CK,WAAWvB,SAASmB,OAAO;YAC7B;YACAM,SAAS,IAAI,IAAIA,SAAS,KAAK,IAAI,KAAK,IAAIA,KAAKD,KAAK,EAAE;QAC1D,CAAC;IACH,GAAG;QAACb;QAAmBC;QAAmBR;QAAgBE;QAAcG;KAAa;IACrF,OAAO;QACLiB,YAAY;YACVC,MAAM;QACR;QACAA,MAAMC,IAAAA,qCAAqB,EAAC,OAAO;YACjCC,MAAM;YACN9B,KAAK+B,IAAAA,6BAAa,EAAC/B,KAAKC;YACxBc;YACA,GAAGhB,KAAK;QACV;IACF;AACF,GACA,6CAA6C"}