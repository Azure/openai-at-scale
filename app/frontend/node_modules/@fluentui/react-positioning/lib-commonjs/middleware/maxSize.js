"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "maxSize", {
    enumerable: true,
    get: ()=>maxSize
});
const _dom = require("@floating-ui/dom");
const _getBoundary = require("../utils/getBoundary");
function maxSize(autoSize, options) {
    const { container , overflowBoundary  } = options;
    return (0, _dom.size)({
        ...overflowBoundary && {
            altBoundary: true,
            boundary: (0, _getBoundary.getBoundary)(container, overflowBoundary)
        },
        apply ({ availableHeight , availableWidth , elements , rects  }) {
            const applyMaxWidth = autoSize === 'always' || autoSize === 'width-always' || rects.floating.width > availableWidth && (autoSize === true || autoSize === 'width');
            const applyMaxHeight = autoSize === 'always' || autoSize === 'height-always' || rects.floating.height > availableHeight && (autoSize === true || autoSize === 'height');
            if (applyMaxHeight) {
                Object.assign(elements.floating.style, {
                    maxHeight: `${availableHeight}px`,
                    boxSizing: 'border-box',
                    overflowY: 'auto'
                });
            }
            if (applyMaxWidth) {
                Object.assign(elements.floating.style, {
                    maxWidth: `${availableWidth}px`,
                    boxSizing: 'border-box',
                    overflowX: 'auto'
                });
            }
        }
    });
} //# sourceMappingURL=maxSize.js.map

//# sourceMappingURL=maxSize.js.map