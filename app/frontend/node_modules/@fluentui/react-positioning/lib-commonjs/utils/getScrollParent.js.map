{"version":3,"sources":["../../lib/utils/getScrollParent.js"],"sourcesContent":["/**\n * Returns the parent node or the host of the node argument.\n * @param node - DOM node.\n * @returns - parent DOM node.\n */export const getParentNode = node => {\n  if (node.nodeName === 'HTML') {\n    return node;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return node.parentNode || node.host;\n};\n/**\n * Returns CSS styles of the given node.\n * @param node - DOM node.\n * @returns - CSS styles.\n */\nconst getStyleComputedProperty = node => {\n  var _node_ownerDocument;\n  if (node.nodeType !== 1) {\n    return {};\n  }\n  const window = (_node_ownerDocument = node.ownerDocument) === null || _node_ownerDocument === void 0 ? void 0 : _node_ownerDocument.defaultView;\n  return window.getComputedStyle(node, null);\n};\n/**\n * Returns the first scrollable parent of the given element.\n * @param node - DOM node.\n * @returns - the first scrollable parent.\n */\nexport const getScrollParent = node => {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  const parentNode = node && getParentNode(node);\n  // eslint-disable-next-line\n  if (!parentNode) return document.body;\n  switch (parentNode.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return parentNode.ownerDocument.body;\n    case '#document':\n      return parentNode.body;\n  }\n  // If any of the overflow props is defined for the node then we return it as the parent\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getStyleComputedProperty(parentNode);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return parentNode;\n  }\n  return getScrollParent(parentNode);\n};\nexport const hasScrollParent = node => {\n  var _scrollParentElement_ownerDocument;\n  const scrollParentElement = getScrollParent(node);\n  return scrollParentElement ? scrollParentElement !== ((_scrollParentElement_ownerDocument = scrollParentElement.ownerDocument) === null || _scrollParentElement_ownerDocument === void 0 ? void 0 : _scrollParentElement_ownerDocument.body) : false;\n};\n//# sourceMappingURL=getScrollParent.js.map"],"names":["getParentNode","getScrollParent","hasScrollParent","node","nodeName","parentNode","host","getStyleComputedProperty","_node_ownerDocument","nodeType","window","ownerDocument","defaultView","getComputedStyle","document","body","overflow","overflowX","overflowY","test","_scrollParentElement_ownerDocument","scrollParentElement"],"mappings":"AAAA;;;;CAIC;;;;;;;;;;;IAAeA,aAAa,MAAbA;IAyBHC,eAAe,MAAfA;IAuBAC,eAAe,MAAfA;;AAhDH,MAAMF,gBAAgBG,CAAAA,OAAQ;IACtC,IAAIA,KAAKC,QAAQ,KAAK,QAAQ;QAC5B,OAAOD;IACT,CAAC;IACD,8DAA8D;IAC9D,OAAOA,KAAKE,UAAU,IAAIF,KAAKG,IAAI;AACrC;AACA;;;;CAIC,GACD,MAAMC,2BAA2BJ,CAAAA,OAAQ;IACvC,IAAIK;IACJ,IAAIL,KAAKM,QAAQ,KAAK,GAAG;QACvB,OAAO,CAAC;IACV,CAAC;IACD,MAAMC,SAAS,AAACF,CAAAA,sBAAsBL,KAAKQ,aAAa,AAAD,MAAO,IAAI,IAAIH,wBAAwB,KAAK,IAAI,KAAK,IAAIA,oBAAoBI,WAAW;IAC/I,OAAOF,OAAOG,gBAAgB,CAACV,MAAM,IAAI;AAC3C;AAMO,MAAMF,kBAAkBE,CAAAA,OAAQ;IACrC,iFAAiF;IACjF,MAAME,aAAaF,QAAQH,cAAcG;IACzC,2BAA2B;IAC3B,IAAI,CAACE,YAAY,OAAOS,SAASC,IAAI;IACrC,OAAQV,WAAWD,QAAQ;QACzB,KAAK;QACL,KAAK;YACH,OAAOC,WAAWM,aAAa,CAACI,IAAI;QACtC,KAAK;YACH,OAAOV,WAAWU,IAAI;IAC1B;IACA,uFAAuF;IACvF,MAAM,EACJC,SAAQ,EACRC,UAAS,EACTC,UAAS,EACV,GAAGX,yBAAyBF;IAC7B,IAAI,wBAAwBc,IAAI,CAACH,WAAWE,YAAYD,YAAY;QAClE,OAAOZ;IACT,CAAC;IACD,OAAOJ,gBAAgBI;AACzB;AACO,MAAMH,kBAAkBC,CAAAA,OAAQ;IACrC,IAAIiB;IACJ,MAAMC,sBAAsBpB,gBAAgBE;IAC5C,OAAOkB,sBAAsBA,wBAAyB,CAAA,AAACD,CAAAA,qCAAqCC,oBAAoBV,aAAa,AAAD,MAAO,IAAI,IAAIS,uCAAuC,KAAK,IAAI,KAAK,IAAIA,mCAAmCL,IAAI,AAAD,IAAK,KAAK;AACtP,GACA,2CAA2C"}