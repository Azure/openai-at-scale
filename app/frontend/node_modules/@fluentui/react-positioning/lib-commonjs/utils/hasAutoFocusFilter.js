//
// Dev utils to detect if nodes have "autoFocus" props.
//
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "hasAutofocusFilter", {
    enumerable: true,
    get: ()=>hasAutofocusFilter
});
const _getReactFiberFromNode = require("./getReactFiberFromNode");
/**
 * Detects if a passed HTML node has "autoFocus" prop on a React's fiber. Is needed as React handles autofocus behavior
 * in React DOM and will not pass "autoFocus" to an actual HTML.
 *
 * @param node
 */ function hasAutofocusProp(node) {
    // https://github.com/facebook/react/blob/848bb2426e44606e0a55dfe44c7b3ece33772485/packages/react-dom/src/client/ReactDOMHostConfig.js#L157-L166
    const isAutoFocusableElement = node.nodeName === 'BUTTON' || node.nodeName === 'INPUT' || node.nodeName === 'SELECT' || node.nodeName === 'TEXTAREA';
    if (isAutoFocusableElement) {
        var _getReactFiberFromNode1;
        return !!((_getReactFiberFromNode1 = (0, _getReactFiberFromNode.getReactFiberFromNode)(node)) === null || _getReactFiberFromNode1 === void 0 ? void 0 : _getReactFiberFromNode1.pendingProps.autoFocus);
    }
    return false;
}
function hasAutofocusFilter(node) {
    return hasAutofocusProp(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
} //# sourceMappingURL=hasAutoFocusFilter.js.map

//# sourceMappingURL=hasAutoFocusFilter.js.map