"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useFluentProvider_unstable", {
    enumerable: true,
    get: ()=>useFluentProvider_unstable
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _reactTabster = require("@fluentui/react-tabster");
const _reactSharedContexts = require("@fluentui/react-shared-contexts");
const _reactUtilities = require("@fluentui/react-utilities");
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _useFluentProviderThemeStyleTag = require("./useFluentProviderThemeStyleTag");
const _react1 = require("@griffel/react");
const useFluentProvider_unstable = (props, ref)=>{
    const parentContext = (0, _reactSharedContexts.useFluent_unstable)();
    const parentTheme = useTheme();
    const parentOverrides = (0, _reactSharedContexts.useOverrides_unstable)();
    const parentCustomStyleHooks = (0, _reactSharedContexts.useCustomStyleHooks_unstable)();
    /**
  * TODO: add merge functions to "dir" merge,
  * nesting providers with the same "dir" should not add additional attributes to DOM
  * see https://github.com/microsoft/fluentui/blob/0dc74a19f3aa5a058224c20505016fbdb84db172/packages/fluentui/react-northstar/src/utils/mergeProviderContexts.ts#L89-L93
  */ const { applyStylesToPortals =true , // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable , dir =parentContext.dir , targetDocument =parentContext.targetDocument , theme , overrides_unstable: overrides = {}  } = props;
    const mergedTheme = shallowMerge(parentTheme, theme);
    const mergedOverrides = shallowMerge(parentOverrides, overrides);
    // parentCustomStyleHooks will not be a partial
    const mergedCustomStyleHooks = shallowMerge(parentCustomStyleHooks, customStyleHooks_unstable);
    _react.useEffect(()=>{
        if (process.env.NODE_ENV !== 'production' && mergedTheme === undefined) {
            // eslint-disable-next-line no-console
            console.warn(`
      FluentProvider: your "theme" is not defined !
      =============================================
      Make sure your root FluentProvider has set a theme or you're setting the theme in your child FluentProvider.
      `);
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    const renderer = (0, _react1.useRenderer_unstable)();
    var _renderer_styleElementAttributes;
    const { styleTagId , rule  } = (0, _useFluentProviderThemeStyleTag.useFluentProviderThemeStyleTag)({
        theme: mergedTheme,
        targetDocument,
        rendererAttributes: (_renderer_styleElementAttributes = renderer.styleElementAttributes) !== null && _renderer_styleElementAttributes !== void 0 ? _renderer_styleElementAttributes : {}
    });
    return {
        applyStylesToPortals,
        // eslint-disable-next-line @typescript-eslint/naming-convention
        customStyleHooks_unstable: mergedCustomStyleHooks,
        dir,
        targetDocument,
        theme: mergedTheme,
        // eslint-disable-next-line @typescript-eslint/naming-convention
        overrides_unstable: mergedOverrides,
        themeClassName: styleTagId,
        components: {
            root: 'div'
        },
        root: (0, _reactUtilities.getNativeElementProps)('div', {
            ...props,
            dir,
            ref: (0, _reactUtilities.useMergedRefs)(ref, (0, _reactTabster.useFocusVisible)({
                targetDocument
            }))
        }),
        serverStyleProps: {
            cssRule: rule,
            attributes: {
                ...renderer.styleElementAttributes,
                id: styleTagId
            }
        }
    };
};
function shallowMerge(a, b) {
    // Merge impacts perf: we should like to avoid it if it's possible
    if (a && b) {
        return {
            ...a,
            ...b
        };
    }
    if (a) {
        return a;
    }
    return b;
}
function useTheme() {
    return _react.useContext(_reactSharedContexts.ThemeContext_unstable);
} //# sourceMappingURL=useFluentProvider.js.map

//# sourceMappingURL=useFluentProvider.js.map