"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useFluentProviderContextValues_unstable", {
    enumerable: true,
    get: ()=>useFluentProviderContextValues_unstable
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
function useFluentProviderContextValues_unstable(state) {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    const { applyStylesToPortals , // eslint-disable-next-line @typescript-eslint/naming-convention
    customStyleHooks_unstable , dir , root , targetDocument , theme , themeClassName , // eslint-disable-next-line @typescript-eslint/naming-convention
    overrides_unstable  } = state;
    const provider = _react.useMemo(()=>({
            dir,
            targetDocument
        }), [
        dir,
        targetDocument
    ]);
    // "Tooltip" component mutates an object in this context, instance should be stable
    const [tooltip] = _react.useState(()=>({}));
    return {
        // eslint-disable-next-line @typescript-eslint/naming-convention
        customStyleHooks_unstable,
        // eslint-disable-next-line @typescript-eslint/naming-convention
        overrides_unstable,
        provider,
        textDirection: dir,
        tooltip,
        theme,
        themeClassName: applyStylesToPortals ? root.className : themeClassName
    };
} //# sourceMappingURL=useFluentProviderContextValues.js.map

//# sourceMappingURL=useFluentProviderContextValues.js.map