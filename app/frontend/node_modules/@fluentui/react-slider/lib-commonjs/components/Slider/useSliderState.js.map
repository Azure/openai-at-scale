{"version":3,"sources":["../../../lib/components/Slider/useSliderState.js"],"sourcesContent":["import * as React from 'react';\nimport { clamp, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { sliderCSSVars } from './useSliderStyles';\nconst {\n  sliderStepsPercentVar,\n  sliderProgressVar,\n  sliderDirectionVar\n} = sliderCSSVars;\nconst getPercent = (value, min, max) => {\n  return max === min ? 0 : (value - min) / (max - min) * 100;\n};\nexport const useSliderState_unstable = (state, props) => {\n  const {\n    defaultValue = 0,\n    min = 0,\n    max = 100,\n    step,\n    value\n  } = props;\n  const {\n    dir\n  } = useFluent();\n  const [currentValue, setCurrentValue] = useControllableState({\n    state: value !== undefined ? clamp(value, min, max) : undefined,\n    defaultState: clamp(defaultValue, min, max),\n    initialState: 0\n  });\n  const valuePercent = getPercent(currentValue, min, max);\n  const inputOnChange = state.input.onChange;\n  const propsOnChange = props.onChange;\n  const onChange = useEventCallback(ev => {\n    const newValue = Number(ev.target.value);\n    setCurrentValue(clamp(newValue, min, max));\n    if (inputOnChange && inputOnChange !== propsOnChange) {\n      inputOnChange(ev);\n    } else if (propsOnChange) {\n      propsOnChange(ev, {\n        value: newValue\n      });\n    }\n  });\n  const rootVariables = {\n    [sliderDirectionVar]: state.vertical ? '0deg' : dir === 'ltr' ? '90deg' : '270deg',\n    [sliderStepsPercentVar]: step && step > 0 ? `${step * 100 / (max - min)}%` : '',\n    [sliderProgressVar]: `${valuePercent}%`\n  };\n  // Root props\n  state.root.style = {\n    ...rootVariables,\n    ...state.root.style\n  };\n  // Input Props\n  state.input.value = currentValue;\n  state.input.onChange = onChange;\n  return state;\n};\n//# sourceMappingURL=useSliderState.js.map"],"names":["useSliderState_unstable","sliderStepsPercentVar","sliderProgressVar","sliderDirectionVar","sliderCSSVars","getPercent","value","min","max","state","props","defaultValue","step","dir","useFluent","currentValue","setCurrentValue","useControllableState","undefined","clamp","defaultState","initialState","valuePercent","inputOnChange","input","onChange","propsOnChange","useEventCallback","ev","newValue","Number","target","rootVariables","vertical","root","style"],"mappings":";;;;+BAYaA;;aAAAA;;;6DAZU;gCACuC;qCACd;iCAClB;AAC9B,MAAM,EACJC,sBAAqB,EACrBC,kBAAiB,EACjBC,mBAAkB,EACnB,GAAGC,8BAAa;AACjB,MAAMC,aAAa,CAACC,OAAOC,KAAKC,MAAQ;IACtC,OAAOA,QAAQD,MAAM,IAAI,AAACD,CAAAA,QAAQC,GAAE,IAAMC,CAAAA,MAAMD,GAAE,IAAK,GAAG;AAC5D;AACO,MAAMP,0BAA0B,CAACS,OAAOC,QAAU;IACvD,MAAM,EACJC,cAAe,EAAC,EAChBJ,KAAM,EAAC,EACPC,KAAM,IAAG,EACTI,KAAI,EACJN,MAAK,EACN,GAAGI;IACJ,MAAM,EACJG,IAAG,EACJ,GAAGC,IAAAA,uCAAS;IACb,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,IAAAA,oCAAoB,EAAC;QAC3DR,OAAOH,UAAUY,YAAYC,IAAAA,qBAAK,EAACb,OAAOC,KAAKC,OAAOU,SAAS;QAC/DE,cAAcD,IAAAA,qBAAK,EAACR,cAAcJ,KAAKC;QACvCa,cAAc;IAChB;IACA,MAAMC,eAAejB,WAAWU,cAAcR,KAAKC;IACnD,MAAMe,gBAAgBd,MAAMe,KAAK,CAACC,QAAQ;IAC1C,MAAMC,gBAAgBhB,MAAMe,QAAQ;IACpC,MAAMA,WAAWE,IAAAA,gCAAgB,EAACC,CAAAA,KAAM;QACtC,MAAMC,WAAWC,OAAOF,GAAGG,MAAM,CAACzB,KAAK;QACvCU,gBAAgBG,IAAAA,qBAAK,EAACU,UAAUtB,KAAKC;QACrC,IAAIe,iBAAiBA,kBAAkBG,eAAe;YACpDH,cAAcK;QAChB,OAAO,IAAIF,eAAe;YACxBA,cAAcE,IAAI;gBAChBtB,OAAOuB;YACT;QACF,CAAC;IACH;IACA,MAAMG,gBAAgB;QACpB,CAAC7B,mBAAmB,EAAEM,MAAMwB,QAAQ,GAAG,SAASpB,QAAQ,QAAQ,UAAU,QAAQ;QAClF,CAACZ,sBAAsB,EAAEW,QAAQA,OAAO,IAAI,CAAC,EAAEA,OAAO,MAAOJ,CAAAA,MAAMD,GAAE,EAAG,CAAC,CAAC,GAAG,EAAE;QAC/E,CAACL,kBAAkB,EAAE,CAAC,EAAEoB,aAAa,CAAC,CAAC;IACzC;IACA,aAAa;IACbb,MAAMyB,IAAI,CAACC,KAAK,GAAG;QACjB,GAAGH,aAAa;QAChB,GAAGvB,MAAMyB,IAAI,CAACC,KAAK;IACrB;IACA,cAAc;IACd1B,MAAMe,KAAK,CAAClB,KAAK,GAAGS;IACpBN,MAAMe,KAAK,CAACC,QAAQ,GAAGA;IACvB,OAAOhB;AACT,GACA,0CAA0C"}