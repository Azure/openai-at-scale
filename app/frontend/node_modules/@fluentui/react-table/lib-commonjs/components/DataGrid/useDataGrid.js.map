{"version":3,"sources":["../../../lib/components/DataGrid/useDataGrid.js"],"sourcesContent":["import * as React from 'react';\nimport { useArrowNavigationGroup, useFocusFinders } from '@fluentui/react-tabster';\nimport { useTable_unstable } from '../Table/useTable';\nimport { useTableFeatures, useTableSort, useTableSelection, useTableColumnSizing_unstable } from '../../hooks';\nimport { CELL_WIDTH } from '../TableSelectionCell';\nimport { useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { End, Home } from '@fluentui/keyboard-keys';\n/**\n * Create the state required to render DataGrid.\n *\n * The returned state can be modified with hooks such as useDataGridStyles_unstable,\n * before being passed to renderDataGrid_unstable.\n *\n * @param props - props from this instance of DataGrid\n * @param ref - reference to root HTMLElement of DataGrid\n */\nexport const useDataGrid_unstable = (props, ref) => {\n  const {\n    items,\n    columns,\n    focusMode = 'cell',\n    selectionMode,\n    onSortChange,\n    onSelectionChange,\n    defaultSortState,\n    sortState,\n    selectedItems,\n    defaultSelectedItems,\n    subtleSelection = false,\n    selectionAppearance = 'brand',\n    getRowId,\n    resizableColumns,\n    columnSizingOptions,\n    onColumnResize\n  } = props;\n  const navigable = focusMode !== 'none';\n  const keyboardNavAttr = useArrowNavigationGroup({\n    axis: 'grid'\n  });\n  const tableState = useTableFeatures({\n    items,\n    columns,\n    getRowId\n  }, [useTableSort({\n    defaultSortState,\n    sortState,\n    onSortChange\n  }), useTableSelection({\n    defaultSelectedItems,\n    selectedItems,\n    onSelectionChange,\n    selectionMode: selectionMode !== null && selectionMode !== void 0 ? selectionMode : 'multiselect'\n  }), useTableColumnSizing_unstable({\n    onColumnResize,\n    columnSizingOptions,\n    // The selection cell is not part of the columns, therefore its width needs to be subtracted\n    // from the container to make sure the columns don't overflow the table.\n    containerWidthOffset: selectionMode ? -CELL_WIDTH : 0\n  })]);\n  const innerRef = React.useRef(null);\n  const {\n    findFirstFocusable,\n    findLastFocusable\n  } = useFocusFinders();\n  const onKeyDown = useEventCallback(e => {\n    var _props_onKeyDown;\n    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);\n    if (!innerRef.current || !e.ctrlKey || e.defaultPrevented) {\n      return;\n    }\n    if (e.key === Home) {\n      const firstRow = innerRef.current.querySelector('[role=\"row\"]');\n      if (firstRow) {\n        var _findFirstFocusable;\n        (_findFirstFocusable = findFirstFocusable(firstRow)) === null || _findFirstFocusable === void 0 ? void 0 : _findFirstFocusable.focus();\n      }\n    }\n    if (e.key === End) {\n      const rows = innerRef.current.querySelectorAll('[role=\"row\"]');\n      if (rows.length) {\n        var _findLastFocusable;\n        const lastRow = rows.item(rows.length - 1);\n        (_findLastFocusable = findLastFocusable(lastRow)) === null || _findLastFocusable === void 0 ? void 0 : _findLastFocusable.focus();\n      }\n    }\n  });\n  const baseTableState = useTable_unstable({\n    role: 'grid',\n    as: 'div',\n    noNativeElements: true,\n    ...(navigable && keyboardNavAttr),\n    ...props,\n    onKeyDown\n  }, useMergedRefs(ref, tableState.tableRef, innerRef));\n  return {\n    ...baseTableState,\n    focusMode,\n    tableState,\n    selectableRows: !!selectionMode,\n    subtleSelection,\n    selectionAppearance,\n    resizableColumns\n  };\n};\n//# sourceMappingURL=useDataGrid.js.map"],"names":["useDataGrid_unstable","props","ref","items","columns","focusMode","selectionMode","onSortChange","onSelectionChange","defaultSortState","sortState","selectedItems","defaultSelectedItems","subtleSelection","selectionAppearance","getRowId","resizableColumns","columnSizingOptions","onColumnResize","navigable","keyboardNavAttr","useArrowNavigationGroup","axis","tableState","useTableFeatures","useTableSort","useTableSelection","useTableColumnSizing_unstable","containerWidthOffset","CELL_WIDTH","innerRef","React","useRef","findFirstFocusable","findLastFocusable","useFocusFinders","onKeyDown","useEventCallback","e","_props_onKeyDown","call","current","ctrlKey","defaultPrevented","key","Home","firstRow","querySelector","_findFirstFocusable","focus","End","rows","querySelectorAll","length","_findLastFocusable","lastRow","item","baseTableState","useTable_unstable","role","as","noNativeElements","useMergedRefs","tableRef","selectableRows"],"mappings":";;;;+BAgBaA;;aAAAA;;;6DAhBU;8BACkC;0BACvB;uBAC+D;oCACtE;gCACqB;8BACtB;AAUnB,MAAMA,uBAAuB,CAACC,OAAOC,MAAQ;IAClD,MAAM,EACJC,MAAK,EACLC,QAAO,EACPC,WAAY,OAAM,EAClBC,cAAa,EACbC,aAAY,EACZC,kBAAiB,EACjBC,iBAAgB,EAChBC,UAAS,EACTC,cAAa,EACbC,qBAAoB,EACpBC,iBAAkB,KAAK,CAAA,EACvBC,qBAAsB,QAAO,EAC7BC,SAAQ,EACRC,iBAAgB,EAChBC,oBAAmB,EACnBC,eAAc,EACf,GAAGjB;IACJ,MAAMkB,YAAYd,cAAc;IAChC,MAAMe,kBAAkBC,IAAAA,qCAAuB,EAAC;QAC9CC,MAAM;IACR;IACA,MAAMC,aAAaC,IAAAA,uBAAgB,EAAC;QAClCrB;QACAC;QACAW;IACF,GAAG;QAACU,IAAAA,mBAAY,EAAC;YACfhB;YACAC;YACAH;QACF;QAAImB,IAAAA,wBAAiB,EAAC;YACpBd;YACAD;YACAH;YACAF,eAAeA,kBAAkB,IAAI,IAAIA,kBAAkB,KAAK,IAAIA,gBAAgB,aAAa;QACnG;QAAIqB,IAAAA,oCAA6B,EAAC;YAChCT;YACAD;YACA,4FAA4F;YAC5F,wEAAwE;YACxEW,sBAAsBtB,gBAAgB,CAACuB,8BAAU,GAAG,CAAC;QACvD;KAAG;IACH,MAAMC,WAAWC,OAAMC,MAAM,CAAC,IAAI;IAClC,MAAM,EACJC,mBAAkB,EAClBC,kBAAiB,EAClB,GAAGC,IAAAA,6BAAe;IACnB,MAAMC,YAAYC,IAAAA,gCAAgB,EAACC,CAAAA,IAAK;QACtC,IAAIC;QACHA,CAAAA,mBAAmBtC,MAAMmC,SAAS,AAAD,MAAO,IAAI,IAAIG,qBAAqB,KAAK,IAAI,KAAK,IAAIA,iBAAiBC,IAAI,CAACvC,OAAOqC,EAAE;QACvH,IAAI,CAACR,SAASW,OAAO,IAAI,CAACH,EAAEI,OAAO,IAAIJ,EAAEK,gBAAgB,EAAE;YACzD;QACF,CAAC;QACD,IAAIL,EAAEM,GAAG,KAAKC,kBAAI,EAAE;YAClB,MAAMC,WAAWhB,SAASW,OAAO,CAACM,aAAa,CAAC;YAChD,IAAID,UAAU;gBACZ,IAAIE;gBACHA,CAAAA,sBAAsBf,mBAAmBa,SAAQ,MAAO,IAAI,IAAIE,wBAAwB,KAAK,IAAI,KAAK,IAAIA,oBAAoBC,KAAK,EAAE;YACxI,CAAC;QACH,CAAC;QACD,IAAIX,EAAEM,GAAG,KAAKM,iBAAG,EAAE;YACjB,MAAMC,OAAOrB,SAASW,OAAO,CAACW,gBAAgB,CAAC;YAC/C,IAAID,KAAKE,MAAM,EAAE;gBACf,IAAIC;gBACJ,MAAMC,UAAUJ,KAAKK,IAAI,CAACL,KAAKE,MAAM,GAAG;gBACvCC,CAAAA,qBAAqBpB,kBAAkBqB,QAAO,MAAO,IAAI,IAAID,uBAAuB,KAAK,IAAI,KAAK,IAAIA,mBAAmBL,KAAK,EAAE;YACnI,CAAC;QACH,CAAC;IACH;IACA,MAAMQ,iBAAiBC,IAAAA,2BAAiB,EAAC;QACvCC,MAAM;QACNC,IAAI;QACJC,kBAAkB,IAAI;QACtB,GAAI1C,aAAaC,eAAe;QAChC,GAAGnB,KAAK;QACRmC;IACF,GAAG0B,IAAAA,6BAAa,EAAC5D,KAAKqB,WAAWwC,QAAQ,EAAEjC;IAC3C,OAAO;QACL,GAAG2B,cAAc;QACjBpD;QACAkB;QACAyC,gBAAgB,CAAC,CAAC1D;QAClBO;QACAC;QACAE;IACF;AACF,GACA,uCAAuC"}