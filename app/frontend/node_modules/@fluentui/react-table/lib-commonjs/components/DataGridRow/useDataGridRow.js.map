{"version":3,"sources":["../../../lib/components/DataGridRow/useDataGridRow.js"],"sourcesContent":["import * as React from 'react';\nimport { isInteractiveHTMLElement, useEventCallback, resolveShorthand } from '@fluentui/react-utilities';\nimport { Space } from '@fluentui/keyboard-keys';\nimport { useTableRow_unstable } from '../TableRow/useTableRow';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { DataGridSelectionCell } from '../DataGridSelectionCell/DataGridSelectionCell';\nimport { useTableRowIdContext } from '../../contexts/rowIdContext';\nimport { useIsInTableHeader } from '../../contexts/tableHeaderContext';\n/**\n * Create the state required to render DataGridRow.\n *\n * The returned state can be modified with hooks such as useDataGridRowStyles_unstable,\n * before being passed to renderDataGridRow_unstable.\n *\n * @param props - props from this instance of DataGridRow\n * @param ref - reference to root HTMLElement of DataGridRow\n */\nexport const useDataGridRow_unstable = (props, ref) => {\n  const rowId = useTableRowIdContext();\n  const isHeader = useIsInTableHeader();\n  const columnDefs = useDataGridContext_unstable(ctx => ctx.columns);\n  const selectable = useDataGridContext_unstable(ctx => ctx.selectableRows);\n  const selected = useDataGridContext_unstable(ctx => ctx.selection.isRowSelected(rowId));\n  const tabbable = useDataGridContext_unstable(ctx => ctx.focusMode === 'row_unstable');\n  const appearance = useDataGridContext_unstable(ctx => {\n    if (!isHeader && selectable && ctx.selection.isRowSelected(rowId)) {\n      return ctx.selectionAppearance;\n    }\n    return 'none';\n  });\n  const toggleRow = useDataGridContext_unstable(ctx => ctx.selection.toggleRow);\n  const dataGridContextValue = useDataGridContext_unstable(ctx => ctx);\n  const onClick = useEventCallback(e => {\n    var _props_onClick;\n    if (selectable && !isHeader) {\n      toggleRow(e, rowId);\n    }\n    (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);\n  });\n  const onKeyDown = useEventCallback(e => {\n    var _props_onKeyDown;\n    if (selectable && !isHeader && e.key === Space && !isInteractiveHTMLElement(e.target)) {\n      // stop scrolling\n      e.preventDefault();\n      toggleRow(e, rowId);\n    }\n    (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);\n  });\n  const baseState = useTableRow_unstable({\n    appearance,\n    'aria-selected': selectable ? selected : undefined,\n    ...props,\n    onClick,\n    onKeyDown,\n    children: null,\n    as: 'div',\n    tabIndex: tabbable && !isHeader ? 0 : undefined\n  }, ref);\n  return {\n    ...baseState,\n    components: {\n      ...baseState.components,\n      selectionCell: DataGridSelectionCell\n    },\n    selectionCell: resolveShorthand(props.selectionCell, {\n      required: selectable\n    }),\n    renderCell: props.children,\n    columnDefs,\n    dataGridContextValue\n  };\n};\n//# sourceMappingURL=useDataGridRow.js.map"],"names":["useDataGridRow_unstable","props","ref","rowId","useTableRowIdContext","isHeader","useIsInTableHeader","columnDefs","useDataGridContext_unstable","ctx","columns","selectable","selectableRows","selected","selection","isRowSelected","tabbable","focusMode","appearance","selectionAppearance","toggleRow","dataGridContextValue","onClick","useEventCallback","e","_props_onClick","call","onKeyDown","_props_onKeyDown","key","Space","isInteractiveHTMLElement","target","preventDefault","baseState","useTableRow_unstable","undefined","children","as","tabIndex","components","selectionCell","DataGridSelectionCell","resolveShorthand","required","renderCell"],"mappings":";;;;+BAiBaA;;aAAAA;;;6DAjBU;gCACsD;8BACvD;6BACe;iCACO;uCACN;8BACD;oCACF;AAU5B,MAAMA,0BAA0B,CAACC,OAAOC,MAAQ;IACrD,MAAMC,QAAQC,IAAAA,kCAAoB;IAClC,MAAMC,WAAWC,IAAAA,sCAAkB;IACnC,MAAMC,aAAaC,IAAAA,4CAA2B,EAACC,CAAAA,MAAOA,IAAIC,OAAO;IACjE,MAAMC,aAAaH,IAAAA,4CAA2B,EAACC,CAAAA,MAAOA,IAAIG,cAAc;IACxE,MAAMC,WAAWL,IAAAA,4CAA2B,EAACC,CAAAA,MAAOA,IAAIK,SAAS,CAACC,aAAa,CAACZ;IAChF,MAAMa,WAAWR,IAAAA,4CAA2B,EAACC,CAAAA,MAAOA,IAAIQ,SAAS,KAAK;IACtE,MAAMC,aAAaV,IAAAA,4CAA2B,EAACC,CAAAA,MAAO;QACpD,IAAI,CAACJ,YAAYM,cAAcF,IAAIK,SAAS,CAACC,aAAa,CAACZ,QAAQ;YACjE,OAAOM,IAAIU,mBAAmB;QAChC,CAAC;QACD,OAAO;IACT;IACA,MAAMC,YAAYZ,IAAAA,4CAA2B,EAACC,CAAAA,MAAOA,IAAIK,SAAS,CAACM,SAAS;IAC5E,MAAMC,uBAAuBb,IAAAA,4CAA2B,EAACC,CAAAA,MAAOA;IAChE,MAAMa,UAAUC,IAAAA,gCAAgB,EAACC,CAAAA,IAAK;QACpC,IAAIC;QACJ,IAAId,cAAc,CAACN,UAAU;YAC3Be,UAAUI,GAAGrB;QACf,CAAC;QACAsB,CAAAA,iBAAiBxB,MAAMqB,OAAO,AAAD,MAAO,IAAI,IAAIG,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeC,IAAI,CAACzB,OAAOuB,EAAE;IACjH;IACA,MAAMG,YAAYJ,IAAAA,gCAAgB,EAACC,CAAAA,IAAK;QACtC,IAAII;QACJ,IAAIjB,cAAc,CAACN,YAAYmB,EAAEK,GAAG,KAAKC,mBAAK,IAAI,CAACC,IAAAA,wCAAwB,EAACP,EAAEQ,MAAM,GAAG;YACrF,iBAAiB;YACjBR,EAAES,cAAc;YAChBb,UAAUI,GAAGrB;QACf,CAAC;QACAyB,CAAAA,mBAAmB3B,MAAM0B,SAAS,AAAD,MAAO,IAAI,IAAIC,qBAAqB,KAAK,IAAI,KAAK,IAAIA,iBAAiBF,IAAI,CAACzB,OAAOuB,EAAE;IACzH;IACA,MAAMU,YAAYC,IAAAA,iCAAoB,EAAC;QACrCjB;QACA,iBAAiBP,aAAaE,WAAWuB,SAAS;QAClD,GAAGnC,KAAK;QACRqB;QACAK;QACAU,UAAU,IAAI;QACdC,IAAI;QACJC,UAAUvB,YAAY,CAACX,WAAW,IAAI+B,SAAS;IACjD,GAAGlC;IACH,OAAO;QACL,GAAGgC,SAAS;QACZM,YAAY;YACV,GAAGN,UAAUM,UAAU;YACvBC,eAAeC,4CAAqB;QACtC;QACAD,eAAeE,IAAAA,gCAAgB,EAAC1C,MAAMwC,aAAa,EAAE;YACnDG,UAAUjC;QACZ;QACAkC,YAAY5C,MAAMoC,QAAQ;QAC1B9B;QACAc;IACF;AACF,GACA,0CAA0C"}