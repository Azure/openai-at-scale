{"version":3,"sources":["../../../lib/components/TableSelectionCell/useTableSelectionCell.js"],"sourcesContent":["import * as React from 'react';\nimport { resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Checkbox } from '@fluentui/react-checkbox';\nimport { Radio } from '@fluentui/react-radio';\nimport { useTableCell_unstable } from '../TableCell/useTableCell';\nimport { useTableContext } from '../../contexts/tableContext';\n/**\n * Create the state required to render TableSelectionCell.\n *\n * The returned state can be modified with hooks such as useTableSelectionCellStyles_unstable,\n * before being passed to renderTableSelectionCell_unstable.\n *\n * @param props - props from this instance of TableSelectionCell\n * @param ref - reference to root HTMLElement of TableSelectionCell\n */\nexport const useTableSelectionCell_unstable = (props, ref) => {\n  const tableCellState = useTableCell_unstable(props, ref);\n  const {\n    noNativeElements\n  } = useTableContext();\n  const {\n    type = 'checkbox',\n    checked = false,\n    subtle = false,\n    hidden = false\n  } = props;\n  return {\n    ...tableCellState,\n    components: {\n      ...tableCellState.components,\n      checkboxIndicator: Checkbox,\n      radioIndicator: Radio\n    },\n    checkboxIndicator: resolveShorthand(props.checkboxIndicator, {\n      required: type === 'checkbox',\n      defaultProps: {\n        checked: props.checked\n      }\n    }),\n    radioIndicator: resolveShorthand(props.radioIndicator, {\n      required: type === 'radio',\n      defaultProps: {\n        checked: !!checked,\n        input: {\n          name: useId('table-selection-radio')\n        }\n      }\n    }),\n    type,\n    checked,\n    noNativeElements,\n    subtle,\n    hidden\n  };\n};\n//# sourceMappingURL=useTableSelectionCell.js.map"],"names":["useTableSelectionCell_unstable","props","ref","tableCellState","useTableCell_unstable","noNativeElements","useTableContext","type","checked","subtle","hidden","components","checkboxIndicator","Checkbox","radioIndicator","Radio","resolveShorthand","required","defaultProps","input","name","useId"],"mappings":";;;;+BAeaA;;aAAAA;;;6DAfU;gCACiB;+BACf;4BACH;8BACgB;8BACN;AAUzB,MAAMA,iCAAiC,CAACC,OAAOC,MAAQ;IAC5D,MAAMC,iBAAiBC,IAAAA,mCAAqB,EAACH,OAAOC;IACpD,MAAM,EACJG,iBAAgB,EACjB,GAAGC,IAAAA,6BAAe;IACnB,MAAM,EACJC,MAAO,WAAU,EACjBC,SAAU,KAAK,CAAA,EACfC,QAAS,KAAK,CAAA,EACdC,QAAS,KAAK,CAAA,EACf,GAAGT;IACJ,OAAO;QACL,GAAGE,cAAc;QACjBQ,YAAY;YACV,GAAGR,eAAeQ,UAAU;YAC5BC,mBAAmBC,uBAAQ;YAC3BC,gBAAgBC,iBAAK;QACvB;QACAH,mBAAmBI,IAAAA,gCAAgB,EAACf,MAAMW,iBAAiB,EAAE;YAC3DK,UAAUV,SAAS;YACnBW,cAAc;gBACZV,SAASP,MAAMO,OAAO;YACxB;QACF;QACAM,gBAAgBE,IAAAA,gCAAgB,EAACf,MAAMa,cAAc,EAAE;YACrDG,UAAUV,SAAS;YACnBW,cAAc;gBACZV,SAAS,CAAC,CAACA;gBACXW,OAAO;oBACLC,MAAMC,IAAAA,qBAAK,EAAC;gBACd;YACF;QACF;QACAd;QACAC;QACAH;QACAI;QACAC;IACF;AACF,GACA,iDAAiD"}