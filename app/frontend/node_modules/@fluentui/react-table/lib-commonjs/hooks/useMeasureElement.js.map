{"version":3,"sources":["../../lib/hooks/useMeasureElement.js"],"sourcesContent":["import { canUseDOM } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Provides a way of reporting element width.\n * Returns\n * `width` - current element width (0 by default),\n * `measureElementRef` - a ref function to be passed as `ref` to the element you want to measure\n */\nexport function useMeasureElement() {\n  const [width, setWidth] = React.useState(0);\n  const container = React.useRef(undefined);\n  const {\n    targetDocument\n  } = useFluent();\n  // the handler for resize observer\n  const handleResize = React.useCallback(() => {\n    var _container_current;\n    const containerWidth = (_container_current = container.current) === null || _container_current === void 0 ? void 0 : _container_current.getBoundingClientRect().width;\n    setWidth(containerWidth || 0);\n  }, []);\n  // Keep the reference of ResizeObserver in the state, as it should live through renders\n  const [resizeObserver] = React.useState(canUseDOM() ? new ResizeObserver(handleResize) : undefined);\n  const measureElementRef = React.useCallback(el => {\n    if (!targetDocument || !resizeObserver) {\n      return;\n    }\n    // cleanup previous container\n    if (container.current) {\n      resizeObserver.unobserve(container.current);\n      container.current.remove();\n    }\n    if (el) {\n      container.current = targetDocument.createElement('div');\n      el.insertAdjacentElement('beforebegin', container.current);\n      resizeObserver.observe(container.current);\n      handleResize();\n    }\n  }, [targetDocument, resizeObserver, handleResize]);\n  React.useEffect(() => {\n    return () => {\n      return resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();\n    };\n  }, [resizeObserver]);\n  return {\n    width,\n    measureElementRef\n  };\n}\n//# sourceMappingURL=useMeasureElement.js.map"],"names":["useMeasureElement","width","setWidth","React","useState","container","useRef","undefined","targetDocument","useFluent","handleResize","useCallback","_container_current","containerWidth","current","getBoundingClientRect","resizeObserver","canUseDOM","ResizeObserver","measureElementRef","el","unobserve","remove","createElement","insertAdjacentElement","observe","useEffect","disconnect"],"mappings":";;;;+BASgBA;;aAAAA;;;gCATU;6DACH;qCACyB;AAOzC,SAASA,oBAAoB;IAClC,MAAM,CAACC,OAAOC,SAAS,GAAGC,OAAMC,QAAQ,CAAC;IACzC,MAAMC,YAAYF,OAAMG,MAAM,CAACC;IAC/B,MAAM,EACJC,eAAc,EACf,GAAGC,IAAAA,uCAAS;IACb,kCAAkC;IAClC,MAAMC,eAAeP,OAAMQ,WAAW,CAAC,IAAM;QAC3C,IAAIC;QACJ,MAAMC,iBAAiB,AAACD,CAAAA,qBAAqBP,UAAUS,OAAO,AAAD,MAAO,IAAI,IAAIF,uBAAuB,KAAK,IAAI,KAAK,IAAIA,mBAAmBG,qBAAqB,GAAGd,KAAK;QACrKC,SAASW,kBAAkB;IAC7B,GAAG,EAAE;IACL,uFAAuF;IACvF,MAAM,CAACG,eAAe,GAAGb,OAAMC,QAAQ,CAACa,IAAAA,yBAAS,MAAK,IAAIC,eAAeR,gBAAgBH,SAAS;IAClG,MAAMY,oBAAoBhB,OAAMQ,WAAW,CAACS,CAAAA,KAAM;QAChD,IAAI,CAACZ,kBAAkB,CAACQ,gBAAgB;YACtC;QACF,CAAC;QACD,6BAA6B;QAC7B,IAAIX,UAAUS,OAAO,EAAE;YACrBE,eAAeK,SAAS,CAAChB,UAAUS,OAAO;YAC1CT,UAAUS,OAAO,CAACQ,MAAM;QAC1B,CAAC;QACD,IAAIF,IAAI;YACNf,UAAUS,OAAO,GAAGN,eAAee,aAAa,CAAC;YACjDH,GAAGI,qBAAqB,CAAC,eAAenB,UAAUS,OAAO;YACzDE,eAAeS,OAAO,CAACpB,UAAUS,OAAO;YACxCJ;QACF,CAAC;IACH,GAAG;QAACF;QAAgBQ;QAAgBN;KAAa;IACjDP,OAAMuB,SAAS,CAAC,IAAM;QACpB,OAAO,IAAM;YACX,OAAOV,mBAAmB,IAAI,IAAIA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeW,UAAU,EAAE;QACpG;IACF,GAAG;QAACX;KAAe;IACnB,OAAO;QACLf;QACAkB;IACF;AACF,EACA,6CAA6C"}