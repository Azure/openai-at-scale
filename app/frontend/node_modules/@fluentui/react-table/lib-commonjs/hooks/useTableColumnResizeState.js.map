{"version":3,"sources":["../../lib/hooks/useTableColumnResizeState.js"],"sourcesContent":["import { useEventCallback, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { columnDefinitionsToState, adjustColumnWidthsToFitContainer, getColumnById, setColumnProperty, getColumnWidth } from '../utils/columnResizeUtils';\nconst createReducer = () => (state, action) => {\n  switch (action.type) {\n    case 'CONTAINER_WIDTH_UPDATED':\n      return {\n        ...state,\n        containerWidth: action.containerWidth,\n        columnWidthState: adjustColumnWidthsToFitContainer(state.columnWidthState, action.containerWidth)\n      };\n    case 'COLUMNS_UPDATED':\n      const newS = columnDefinitionsToState(action.columns, state.columnWidthState, state.columnSizingOptions);\n      return {\n        ...state,\n        columns: action.columns,\n        columnWidthState: adjustColumnWidthsToFitContainer(newS, state.containerWidth)\n      };\n    case 'COLUMN_SIZING_OPTIONS_UPDATED':\n      const newState = columnDefinitionsToState(state.columns, state.columnWidthState, action.columnSizingOptions);\n      return {\n        ...state,\n        columnSizingOptions: action.columnSizingOptions,\n        columnWidthState: adjustColumnWidthsToFitContainer(newState, state.containerWidth)\n      };\n    case 'SET_COLUMN_WIDTH':\n      const {\n        columnId,\n        width\n      } = action;\n      const {\n        containerWidth\n      } = state;\n      const column = getColumnById(state.columnWidthState, columnId);\n      let newColumnWidthState = [...state.columnWidthState];\n      if (!column) {\n        return state;\n      }\n      // Adjust the column width and measure the new total width\n      newColumnWidthState = setColumnProperty(newColumnWidthState, columnId, 'width', width);\n      // Set this width as idealWidth, because its a deliberate change, not a recalculation because of container\n      newColumnWidthState = setColumnProperty(newColumnWidthState, columnId, 'idealWidth', width);\n      // Adjust the widths to the container size\n      newColumnWidthState = adjustColumnWidthsToFitContainer(newColumnWidthState, containerWidth);\n      return {\n        ...state,\n        columnWidthState: newColumnWidthState\n      };\n  }\n};\nexport function useTableColumnResizeState(columns, containerWidth, params = {}) {\n  const {\n    onColumnResize,\n    columnSizingOptions\n  } = params;\n  const reducer = React.useMemo(() => createReducer(), []);\n  const [state, dispatch] = React.useReducer(reducer, {\n    columns,\n    containerWidth: 0,\n    columnWidthState: columnDefinitionsToState(columns, undefined, columnSizingOptions),\n    columnSizingOptions\n  });\n  useIsomorphicLayoutEffect(() => {\n    dispatch({\n      type: 'CONTAINER_WIDTH_UPDATED',\n      containerWidth\n    });\n  }, [containerWidth]);\n  useIsomorphicLayoutEffect(() => {\n    dispatch({\n      type: 'COLUMNS_UPDATED',\n      columns\n    });\n  }, [columns]);\n  useIsomorphicLayoutEffect(() => {\n    dispatch({\n      type: 'COLUMN_SIZING_OPTIONS_UPDATED',\n      columnSizingOptions\n    });\n  }, [columnSizingOptions]);\n  const setColumnWidth = useEventCallback((event, data) => {\n    let {\n      width\n    } = data;\n    const {\n      columnId\n    } = data;\n    const col = getColumnById(state.columnWidthState, columnId);\n    if (!col) {\n      return;\n    }\n    width = Math.max(col.minWidth || 0, width);\n    if (onColumnResize) {\n      onColumnResize(event, {\n        columnId,\n        width\n      });\n    }\n    dispatch({\n      type: 'SET_COLUMN_WIDTH',\n      columnId,\n      width\n    });\n  });\n  return {\n    getColumnById: colId => getColumnById(state.columnWidthState, colId),\n    getColumns: () => state.columnWidthState,\n    getColumnWidth: colId => getColumnWidth(state.columnWidthState, colId),\n    setColumnWidth\n  };\n}\n//# sourceMappingURL=useTableColumnResizeState.js.map"],"names":["useTableColumnResizeState","createReducer","state","action","type","containerWidth","columnWidthState","adjustColumnWidthsToFitContainer","newS","columnDefinitionsToState","columns","columnSizingOptions","newState","columnId","width","column","getColumnById","newColumnWidthState","setColumnProperty","params","onColumnResize","reducer","React","useMemo","dispatch","useReducer","undefined","useIsomorphicLayoutEffect","setColumnWidth","useEventCallback","event","data","col","Math","max","minWidth","colId","getColumns","getColumnWidth"],"mappings":"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"}