{"version":3,"sources":["../../lib/hooks/useTableSelection.js"],"sourcesContent":["import * as React from 'react';\nimport { useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { createSelectionManager } from './selectionManager';\nconst noop = () => undefined;\nexport const defaultTableSelectionState = {\n  allRowsSelected: false,\n  clearRows: noop,\n  deselectRow: noop,\n  isRowSelected: () => false,\n  selectRow: noop,\n  selectedRows: /*#__PURE__*/new Set(),\n  someRowsSelected: false,\n  toggleAllRows: noop,\n  toggleRow: noop,\n  selectionMode: 'multiselect'\n};\nexport function useTableSelection(options) {\n  // False positive, these plugin hooks are intended to be run on every render\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return tableState => useTableSelectionState(tableState, options);\n}\nexport function useTableSelectionState(tableState, options) {\n  const {\n    items,\n    getRowId\n  } = tableState;\n  const {\n    selectionMode,\n    defaultSelectedItems,\n    selectedItems,\n    onSelectionChange\n  } = options;\n  const [selected, setSelected] = useControllableState({\n    initialState: new Set(),\n    defaultState: React.useMemo(() => defaultSelectedItems && createSetFromIterable(defaultSelectedItems), [defaultSelectedItems]),\n    state: React.useMemo(() => selectedItems && createSetFromIterable(selectedItems), [selectedItems])\n  });\n  const selectionManager = React.useMemo(() => {\n    return createSelectionManager(selectionMode, (e, newSelectedItems) => {\n      setSelected(() => {\n        onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(e, {\n          selectedItems: newSelectedItems\n        });\n        return newSelectedItems;\n      });\n    });\n  }, [onSelectionChange, selectionMode, setSelected]);\n  const toggleAllRows = useEventCallback(e => {\n    var _getRowId;\n    selectionManager.toggleAllItems(e, items.map((item, i) => {\n      return (_getRowId = getRowId === null || getRowId === void 0 ? void 0 : getRowId(item)) !== null && _getRowId !== void 0 ? _getRowId : i;\n    }), selected);\n  });\n  const toggleRow = useEventCallback((e, rowId) => selectionManager.toggleItem(e, rowId, selected));\n  const deselectRow = useEventCallback((e, rowId) => selectionManager.deselectItem(e, rowId, selected));\n  const selectRow = useEventCallback((e, rowId) => selectionManager.selectItem(e, rowId, selected));\n  const isRowSelected = rowId => selectionManager.isSelected(rowId, selected);\n  return {\n    ...tableState,\n    selection: {\n      selectionMode,\n      someRowsSelected: selected.size > 0,\n      allRowsSelected: selectionMode === 'single' ? selected.size > 0 : selected.size === items.length,\n      selectedRows: selected,\n      toggleRow,\n      toggleAllRows,\n      clearRows: selectionManager.clearItems,\n      deselectRow,\n      selectRow,\n      isRowSelected\n    }\n  };\n}\n/**\n * Creates a set from a given iterable, in case the iterable is a set itself, returns the given set instead.\n */\nfunction createSetFromIterable(iterable) {\n  return iterable instanceof Set ? iterable : new Set(iterable);\n}\n//# sourceMappingURL=useTableSelection.js.map"],"names":["defaultTableSelectionState","useTableSelection","useTableSelectionState","noop","undefined","allRowsSelected","clearRows","deselectRow","isRowSelected","selectRow","selectedRows","Set","someRowsSelected","toggleAllRows","toggleRow","selectionMode","options","tableState","items","getRowId","defaultSelectedItems","selectedItems","onSelectionChange","selected","setSelected","useControllableState","initialState","defaultState","React","useMemo","createSetFromIterable","state","selectionManager","createSelectionManager","e","newSelectedItems","useEventCallback","_getRowId","toggleAllItems","map","item","i","rowId","toggleItem","deselectItem","selectItem","isSelected","selection","size","length","clearItems","iterable"],"mappings":";;;;;;;;;;;IAIaA,0BAA0B,MAA1BA;IAYGC,iBAAiB,MAAjBA;IAKAC,sBAAsB,MAAtBA;;;6DArBO;gCACgC;kCAChB;AACvC,MAAMC,OAAO,IAAMC;AACZ,MAAMJ,6BAA6B;IACxCK,iBAAiB,KAAK;IACtBC,WAAWH;IACXI,aAAaJ;IACbK,eAAe,IAAM,KAAK;IAC1BC,WAAWN;IACXO,cAAc,WAAW,GAAE,IAAIC;IAC/BC,kBAAkB,KAAK;IACvBC,eAAeV;IACfW,WAAWX;IACXY,eAAe;AACjB;AACO,SAASd,kBAAkBe,OAAO,EAAE;IACzC,4EAA4E;IAC5E,sDAAsD;IACtD,OAAOC,CAAAA,aAAcf,uBAAuBe,YAAYD;AAC1D;AACO,SAASd,uBAAuBe,UAAU,EAAED,OAAO,EAAE;IAC1D,MAAM,EACJE,MAAK,EACLC,SAAQ,EACT,GAAGF;IACJ,MAAM,EACJF,cAAa,EACbK,qBAAoB,EACpBC,cAAa,EACbC,kBAAiB,EAClB,GAAGN;IACJ,MAAM,CAACO,UAAUC,YAAY,GAAGC,IAAAA,oCAAoB,EAAC;QACnDC,cAAc,IAAIf;QAClBgB,cAAcC,OAAMC,OAAO,CAAC,IAAMT,wBAAwBU,sBAAsBV,uBAAuB;YAACA;SAAqB;QAC7HW,OAAOH,OAAMC,OAAO,CAAC,IAAMR,iBAAiBS,sBAAsBT,gBAAgB;YAACA;SAAc;IACnG;IACA,MAAMW,mBAAmBJ,OAAMC,OAAO,CAAC,IAAM;QAC3C,OAAOI,IAAAA,wCAAsB,EAAClB,eAAe,CAACmB,GAAGC,mBAAqB;YACpEX,YAAY,IAAM;gBAChBF,sBAAsB,IAAI,IAAIA,sBAAsB,KAAK,IAAI,KAAK,IAAIA,kBAAkBY,GAAG;oBACzFb,eAAec;gBACjB,EAAE;gBACF,OAAOA;YACT;QACF;IACF,GAAG;QAACb;QAAmBP;QAAeS;KAAY;IAClD,MAAMX,gBAAgBuB,IAAAA,gCAAgB,EAACF,CAAAA,IAAK;QAC1C,IAAIG;QACJL,iBAAiBM,cAAc,CAACJ,GAAGhB,MAAMqB,GAAG,CAAC,CAACC,MAAMC,IAAM;YACxD,OAAO,AAACJ,CAAAA,YAAYlB,aAAa,IAAI,IAAIA,aAAa,KAAK,IAAI,KAAK,IAAIA,SAASqB,KAAK,AAAD,MAAO,IAAI,IAAIH,cAAc,KAAK,IAAIA,YAAYI,CAAC;QAC1I,IAAIlB;IACN;IACA,MAAMT,YAAYsB,IAAAA,gCAAgB,EAAC,CAACF,GAAGQ,QAAUV,iBAAiBW,UAAU,CAACT,GAAGQ,OAAOnB;IACvF,MAAMhB,cAAc6B,IAAAA,gCAAgB,EAAC,CAACF,GAAGQ,QAAUV,iBAAiBY,YAAY,CAACV,GAAGQ,OAAOnB;IAC3F,MAAMd,YAAY2B,IAAAA,gCAAgB,EAAC,CAACF,GAAGQ,QAAUV,iBAAiBa,UAAU,CAACX,GAAGQ,OAAOnB;IACvF,MAAMf,gBAAgBkC,CAAAA,QAASV,iBAAiBc,UAAU,CAACJ,OAAOnB;IAClE,OAAO;QACL,GAAGN,UAAU;QACb8B,WAAW;YACThC;YACAH,kBAAkBW,SAASyB,IAAI,GAAG;YAClC3C,iBAAiBU,kBAAkB,WAAWQ,SAASyB,IAAI,GAAG,IAAIzB,SAASyB,IAAI,KAAK9B,MAAM+B,MAAM;YAChGvC,cAAca;YACdT;YACAD;YACAP,WAAW0B,iBAAiBkB,UAAU;YACtC3C;YACAE;YACAD;QACF;IACF;AACF;AACA;;CAEC,GACD,SAASsB,sBAAsBqB,QAAQ,EAAE;IACvC,OAAOA,oBAAoBxC,MAAMwC,WAAW,IAAIxC,IAAIwC,SAAS;AAC/D,EACA,6CAA6C"}