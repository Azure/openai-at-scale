{"version":3,"sources":["../../lib/hooks/useTableSort.js"],"sourcesContent":["import * as React from 'react';\nimport { useControllableState } from '@fluentui/react-utilities';\nconst noop = () => undefined;\nexport const defaultTableSortState = {\n  getSortDirection: () => 'ascending',\n  setColumnSort: noop,\n  sort: rows => [...rows],\n  sortColumn: undefined,\n  sortDirection: 'ascending',\n  toggleColumnSort: noop\n};\nexport function useTableSort(options) {\n  // False positive, these plugin hooks are intended to be run on every render\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return tableState => useTableSortState(tableState, options);\n}\nexport function useTableSortState(tableState, options) {\n  const {\n    columns\n  } = tableState;\n  const {\n    sortState,\n    defaultSortState,\n    onSortChange\n  } = options;\n  const [sorted, setSorted] = useControllableState({\n    initialState: {\n      sortDirection: 'ascending',\n      sortColumn: undefined\n    },\n    defaultState: defaultSortState,\n    state: sortState\n  });\n  const {\n    sortColumn,\n    sortDirection\n  } = sorted;\n  const toggleColumnSort = (e, columnId) => {\n    setSorted(s => {\n      const newState = {\n        ...s,\n        sortColumn: columnId\n      };\n      if (s.sortColumn === columnId) {\n        newState.sortDirection = s.sortDirection === 'ascending' ? 'descending' : 'ascending';\n      } else {\n        newState.sortDirection = 'ascending';\n      }\n      onSortChange === null || onSortChange === void 0 ? void 0 : onSortChange(e, newState);\n      return newState;\n    });\n  };\n  const setColumnSort = (e, nextSortColumn, nextSortDirection) => {\n    const newState = {\n      sortColumn: nextSortColumn,\n      sortDirection: nextSortDirection\n    };\n    onSortChange === null || onSortChange === void 0 ? void 0 : onSortChange(e, newState);\n    setSorted(newState);\n  };\n  const sort = rows => {\n    return rows.slice().sort((a, b) => {\n      const sortColumnDef = columns.find(column => column.columnId === sortColumn);\n      if (!(sortColumnDef === null || sortColumnDef === void 0 ? void 0 : sortColumnDef.compare)) {\n        return 0;\n      }\n      const mod = sortDirection === 'ascending' ? 1 : -1;\n      return sortColumnDef.compare(a.item, b.item) * mod;\n    });\n  };\n  const getSortDirection = columnId => {\n    return sortColumn === columnId ? sortDirection : undefined;\n  };\n  return {\n    ...tableState,\n    sort: {\n      sort,\n      sortColumn,\n      sortDirection,\n      setColumnSort,\n      toggleColumnSort,\n      getSortDirection\n    }\n  };\n}\n//# sourceMappingURL=useTableSort.js.map"],"names":["defaultTableSortState","useTableSort","useTableSortState","noop","undefined","getSortDirection","setColumnSort","sort","rows","sortColumn","sortDirection","toggleColumnSort","options","tableState","columns","sortState","defaultSortState","onSortChange","sorted","setSorted","useControllableState","initialState","defaultState","state","e","columnId","s","newState","nextSortColumn","nextSortDirection","slice","a","b","sortColumnDef","find","column","compare","mod","item"],"mappings":";;;;;;;;;;;IAGaA,qBAAqB,MAArBA;IAQGC,YAAY,MAAZA;IAKAC,iBAAiB,MAAjBA;;;6DAhBO;gCACc;AACrC,MAAMC,OAAO,IAAMC;AACZ,MAAMJ,wBAAwB;IACnCK,kBAAkB,IAAM;IACxBC,eAAeH;IACfI,MAAMC,CAAAA,OAAQ;eAAIA;SAAK;IACvBC,YAAYL;IACZM,eAAe;IACfC,kBAAkBR;AACpB;AACO,SAASF,aAAaW,OAAO,EAAE;IACpC,4EAA4E;IAC5E,sDAAsD;IACtD,OAAOC,CAAAA,aAAcX,kBAAkBW,YAAYD;AACrD;AACO,SAASV,kBAAkBW,UAAU,EAAED,OAAO,EAAE;IACrD,MAAM,EACJE,QAAO,EACR,GAAGD;IACJ,MAAM,EACJE,UAAS,EACTC,iBAAgB,EAChBC,aAAY,EACb,GAAGL;IACJ,MAAM,CAACM,QAAQC,UAAU,GAAGC,IAAAA,oCAAoB,EAAC;QAC/CC,cAAc;YACZX,eAAe;YACfD,YAAYL;QACd;QACAkB,cAAcN;QACdO,OAAOR;IACT;IACA,MAAM,EACJN,WAAU,EACVC,cAAa,EACd,GAAGQ;IACJ,MAAMP,mBAAmB,CAACa,GAAGC,WAAa;QACxCN,UAAUO,CAAAA,IAAK;YACb,MAAMC,WAAW;gBACf,GAAGD,CAAC;gBACJjB,YAAYgB;YACd;YACA,IAAIC,EAAEjB,UAAU,KAAKgB,UAAU;gBAC7BE,SAASjB,aAAa,GAAGgB,EAAEhB,aAAa,KAAK,cAAc,eAAe,WAAW;YACvF,OAAO;gBACLiB,SAASjB,aAAa,GAAG;YAC3B,CAAC;YACDO,iBAAiB,IAAI,IAAIA,iBAAiB,KAAK,IAAI,KAAK,IAAIA,aAAaO,GAAGG,SAAS;YACrF,OAAOA;QACT;IACF;IACA,MAAMrB,gBAAgB,CAACkB,GAAGI,gBAAgBC,oBAAsB;QAC9D,MAAMF,WAAW;YACflB,YAAYmB;YACZlB,eAAemB;QACjB;QACAZ,iBAAiB,IAAI,IAAIA,iBAAiB,KAAK,IAAI,KAAK,IAAIA,aAAaO,GAAGG,SAAS;QACrFR,UAAUQ;IACZ;IACA,MAAMpB,OAAOC,CAAAA,OAAQ;QACnB,OAAOA,KAAKsB,KAAK,GAAGvB,IAAI,CAAC,CAACwB,GAAGC,IAAM;YACjC,MAAMC,gBAAgBnB,QAAQoB,IAAI,CAACC,CAAAA,SAAUA,OAAOV,QAAQ,KAAKhB;YACjE,IAAI,CAAEwB,CAAAA,kBAAkB,IAAI,IAAIA,kBAAkB,KAAK,IAAI,KAAK,IAAIA,cAAcG,OAAO,AAAD,GAAI;gBAC1F,OAAO;YACT,CAAC;YACD,MAAMC,MAAM3B,kBAAkB,cAAc,IAAI,CAAC,CAAC;YAClD,OAAOuB,cAAcG,OAAO,CAACL,EAAEO,IAAI,EAAEN,EAAEM,IAAI,IAAID;QACjD;IACF;IACA,MAAMhC,mBAAmBoB,CAAAA,WAAY;QACnC,OAAOhB,eAAegB,WAAWf,gBAAgBN,SAAS;IAC5D;IACA,OAAO;QACL,GAAGS,UAAU;QACbN,MAAM;YACJA;YACAE;YACAC;YACAJ;YACAK;YACAN;QACF;IACF;AACF,EACA,wCAAwC"}