"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useFlatTree_unstable", {
    enumerable: true,
    get: ()=>useFlatTree_unstable
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _reactUtilities = require("@fluentui/react-utilities");
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _createFlatTreeItems = require("../utils/createFlatTreeItems");
const _tokens = require("../utils/tokens");
const _useFlatTreeNavigation = require("./useFlatTreeNavigation");
const _useOpenItemsState = require("./useOpenItemsState");
function useFlatTree_unstable(flatTreeItemProps, options = {}) {
    const [openItems, updateOpenItems] = (0, _useOpenItemsState.useOpenItemsState)(options);
    const flatTreeItems = _react.useMemo(()=>(0, _createFlatTreeItems.createFlatTreeItems)(flatTreeItemProps), [
        flatTreeItemProps
    ]);
    const [navigate, navigationRef] = (0, _useFlatTreeNavigation.useFlatTreeNavigation)(flatTreeItems);
    const handleOpenChange = (0, _reactUtilities.useEventCallback)((event, data)=>{
        event.preventDefault();
        updateOpenItems(data);
    });
    const handleNavigation = (0, _reactUtilities.useEventCallback)((event, data)=>{
        event.preventDefault();
        navigate(data);
    });
    const getNextNavigableItem = (0, _reactUtilities.useEventCallback)((visibleItems, data)=>{
        const item = flatTreeItems.get(data.target.id);
        if (item) {
            switch(data.type){
                case _tokens.treeDataTypes.typeAhead:
                    return item;
                case _tokens.treeDataTypes.arrowLeft:
                    return flatTreeItems.get(item.parentId);
                case _tokens.treeDataTypes.arrowRight:
                    return visibleItems[item.index + 1];
                case _tokens.treeDataTypes.end:
                    return visibleItems[visibleItems.length - 1];
                case _tokens.treeDataTypes.home:
                    return visibleItems[0];
                case _tokens.treeDataTypes.arrowDown:
                    return visibleItems[item.index + 1];
                case _tokens.treeDataTypes.arrowUp:
                    return visibleItems[item.index - 1];
            }
        }
    });
    const getTreeProps = _react.useCallback(()=>({
            ref: navigationRef,
            openItems,
            onOpenChange: handleOpenChange,
            // eslint-disable-next-line @typescript-eslint/naming-convention
            onNavigation_unstable: handleNavigation
        }), // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        openItems
    ]);
    const items = _react.useCallback(()=>(0, _createFlatTreeItems.VisibleFlatTreeItemGenerator)(openItems, flatTreeItems), [
        openItems,
        flatTreeItems
    ]);
    return _react.useMemo(()=>({
            navigate,
            getTreeProps,
            getNextNavigableItem,
            items
        }), [
        navigate,
        getTreeProps,
        getNextNavigableItem,
        items
    ]);
} //# sourceMappingURL=useFlatTree.js.map

//# sourceMappingURL=useFlatTree.js.map