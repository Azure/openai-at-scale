{"version":3,"sources":["../../lib/compose/isResolvedShorthand.js"],"sourcesContent":["import { isValidElement } from 'react';\n/**\n * Guard method that validates if a shorthand is a slot\n * can be used to extends properties provided by a slot\n *\n * @example\n * ```\n * const backdropSlot = resolveShorthand(backdrop, {\n *  defaultProps: {\n *    onClick: useEventCallback(event => {\n *     if (isResolvedShorthand(backdrop)) {\n *        backdrop.onClick?.(event)\n *      }\n *      // do something after passing click down the line\n *    }),\n *  },\n * })\n * ```\n * @example\n * ```\n * const handleBackDropClick = (event) => {\n *  // do your thing\n * }\n * const backdropSlot = resolveShorthand(backdrop, {\n *  defaultProps: {\n *    onClick: useEventCallback(\n *      mergeCallbacks(isResolvedShorthand(backdrop) ? backdrop.onClick : undefined, handleBackdropClick)\n *    )\n * })\n * ```\n */\nexport function isResolvedShorthand(shorthand) {\n  return shorthand !== null && typeof shorthand === 'object' && !Array.isArray(shorthand) && ! /*#__PURE__*/isValidElement(shorthand);\n}\n//# sourceMappingURL=isResolvedShorthand.js.map"],"names":["isResolvedShorthand","shorthand","Array","isArray","isValidElement"],"mappings":";;;;+BA+BgBA;;aAAAA;;uBA/Be;AA+BxB,SAASA,oBAAoBC,SAAS,EAAE;IAC7C,OAAOA,cAAc,IAAI,IAAI,OAAOA,cAAc,YAAY,CAACC,MAAMC,OAAO,CAACF,cAAc,CAAE,WAAW,GAAEG,IAAAA,qBAAc,EAACH;AAC3H,EACA,+CAA+C"}