{"version":3,"sources":["../../lib/hooks/useMergedRefs.js"],"sourcesContent":["import * as React from 'react';\n/**\n * React hook to merge multiple React refs (either MutableRefObjects or ref callbacks) into a single ref callback that\n * updates all provided refs\n * @param refs - Refs to collectively update with one ref value.\n * @returns A function with an attached \"current\" prop, so that it can be treated like a RefObject.\n */\nexport function useMergedRefs(...refs) {\n  const mergedCallback = React.useCallback(value => {\n    // Update the \"current\" prop hanging on the function.\n    mergedCallback.current = value;\n    for (const ref of refs) {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref) {\n        // work around the immutability of the React.Ref type\n        ref.current = value;\n      }\n    }\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- already exhaustive\n  [...refs]);\n  return mergedCallback;\n}\n//# sourceMappingURL=useMergedRefs.js.map"],"names":["useMergedRefs","refs","mergedCallback","React","useCallback","value","current","ref"],"mappings":";;;;+BAOgBA;;aAAAA;;;6DAPO;AAOhB,SAASA,cAAc,GAAGC,IAAI,EAAE;IACrC,MAAMC,iBAAiBC,OAAMC,WAAW,CAACC,CAAAA,QAAS;QAChD,qDAAqD;QACrDH,eAAeI,OAAO,GAAGD;QACzB,KAAK,MAAME,OAAON,KAAM;YACtB,IAAI,OAAOM,QAAQ,YAAY;gBAC7BA,IAAIF;YACN,OAAO,IAAIE,KAAK;gBACd,qDAAqD;gBACrDA,IAAID,OAAO,GAAGD;YAChB,CAAC;QACH;IACF,GACA,6EAA6E;IAC7E;WAAIJ;KAAK;IACT,OAAOC;AACT,EACA,yCAAyC"}