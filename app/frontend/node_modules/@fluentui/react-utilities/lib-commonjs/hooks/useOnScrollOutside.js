"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useOnScrollOutside", {
    enumerable: true,
    get: ()=>useOnScrollOutside
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _useEventCallback = require("./useEventCallback");
const useOnScrollOutside = (options)=>{
    const { refs , callback , element , disabled , contains: containsProp  } = options;
    const listener = (0, _useEventCallback.useEventCallback)((ev)=>{
        const contains = containsProp || ((parent, child)=>{
            return !!(parent === null || parent === void 0 ? void 0 : parent.contains(child));
        });
        const isOutside = refs.every((ref)=>!contains(ref.current || null, ev.target));
        if (isOutside && !disabled) {
            callback(ev);
        }
    });
    _react.useEffect(()=>{
        if (!disabled) {
            element === null || element === void 0 ? void 0 : element.addEventListener('wheel', listener);
            element === null || element === void 0 ? void 0 : element.addEventListener('touchmove', listener);
        }
        return ()=>{
            element === null || element === void 0 ? void 0 : element.removeEventListener('wheel', listener);
            element === null || element === void 0 ? void 0 : element.removeEventListener('touchmove', listener);
        };
    }, [
        listener,
        element,
        disabled
    ]);
}; //# sourceMappingURL=useOnScrollOutside.js.map

//# sourceMappingURL=useOnScrollOutside.js.map