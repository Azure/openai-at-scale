{"version":3,"file":"renderThemeProvider.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/renderThemeProvider.tsx"],"names":[],"mappings":";;;;IAKO,IAAM,mBAAmB,GAAG,UAAC,KAAyB;QACnD,IAAA,iBAAiB,GAAiB,KAAK,kBAAtB,EAAE,GAAG,GAAY,KAAK,IAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;QAChD,IAAM,IAAI,GAAG,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC;QAC/B,IAAM,SAAS,GACb,OAAO,KAAK,CAAC,EAAE,KAAK,QAAQ;YAC1B,CAAC,CAAC,iCAAqB,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC;YACxC,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,QAAQ;gBAC7B,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE;gBAC9B,CAAC,CAAC,gBAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAE1B,OAAO,CACL,oBAAC,2BAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK;YACjC,oBAAC,6BAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,iBAAiB;gBAClD,oBAAC,8BAAkB,IAAC,WAAW,EAAE,GAAG;oBAClC,oBAAC,IAAI,uBAAK,SAAS,EAAI,CACJ,CACM,CACP,CACzB,CAAC;IACJ,CAAC,CAAC;IAnBW,QAAA,mBAAmB,uBAmB9B","sourcesContent":["import * as React from 'react';\nimport { CustomizerContext, FocusRectsProvider, getNativeElementProps, omit } from '@fluentui/utilities';\nimport { ThemeContext } from './ThemeContext';\nimport type { ThemeProviderState } from './ThemeProvider.types';\n\nexport const renderThemeProvider = (state: ThemeProviderState) => {\n  const { customizerContext, ref, theme } = state;\n  const Root = state.as || 'div';\n  const rootProps =\n    typeof state.as === 'string'\n      ? getNativeElementProps(state.as, state)\n      : state.as === React.Fragment\n      ? { children: state.children }\n      : omit(state, ['as']);\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <CustomizerContext.Provider value={customizerContext}>\n        <FocusRectsProvider providerRef={ref}>\n          <Root {...rootProps} />\n        </FocusRectsProvider>\n      </CustomizerContext.Provider>\n    </ThemeContext.Provider>\n  );\n};\n"]}