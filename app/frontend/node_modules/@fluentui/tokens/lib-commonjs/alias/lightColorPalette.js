"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "colorPaletteTokens", {
    enumerable: true,
    get: ()=>colorPaletteTokens
});
const _colorPalette = require("../global/colorPalette");
const _sharedColorNames = require("../sharedColorNames");
const statusColorPaletteTokens = /*#__PURE__*/ _sharedColorNames.statusSharedColorNames.reduce((acc, sharedColor)=>{
    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
    const sharedColorTokens = {
        [`colorPalette${color}Background1`]: _colorPalette.statusSharedColors[sharedColor].tint60,
        [`colorPalette${color}Background2`]: _colorPalette.statusSharedColors[sharedColor].tint40,
        [`colorPalette${color}Background3`]: _colorPalette.statusSharedColors[sharedColor].primary,
        [`colorPalette${color}Foreground1`]: _colorPalette.statusSharedColors[sharedColor].shade10,
        [`colorPalette${color}Foreground2`]: _colorPalette.statusSharedColors[sharedColor].shade30,
        [`colorPalette${color}Foreground3`]: _colorPalette.statusSharedColors[sharedColor].primary,
        [`colorPalette${color}BorderActive`]: _colorPalette.statusSharedColors[sharedColor].primary,
        [`colorPalette${color}Border1`]: _colorPalette.statusSharedColors[sharedColor].tint40,
        [`colorPalette${color}Border2`]: _colorPalette.statusSharedColors[sharedColor].primary
    };
    return Object.assign(acc, sharedColorTokens);
}, {});
// one-off patch for yellow
statusColorPaletteTokens.colorPaletteYellowForeground1 = _colorPalette.statusSharedColors.yellow.shade30;
statusColorPaletteTokens.colorPaletteRedForegroundInverted = _colorPalette.statusSharedColors.red.tint20;
statusColorPaletteTokens.colorPaletteGreenForegroundInverted = _colorPalette.statusSharedColors.green.tint20;
statusColorPaletteTokens.colorPaletteYellowForegroundInverted = _colorPalette.statusSharedColors.yellow.tint40;
const personaColorPaletteTokens = /*#__PURE__*/ _sharedColorNames.personaSharedColorNames.reduce((acc, sharedColor)=>{
    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
    const sharedColorTokens = {
        [`colorPalette${color}Background2`]: _colorPalette.personaSharedColors[sharedColor].tint40,
        [`colorPalette${color}Foreground2`]: _colorPalette.personaSharedColors[sharedColor].shade30,
        [`colorPalette${color}BorderActive`]: _colorPalette.personaSharedColors[sharedColor].primary
    };
    return Object.assign(acc, sharedColorTokens);
}, {});
const colorPaletteTokens = {
    ...statusColorPaletteTokens,
    ...personaColorPaletteTokens
}; //# sourceMappingURL=lightColorPalette.js.map

//# sourceMappingURL=lightColorPalette.js.map