'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var constants = require('./constants.cjs.js');

/**
 * @internal
 */
function __resetStyles(ltrClassName, rtlClassName, cssRules) {
  const insertionCache = {};
  function computeClassName(options) {
    const {
      dir,
      renderer
    } = options;
    const isLTR = dir === 'ltr';
    // As RTL classes are different they should have a different cache key for insertion
    const rendererId = isLTR ? renderer.id : renderer.id + 'r';
    if (insertionCache[rendererId] === undefined) {
      renderer.insertCSSRules({
        r: cssRules
      });
      insertionCache[rendererId] = true;
    }
    const className = isLTR ? ltrClassName : rtlClassName || ltrClassName;
    if (process.env.NODE_ENV !== 'production') {
      constants.DEBUG_RESET_CLASSES[className] = 1;
    }
    return className;
  }
  return computeClassName;
}

exports.__resetStyles = __resetStyles;
//# sourceMappingURL=__resetStyles.cjs.js.map
