{"version":3,"file":"resolveStaticStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStaticStyleRules.ts"],"sourcesContent":["import { GriffelStaticStyles, CSSRulesByBucket } from '../types';\nimport { compileStaticCSS } from './compileStaticCSS';\nimport { compileCSSRules } from './compileCSS';\n\nexport function resolveStaticStyleRules(styles: GriffelStaticStyles, result: CSSRulesByBucket = {}): CSSRulesByBucket {\n  if (typeof styles === 'string') {\n    const cssRules = compileCSSRules(styles);\n\n    for (const rule of cssRules) {\n      addResolvedStyles(rule, result);\n    }\n  } else {\n    // eslint-disable-next-line guard-for-in\n    for (const property in styles) {\n      const value = styles[property];\n      const staticCSS = compileStaticCSS(property, value);\n\n      addResolvedStyles(staticCSS, result);\n    }\n  }\n\n  return result;\n}\n\nfunction addResolvedStyles(cssRule: string, result: CSSRulesByBucket = {}): void {\n  // ðŸ‘‡ static rules should be inserted into default bucket\n  result.d = result.d || [];\n  result.d.push(cssRule);\n}\n"],"names":["resolveStaticStyleRules","styles","result","cssRules","compileCSSRules","rule","addResolvedStyles","property","value","staticCSS","compileStaticCSS","cssRule","d","push"],"mappings":";;;;;;;SAIgBA,uBAAuB,CAACC,MAA2B,EAAEC,SAA2B,EAAE;EAChG,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;IAC9B,MAAME,QAAQ,GAAGC,0BAAe,CAACH,MAAM,CAAC;IAExC,KAAK,MAAMI,IAAI,IAAIF,QAAQ,EAAE;MAC3BG,iBAAiB,CAACD,IAAI,EAAEH,MAAM,CAAC;;GAElC,MAAM;;IAEL,KAAK,MAAMK,QAAQ,IAAIN,MAAM,EAAE;MAC7B,MAAMO,KAAK,GAAGP,MAAM,CAACM,QAAQ,CAAC;MAC9B,MAAME,SAAS,GAAGC,iCAAgB,CAACH,QAAQ,EAAEC,KAAK,CAAC;MAEnDF,iBAAiB,CAACG,SAAS,EAAEP,MAAM,CAAC;;;EAIxC,OAAOA,MAAM;AACf;AAEA,SAASI,iBAAiB,CAACK,OAAe,EAAET,SAA2B,EAAE;;EAEvEA,MAAM,CAACU,CAAC,GAAGV,MAAM,CAACU,CAAC,IAAI,EAAE;EACzBV,MAAM,CAACU,CAAC,CAACC,IAAI,CAACF,OAAO,CAAC;AACxB;;;;"}