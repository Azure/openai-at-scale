{"version":3,"file":"hashSequence.cjs.js","sources":["../../../../../packages/core/src/runtime/utils/hashSequence.ts"],"sourcesContent":["import hash from '@emotion/hash';\n\nimport { DEBUG_SEQUENCE_SEPARATOR, SEQUENCE_HASH_LENGTH, SEQUENCE_PREFIX } from '../../constants';\nimport { SequenceHash } from '../../types';\n\nfunction padEndHash(value: string): string {\n  const hashLength = value.length;\n\n  if (hashLength === SEQUENCE_HASH_LENGTH) {\n    return value;\n  }\n\n  for (let i = hashLength; i < SEQUENCE_HASH_LENGTH; i++) {\n    value += '0';\n  }\n\n  return value;\n}\n\nexport function hashSequence(\n  classes: string,\n  dir: 'ltr' | 'rtl',\n  sequenceIds: (SequenceHash | undefined)[] = [],\n): SequenceHash {\n  if (process.env.NODE_ENV === 'production') {\n    return SEQUENCE_PREFIX + padEndHash(hash(classes + dir));\n  }\n\n  return (\n    SEQUENCE_PREFIX +\n    padEndHash(hash(classes + dir)) +\n    DEBUG_SEQUENCE_SEPARATOR +\n    padEndHash(hash(sequenceIds.join('')))\n  );\n}\n"],"names":["padEndHash","value","hashLength","length","SEQUENCE_HASH_LENGTH","i","hashSequence","classes","dir","sequenceIds","process","env","NODE_ENV","SEQUENCE_PREFIX","hash","DEBUG_SEQUENCE_SEPARATOR","join"],"mappings":";;;;;;;;;;;AAKA,SAASA,UAAU,CAACC,KAAa;EAC/B,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM;EAE/B,IAAID,UAAU,KAAKE,8BAAoB,EAAE;IACvC,OAAOH,KAAK;;EAGd,KAAK,IAAII,CAAC,GAAGH,UAAU,EAAEG,CAAC,GAAGD,8BAAoB,EAAEC,CAAC,EAAE,EAAE;IACtDJ,KAAK,IAAI,GAAG;;EAGd,OAAOA,KAAK;AACd;SAEgBK,YAAY,CAC1BC,OAAe,EACfC,GAAkB,EAClBC,cAA4C,EAAE;EAE9C,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAOC,yBAAe,GAAGb,UAAU,CAACc,8BAAI,CAACP,OAAO,GAAGC,GAAG,CAAC,CAAC;;EAG1D,OACEK,yBAAe,GACfb,UAAU,CAACc,8BAAI,CAACP,OAAO,GAAGC,GAAG,CAAC,CAAC,GAC/BO,kCAAwB,GACxBf,UAAU,CAACc,8BAAI,CAACL,WAAW,CAACO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAE1C;;;;"}