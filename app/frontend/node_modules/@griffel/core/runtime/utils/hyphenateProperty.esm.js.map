{"version":3,"file":"hyphenateProperty.esm.js","sources":["../../../../../packages/core/src/runtime/utils/hyphenateProperty.ts"],"sourcesContent":["const uppercasePattern = /[A-Z]/g;\nconst msPattern = /^ms-/;\nconst cache: Record<string, string> = {};\n\nfunction toHyphenLower(match: string): string {\n  return '-' + match.toLowerCase();\n}\n\nexport function hyphenateProperty(name: string): string {\n  if (Object.prototype.hasOwnProperty.call(cache, name)) {\n    return cache[name];\n  }\n\n  if (name.substr(0, 2) === '--') {\n    return name;\n  }\n\n  const hName = name.replace(uppercasePattern, toHyphenLower);\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName);\n}\n"],"names":["uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","hyphenateProperty","name","Object","prototype","hasOwnProperty","call","substr","hName","replace","test"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,QAAQ;AACjC,MAAMC,SAAS,GAAG,MAAM;AACxB,MAAMC,KAAK,GAA2B,EAAE;AAExC,SAASC,aAAa,CAACC,KAAa;EAClC,OAAO,GAAG,GAAGA,KAAK,CAACC,WAAW,EAAE;AAClC;SAEgBC,iBAAiB,CAACC,IAAY;EAC5C,IAAIC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,KAAK,EAAEK,IAAI,CAAC,EAAE;IACrD,OAAOL,KAAK,CAACK,IAAI,CAAC;;EAGpB,IAAIA,IAAI,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;IAC9B,OAAOL,IAAI;;EAGb,MAAMM,KAAK,GAAGN,IAAI,CAACO,OAAO,CAACd,gBAAgB,EAAEG,aAAa,CAAC;EAC3D,OAAQD,KAAK,CAACK,IAAI,CAAC,GAAGN,SAAS,CAACc,IAAI,CAACF,KAAK,CAAC,GAAG,GAAG,GAAGA,KAAK,GAAGA,KAAK;AACnE;;;;"}