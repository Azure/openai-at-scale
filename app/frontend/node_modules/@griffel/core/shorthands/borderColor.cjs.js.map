{"version":3,"file":"borderColor.cjs.js","sources":["../../../../packages/core/src/shorthands/borderColor.ts"],"sourcesContent":["import type { GriffelStylesStrictCSSObject } from '../types';\nimport { generateStyles } from './generateStyles';\nimport { BorderColorInput } from './types';\n\ntype BorderColorStyle = Pick<\n  GriffelStylesStrictCSSObject,\n  'borderTopColor' | 'borderRightColor' | 'borderBottomColor' | 'borderLeftColor'\n>;\n\nexport function borderColor(all: BorderColorInput): BorderColorStyle;\nexport function borderColor(vertical: BorderColorInput, horizontal: BorderColorInput): BorderColorStyle;\nexport function borderColor(\n  top: BorderColorInput,\n  horizontal: BorderColorInput,\n  bottom: BorderColorInput,\n): BorderColorStyle;\nexport function borderColor(\n  top: BorderColorInput,\n  right: BorderColorInput,\n  bottom: BorderColorInput,\n  left: BorderColorInput,\n): BorderColorStyle;\n\n/**\n * A function that implements CSS spec conformant expansion for \"borderColor\"\n *\n * @example\n *  borderColor('red')\n *  borderColor('red', 'blue')\n *  borderColor('red', 'blue', 'green')\n *  borderColor('red', 'blue', 'green', 'yellow')\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/border-color\n */\nexport function borderColor(...values: BorderColorInput[]): BorderColorStyle {\n  return generateStyles<BorderColorStyle>('border', 'Color', ...values);\n}\n"],"names":["borderColor","values","generateStyles"],"mappings":";;;;;;AAuBA;;;;;;;;;;;SAWgBA,WAAW,CAAC,GAAGC,MAA0B;EACvD,OAAOC,6BAAc,CAAmB,QAAQ,EAAE,OAAO,EAAE,GAAGD,MAAM,CAAC;AACvE;;;;"}