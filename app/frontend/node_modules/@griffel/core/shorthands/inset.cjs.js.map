{"version":3,"file":"inset.cjs.js","sources":["../../../../packages/core/src/shorthands/inset.ts"],"sourcesContent":["import type { GriffelStylesStrictCSSObject } from '../types';\nimport { InsetInput } from './types';\n\ntype InsetStyle = Pick<GriffelStylesStrictCSSObject, 'top' | 'right' | 'bottom' | 'left'>;\n\nexport function inset(all: InsetInput): InsetStyle;\nexport function inset(vertical: InsetInput, horizontal: InsetInput): InsetStyle;\nexport function inset(top: InsetInput, horizontal: InsetInput, bottom: InsetInput): InsetStyle;\nexport function inset(top: InsetInput, right: InsetInput, bottom: InsetInput, left: InsetInput): InsetStyle;\n\n/**\n * A function that implements CSS spec conformant expansion for \"inset\"\n *\n * @example\n *   inset('10px')\n *   inset('10px', '5px')\n *   inset('2px', '4px', '8px')\n *   inset('1px', 0, '3px', '4px')\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/inset\n */\nexport function inset(...values: InsetInput[]): InsetStyle {\n  const [firstValue, secondValue = firstValue, thirdValue = firstValue, fourthValue = secondValue] = values;\n  return {\n    top: firstValue,\n    right: secondValue,\n    bottom: thirdValue,\n    left: fourthValue,\n  };\n}\n"],"names":["inset","values","firstValue","secondValue","thirdValue","fourthValue","top","right","bottom","left"],"mappings":";;;;AAUA;;;;;;;;;;;SAWgBA,KAAK,CAAC,GAAGC,MAAoB;EAC3C,MAAM,CAACC,UAAU,EAAEC,WAAW,GAAGD,UAAU,EAAEE,UAAU,GAAGF,UAAU,EAAEG,WAAW,GAAGF,WAAW,CAAC,GAAGF,MAAM;EACzG,OAAO;IACLK,GAAG,EAAEJ,UAAU;IACfK,KAAK,EAAEJ,WAAW;IAClBK,MAAM,EAAEJ,UAAU;IAClBK,IAAI,EAAEJ;GACP;AACH;;;;"}